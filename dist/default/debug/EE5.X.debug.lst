

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 16 15:03:17 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18LF27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	bitnvCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataBANK0
    41  0018FA                     __pidataBANK0:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _asciiTemp
    45  0018FA  20                 	db	32
    46  0018FB  20                 	db	32
    47  0018FC  20                 	db	32
    48  0018FD  20                 	db	32
    49  0018FE  20                 	db	32
    50                           
    51                           ;initializer for _temp_display_message
    52  0018FF  50                 	db	80
    53  001900  69                 	db	105
    54  001901  70                 	db	112
    55  001902  65                 	db	101
    56  001903  20                 	db	32
    57  001904  74                 	db	116
    58  001905  65                 	db	101
    59  001906  6D                 	db	109
    60  001907  70                 	db	112
    61  001908  20                 	db	32
    62  001909  3D                 	db	61
    63  00190A  20                 	db	32
    64  00190B  20                 	db	32
    65  00190C  20                 	db	32
    66  00190D  20                 	db	32
    67  00190E  20                 	db	32
    68  00190F  20                 	db	32
    69  001910  0D                 	db	13
    70  001911  0A                 	db	10
    71  001912  00                 	db	0
    72                           
    73                           	psect	smallconst
    74  000F00                     __psmallconst:
    75                           	opt stack 0
    76  000F00  00                 	db	0
    77  000F01                     _set_data_rate:
    78                           	opt stack 0
    79  000F01  6D                 	db	109
    80  000F02  61                 	db	97
    81  000F03  63                 	db	99
    82  000F04  20                 	db	32
    83  000F05  73                 	db	115
    84  000F06  65                 	db	101
    85  000F07  74                 	db	116
    86  000F08  20                 	db	32
    87  000F09  64                 	db	100
    88  000F0A  72                 	db	114
    89  000F0B  20                 	db	32
    90  000F0C  78                 	db	120
    91  000F0D  20                 	db	32
    92  000F0E  0D                 	db	13
    93  000F0F  0A                 	db	10
    94  000F10  00                 	db	0
    95  000F11                     __end_of_set_data_rate:
    96                           	opt stack 0
    97  000F11                     _getVerCommand:
    98                           	opt stack 0
    99  000F11  73                 	db	115
   100  000F12  79                 	db	121
   101  000F13  73                 	db	115
   102  000F14  20                 	db	32
   103  000F15  67                 	db	103
   104  000F16  65                 	db	101
   105  000F17  74                 	db	116
   106  000F18  20                 	db	32
   107  000F19  76                 	db	118
   108  000F1A  65                 	db	101
   109  000F1B  72                 	db	114
   110  000F1C  0D                 	db	13
   111  000F1D  0A                 	db	10
   112  000F1E  00                 	db	0
   113  000F1F                     __end_of_getVerCommand:
   114                           	opt stack 0
   115  000F1F                     _ambient_ascii:
   116                           	opt stack 0
   117  000F1F  41                 	db	65
   118  000F20  6D                 	db	109
   119  000F21  62                 	db	98
   120  000F22  2E                 	db	46
   121  000F23  00                 	db	0
   122  000F24                     __end_of_ambient_ascii:
   123                           	opt stack 0
   124  000F24                     _pipe_ascii:
   125                           	opt stack 0
   126  000F24  50                 	db	80
   127  000F25  69                 	db	105
   128  000F26  70                 	db	112
   129  000F27  65                 	db	101
   130  000F28  00                 	db	0
   131  000F29                     __end_of_pipe_ascii:
   132                           	opt stack 0
   133  000F29                     _DELAY:
   134                           	opt stack 0
   135  000F29  D4C0               	dw	54464
   136  000F2B  0001               	dw	1
   137  000F2D                     __end_of_DELAY:
   138                           	opt stack 0
   139  000F2D                     _set_app_key:
   140                           	opt stack 0
   141  000F2D  6D                 	db	109
   142  000F2E  61                 	db	97
   143  000F2F  63                 	db	99
   144  000F30  20                 	db	32
   145  000F31  73                 	db	115
   146  000F32  65                 	db	101
   147  000F33  74                 	db	116
   148  000F34  20                 	db	32
   149  000F35  61                 	db	97
   150  000F36  70                 	db	112
   151  000F37  70                 	db	112
   152  000F38  6B                 	db	107
   153  000F39  65                 	db	101
   154  000F3A  79                 	db	121
   155  000F3B  20                 	db	32
   156  000F3C  32                 	db	50
   157  000F3D  65                 	db	101
   158  000F3E  31                 	db	49
   159  000F3F  35                 	db	53
   160  000F40  61                 	db	97
   161  000F41  66                 	db	102
   162  000F42  63                 	db	99
   163  000F43  39                 	db	57
   164  000F44  34                 	db	52
   165  000F45  61                 	db	97
   166  000F46  37                 	db	55
   167  000F47  65                 	db	101
   168  000F48  66                 	db	102
   169  000F49  36                 	db	54
   170  000F4A  39                 	db	57
   171  000F4B  61                 	db	97
   172  000F4C  65                 	db	101
   173  000F4D  36                 	db	54
   174  000F4E  31                 	db	49
   175  000F4F  61                 	db	97
   176  000F50  38                 	db	56
   177  000F51  31                 	db	49
   178  000F52  34                 	db	52
   179  000F53  37                 	db	55
   180  000F54  33                 	db	51
   181  000F55  37                 	db	55
   182  000F56  63                 	db	99
   183  000F57  33                 	db	51
   184  000F58  38                 	db	56
   185  000F59  36                 	db	54
   186  000F5A  39                 	db	57
   187  000F5B  39                 	db	57
   188  000F5C  20                 	db	32
   189  000F5D  0D                 	db	13
   190  000F5E  0A                 	db	10
   191  000F5F  00                 	db	0
   192  000F60                     __end_of_set_app_key:
   193                           	opt stack 0
   194  000F60                     _set_app_eui:
   195                           	opt stack 0
   196  000F60  6D                 	db	109
   197  000F61  61                 	db	97
   198  000F62  63                 	db	99
   199  000F63  20                 	db	32
   200  000F64  73                 	db	115
   201  000F65  65                 	db	101
   202  000F66  74                 	db	116
   203  000F67  20                 	db	32
   204  000F68  61                 	db	97
   205  000F69  70                 	db	112
   206  000F6A  70                 	db	112
   207  000F6B  65                 	db	101
   208  000F6C  75                 	db	117
   209  000F6D  69                 	db	105
   210  000F6E  20                 	db	32
   211  000F6F  37                 	db	55
   212  000F70  34                 	db	52
   213  000F71  63                 	db	99
   214  000F72  35                 	db	53
   215  000F73  34                 	db	52
   216  000F74  32                 	db	50
   217  000F75  34                 	db	52
   218  000F76  35                 	db	53
   219  000F77  33                 	db	51
   220  000F78  38                 	db	56
   221  000F79  35                 	db	53
   222  000F7A  37                 	db	55
   223  000F7B  39                 	db	57
   224  000F7C  37                 	db	55
   225  000F7D  34                 	db	52
   226  000F7E  61                 	db	97
   227  000F7F  20                 	db	32
   228  000F80  0D                 	db	13
   229  000F81  0A                 	db	10
   230  000F82  00                 	db	0
   231  000F83                     __end_of_set_app_eui:
   232                           	opt stack 0
   233  000F83  00                 	db	0	; dummy byte at the end
   234  0000                     
   235                           	psect	bitnvCOMRAM
   236  000260                     __pbitnvCOMRAM:
   237                           	opt stack 0
   238  000260                     _isCommandSent:
   239                           	opt stack 0
   240  000260                     	ds	1
   241  0000                     _ANCON0	set	3912
   242  0000                     _ANCON1	set	3913
   243  0000                     _ADRES	set	4035
   244  0000                     _ADCON0	set	4034
   245  0000                     _ADCON0bits	set	4034
   246  0000                     _ADCON1	set	4033
   247  0000                     _BAUDCON1bits	set	3966
   248  0000                     _INTCON	set	4082
   249  0000                     _OSCCONbits	set	4051
   250  0000                     _PIE1bits	set	3997
   251  0000                     _PIR1bits	set	3998
   252  0000                     _PORTAbits	set	3968
   253  0000                     _PORTBbits	set	3969
   254  0000                     _RCONbits	set	4048
   255  0000                     _RCREG1	set	4015
   256  0000                     _RCSTA1bits	set	4012
   257  0000                     _SPBRG1	set	4016
   258  0000                     _SPBRGH1	set	3967
   259  0000                     _TRISAbits	set	3986
   260  0000                     _TRISBbits	set	3987
   261  0000                     _TRISCbits	set	3988
   262  0000                     _TXREG1	set	4014
   263  0000                     _TXSTA1bits	set	4013
   264                           
   265                           ; #config settings
   266  0000                     
   267                           	psect	cinit
   268  0016F6                     __pcinit:
   269                           	opt stack 0
   270  0016F6                     start_initialization:
   271                           	opt stack 0
   272  0016F6                     __initialization:
   273                           	opt stack 0
   274                           
   275                           ; Clear objects allocated to BIGRAM (1000 bytes)
   276  0016F6  EE00  F097         	lfsr	0,__pbssBIGRAM
   277  0016FA  EE13 F0E8          	lfsr	1,1000
   278  0016FE                     clear_0:
   279  0016FE  6AEE               	clrf	postinc0,c
   280  001700  50E5               	movf	postdec1,w,c
   281  001702  50E1               	movf	fsr1l,w,c
   282  001704  E1FC               	bnz	clear_0
   283  001706  50E2               	movf	fsr1h,w,c
   284  001708  E1FA               	bnz	clear_0
   285                           
   286                           ; Clear objects allocated to BANK0 (2 bytes)
   287  00170A  0100               	movlb	0
   288  00170C  6B96               	clrf	(__pbssBANK0+1)& (0+255),b
   289  00170E  6B95               	clrf	__pbssBANK0& (0+255),b
   290                           
   291                           ; Clear objects allocated to COMRAM (16 bytes)
   292  001710  EE00  F03C         	lfsr	0,__pbssCOMRAM
   293  001714  0E10               	movlw	16
   294  001716                     clear_1:
   295  001716  6AEE               	clrf	postinc0,c
   296  001718  06E8               	decf	wreg,f,c
   297  00171A  E1FD               	bnz	clear_1
   298                           
   299                           ; Initialize objects allocated to BANK0 (25 bytes)
   300                           ; load TBLPTR registers with __pidataBANK0
   301  00171C  0EFA               	movlw	low __pidataBANK0
   302  00171E  6EF6               	movwf	tblptrl,c
   303  001720  0E18               	movlw	high __pidataBANK0
   304  001722  6EF7               	movwf	tblptrh,c
   305  001724  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   306  001726  6EF8               	movwf	tblptru,c
   307  001728  EE00  F07C         	lfsr	0,__pdataBANK0
   308  00172C  EE10 F019          	lfsr	1,25
   309  001730                     copy_data0:
   310  001730  0009               	tblrd		*+
   311  001732  CFF5 FFEE          	movff	tablat,postinc0
   312  001736  50E5               	movf	postdec1,w,c
   313  001738  50E1               	movf	fsr1l,w,c
   314  00173A  E1FA               	bnz	copy_data0
   315  00173C                     end_of_initialization:
   316                           	opt stack 0
   317  00173C                     __end_of__initialization:
   318                           	opt stack 0
   319  00173C  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   320  00173E  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   321  001740  0100               	movlb	0
   322  001742  EF44  F00B         	goto	_main	;jump to C main() function
   323                           tblptru	equ	0xFF8
   324                           tblptrh	equ	0xFF7
   325                           tblptrl	equ	0xFF6
   326                           tablat	equ	0xFF5
   327                           postinc0	equ	0xFEE
   328                           wreg	equ	0xFE8
   329                           postdec1	equ	0xFE5
   330                           fsr1h	equ	0xFE2
   331                           fsr1l	equ	0xFE1
   332                           
   333                           	psect	bssCOMRAM
   334  00003C                     __pbssCOMRAM:
   335                           	opt stack 0
   336  00003C                     _currentMessagePointer:
   337                           	opt stack 0
   338  00003C                     	ds	2
   339  00003E                     _minus_ambient:
   340                           	opt stack 0
   341  00003E                     	ds	2
   342  000040                     _minus_pipe:
   343                           	opt stack 0
   344  000040                     	ds	2
   345  000042                     _plus_ambient:
   346                           	opt stack 0
   347  000042                     	ds	2
   348  000044                     _plus_pipe:
   349                           	opt stack 0
   350  000044                     	ds	2
   351  000046                     _temp_ambient:
   352                           	opt stack 0
   353  000046                     	ds	2
   354  000048                     _temp_pipe:
   355                           	opt stack 0
   356  000048                     	ds	2
   357  00004A                     _uart_receive_buffer_index:
   358                           	opt stack 0
   359  00004A                     	ds	2
   360                           tblptru	equ	0xFF8
   361                           tblptrh	equ	0xFF7
   362                           tblptrl	equ	0xFF6
   363                           tablat	equ	0xFF5
   364                           postinc0	equ	0xFEE
   365                           wreg	equ	0xFE8
   366                           postdec1	equ	0xFE5
   367                           fsr1h	equ	0xFE2
   368                           fsr1l	equ	0xFE1
   369                           
   370                           	psect	bssBANK0
   371  000095                     __pbssBANK0:
   372                           	opt stack 0
   373  000095                     _currentChannel:
   374                           	opt stack 0
   375  000095                     	ds	2
   376                           tblptru	equ	0xFF8
   377                           tblptrh	equ	0xFF7
   378                           tblptrl	equ	0xFF6
   379                           tablat	equ	0xFF5
   380                           postinc0	equ	0xFEE
   381                           wreg	equ	0xFE8
   382                           postdec1	equ	0xFE5
   383                           fsr1h	equ	0xFE2
   384                           fsr1l	equ	0xFE1
   385                           
   386                           	psect	dataBANK0
   387  00007C                     __pdataBANK0:
   388                           	opt stack 0
   389  00007C                     _asciiTemp:
   390                           	opt stack 0
   391  00007C                     	ds	5
   392  000081                     _temp_display_message:
   393                           	opt stack 0
   394  000081                     	ds	20
   395                           tblptru	equ	0xFF8
   396                           tblptrh	equ	0xFF7
   397                           tblptrl	equ	0xFF6
   398                           tablat	equ	0xFF5
   399                           postinc0	equ	0xFEE
   400                           wreg	equ	0xFE8
   401                           postdec1	equ	0xFE5
   402                           fsr1h	equ	0xFE2
   403                           fsr1l	equ	0xFE1
   404                           
   405                           	psect	bssBIGRAM
   406  000097                     __pbssBIGRAM:
   407                           	opt stack 0
   408  000097                     _uart_receive_buffer:
   409                           	opt stack 0
   410  000097                     	ds	1000
   411                           tblptru	equ	0xFF8
   412                           tblptrh	equ	0xFF7
   413                           tblptrl	equ	0xFF6
   414                           tablat	equ	0xFF5
   415                           postinc0	equ	0xFEE
   416                           wreg	equ	0xFE8
   417                           postdec1	equ	0xFE5
   418                           fsr1h	equ	0xFE2
   419                           fsr1l	equ	0xFE1
   420                           
   421                           	psect	cstackBANK0
   422  000060                     __pcstackBANK0:
   423                           	opt stack 0
   424  000060                     ___ftmul@exp:
   425                           	opt stack 0
   426                           
   427                           ; 1 bytes @ 0x0
   428  000060                     	ds	1
   429  000061                     ___ftmul@f3_as_product:
   430                           	opt stack 0
   431                           
   432                           ; 3 bytes @ 0x1
   433  000061                     	ds	3
   434  000064                     ___ftmul@cntr:
   435                           	opt stack 0
   436                           
   437                           ; 1 bytes @ 0x4
   438  000064                     	ds	1
   439  000065                     ___ftmul@sign:
   440                           	opt stack 0
   441                           
   442                           ; 1 bytes @ 0x5
   443  000065                     	ds	1
   444  000066                     ??___fttol:
   445                           
   446                           ; 1 bytes @ 0x6
   447  000066                     	ds	5
   448  00006B                     ___fttol@sign1:
   449                           	opt stack 0
   450                           
   451                           ; 1 bytes @ 0xB
   452  00006B                     	ds	1
   453  00006C                     ___fttol@lval:
   454                           	opt stack 0
   455                           
   456                           ; 4 bytes @ 0xC
   457  00006C                     	ds	4
   458  000070                     ___fttol@exp1:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x10
   462  000070                     	ds	1
   463  000071                     ?_calculateTemp:
   464                           	opt stack 0
   465  000071                     calculateTemp@plus:
   466                           	opt stack 0
   467                           
   468                           ; 2 bytes @ 0x11
   469  000071                     	ds	2
   470  000073                     calculateTemp@minus:
   471                           	opt stack 0
   472                           
   473                           ; 2 bytes @ 0x13
   474  000073                     	ds	2
   475  000075                     ??_calculateTemp:
   476                           
   477                           ; 1 bytes @ 0x15
   478  000075                     	ds	2
   479  000077                     _calculateTemp$1596:
   480                           	opt stack 0
   481                           
   482                           ; 3 bytes @ 0x17
   483  000077                     	ds	3
   484  00007A                     calculateTemp@temp:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x1A
   488  00007A                     	ds	2
   489                           tblptru	equ	0xFF8
   490                           tblptrh	equ	0xFF7
   491                           tblptrl	equ	0xFF6
   492                           tablat	equ	0xFF5
   493                           postinc0	equ	0xFEE
   494                           wreg	equ	0xFE8
   495                           postdec1	equ	0xFE5
   496                           fsr1h	equ	0xFE2
   497                           fsr1l	equ	0xFE1
   498                           
   499                           	psect	cstackCOMRAM
   500  000001                     __pcstackCOMRAM:
   501                           	opt stack 0
   502  000001                     i2clearUARTReceiveBuffer@i:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x0
   506  000001                     	ds	2
   507  000003                     ??_high_ISR:
   508                           
   509                           ; 1 bytes @ 0x2
   510  000003                     	ds	16
   511  000013                     ??_delay:
   512  000013                     ?___awmod:
   513                           	opt stack 0
   514  000013                     ?___ftpack:
   515                           	opt stack 0
   516  000013                     UARTReceive@on_or_off:
   517                           	opt stack 0
   518  000013                     clearUARTReceiveBuffer@i:
   519                           	opt stack 0
   520  000013                     sendUARTMessage@newMessagePointer:
   521                           	opt stack 0
   522  000013                     ___awmod@dividend:
   523                           	opt stack 0
   524  000013                     ___ftpack@arg:
   525                           	opt stack 0
   526                           
   527                           ; 3 bytes @ 0x12
   528  000013                     	ds	1
   529  000014                     delay@time:
   530                           	opt stack 0
   531                           
   532                           ; 4 bytes @ 0x13
   533  000014                     	ds	1
   534  000015                     ___awmod@divisor:
   535                           	opt stack 0
   536                           
   537                           ; 2 bytes @ 0x14
   538  000015                     	ds	1
   539  000016                     ___ftpack@exp:
   540                           	opt stack 0
   541                           
   542                           ; 1 bytes @ 0x15
   543  000016                     	ds	1
   544  000017                     ___awmod@counter:
   545                           	opt stack 0
   546  000017                     ___ftpack@sign:
   547                           	opt stack 0
   548                           
   549                           ; 1 bytes @ 0x16
   550  000017                     	ds	1
   551  000018                     ??___ftpack:
   552  000018                     ___awmod@sign:
   553                           	opt stack 0
   554                           
   555                           ; 1 bytes @ 0x17
   556  000018                     	ds	1
   557  000019                     ?___awdiv:
   558                           	opt stack 0
   559  000019                     ___awdiv@dividend:
   560                           	opt stack 0
   561                           
   562                           ; 2 bytes @ 0x18
   563  000019                     	ds	2
   564  00001B                     ?___awtoft:
   565                           	opt stack 0
   566  00001B                     ___awdiv@divisor:
   567                           	opt stack 0
   568  00001B                     ___awtoft@c:
   569                           	opt stack 0
   570                           
   571                           ; 2 bytes @ 0x1A
   572  00001B                     	ds	2
   573  00001D                     ___awdiv@counter:
   574                           	opt stack 0
   575                           
   576                           ; 1 bytes @ 0x1C
   577  00001D                     	ds	1
   578  00001E                     ___awdiv@sign:
   579                           	opt stack 0
   580  00001E                     ___awtoft@sign:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x1D
   584  00001E                     	ds	1
   585  00001F                     ?___ftdiv:
   586                           	opt stack 0
   587  00001F                     ___awdiv@quotient:
   588                           	opt stack 0
   589  00001F                     ___ftdiv@f1:
   590                           	opt stack 0
   591                           
   592                           ; 3 bytes @ 0x1E
   593  00001F                     	ds	2
   594  000021                     ??_fillInTemp:
   595                           
   596                           ; 1 bytes @ 0x20
   597  000021                     	ds	1
   598  000022                     ___ftdiv@f2:
   599                           	opt stack 0
   600                           
   601                           ; 3 bytes @ 0x21
   602  000022                     	ds	3
   603  000025                     ??___ftdiv:
   604  000025                     fillInTemp@pipe_or_ambience:
   605                           	opt stack 0
   606                           
   607                           ; 1 bytes @ 0x24
   608  000025                     	ds	1
   609  000026                     fillInTemp@i:
   610                           	opt stack 0
   611                           
   612                           ; 2 bytes @ 0x25
   613  000026                     	ds	2
   614  000028                     ___ftdiv@cntr:
   615                           	opt stack 0
   616  000028                     fillInTemp@i_1006:
   617                           	opt stack 0
   618                           
   619                           ; 2 bytes @ 0x27
   620  000028                     	ds	1
   621  000029                     ___ftdiv@f3:
   622                           	opt stack 0
   623                           
   624                           ; 3 bytes @ 0x28
   625  000029                     	ds	1
   626  00002A                     fillInTemp@i_1007:
   627                           	opt stack 0
   628                           
   629                           ; 1 bytes @ 0x29
   630  00002A                     	ds	1
   631  00002B                     fillInTemp@temp:
   632                           	opt stack 0
   633                           
   634                           ; 2 bytes @ 0x2A
   635  00002B                     	ds	1
   636  00002C                     ___ftdiv@exp:
   637                           	opt stack 0
   638                           
   639                           ; 1 bytes @ 0x2B
   640  00002C                     	ds	1
   641  00002D                     ___ftdiv@sign:
   642                           	opt stack 0
   643                           
   644                           ; 1 bytes @ 0x2C
   645  00002D                     	ds	1
   646  00002E                     ?___ftmul:
   647                           	opt stack 0
   648  00002E                     ___ftmul@f1:
   649                           	opt stack 0
   650                           
   651                           ; 3 bytes @ 0x2D
   652  00002E                     	ds	3
   653  000031                     ___ftmul@f2:
   654                           	opt stack 0
   655                           
   656                           ; 3 bytes @ 0x30
   657  000031                     	ds	3
   658  000034                     ??___ftmul:
   659                           
   660                           ; 1 bytes @ 0x33
   661  000034                     	ds	3
   662  000037                     ?___fttol:
   663                           	opt stack 0
   664  000037                     ___fttol@f1:
   665                           	opt stack 0
   666                           
   667                           ; 3 bytes @ 0x36
   668  000037                     	ds	4
   669  00003B                     makeTempMessage@pipe_or_ambient:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x3A
   673  00003B                     	ds	1
   674  00003C                     tblptru	equ	0xFF8
   675                           tblptrh	equ	0xFF7
   676                           tblptrl	equ	0xFF6
   677                           tablat	equ	0xFF5
   678                           postinc0	equ	0xFEE
   679                           wreg	equ	0xFE8
   680                           postdec1	equ	0xFE5
   681                           fsr1h	equ	0xFE2
   682                           fsr1l	equ	0xFE1
   683                           
   684                           ; 1 bytes @ 0x3B
   685 ;;
   686 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   687 ;;
   688 ;; *************** function _main *****************
   689 ;; Defined at:
   690 ;;		line 231 in file "main.c"
   691 ;; Parameters:    Size  Location     Type
   692 ;;		None
   693 ;; Auto vars:     Size  Location     Type
   694 ;;		None
   695 ;; Return value:  Size  Location     Type
   696 ;;                  1    wreg      void 
   697 ;; Registers used:
   698 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   699 ;; Tracked objects:
   700 ;;		On entry : 0/0
   701 ;;		On exit  : 0/0
   702 ;;		Unchanged: 0/0
   703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   704 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   705 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   706 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   707 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   708 ;;Total ram usage:        0 bytes
   709 ;; Hardware stack levels required when called:    6
   710 ;; This function calls:
   711 ;;		_UARTReceive
   712 ;;		_clearUARTReceiveBuffer
   713 ;;		_delay
   714 ;;		_initADC
   715 ;;		_initInterrupts
   716 ;;		_initLoRa
   717 ;;		_initUART1
   718 ;;		_makeTempMessage
   719 ;;		_sendUARTMessage
   720 ;; This function is called by:
   721 ;;		Startup code after reset
   722 ;; This function uses a non-reentrant model
   723 ;;
   724                           
   725                           	psect	text0
   726  001688                     __ptext0:
   727                           	opt stack 0
   728  001688                     _main:
   729                           	opt stack 25
   730                           
   731                           ;main.c: 233: OSCCONbits.IRCF0 = 1;
   732                           
   733                           ;incstack = 0
   734  001688  88D3               	bsf	4051,4,c	;volatile
   735                           
   736                           ;main.c: 234: OSCCONbits.SCS0 = 1;
   737  00168A  80D3               	bsf	4051,0,c	;volatile
   738                           
   739                           ;main.c: 235: OSCCONbits.SCS1 = 1;
   740  00168C  82D3               	bsf	4051,1,c	;volatile
   741                           
   742                           ;main.c: 237: isCommandSent = 1;
   743  00168E  804C               	bsf	_isCommandSent/(0+8),_isCommandSent& (0+7),c
   744                           
   745                           ;main.c: 238: initUART1();
   746  001690  EC6F  F00C         	call	_initUART1	;wreg free
   747                           
   748                           ;main.c: 239: initADC();
   749  001694  EC47  F00C         	call	_initADC	;wreg free
   750                           
   751                           ;main.c: 240: initInterrupts();
   752  001698  EC9B  F00C         	call	_initInterrupts	;wreg free
   753                           
   754                           ;main.c: 241: clearUARTReceiveBuffer();
   755  00169C  EC0F  F00C         	call	_clearUARTReceiveBuffer	;wreg free
   756  0016A0                     l2031:
   757                           
   758                           ;main.c: 243: UARTReceive(1);
   759  0016A0  0E01               	movlw	1
   760  0016A2  EC93  F00C         	call	_UARTReceive
   761                           
   762                           ;main.c: 244: initLoRa();
   763  0016A6  EC5E  F00C         	call	_initLoRa	;wreg free
   764                           
   765                           ;main.c: 245: UARTReceive(0);
   766  0016AA  0E00               	movlw	0
   767  0016AC  EC93  F00C         	call	_UARTReceive
   768                           
   769                           ;main.c: 246: sendUARTMessage(uart_receive_buffer);
   770  0016B0  0E97               	movlw	low _uart_receive_buffer
   771  0016B2  6E13               	movwf	sendUARTMessage@newMessagePointer,c
   772  0016B4  0E00               	movlw	high _uart_receive_buffer
   773  0016B6  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
   774  0016B8  EC8A  F00C         	call	_sendUARTMessage	;wreg free
   775                           
   776                           ;main.c: 247: delay();
   777  0016BC  ECCB  F00B         	call	_delay	;wreg free
   778                           
   779                           ;main.c: 248: clearUARTReceiveBuffer();
   780  0016C0  EC0F  F00C         	call	_clearUARTReceiveBuffer	;wreg free
   781                           
   782                           ;main.c: 249: delay();
   783  0016C4  ECCB  F00B         	call	_delay	;wreg free
   784                           
   785                           ;main.c: 251: makeTempMessage(0);
   786  0016C8  0E00               	movlw	0
   787  0016CA  ECA3  F00B         	call	_makeTempMessage
   788                           
   789                           ;main.c: 252: sendUARTMessage(temp_display_message);
   790  0016CE  0E81               	movlw	low _temp_display_message
   791  0016D0  6E13               	movwf	sendUARTMessage@newMessagePointer,c
   792  0016D2  0E00               	movlw	high _temp_display_message
   793  0016D4  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
   794  0016D6  EC8A  F00C         	call	_sendUARTMessage	;wreg free
   795                           
   796                           ;main.c: 253: delay();
   797  0016DA  ECCB  F00B         	call	_delay	;wreg free
   798                           
   799                           ;main.c: 255: makeTempMessage(1);
   800  0016DE  0E01               	movlw	1
   801  0016E0  ECA3  F00B         	call	_makeTempMessage
   802                           
   803                           ;main.c: 256: sendUARTMessage(temp_display_message);
   804  0016E4  0E81               	movlw	low _temp_display_message
   805  0016E6  6E13               	movwf	sendUARTMessage@newMessagePointer,c
   806  0016E8  0E00               	movlw	high _temp_display_message
   807  0016EA  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
   808  0016EC  EC8A  F00C         	call	_sendUARTMessage	;wreg free
   809                           
   810                           ;main.c: 257: delay();
   811  0016F0  ECCB  F00B         	call	_delay	;wreg free
   812  0016F4  D7D5               	goto	l2031
   813  0016F6                     __end_of_main:
   814                           	opt stack 0
   815                           tblptru	equ	0xFF8
   816                           tblptrh	equ	0xFF7
   817                           tblptrl	equ	0xFF6
   818                           tablat	equ	0xFF5
   819                           postinc0	equ	0xFEE
   820                           wreg	equ	0xFE8
   821                           postdec1	equ	0xFE5
   822                           fsr1h	equ	0xFE2
   823                           fsr1l	equ	0xFE1
   824                           
   825 ;; *************** function _makeTempMessage *****************
   826 ;; Defined at:
   827 ;;		line 218 in file "main.c"
   828 ;; Parameters:    Size  Location     Type
   829 ;;  pipe_or_ambi    1    wreg     unsigned char 
   830 ;; Auto vars:     Size  Location     Type
   831 ;;  pipe_or_ambi    1   58[COMRAM] unsigned char 
   832 ;; Return value:  Size  Location     Type
   833 ;;                  1    wreg      void 
   834 ;; Registers used:
   835 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   836 ;; Tracked objects:
   837 ;;		On entry : 0/0
   838 ;;		On exit  : 0/0
   839 ;;		Unchanged: 0/0
   840 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   841 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   842 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   843 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   844 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   845 ;;Total ram usage:        1 bytes
   846 ;; Hardware stack levels used:    1
   847 ;; Hardware stack levels required when called:    5
   848 ;; This function calls:
   849 ;;		_calculateTemp
   850 ;;		_fillInTemp
   851 ;; This function is called by:
   852 ;;		_main
   853 ;; This function uses a non-reentrant model
   854 ;;
   855                           
   856                           	psect	text1
   857  001746                     __ptext1:
   858                           	opt stack 0
   859  001746                     _makeTempMessage:
   860                           	opt stack 25
   861                           
   862                           ;incstack = 0
   863                           ;makeTempMessage@pipe_or_ambient stored from wreg
   864  001746  6E3B               	movwf	makeTempMessage@pipe_or_ambient,c
   865                           
   866                           ;main.c: 219: if(pipe_or_ambient == 0){
   867  001748  503B               	movf	makeTempMessage@pipe_or_ambient,w,c
   868  00174A  A4D8               	btfss	status,2,c
   869  00174C  D012               	goto	l2021
   870                           
   871                           ;main.c: 220: temp_pipe = calculateTemp(plus_pipe, minus_pipe);
   872  00174E  C044  F071         	movff	_plus_pipe,calculateTemp@plus
   873  001752  C045  F072         	movff	_plus_pipe+1,calculateTemp@plus+1
   874  001756  C040  F073         	movff	_minus_pipe,calculateTemp@minus
   875  00175A  C041  F074         	movff	_minus_pipe+1,calculateTemp@minus+1
   876  00175E  EC17  F00A         	call	_calculateTemp	;wreg free
   877  001762  C071  F048         	movff	?_calculateTemp,_temp_pipe
   878  001766  C072  F049         	movff	?_calculateTemp+1,_temp_pipe+1
   879                           
   880                           ;main.c: 221: fillInTemp(0);
   881  00176A  0E00               	movlw	0
   882  00176C  ECC2  F007         	call	_fillInTemp
   883                           
   884                           ;main.c: 222: }
   885  001770  0012               	return	
   886  001772                     l2021:
   887                           
   888                           ;main.c: 223: else{
   889                           ;main.c: 224: temp_ambient = calculateTemp(plus_ambient, minus_ambient);
   890  001772  C042  F071         	movff	_plus_ambient,calculateTemp@plus
   891  001776  C043  F072         	movff	_plus_ambient+1,calculateTemp@plus+1
   892  00177A  C03E  F073         	movff	_minus_ambient,calculateTemp@minus
   893  00177E  C03F  F074         	movff	_minus_ambient+1,calculateTemp@minus+1
   894  001782  EC17  F00A         	call	_calculateTemp	;wreg free
   895  001786  C071  F046         	movff	?_calculateTemp,_temp_ambient
   896  00178A  C072  F047         	movff	?_calculateTemp+1,_temp_ambient+1
   897                           
   898                           ;main.c: 225: fillInTemp(1);
   899  00178E  0E01               	movlw	1
   900  001790  ECC2  F007         	call	_fillInTemp
   901  001794  0012               	return	
   902  001796                     __end_of_makeTempMessage:
   903                           	opt stack 0
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec1	equ	0xFE5
   911                           fsr1h	equ	0xFE2
   912                           fsr1l	equ	0xFE1
   913                           status	equ	0xFD8
   914                           
   915 ;; *************** function _fillInTemp *****************
   916 ;; Defined at:
   917 ;;		line 127 in file "main.c"
   918 ;; Parameters:    Size  Location     Type
   919 ;;  pipe_or_ambi    1    wreg     unsigned char 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  pipe_or_ambi    1   36[COMRAM] unsigned char 
   922 ;;  i               2   39[COMRAM] int 
   923 ;;  i               2   37[COMRAM] int 
   924 ;;  i               1   41[COMRAM] unsigned char 
   925 ;;  temp            2   42[COMRAM] int 
   926 ;; Return value:  Size  Location     Type
   927 ;;                  1    wreg      void 
   928 ;; Registers used:
   929 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   930 ;; Tracked objects:
   931 ;;		On entry : 0/0
   932 ;;		On exit  : 0/0
   933 ;;		Unchanged: 0/0
   934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   935 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   936 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   937 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   938 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   939 ;;Total ram usage:       12 bytes
   940 ;; Hardware stack levels used:    1
   941 ;; Hardware stack levels required when called:    3
   942 ;; This function calls:
   943 ;;		___awdiv
   944 ;;		___awmod
   945 ;; This function is called by:
   946 ;;		_makeTempMessage
   947 ;; This function uses a non-reentrant model
   948 ;;
   949                           
   950                           	psect	text2
   951  000F84                     __ptext2:
   952                           	opt stack 0
   953  000F84                     _fillInTemp:
   954                           	opt stack 26
   955                           
   956                           ;incstack = 0
   957                           ;fillInTemp@pipe_or_ambience stored from wreg
   958  000F84  6E25               	movwf	fillInTemp@pipe_or_ambience,c
   959                           
   960                           ;main.c: 128: signed int temp;
   961                           ;main.c: 129: if(pipe_or_ambience == 0){
   962  000F86  5025               	movf	fillInTemp@pipe_or_ambience,w,c
   963  000F88  A4D8               	btfss	status,2,c
   964  000F8A  D02A               	goto	l1579
   965                           
   966                           ;main.c: 130: for(int i = 0; i<4; i++){
   967  000F8C  0E00               	movlw	0
   968  000F8E  6E27               	movwf	fillInTemp@i+1,c
   969  000F90  0E00               	movlw	0
   970  000F92  6E26               	movwf	fillInTemp@i,c
   971  000F94  BE27               	btfsc	fillInTemp@i+1,7,c
   972  000F96  D006               	goto	l1573
   973  000F98  5027               	movf	fillInTemp@i+1,w,c
   974  000F9A  E11D               	bnz	l99
   975  000F9C  0E04               	movlw	4
   976  000F9E  5C26               	subwf	fillInTemp@i,w,c
   977  000FA0  B0D8               	btfsc	status,0,c
   978  000FA2  D019               	goto	l99
   979  000FA4                     l1573:
   980                           
   981                           ;main.c: 131: temp_display_message[i] = pipe_ascii[i];
   982  000FA4  0E24               	movlw	low _pipe_ascii
   983  000FA6  2426               	addwf	fillInTemp@i,w,c
   984  000FA8  6EF6               	movwf	tblptrl,c
   985  000FAA  0E0F               	movlw	high _pipe_ascii
   986  000FAC  2027               	addwfc	fillInTemp@i+1,w,c
   987  000FAE  6EF7               	movwf	tblptrh,c
   988  000FB0                     	if	1	;There are 3 active tblptr bytes
   989  000FB0  6AF8               	clrf	tblptru,c
   990  000FB2  0E00               	movlw	low (__mediumconst shr (0+16))
   991  000FB4  22F8               	addwfc	tblptru,f,c
   992  000FB6                     	endif
   993  000FB6  0E81               	movlw	low _temp_display_message
   994  000FB8  2426               	addwf	fillInTemp@i,w,c
   995  000FBA  6ED9               	movwf	fsr2l,c
   996  000FBC  0E00               	movlw	high _temp_display_message
   997  000FBE  2027               	addwfc	fillInTemp@i+1,w,c
   998  000FC0  6EDA               	movwf	fsr2h,c
   999  000FC2  0008               	tblrd		*
  1000  000FC4  CFF5 FFDF          	movff	tablat,indf2
  1001  000FC8  4A26               	infsnz	fillInTemp@i,f,c
  1002  000FCA  2A27               	incf	fillInTemp@i+1,f,c
  1003  000FCC  BE27               	btfsc	fillInTemp@i+1,7,c
  1004  000FCE  D7EA               	goto	l1573
  1005  000FD0  5027               	movf	fillInTemp@i+1,w,c
  1006  000FD2  E101               	bnz	u1070
  1007  000FD4  D7E3               	goto	L1
  1008  000FD6                     u1070:
  1009  000FD6                     l99:
  1010                           
  1011                           ;main.c: 132: }
  1012                           ;main.c: 133: temp = temp_pipe;
  1013  000FD6  C048  F02B         	movff	_temp_pipe,fillInTemp@temp
  1014  000FDA  C049  F02C         	movff	_temp_pipe+1,fillInTemp@temp+1
  1015                           
  1016                           ;main.c: 134: }
  1017  000FDE  D029               	goto	l1591
  1018  000FE0                     l1579:
  1019                           
  1020                           ;main.c: 135: else{
  1021                           ;main.c: 136: for(int i = 0; i<4; i++){
  1022  000FE0  0E00               	movlw	0
  1023  000FE2  6E29               	movwf	fillInTemp@i_1006+1,c
  1024  000FE4  0E00               	movlw	0
  1025  000FE6  6E28               	movwf	fillInTemp@i_1006,c
  1026  000FE8  BE29               	btfsc	fillInTemp@i_1006+1,7,c
  1027  000FEA  D006               	goto	l1585
  1028  000FEC  5029               	movf	fillInTemp@i_1006+1,w,c
  1029  000FEE  E11D               	bnz	l102
  1030  000FF0  0E04               	movlw	4
  1031  000FF2  5C28               	subwf	fillInTemp@i_1006,w,c
  1032  000FF4  B0D8               	btfsc	status,0,c
  1033  000FF6  D019               	goto	l102
  1034  000FF8                     l1585:
  1035                           
  1036                           ;main.c: 137: temp_display_message[i] = ambient_ascii[i];
  1037  000FF8  0E1F               	movlw	low _ambient_ascii
  1038  000FFA  2428               	addwf	fillInTemp@i_1006,w,c
  1039  000FFC  6EF6               	movwf	tblptrl,c
  1040  000FFE  0E0F               	movlw	high _ambient_ascii
  1041  001000  2029               	addwfc	fillInTemp@i_1006+1,w,c
  1042  001002  6EF7               	movwf	tblptrh,c
  1043  001004                     	if	1	;There are 3 active tblptr bytes
  1044  001004  6AF8               	clrf	tblptru,c
  1045  001006  0E00               	movlw	low (__mediumconst shr (0+16))
  1046  001008  22F8               	addwfc	tblptru,f,c
  1047  00100A                     	endif
  1048  00100A  0E81               	movlw	low _temp_display_message
  1049  00100C  2428               	addwf	fillInTemp@i_1006,w,c
  1050  00100E  6ED9               	movwf	fsr2l,c
  1051  001010  0E00               	movlw	high _temp_display_message
  1052  001012  2029               	addwfc	fillInTemp@i_1006+1,w,c
  1053  001014  6EDA               	movwf	fsr2h,c
  1054  001016  0008               	tblrd		*
  1055  001018  CFF5 FFDF          	movff	tablat,indf2
  1056  00101C  4A28               	infsnz	fillInTemp@i_1006,f,c
  1057  00101E  2A29               	incf	fillInTemp@i_1006+1,f,c
  1058  001020  BE29               	btfsc	fillInTemp@i_1006+1,7,c
  1059  001022  D7EA               	goto	l1585
  1060  001024  5029               	movf	fillInTemp@i_1006+1,w,c
  1061  001026  E101               	bnz	u1090
  1062  001028  D7E3               	goto	L2
  1063  00102A                     u1090:
  1064  00102A                     l102:
  1065                           
  1066                           ;main.c: 138: }
  1067                           ;main.c: 139: temp = temp_ambient;
  1068  00102A  C046  F02B         	movff	_temp_ambient,fillInTemp@temp
  1069  00102E  C047  F02C         	movff	_temp_ambient+1,fillInTemp@temp+1
  1070  001032                     l1591:
  1071                           
  1072                           ;main.c: 140: }
  1073                           ;main.c: 143: if(temp < 0){
  1074  001032  AE2C               	btfss	fillInTemp@temp+1,7,c
  1075  001034  D008               	goto	l1597
  1076                           
  1077                           ;main.c: 144: asciiTemp[0] = '-';
  1078  001036  0E2D               	movlw	45
  1079  001038  0100               	movlb	0	; () banked
  1080  00103A  6F7C               	movwf	_asciiTemp& (0+255),b
  1081                           
  1082                           ; BSR set to: 0
  1083                           ;main.c: 145: temp = - temp;
  1084  00103C  6C2B               	negf	fillInTemp@temp,c
  1085  00103E  1E2C               	comf	fillInTemp@temp+1,f,c
  1086  001040  B0D8               	btfsc	status,0,c
  1087  001042  2A2C               	incf	fillInTemp@temp+1,f,c
  1088                           
  1089                           ;main.c: 146: }
  1090  001044  D003               	goto	l1599
  1091  001046                     l1597:
  1092                           
  1093                           ;main.c: 147: else{
  1094                           ;main.c: 148: asciiTemp[0] = ' ';
  1095  001046  0E20               	movlw	32
  1096  001048  0100               	movlb	0	; () banked
  1097  00104A  6F7C               	movwf	_asciiTemp& (0+255),b
  1098  00104C                     l1599:
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;main.c: 149: }
  1102                           ;main.c: 150: asciiTemp[1] = temp/100 + 48;
  1103  00104C  C02B  F019         	movff	fillInTemp@temp,___awdiv@dividend
  1104  001050  C02C  F01A         	movff	fillInTemp@temp+1,___awdiv@dividend+1
  1105  001054  0E00               	movlw	0
  1106  001056  6E1C               	movwf	___awdiv@divisor+1,c
  1107  001058  0E64               	movlw	100
  1108  00105A  6E1B               	movwf	___awdiv@divisor,c
  1109  00105C  ECCA  F00A         	call	___awdiv	;wreg free
  1110  001060  5019               	movf	?___awdiv,w,c
  1111  001062  0F30               	addlw	48
  1112  001064  0100               	movlb	0	; () banked
  1113  001066  6F7D               	movwf	(_asciiTemp+1)& (0+255),b
  1114                           
  1115                           ; BSR set to: 0
  1116                           ;main.c: 151: asciiTemp[2] = temp % 100 / 10 + 48;
  1117  001068  0E00               	movlw	0
  1118  00106A  6E16               	movwf	___awmod@divisor+1,c
  1119  00106C  0E64               	movlw	100
  1120  00106E  6E15               	movwf	___awmod@divisor,c
  1121  001070  C02B  F013         	movff	fillInTemp@temp,___awmod@dividend
  1122  001074  C02C  F014         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1123  001078  EC0C  F00B         	call	___awmod	;wreg free
  1124  00107C  C013  F019         	movff	?___awmod,___awdiv@dividend
  1125  001080  C014  F01A         	movff	?___awmod+1,___awdiv@dividend+1
  1126  001084  0E00               	movlw	0
  1127  001086  6E1C               	movwf	___awdiv@divisor+1,c
  1128  001088  0E0A               	movlw	10
  1129  00108A  6E1B               	movwf	___awdiv@divisor,c
  1130  00108C  ECCA  F00A         	call	___awdiv	;wreg free
  1131  001090  5019               	movf	?___awdiv,w,c
  1132  001092  0F30               	addlw	48
  1133  001094  0100               	movlb	0	; () banked
  1134  001096  6F7E               	movwf	(_asciiTemp+2)& (0+255),b
  1135                           
  1136                           ; BSR set to: 0
  1137                           ;main.c: 152: asciiTemp[3] = temp % 10 + 48;
  1138  001098  C02B  F013         	movff	fillInTemp@temp,___awmod@dividend
  1139  00109C  C02C  F014         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1140  0010A0  0E00               	movlw	0
  1141  0010A2  6E16               	movwf	___awmod@divisor+1,c
  1142  0010A4  0E0A               	movlw	10
  1143  0010A6  6E15               	movwf	___awmod@divisor,c
  1144  0010A8  EC0C  F00B         	call	___awmod	;wreg free
  1145  0010AC  5013               	movf	?___awmod,w,c
  1146  0010AE  0F30               	addlw	48
  1147  0010B0  0100               	movlb	0	; () banked
  1148  0010B2  6F7F               	movwf	(_asciiTemp+3)& (0+255),b
  1149                           
  1150                           ; BSR set to: 0
  1151                           ;main.c: 156: for(char i = 12; i<17; i++){
  1152  0010B4  0E0C               	movlw	12
  1153  0010B6  6E2A               	movwf	fillInTemp@i_1007,c
  1154  0010B8                     l1607:
  1155                           
  1156                           ; BSR set to: 0
  1157  0010B8  0E10               	movlw	16
  1158  0010BA  642A               	cpfsgt	fillInTemp@i_1007,c
  1159  0010BC  D001               	goto	l1611
  1160  0010BE  0012               	return	
  1161  0010C0                     l1611:
  1162                           
  1163                           ;main.c: 157: temp_display_message[i] = asciiTemp[i-12];
  1164  0010C0  0EF4               	movlw	244
  1165  0010C2  6E21               	movwf	??_fillInTemp& (0+255),c
  1166  0010C4  0EFF               	movlw	255
  1167  0010C6  6E22               	movwf	(??_fillInTemp+1)& (0+255),c
  1168  0010C8  502A               	movf	fillInTemp@i_1007,w,c
  1169  0010CA  6E23               	movwf	(??_fillInTemp+2)& (0+255),c
  1170  0010CC  6A24               	clrf	(??_fillInTemp+3)& (0+255),c
  1171  0010CE  5021               	movf	??_fillInTemp,w,c
  1172  0010D0  2623               	addwf	??_fillInTemp+2,f,c
  1173  0010D2  5022               	movf	??_fillInTemp+1,w,c
  1174  0010D4  2224               	addwfc	??_fillInTemp+3,f,c
  1175  0010D6  0E7C               	movlw	low _asciiTemp
  1176  0010D8  2423               	addwf	??_fillInTemp+2,w,c
  1177  0010DA  6ED9               	movwf	fsr2l,c
  1178  0010DC  0E00               	movlw	high _asciiTemp
  1179  0010DE  2024               	addwfc	??_fillInTemp+3,w,c
  1180  0010E0  6EDA               	movwf	fsr2h,c
  1181  0010E2  502A               	movf	fillInTemp@i_1007,w,c
  1182  0010E4  0D01               	mullw	1
  1183  0010E6  0E81               	movlw	low _temp_display_message
  1184  0010E8  24F3               	addwf	prodl,w,c
  1185  0010EA  6EE1               	movwf	fsr1l,c
  1186  0010EC  0E00               	movlw	high _temp_display_message
  1187  0010EE  20F4               	addwfc	prodh,w,c
  1188  0010F0  6EE2               	movwf	fsr1h,c
  1189  0010F2  CFDF FFE7          	movff	indf2,indf1
  1190  0010F6  2A2A               	incf	fillInTemp@i_1007,f,c
  1191  0010F8  D7DF               	goto	l1607
  1192  0010FA                     __end_of_fillInTemp:
  1193                           	opt stack 0
  1194                           tblptru	equ	0xFF8
  1195                           tblptrh	equ	0xFF7
  1196                           tblptrl	equ	0xFF6
  1197                           tablat	equ	0xFF5
  1198                           prodh	equ	0xFF4
  1199                           prodl	equ	0xFF3
  1200                           postinc0	equ	0xFEE
  1201                           wreg	equ	0xFE8
  1202                           indf1	equ	0xFE7
  1203                           postdec1	equ	0xFE5
  1204                           fsr1h	equ	0xFE2
  1205                           fsr1l	equ	0xFE1
  1206                           indf2	equ	0xFDF
  1207                           fsr2h	equ	0xFDA
  1208                           fsr2l	equ	0xFD9
  1209                           status	equ	0xFD8
  1210                           
  1211 ;; *************** function ___awmod *****************
  1212 ;; Defined at:
  1213 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  1214 ;; Parameters:    Size  Location     Type
  1215 ;;  dividend        2   18[COMRAM] int 
  1216 ;;  divisor         2   20[COMRAM] int 
  1217 ;; Auto vars:     Size  Location     Type
  1218 ;;  sign            1   23[COMRAM] unsigned char 
  1219 ;;  counter         1   22[COMRAM] unsigned char 
  1220 ;; Return value:  Size  Location     Type
  1221 ;;                  2   18[COMRAM] int 
  1222 ;; Registers used:
  1223 ;;		wreg, status,2, status,0
  1224 ;; Tracked objects:
  1225 ;;		On entry : 0/0
  1226 ;;		On exit  : 0/0
  1227 ;;		Unchanged: 0/0
  1228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1229 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1230 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1233 ;;Total ram usage:        6 bytes
  1234 ;; Hardware stack levels used:    1
  1235 ;; Hardware stack levels required when called:    2
  1236 ;; This function calls:
  1237 ;;		Nothing
  1238 ;; This function is called by:
  1239 ;;		_fillInTemp
  1240 ;; This function uses a non-reentrant model
  1241 ;;
  1242                           
  1243                           	psect	text3
  1244  001618                     __ptext3:
  1245                           	opt stack 0
  1246  001618                     ___awmod:
  1247                           	opt stack 26
  1248                           
  1249                           ;incstack = 0
  1250  001618  0E00               	movlw	0
  1251  00161A  6E18               	movwf	___awmod@sign,c
  1252  00161C  AE14               	btfss	___awmod@dividend+1,7,c
  1253  00161E  D006               	goto	l1479
  1254  001620  6C13               	negf	___awmod@dividend,c
  1255  001622  1E14               	comf	___awmod@dividend+1,f,c
  1256  001624  B0D8               	btfsc	status,0,c
  1257  001626  2A14               	incf	___awmod@dividend+1,f,c
  1258  001628  0E01               	movlw	1
  1259  00162A  6E18               	movwf	___awmod@sign,c
  1260  00162C                     l1479:
  1261  00162C  AE16               	btfss	___awmod@divisor+1,7,c
  1262  00162E  D004               	goto	l1483
  1263  001630  6C15               	negf	___awmod@divisor,c
  1264  001632  1E16               	comf	___awmod@divisor+1,f,c
  1265  001634  B0D8               	btfsc	status,0,c
  1266  001636  2A16               	incf	___awmod@divisor+1,f,c
  1267  001638                     l1483:
  1268  001638  5015               	movf	___awmod@divisor,w,c
  1269  00163A  1016               	iorwf	___awmod@divisor+1,w,c
  1270  00163C  B4D8               	btfsc	status,2,c
  1271  00163E  D018               	goto	l1499
  1272  001640  0E01               	movlw	1
  1273  001642  6E17               	movwf	___awmod@counter,c
  1274  001644  D004               	goto	l1489
  1275  001646                     l1487:
  1276  001646  90D8               	bcf	status,0,c
  1277  001648  3615               	rlcf	___awmod@divisor,f,c
  1278  00164A  3616               	rlcf	___awmod@divisor+1,f,c
  1279  00164C  2A17               	incf	___awmod@counter,f,c
  1280  00164E                     l1489:
  1281  00164E  AE16               	btfss	___awmod@divisor+1,7,c
  1282  001650  D7FA               	goto	l1487
  1283  001652                     l1491:
  1284  001652  5015               	movf	___awmod@divisor,w,c
  1285  001654  5C13               	subwf	___awmod@dividend,w,c
  1286  001656  5016               	movf	___awmod@divisor+1,w,c
  1287  001658  5814               	subwfb	___awmod@dividend+1,w,c
  1288  00165A  A0D8               	btfss	status,0,c
  1289  00165C  D004               	goto	l1495
  1290  00165E  5015               	movf	___awmod@divisor,w,c
  1291  001660  5E13               	subwf	___awmod@dividend,f,c
  1292  001662  5016               	movf	___awmod@divisor+1,w,c
  1293  001664  5A14               	subwfb	___awmod@dividend+1,f,c
  1294  001666                     l1495:
  1295  001666  90D8               	bcf	status,0,c
  1296  001668  3216               	rrcf	___awmod@divisor+1,f,c
  1297  00166A  3215               	rrcf	___awmod@divisor,f,c
  1298  00166C  2E17               	decfsz	___awmod@counter,f,c
  1299  00166E  D7F1               	goto	l1491
  1300  001670                     l1499:
  1301  001670  5018               	movf	___awmod@sign,w,c
  1302  001672  B4D8               	btfsc	status,2,c
  1303  001674  D004               	goto	l1503
  1304  001676  6C13               	negf	___awmod@dividend,c
  1305  001678  1E14               	comf	___awmod@dividend+1,f,c
  1306  00167A  B0D8               	btfsc	status,0,c
  1307  00167C  2A14               	incf	___awmod@dividend+1,f,c
  1308  00167E                     l1503:
  1309  00167E  C013  F013         	movff	___awmod@dividend,?___awmod
  1310  001682  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  1311  001686  0012               	return	
  1312  001688                     __end_of___awmod:
  1313                           	opt stack 0
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           prodh	equ	0xFF4
  1319                           prodl	equ	0xFF3
  1320                           postinc0	equ	0xFEE
  1321                           wreg	equ	0xFE8
  1322                           indf1	equ	0xFE7
  1323                           postdec1	equ	0xFE5
  1324                           fsr1h	equ	0xFE2
  1325                           fsr1l	equ	0xFE1
  1326                           indf2	equ	0xFDF
  1327                           fsr2h	equ	0xFDA
  1328                           fsr2l	equ	0xFD9
  1329                           status	equ	0xFD8
  1330                           
  1331 ;; *************** function ___awdiv *****************
  1332 ;; Defined at:
  1333 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  1334 ;; Parameters:    Size  Location     Type
  1335 ;;  dividend        2   24[COMRAM] int 
  1336 ;;  divisor         2   26[COMRAM] int 
  1337 ;; Auto vars:     Size  Location     Type
  1338 ;;  quotient        2   30[COMRAM] int 
  1339 ;;  sign            1   29[COMRAM] unsigned char 
  1340 ;;  counter         1   28[COMRAM] unsigned char 
  1341 ;; Return value:  Size  Location     Type
  1342 ;;                  2   24[COMRAM] int 
  1343 ;; Registers used:
  1344 ;;		wreg, status,2, status,0
  1345 ;; Tracked objects:
  1346 ;;		On entry : 0/0
  1347 ;;		On exit  : 0/0
  1348 ;;		Unchanged: 0/0
  1349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1350 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1351 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1352 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1353 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1354 ;;Total ram usage:        8 bytes
  1355 ;; Hardware stack levels used:    1
  1356 ;; Hardware stack levels required when called:    2
  1357 ;; This function calls:
  1358 ;;		Nothing
  1359 ;; This function is called by:
  1360 ;;		_fillInTemp
  1361 ;; This function uses a non-reentrant model
  1362 ;;
  1363                           
  1364                           	psect	text4
  1365  001594                     __ptext4:
  1366                           	opt stack 0
  1367  001594                     ___awdiv:
  1368                           	opt stack 26
  1369                           
  1370                           ;incstack = 0
  1371  001594  0E00               	movlw	0
  1372  001596  6E1E               	movwf	___awdiv@sign,c
  1373  001598  AE1C               	btfss	___awdiv@divisor+1,7,c
  1374  00159A  D006               	goto	l1435
  1375  00159C  6C1B               	negf	___awdiv@divisor,c
  1376  00159E  1E1C               	comf	___awdiv@divisor+1,f,c
  1377  0015A0  B0D8               	btfsc	status,0,c
  1378  0015A2  2A1C               	incf	___awdiv@divisor+1,f,c
  1379  0015A4  0E01               	movlw	1
  1380  0015A6  6E1E               	movwf	___awdiv@sign,c
  1381  0015A8                     l1435:
  1382  0015A8  AE1A               	btfss	___awdiv@dividend+1,7,c
  1383  0015AA  D006               	goto	l1441
  1384  0015AC  6C19               	negf	___awdiv@dividend,c
  1385  0015AE  1E1A               	comf	___awdiv@dividend+1,f,c
  1386  0015B0  B0D8               	btfsc	status,0,c
  1387  0015B2  2A1A               	incf	___awdiv@dividend+1,f,c
  1388  0015B4  0E01               	movlw	1
  1389  0015B6  1A1E               	xorwf	___awdiv@sign,f,c
  1390  0015B8                     l1441:
  1391  0015B8  0E00               	movlw	0
  1392  0015BA  6E20               	movwf	___awdiv@quotient+1,c
  1393  0015BC  0E00               	movlw	0
  1394  0015BE  6E1F               	movwf	___awdiv@quotient,c
  1395  0015C0  501B               	movf	___awdiv@divisor,w,c
  1396  0015C2  101C               	iorwf	___awdiv@divisor+1,w,c
  1397  0015C4  B4D8               	btfsc	status,2,c
  1398  0015C6  D01C               	goto	l1463
  1399  0015C8  0E01               	movlw	1
  1400  0015CA  6E1D               	movwf	___awdiv@counter,c
  1401  0015CC  D004               	goto	l1449
  1402  0015CE                     l1447:
  1403  0015CE  90D8               	bcf	status,0,c
  1404  0015D0  361B               	rlcf	___awdiv@divisor,f,c
  1405  0015D2  361C               	rlcf	___awdiv@divisor+1,f,c
  1406  0015D4  2A1D               	incf	___awdiv@counter,f,c
  1407  0015D6                     l1449:
  1408  0015D6  AE1C               	btfss	___awdiv@divisor+1,7,c
  1409  0015D8  D7FA               	goto	l1447
  1410  0015DA                     l1451:
  1411  0015DA  90D8               	bcf	status,0,c
  1412  0015DC  361F               	rlcf	___awdiv@quotient,f,c
  1413  0015DE  3620               	rlcf	___awdiv@quotient+1,f,c
  1414  0015E0  501B               	movf	___awdiv@divisor,w,c
  1415  0015E2  5C19               	subwf	___awdiv@dividend,w,c
  1416  0015E4  501C               	movf	___awdiv@divisor+1,w,c
  1417  0015E6  581A               	subwfb	___awdiv@dividend+1,w,c
  1418  0015E8  A0D8               	btfss	status,0,c
  1419  0015EA  D005               	goto	l1459
  1420  0015EC  501B               	movf	___awdiv@divisor,w,c
  1421  0015EE  5E19               	subwf	___awdiv@dividend,f,c
  1422  0015F0  501C               	movf	___awdiv@divisor+1,w,c
  1423  0015F2  5A1A               	subwfb	___awdiv@dividend+1,f,c
  1424  0015F4  801F               	bsf	___awdiv@quotient,0,c
  1425  0015F6                     l1459:
  1426  0015F6  90D8               	bcf	status,0,c
  1427  0015F8  321C               	rrcf	___awdiv@divisor+1,f,c
  1428  0015FA  321B               	rrcf	___awdiv@divisor,f,c
  1429  0015FC  2E1D               	decfsz	___awdiv@counter,f,c
  1430  0015FE  D7ED               	goto	l1451
  1431  001600                     l1463:
  1432  001600  501E               	movf	___awdiv@sign,w,c
  1433  001602  B4D8               	btfsc	status,2,c
  1434  001604  D004               	goto	l1467
  1435  001606  6C1F               	negf	___awdiv@quotient,c
  1436  001608  1E20               	comf	___awdiv@quotient+1,f,c
  1437  00160A  B0D8               	btfsc	status,0,c
  1438  00160C  2A20               	incf	___awdiv@quotient+1,f,c
  1439  00160E                     l1467:
  1440  00160E  C01F  F019         	movff	___awdiv@quotient,?___awdiv
  1441  001612  C020  F01A         	movff	___awdiv@quotient+1,?___awdiv+1
  1442  001616  0012               	return	
  1443  001618                     __end_of___awdiv:
  1444                           	opt stack 0
  1445                           tblptru	equ	0xFF8
  1446                           tblptrh	equ	0xFF7
  1447                           tblptrl	equ	0xFF6
  1448                           tablat	equ	0xFF5
  1449                           prodh	equ	0xFF4
  1450                           prodl	equ	0xFF3
  1451                           postinc0	equ	0xFEE
  1452                           wreg	equ	0xFE8
  1453                           indf1	equ	0xFE7
  1454                           postdec1	equ	0xFE5
  1455                           fsr1h	equ	0xFE2
  1456                           fsr1l	equ	0xFE1
  1457                           indf2	equ	0xFDF
  1458                           fsr2h	equ	0xFDA
  1459                           fsr2l	equ	0xFD9
  1460                           status	equ	0xFD8
  1461                           
  1462 ;; *************** function _calculateTemp *****************
  1463 ;; Defined at:
  1464 ;;		line 210 in file "main.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  plus            2   17[BANK0 ] int 
  1467 ;;  minus           2   19[BANK0 ] int 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;  temp            2   26[BANK0 ] int 
  1470 ;; Return value:  Size  Location     Type
  1471 ;;                  2   17[BANK0 ] int 
  1472 ;; Registers used:
  1473 ;;		wreg, status,2, status,0, cstack
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1479 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1480 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1481 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1482 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1483 ;;Total ram usage:       11 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    4
  1486 ;; This function calls:
  1487 ;;		___awtoft
  1488 ;;		___ftdiv
  1489 ;;		___ftmul
  1490 ;;		___fttol
  1491 ;; This function is called by:
  1492 ;;		_makeTempMessage
  1493 ;; This function uses a non-reentrant model
  1494 ;;
  1495                           
  1496                           	psect	text5
  1497  00142E                     __ptext5:
  1498                           	opt stack 0
  1499  00142E                     _calculateTemp:
  1500                           	opt stack 25
  1501                           
  1502                           ;main.c: 211: signed int temp;
  1503                           ;main.c: 212: temp = plus - minus;
  1504                           
  1505                           ;incstack = 0
  1506  00142E  C073  F075         	movff	calculateTemp@minus,??_calculateTemp
  1507  001432  C074  F076         	movff	calculateTemp@minus+1,??_calculateTemp+1
  1508  001436  0100               	movlb	0	; () banked
  1509  001438  1F75               	comf	??_calculateTemp& (0+255),f,b
  1510  00143A  1F76               	comf	(??_calculateTemp+1)& (0+255),f,b
  1511  00143C  4B75               	infsnz	??_calculateTemp& (0+255),f,b
  1512  00143E  2B76               	incf	(??_calculateTemp+1)& (0+255),f,b
  1513  001440  0100               	movlb	0	; () banked
  1514  001442  5171               	movf	calculateTemp@plus& (0+255),w,b
  1515  001444  0100               	movlb	0	; () banked
  1516  001446  2575               	addwf	??_calculateTemp& (0+255),w,b
  1517  001448  0100               	movlb	0	; () banked
  1518  00144A  6F7A               	movwf	calculateTemp@temp& (0+255),b
  1519  00144C  0100               	movlb	0	; () banked
  1520  00144E  5172               	movf	(calculateTemp@plus+1)& (0+255),w,b
  1521  001450  0100               	movlb	0	; () banked
  1522  001452  2176               	addwfc	(??_calculateTemp+1)& (0+255),w,b
  1523  001454  0100               	movlb	0	; () banked
  1524  001456  6F7B               	movwf	(calculateTemp@temp+1)& (0+255),b
  1525                           
  1526                           ; BSR set to: 0
  1527                           ;main.c: 213: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1528  001458  0EE0               	movlw	224
  1529  00145A  6E31               	movwf	___ftmul@f2,c
  1530  00145C  0E2B               	movlw	43
  1531  00145E  6E32               	movwf	___ftmul@f2+1,c
  1532  001460  0E45               	movlw	69
  1533  001462  6E33               	movwf	___ftmul@f2+2,c
  1534  001464  0E00               	movlw	0
  1535  001466  6E22               	movwf	___ftdiv@f2,c
  1536  001468  0E80               	movlw	128
  1537  00146A  6E23               	movwf	___ftdiv@f2+1,c
  1538  00146C  0E44               	movlw	68
  1539  00146E  6E24               	movwf	___ftdiv@f2+2,c
  1540  001470  C07A  F01B         	movff	calculateTemp@temp,___awtoft@c
  1541  001474  C07B  F01C         	movff	calculateTemp@temp+1,___awtoft@c+1
  1542  001478  ECF3  F00B         	call	___awtoft	;wreg free
  1543  00147C  C01B  F01F         	movff	?___awtoft,___ftdiv@f1
  1544  001480  C01C  F020         	movff	?___awtoft+1,___ftdiv@f1+1
  1545  001484  C01D  F021         	movff	?___awtoft+2,___ftdiv@f1+2
  1546  001488  ECA4  F009         	call	___ftdiv	;wreg free
  1547  00148C  C01F  F02E         	movff	?___ftdiv,___ftmul@f1
  1548  001490  C020  F02F         	movff	?___ftdiv+1,___ftmul@f1+1
  1549  001494  C021  F030         	movff	?___ftdiv+2,___ftmul@f1+2
  1550  001498  EC14  F009         	call	___ftmul	;wreg free
  1551  00149C  C02E  F077         	movff	?___ftmul,_calculateTemp$1596
  1552  0014A0  C02F  F078         	movff	?___ftmul+1,_calculateTemp$1596+1
  1553  0014A4  C030  F079         	movff	?___ftmul+2,_calculateTemp$1596+2
  1554                           
  1555                           ;main.c: 213: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1556  0014A8  0E00               	movlw	0
  1557  0014AA  6E22               	movwf	___ftdiv@f2,c
  1558  0014AC  0E20               	movlw	32
  1559  0014AE  6E23               	movwf	___ftdiv@f2+1,c
  1560  0014B0  0E41               	movlw	65
  1561  0014B2  6E24               	movwf	___ftdiv@f2+2,c
  1562  0014B4  C077  F01F         	movff	_calculateTemp$1596,___ftdiv@f1
  1563  0014B8  C078  F020         	movff	_calculateTemp$1596+1,___ftdiv@f1+1
  1564  0014BC  C079  F021         	movff	_calculateTemp$1596+2,___ftdiv@f1+2
  1565  0014C0  ECA4  F009         	call	___ftdiv	;wreg free
  1566  0014C4  C01F  F037         	movff	?___ftdiv,___fttol@f1
  1567  0014C8  C020  F038         	movff	?___ftdiv+1,___fttol@f1+1
  1568  0014CC  C021  F039         	movff	?___ftdiv+2,___fttol@f1+2
  1569  0014D0  EC7D  F008         	call	___fttol	;wreg free
  1570  0014D4  C037  F07A         	movff	?___fttol,calculateTemp@temp
  1571  0014D8  C038  F07B         	movff	?___fttol+1,calculateTemp@temp+1
  1572                           
  1573                           ;main.c: 215: return temp;
  1574  0014DC  C07A  F071         	movff	calculateTemp@temp,?_calculateTemp
  1575  0014E0  C07B  F072         	movff	calculateTemp@temp+1,?_calculateTemp+1
  1576  0014E4  0012               	return	
  1577  0014E6                     __end_of_calculateTemp:
  1578                           	opt stack 0
  1579                           tblptru	equ	0xFF8
  1580                           tblptrh	equ	0xFF7
  1581                           tblptrl	equ	0xFF6
  1582                           tablat	equ	0xFF5
  1583                           prodh	equ	0xFF4
  1584                           prodl	equ	0xFF3
  1585                           postinc0	equ	0xFEE
  1586                           wreg	equ	0xFE8
  1587                           indf1	equ	0xFE7
  1588                           postdec1	equ	0xFE5
  1589                           fsr1h	equ	0xFE2
  1590                           fsr1l	equ	0xFE1
  1591                           indf2	equ	0xFDF
  1592                           fsr2h	equ	0xFDA
  1593                           fsr2l	equ	0xFD9
  1594                           status	equ	0xFD8
  1595                           
  1596 ;; *************** function ___fttol *****************
  1597 ;; Defined at:
  1598 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  1599 ;; Parameters:    Size  Location     Type
  1600 ;;  f1              3   54[COMRAM] float 
  1601 ;; Auto vars:     Size  Location     Type
  1602 ;;  lval            4   12[BANK0 ] unsigned long 
  1603 ;;  exp1            1   16[BANK0 ] unsigned char 
  1604 ;;  sign1           1   11[BANK0 ] unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  4   54[COMRAM] long 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1614 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1615 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1616 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1617 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1618 ;;Total ram usage:       15 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    2
  1621 ;; This function calls:
  1622 ;;		Nothing
  1623 ;; This function is called by:
  1624 ;;		_calculateTemp
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           	psect	text6
  1629  0010FA                     __ptext6:
  1630                           	opt stack 0
  1631  0010FA                     ___fttol:
  1632                           	opt stack 26
  1633                           
  1634                           ;incstack = 0
  1635  0010FA  C039  F066         	movff	___fttol@f1+2,??___fttol
  1636  0010FE  0100               	movlb	0	; () banked
  1637  001100  6B67               	clrf	(??___fttol+1)& (0+255),b
  1638  001102  6B68               	clrf	(??___fttol+2)& (0+255),b
  1639  001104  3438               	rlcf	___fttol@f1+1,w,c
  1640  001106  0100               	movlb	0	; () banked
  1641  001108  3766               	rlcf	??___fttol& (0+255),f,b
  1642  00110A  E301               	bnc	u1491
  1643  00110C  8167               	bsf	(??___fttol+1)& (0+255),0,b
  1644  00110E                     u1491:
  1645  00110E  0100               	movlb	0	; () banked
  1646  001110  5166               	movf	??___fttol& (0+255),w,b
  1647  001112  0100               	movlb	0	; () banked
  1648  001114  6F70               	movwf	___fttol@exp1& (0+255),b
  1649  001116  0100               	movlb	0	; () banked
  1650  001118  5170               	movf	___fttol@exp1& (0+255),w,b
  1651  00111A  A4D8               	btfss	status,2,c
  1652  00111C  D009               	goto	l1965
  1653                           
  1654                           ; BSR set to: 0
  1655  00111E  0E00               	movlw	0
  1656  001120  6E37               	movwf	?___fttol,c
  1657  001122  0E00               	movlw	0
  1658  001124  6E38               	movwf	?___fttol+1,c
  1659  001126  0E00               	movlw	0
  1660  001128  6E39               	movwf	?___fttol+2,c
  1661  00112A  0E00               	movlw	0
  1662  00112C  6E3A               	movwf	?___fttol+3,c
  1663                           
  1664                           ; BSR set to: 0
  1665  00112E  0012               	return	
  1666  001130                     l1965:
  1667                           
  1668                           ; BSR set to: 0
  1669  001130  0E17               	movlw	23
  1670  001132  0100               	movlb	0	; () banked
  1671  001134  6F66               	movwf	??___fttol& (0+255),b
  1672  001136  C037  F067         	movff	___fttol@f1,??___fttol+1
  1673  00113A  C038  F068         	movff	___fttol@f1+1,??___fttol+2
  1674  00113E  C039  F069         	movff	___fttol@f1+2,??___fttol+3
  1675  001142  0100               	movlb	0	; () banked
  1676  001144  2966               	incf	??___fttol& (0+255),w,b
  1677  001146  0100               	movlb	0	; () banked
  1678  001148  6F6A               	movwf	(??___fttol+4)& (0+255),b
  1679  00114A  D005               	goto	u1510
  1680  00114C                     u1515:
  1681  00114C  0100               	movlb	0	; () banked
  1682  00114E  90D8               	bcf	status,0,c
  1683  001150  3369               	rrcf	(??___fttol+3)& (0+255),f,b
  1684  001152  3368               	rrcf	(??___fttol+2)& (0+255),f,b
  1685  001154  3367               	rrcf	(??___fttol+1)& (0+255),f,b
  1686  001156                     u1510:
  1687  001156  0100               	movlb	0	; () banked
  1688  001158  2F6A               	decfsz	(??___fttol+4)& (0+255),f,b
  1689  00115A  D7F8               	goto	u1515
  1690  00115C  0100               	movlb	0	; () banked
  1691  00115E  5167               	movf	(??___fttol+1)& (0+255),w,b
  1692  001160  0100               	movlb	0	; () banked
  1693  001162  6F6B               	movwf	___fttol@sign1& (0+255),b
  1694                           
  1695                           ; BSR set to: 0
  1696  001164  8E38               	bsf	___fttol@f1+1,7,c
  1697                           
  1698                           ; BSR set to: 0
  1699  001166  0EFF               	movlw	255
  1700  001168  1637               	andwf	___fttol@f1,f,c
  1701  00116A  0EFF               	movlw	255
  1702  00116C  1638               	andwf	___fttol@f1+1,f,c
  1703  00116E  0E00               	movlw	0
  1704  001170  1639               	andwf	___fttol@f1+2,f,c
  1705                           
  1706                           ; BSR set to: 0
  1707  001172  5037               	movf	___fttol@f1,w,c
  1708  001174  0100               	movlb	0	; () banked
  1709  001176  6F6C               	movwf	___fttol@lval& (0+255),b
  1710  001178  5038               	movf	___fttol@f1+1,w,c
  1711  00117A  0100               	movlb	0	; () banked
  1712  00117C  6F6D               	movwf	(___fttol@lval+1)& (0+255),b
  1713  00117E  5039               	movf	___fttol@f1+2,w,c
  1714  001180  0100               	movlb	0	; () banked
  1715  001182  6F6E               	movwf	(___fttol@lval+2)& (0+255),b
  1716  001184  0100               	movlb	0	; () banked
  1717  001186  6B6F               	clrf	(___fttol@lval+3)& (0+255),b
  1718                           
  1719                           ; BSR set to: 0
  1720  001188  0E8E               	movlw	142
  1721  00118A  0100               	movlb	0	; () banked
  1722  00118C  5F70               	subwf	___fttol@exp1& (0+255),f,b
  1723                           
  1724                           ; BSR set to: 0
  1725  00118E  0100               	movlb	0	; () banked
  1726  001190  AF70               	btfss	___fttol@exp1& (0+255),7,b
  1727  001192  D019               	goto	l1987
  1728                           
  1729                           ; BSR set to: 0
  1730  001194  0100               	movlb	0	; () banked
  1731  001196  5170               	movf	___fttol@exp1& (0+255),w,b
  1732  001198  0A80               	xorlw	128
  1733  00119A  0F8F               	addlw	143
  1734  00119C  B0D8               	btfsc	status,0,c
  1735  00119E  D009               	goto	l1983
  1736                           
  1737                           ; BSR set to: 0
  1738  0011A0  0E00               	movlw	0
  1739  0011A2  6E37               	movwf	?___fttol,c
  1740  0011A4  0E00               	movlw	0
  1741  0011A6  6E38               	movwf	?___fttol+1,c
  1742  0011A8  0E00               	movlw	0
  1743  0011AA  6E39               	movwf	?___fttol+2,c
  1744  0011AC  0E00               	movlw	0
  1745  0011AE  6E3A               	movwf	?___fttol+3,c
  1746                           
  1747                           ; BSR set to: 0
  1748  0011B0  0012               	return	
  1749  0011B2                     l1983:
  1750                           
  1751                           ; BSR set to: 0
  1752  0011B2  0100               	movlb	0	; () banked
  1753  0011B4  90D8               	bcf	status,0,c
  1754  0011B6  336F               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1755  0011B8  336E               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1756  0011BA  336D               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1757  0011BC  336C               	rrcf	___fttol@lval& (0+255),f,b
  1758                           
  1759                           ; BSR set to: 0
  1760  0011BE  0100               	movlb	0	; () banked
  1761  0011C0  3F70               	incfsz	___fttol@exp1& (0+255),f,b
  1762  0011C2  D7F7               	goto	l1983
  1763                           
  1764                           ; BSR set to: 0
  1765  0011C4  D01A               	goto	l1997
  1766  0011C6                     l1987:
  1767                           
  1768                           ; BSR set to: 0
  1769  0011C6  0E17               	movlw	23
  1770  0011C8  0100               	movlb	0	; () banked
  1771  0011CA  6570               	cpfsgt	___fttol@exp1& (0+255),b
  1772  0011CC  D011               	goto	l1995
  1773                           
  1774                           ; BSR set to: 0
  1775  0011CE  0E00               	movlw	0
  1776  0011D0  6E37               	movwf	?___fttol,c
  1777  0011D2  0E00               	movlw	0
  1778  0011D4  6E38               	movwf	?___fttol+1,c
  1779  0011D6  0E00               	movlw	0
  1780  0011D8  6E39               	movwf	?___fttol+2,c
  1781  0011DA  0E00               	movlw	0
  1782  0011DC  6E3A               	movwf	?___fttol+3,c
  1783                           
  1784                           ; BSR set to: 0
  1785  0011DE  0012               	return	
  1786  0011E0                     l1993:
  1787                           
  1788                           ; BSR set to: 0
  1789  0011E0  0100               	movlb	0	; () banked
  1790  0011E2  90D8               	bcf	status,0,c
  1791  0011E4  376C               	rlcf	___fttol@lval& (0+255),f,b
  1792  0011E6  376D               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1793  0011E8  376E               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1794  0011EA  376F               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1795  0011EC  0100               	movlb	0	; () banked
  1796  0011EE  0770               	decf	___fttol@exp1& (0+255),f,b
  1797  0011F0                     l1995:
  1798                           
  1799                           ; BSR set to: 0
  1800  0011F0  0100               	movlb	0	; () banked
  1801  0011F2  5170               	movf	___fttol@exp1& (0+255),w,b
  1802  0011F4  0100               	movlb	0	; () banked
  1803  0011F6  A4D8               	btfss	status,2,c
  1804  0011F8  D7F3               	goto	l1993
  1805  0011FA                     l1997:
  1806                           
  1807                           ; BSR set to: 0
  1808  0011FA  0100               	movlb	0	; () banked
  1809  0011FC  516B               	movf	___fttol@sign1& (0+255),w,b
  1810  0011FE  0100               	movlb	0	; () banked
  1811  001200  B4D8               	btfsc	status,2,c
  1812  001202  D009               	goto	l2001
  1813                           
  1814                           ; BSR set to: 0
  1815  001204  0100               	movlb	0	; () banked
  1816  001206  1F6F               	comf	(___fttol@lval+3)& (0+255),f,b
  1817  001208  1F6E               	comf	(___fttol@lval+2)& (0+255),f,b
  1818  00120A  1F6D               	comf	(___fttol@lval+1)& (0+255),f,b
  1819  00120C  6D6C               	negf	___fttol@lval& (0+255),b
  1820  00120E  0E00               	movlw	0
  1821  001210  236D               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1822  001212  236E               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1823  001214  236F               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1824  001216                     l2001:
  1825                           
  1826                           ; BSR set to: 0
  1827  001216  C06C  F037         	movff	___fttol@lval,?___fttol
  1828  00121A  C06D  F038         	movff	___fttol@lval+1,?___fttol+1
  1829  00121E  C06E  F039         	movff	___fttol@lval+2,?___fttol+2
  1830  001222  C06F  F03A         	movff	___fttol@lval+3,?___fttol+3
  1831  001226  0012               	return	
  1832  001228                     __end_of___fttol:
  1833                           	opt stack 0
  1834                           tblptru	equ	0xFF8
  1835                           tblptrh	equ	0xFF7
  1836                           tblptrl	equ	0xFF6
  1837                           tablat	equ	0xFF5
  1838                           prodh	equ	0xFF4
  1839                           prodl	equ	0xFF3
  1840                           postinc0	equ	0xFEE
  1841                           wreg	equ	0xFE8
  1842                           indf1	equ	0xFE7
  1843                           postdec1	equ	0xFE5
  1844                           fsr1h	equ	0xFE2
  1845                           fsr1l	equ	0xFE1
  1846                           indf2	equ	0xFDF
  1847                           fsr2h	equ	0xFDA
  1848                           fsr2l	equ	0xFD9
  1849                           status	equ	0xFD8
  1850                           
  1851 ;; *************** function ___ftmul *****************
  1852 ;; Defined at:
  1853 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  f1              3   45[COMRAM] float 
  1856 ;;  f2              3   48[COMRAM] float 
  1857 ;; Auto vars:     Size  Location     Type
  1858 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  1859 ;;  sign            1    5[BANK0 ] unsigned char 
  1860 ;;  cntr            1    4[BANK0 ] unsigned char 
  1861 ;;  exp             1    0[BANK0 ] unsigned char 
  1862 ;; Return value:  Size  Location     Type
  1863 ;;                  3   45[COMRAM] float 
  1864 ;; Registers used:
  1865 ;;		wreg, status,2, status,0, cstack
  1866 ;; Tracked objects:
  1867 ;;		On entry : 0/0
  1868 ;;		On exit  : 0/0
  1869 ;;		Unchanged: 0/0
  1870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1871 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1872 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1873 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1874 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1875 ;;Total ram usage:       15 bytes
  1876 ;; Hardware stack levels used:    1
  1877 ;; Hardware stack levels required when called:    3
  1878 ;; This function calls:
  1879 ;;		___ftpack
  1880 ;; This function is called by:
  1881 ;;		_calculateTemp
  1882 ;; This function uses a non-reentrant model
  1883 ;;
  1884                           
  1885                           	psect	text7
  1886  001228                     __ptext7:
  1887                           	opt stack 0
  1888  001228                     ___ftmul:
  1889                           	opt stack 25
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;incstack = 0
  1893  001228  C030  F034         	movff	___ftmul@f1+2,??___ftmul
  1894  00122C  6A35               	clrf	(??___ftmul+1)& (0+255),c
  1895  00122E  6A36               	clrf	(??___ftmul+2)& (0+255),c
  1896  001230  342F               	rlcf	___ftmul@f1+1,w,c
  1897  001232  3634               	rlcf	??___ftmul& (0+255),f,c
  1898  001234  E301               	bnc	u1421
  1899  001236  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  1900  001238                     u1421:
  1901  001238  5034               	movf	??___ftmul,w,c
  1902  00123A  0100               	movlb	0	; () banked
  1903  00123C  6F60               	movwf	___ftmul@exp& (0+255),b
  1904  00123E  0100               	movlb	0	; () banked
  1905  001240  5160               	movf	___ftmul@exp& (0+255),w,b
  1906  001242  A4D8               	btfss	status,2,c
  1907  001244  D007               	goto	l1905
  1908                           
  1909                           ; BSR set to: 0
  1910  001246  0E00               	movlw	0
  1911  001248  6E2E               	movwf	?___ftmul,c
  1912  00124A  0E00               	movlw	0
  1913  00124C  6E2F               	movwf	?___ftmul+1,c
  1914  00124E  0E00               	movlw	0
  1915  001250  6E30               	movwf	?___ftmul+2,c
  1916                           
  1917                           ; BSR set to: 0
  1918  001252  0012               	return	
  1919  001254                     l1905:
  1920                           
  1921                           ; BSR set to: 0
  1922  001254  C033  F034         	movff	___ftmul@f2+2,??___ftmul
  1923  001258  6A35               	clrf	(??___ftmul+1)& (0+255),c
  1924  00125A  6A36               	clrf	(??___ftmul+2)& (0+255),c
  1925  00125C  3432               	rlcf	___ftmul@f2+1,w,c
  1926  00125E  3634               	rlcf	??___ftmul& (0+255),f,c
  1927  001260  E301               	bnc	u1441
  1928  001262  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  1929  001264                     u1441:
  1930  001264  5034               	movf	??___ftmul,w,c
  1931  001266  0100               	movlb	0	; () banked
  1932  001268  6F65               	movwf	___ftmul@sign& (0+255),b
  1933  00126A  0100               	movlb	0	; () banked
  1934  00126C  5165               	movf	___ftmul@sign& (0+255),w,b
  1935  00126E  A4D8               	btfss	status,2,c
  1936  001270  D007               	goto	l1911
  1937                           
  1938                           ; BSR set to: 0
  1939  001272  0E00               	movlw	0
  1940  001274  6E2E               	movwf	?___ftmul,c
  1941  001276  0E00               	movlw	0
  1942  001278  6E2F               	movwf	?___ftmul+1,c
  1943  00127A  0E00               	movlw	0
  1944  00127C  6E30               	movwf	?___ftmul+2,c
  1945                           
  1946                           ; BSR set to: 0
  1947  00127E  0012               	return	
  1948  001280                     l1911:
  1949                           
  1950                           ; BSR set to: 0
  1951  001280  0100               	movlb	0	; () banked
  1952  001282  5165               	movf	___ftmul@sign& (0+255),w,b
  1953  001284  0F7B               	addlw	123
  1954  001286  0100               	movlb	0	; () banked
  1955  001288  2760               	addwf	___ftmul@exp& (0+255),f,b
  1956                           
  1957                           ; BSR set to: 0
  1958  00128A  C030  F065         	movff	___ftmul@f1+2,___ftmul@sign
  1959  00128E  5033               	movf	___ftmul@f2+2,w,c
  1960  001290  0100               	movlb	0	; () banked
  1961  001292  1B65               	xorwf	___ftmul@sign& (0+255),f,b
  1962  001294  0E80               	movlw	128
  1963  001296  0100               	movlb	0	; () banked
  1964  001298  1765               	andwf	___ftmul@sign& (0+255),f,b
  1965                           
  1966                           ; BSR set to: 0
  1967  00129A  8E2F               	bsf	___ftmul@f1+1,7,c
  1968                           
  1969                           ; BSR set to: 0
  1970  00129C  8E32               	bsf	___ftmul@f2+1,7,c
  1971                           
  1972                           ; BSR set to: 0
  1973  00129E  0EFF               	movlw	255
  1974  0012A0  1631               	andwf	___ftmul@f2,f,c
  1975  0012A2  0EFF               	movlw	255
  1976  0012A4  1632               	andwf	___ftmul@f2+1,f,c
  1977  0012A6  0E00               	movlw	0
  1978  0012A8  1633               	andwf	___ftmul@f2+2,f,c
  1979                           
  1980                           ; BSR set to: 0
  1981  0012AA  0E00               	movlw	0
  1982  0012AC  0100               	movlb	0	; () banked
  1983  0012AE  6F61               	movwf	___ftmul@f3_as_product& (0+255),b
  1984  0012B0  0E00               	movlw	0
  1985  0012B2  0100               	movlb	0	; () banked
  1986  0012B4  6F62               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  1987  0012B6  0E00               	movlw	0
  1988  0012B8  0100               	movlb	0	; () banked
  1989  0012BA  6F63               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  1990                           
  1991                           ; BSR set to: 0
  1992  0012BC  0E07               	movlw	7
  1993  0012BE  0100               	movlb	0	; () banked
  1994  0012C0  6F64               	movwf	___ftmul@cntr& (0+255),b
  1995  0012C2                     l1925:
  1996                           
  1997                           ; BSR set to: 0
  1998  0012C2  A02E               	btfss	___ftmul@f1,0,c
  1999  0012C4  D009               	goto	l1929
  2000                           
  2001                           ; BSR set to: 0
  2002  0012C6  5031               	movf	___ftmul@f2,w,c
  2003  0012C8  0100               	movlb	0	; () banked
  2004  0012CA  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2005  0012CC  5032               	movf	___ftmul@f2+1,w,c
  2006  0012CE  0100               	movlb	0	; () banked
  2007  0012D0  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2008  0012D2  5033               	movf	___ftmul@f2+2,w,c
  2009  0012D4  0100               	movlb	0	; () banked
  2010  0012D6  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2011  0012D8                     l1929:
  2012                           
  2013                           ; BSR set to: 0
  2014  0012D8  90D8               	bcf	status,0,c
  2015  0012DA  3230               	rrcf	___ftmul@f1+2,f,c
  2016  0012DC  322F               	rrcf	___ftmul@f1+1,f,c
  2017  0012DE  322E               	rrcf	___ftmul@f1,f,c
  2018  0012E0  90D8               	bcf	status,0,c
  2019  0012E2  3631               	rlcf	___ftmul@f2,f,c
  2020  0012E4  3632               	rlcf	___ftmul@f2+1,f,c
  2021  0012E6  3633               	rlcf	___ftmul@f2+2,f,c
  2022                           
  2023                           ; BSR set to: 0
  2024  0012E8  0100               	movlb	0	; () banked
  2025  0012EA  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  2026  0012EC  D7EA               	goto	l1925
  2027                           
  2028                           ; BSR set to: 0
  2029                           
  2030                           ; BSR set to: 0
  2031  0012EE  0E09               	movlw	9
  2032  0012F0  0100               	movlb	0	; () banked
  2033  0012F2  6F64               	movwf	___ftmul@cntr& (0+255),b
  2034  0012F4                     l1935:
  2035                           
  2036                           ; BSR set to: 0
  2037  0012F4  A02E               	btfss	___ftmul@f1,0,c
  2038  0012F6  D009               	goto	l1939
  2039                           
  2040                           ; BSR set to: 0
  2041  0012F8  5031               	movf	___ftmul@f2,w,c
  2042  0012FA  0100               	movlb	0	; () banked
  2043  0012FC  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2044  0012FE  5032               	movf	___ftmul@f2+1,w,c
  2045  001300  0100               	movlb	0	; () banked
  2046  001302  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2047  001304  5033               	movf	___ftmul@f2+2,w,c
  2048  001306  0100               	movlb	0	; () banked
  2049  001308  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2050  00130A                     l1939:
  2051                           
  2052                           ; BSR set to: 0
  2053  00130A  90D8               	bcf	status,0,c
  2054  00130C  3230               	rrcf	___ftmul@f1+2,f,c
  2055  00130E  322F               	rrcf	___ftmul@f1+1,f,c
  2056  001310  322E               	rrcf	___ftmul@f1,f,c
  2057  001312  0100               	movlb	0	; () banked
  2058  001314  90D8               	bcf	status,0,c
  2059  001316  3363               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2060  001318  3362               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2061  00131A  3361               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2062                           
  2063                           ; BSR set to: 0
  2064  00131C  0100               	movlb	0	; () banked
  2065  00131E  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  2066  001320  D7E9               	goto	l1935
  2067                           
  2068                           ; BSR set to: 0
  2069                           
  2070                           ; BSR set to: 0
  2071  001322  C061  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  2072  001326  C062  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2073  00132A  C063  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2074  00132E  C060  F016         	movff	___ftmul@exp,___ftpack@exp
  2075  001332  C065  F017         	movff	___ftmul@sign,___ftpack@sign
  2076  001336  EC73  F00A         	call	___ftpack	;wreg free
  2077  00133A  C013  F02E         	movff	?___ftpack,?___ftmul
  2078  00133E  C014  F02F         	movff	?___ftpack+1,?___ftmul+1
  2079  001342  C015  F030         	movff	?___ftpack+2,?___ftmul+2
  2080  001346  0012               	return	
  2081  001348                     __end_of___ftmul:
  2082                           	opt stack 0
  2083                           tblptru	equ	0xFF8
  2084                           tblptrh	equ	0xFF7
  2085                           tblptrl	equ	0xFF6
  2086                           tablat	equ	0xFF5
  2087                           prodh	equ	0xFF4
  2088                           prodl	equ	0xFF3
  2089                           postinc0	equ	0xFEE
  2090                           wreg	equ	0xFE8
  2091                           indf1	equ	0xFE7
  2092                           postdec1	equ	0xFE5
  2093                           fsr1h	equ	0xFE2
  2094                           fsr1l	equ	0xFE1
  2095                           indf2	equ	0xFDF
  2096                           fsr2h	equ	0xFDA
  2097                           fsr2l	equ	0xFD9
  2098                           status	equ	0xFD8
  2099                           
  2100 ;; *************** function ___ftdiv *****************
  2101 ;; Defined at:
  2102 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  2103 ;; Parameters:    Size  Location     Type
  2104 ;;  f1              3   30[COMRAM] float 
  2105 ;;  f2              3   33[COMRAM] float 
  2106 ;; Auto vars:     Size  Location     Type
  2107 ;;  f3              3   40[COMRAM] float 
  2108 ;;  sign            1   44[COMRAM] unsigned char 
  2109 ;;  exp             1   43[COMRAM] unsigned char 
  2110 ;;  cntr            1   39[COMRAM] unsigned char 
  2111 ;; Return value:  Size  Location     Type
  2112 ;;                  3   30[COMRAM] float 
  2113 ;; Registers used:
  2114 ;;		wreg, status,2, status,0, cstack
  2115 ;; Tracked objects:
  2116 ;;		On entry : 0/0
  2117 ;;		On exit  : 0/0
  2118 ;;		Unchanged: 0/0
  2119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2120 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2121 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2122 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2123 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2124 ;;Total ram usage:       15 bytes
  2125 ;; Hardware stack levels used:    1
  2126 ;; Hardware stack levels required when called:    3
  2127 ;; This function calls:
  2128 ;;		___ftpack
  2129 ;; This function is called by:
  2130 ;;		_calculateTemp
  2131 ;; This function uses a non-reentrant model
  2132 ;;
  2133                           
  2134                           	psect	text8
  2135  001348                     __ptext8:
  2136                           	opt stack 0
  2137  001348                     ___ftdiv:
  2138                           	opt stack 25
  2139                           
  2140                           ;incstack = 0
  2141  001348  C021  F025         	movff	___ftdiv@f1+2,??___ftdiv
  2142  00134C  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  2143  00134E  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  2144  001350  3420               	rlcf	___ftdiv@f1+1,w,c
  2145  001352  3625               	rlcf	??___ftdiv& (0+255),f,c
  2146  001354  E301               	bnc	u1371
  2147  001356  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  2148  001358                     u1371:
  2149  001358  5025               	movf	??___ftdiv,w,c
  2150  00135A  6E2C               	movwf	___ftdiv@exp,c
  2151  00135C  502C               	movf	___ftdiv@exp,w,c
  2152  00135E  A4D8               	btfss	status,2,c
  2153  001360  D007               	goto	l1859
  2154  001362  0E00               	movlw	0
  2155  001364  6E1F               	movwf	?___ftdiv,c
  2156  001366  0E00               	movlw	0
  2157  001368  6E20               	movwf	?___ftdiv+1,c
  2158  00136A  0E00               	movlw	0
  2159  00136C  6E21               	movwf	?___ftdiv+2,c
  2160  00136E  0012               	return	
  2161  001370                     l1859:
  2162  001370  C024  F025         	movff	___ftdiv@f2+2,??___ftdiv
  2163  001374  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  2164  001376  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  2165  001378  3423               	rlcf	___ftdiv@f2+1,w,c
  2166  00137A  3625               	rlcf	??___ftdiv& (0+255),f,c
  2167  00137C  E301               	bnc	u1391
  2168  00137E  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  2169  001380                     u1391:
  2170  001380  5025               	movf	??___ftdiv,w,c
  2171  001382  6E2D               	movwf	___ftdiv@sign,c
  2172  001384  502D               	movf	___ftdiv@sign,w,c
  2173  001386  A4D8               	btfss	status,2,c
  2174  001388  D007               	goto	l1865
  2175  00138A  0E00               	movlw	0
  2176  00138C  6E1F               	movwf	?___ftdiv,c
  2177  00138E  0E00               	movlw	0
  2178  001390  6E20               	movwf	?___ftdiv+1,c
  2179  001392  0E00               	movlw	0
  2180  001394  6E21               	movwf	?___ftdiv+2,c
  2181  001396  0012               	return	
  2182  001398                     l1865:
  2183  001398  0E00               	movlw	0
  2184  00139A  6E29               	movwf	___ftdiv@f3,c
  2185  00139C  0E00               	movlw	0
  2186  00139E  6E2A               	movwf	___ftdiv@f3+1,c
  2187  0013A0  0E00               	movlw	0
  2188  0013A2  6E2B               	movwf	___ftdiv@f3+2,c
  2189  0013A4  502D               	movf	___ftdiv@sign,w,c
  2190  0013A6  0F89               	addlw	137
  2191  0013A8  5E2C               	subwf	___ftdiv@exp,f,c
  2192  0013AA  C021  F02D         	movff	___ftdiv@f1+2,___ftdiv@sign
  2193  0013AE  5024               	movf	___ftdiv@f2+2,w,c
  2194  0013B0  1A2D               	xorwf	___ftdiv@sign,f,c
  2195  0013B2  0E80               	movlw	128
  2196  0013B4  162D               	andwf	___ftdiv@sign,f,c
  2197  0013B6  8E20               	bsf	___ftdiv@f1+1,7,c
  2198  0013B8  0EFF               	movlw	255
  2199  0013BA  161F               	andwf	___ftdiv@f1,f,c
  2200  0013BC  0EFF               	movlw	255
  2201  0013BE  1620               	andwf	___ftdiv@f1+1,f,c
  2202  0013C0  0E00               	movlw	0
  2203  0013C2  1621               	andwf	___ftdiv@f1+2,f,c
  2204  0013C4  8E23               	bsf	___ftdiv@f2+1,7,c
  2205  0013C6  0EFF               	movlw	255
  2206  0013C8  1622               	andwf	___ftdiv@f2,f,c
  2207  0013CA  0EFF               	movlw	255
  2208  0013CC  1623               	andwf	___ftdiv@f2+1,f,c
  2209  0013CE  0E00               	movlw	0
  2210  0013D0  1624               	andwf	___ftdiv@f2+2,f,c
  2211  0013D2  0E18               	movlw	24
  2212  0013D4  6E28               	movwf	___ftdiv@cntr,c
  2213  0013D6                     l1885:
  2214  0013D6  90D8               	bcf	status,0,c
  2215  0013D8  3629               	rlcf	___ftdiv@f3,f,c
  2216  0013DA  362A               	rlcf	___ftdiv@f3+1,f,c
  2217  0013DC  362B               	rlcf	___ftdiv@f3+2,f,c
  2218  0013DE  5022               	movf	___ftdiv@f2,w,c
  2219  0013E0  5C1F               	subwf	___ftdiv@f1,w,c
  2220  0013E2  5023               	movf	___ftdiv@f2+1,w,c
  2221  0013E4  5820               	subwfb	___ftdiv@f1+1,w,c
  2222  0013E6  5024               	movf	___ftdiv@f2+2,w,c
  2223  0013E8  5821               	subwfb	___ftdiv@f1+2,w,c
  2224  0013EA  A0D8               	btfss	status,0,c
  2225  0013EC  D007               	goto	l446
  2226  0013EE  5022               	movf	___ftdiv@f2,w,c
  2227  0013F0  5E1F               	subwf	___ftdiv@f1,f,c
  2228  0013F2  5023               	movf	___ftdiv@f2+1,w,c
  2229  0013F4  5A20               	subwfb	___ftdiv@f1+1,f,c
  2230  0013F6  5024               	movf	___ftdiv@f2+2,w,c
  2231  0013F8  5A21               	subwfb	___ftdiv@f1+2,f,c
  2232  0013FA  8029               	bsf	___ftdiv@f3,0,c
  2233  0013FC                     l446:
  2234  0013FC  90D8               	bcf	status,0,c
  2235  0013FE  361F               	rlcf	___ftdiv@f1,f,c
  2236  001400  3620               	rlcf	___ftdiv@f1+1,f,c
  2237  001402  3621               	rlcf	___ftdiv@f1+2,f,c
  2238  001404  2E28               	decfsz	___ftdiv@cntr,f,c
  2239  001406  D7E7               	goto	l1885
  2240  001408  C029  F013         	movff	___ftdiv@f3,___ftpack@arg
  2241  00140C  C02A  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2242  001410  C02B  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2243  001414  C02C  F016         	movff	___ftdiv@exp,___ftpack@exp
  2244  001418  C02D  F017         	movff	___ftdiv@sign,___ftpack@sign
  2245  00141C  EC73  F00A         	call	___ftpack	;wreg free
  2246  001420  C013  F01F         	movff	?___ftpack,?___ftdiv
  2247  001424  C014  F020         	movff	?___ftpack+1,?___ftdiv+1
  2248  001428  C015  F021         	movff	?___ftpack+2,?___ftdiv+2
  2249  00142C  0012               	return	
  2250  00142E                     __end_of___ftdiv:
  2251                           	opt stack 0
  2252                           tblptru	equ	0xFF8
  2253                           tblptrh	equ	0xFF7
  2254                           tblptrl	equ	0xFF6
  2255                           tablat	equ	0xFF5
  2256                           prodh	equ	0xFF4
  2257                           prodl	equ	0xFF3
  2258                           postinc0	equ	0xFEE
  2259                           wreg	equ	0xFE8
  2260                           indf1	equ	0xFE7
  2261                           postdec1	equ	0xFE5
  2262                           fsr1h	equ	0xFE2
  2263                           fsr1l	equ	0xFE1
  2264                           indf2	equ	0xFDF
  2265                           fsr2h	equ	0xFDA
  2266                           fsr2l	equ	0xFD9
  2267                           status	equ	0xFD8
  2268                           
  2269 ;; *************** function ___awtoft *****************
  2270 ;; Defined at:
  2271 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  c               2   26[COMRAM] int 
  2274 ;; Auto vars:     Size  Location     Type
  2275 ;;  sign            1   29[COMRAM] unsigned char 
  2276 ;; Return value:  Size  Location     Type
  2277 ;;                  3   26[COMRAM] float 
  2278 ;; Registers used:
  2279 ;;		wreg, status,2, status,0, cstack
  2280 ;; Tracked objects:
  2281 ;;		On entry : 0/0
  2282 ;;		On exit  : 0/0
  2283 ;;		Unchanged: 0/0
  2284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2285 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2286 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2288 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2289 ;;Total ram usage:        4 bytes
  2290 ;; Hardware stack levels used:    1
  2291 ;; Hardware stack levels required when called:    3
  2292 ;; This function calls:
  2293 ;;		___ftpack
  2294 ;; This function is called by:
  2295 ;;		_calculateTemp
  2296 ;; This function uses a non-reentrant model
  2297 ;;
  2298                           
  2299                           	psect	text9
  2300  0017E6                     __ptext9:
  2301                           	opt stack 0
  2302  0017E6                     ___awtoft:
  2303                           	opt stack 25
  2304                           
  2305                           ;incstack = 0
  2306  0017E6  0E00               	movlw	0
  2307  0017E8  6E1E               	movwf	___awtoft@sign,c
  2308  0017EA  AE1C               	btfss	___awtoft@c+1,7,c
  2309  0017EC  D006               	goto	l1955
  2310  0017EE  6C1B               	negf	___awtoft@c,c
  2311  0017F0  1E1C               	comf	___awtoft@c+1,f,c
  2312  0017F2  B0D8               	btfsc	status,0,c
  2313  0017F4  2A1C               	incf	___awtoft@c+1,f,c
  2314  0017F6  0E01               	movlw	1
  2315  0017F8  6E1E               	movwf	___awtoft@sign,c
  2316  0017FA                     l1955:
  2317  0017FA  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  2318  0017FE  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  2319  001802  6A15               	clrf	___ftpack@arg+2,c
  2320  001804  0E8E               	movlw	142
  2321  001806  6E16               	movwf	___ftpack@exp,c
  2322  001808  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  2323  00180C  EC73  F00A         	call	___ftpack	;wreg free
  2324  001810  C013  F01B         	movff	?___ftpack,?___awtoft
  2325  001814  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  2326  001818  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  2327  00181C  0012               	return	
  2328  00181E                     __end_of___awtoft:
  2329                           	opt stack 0
  2330                           tblptru	equ	0xFF8
  2331                           tblptrh	equ	0xFF7
  2332                           tblptrl	equ	0xFF6
  2333                           tablat	equ	0xFF5
  2334                           prodh	equ	0xFF4
  2335                           prodl	equ	0xFF3
  2336                           postinc0	equ	0xFEE
  2337                           wreg	equ	0xFE8
  2338                           indf1	equ	0xFE7
  2339                           postdec1	equ	0xFE5
  2340                           fsr1h	equ	0xFE2
  2341                           fsr1l	equ	0xFE1
  2342                           indf2	equ	0xFDF
  2343                           fsr2h	equ	0xFDA
  2344                           fsr2l	equ	0xFD9
  2345                           status	equ	0xFD8
  2346                           
  2347 ;; *************** function ___ftpack *****************
  2348 ;; Defined at:
  2349 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  2350 ;; Parameters:    Size  Location     Type
  2351 ;;  arg             3   18[COMRAM] unsigned um
  2352 ;;  exp             1   21[COMRAM] unsigned char 
  2353 ;;  sign            1   22[COMRAM] unsigned char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;		None
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  3   18[COMRAM] float 
  2358 ;; Registers used:
  2359 ;;		wreg, status,2, status,0
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2365 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2367 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2368 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2369 ;;Total ram usage:        8 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; Hardware stack levels required when called:    2
  2372 ;; This function calls:
  2373 ;;		Nothing
  2374 ;; This function is called by:
  2375 ;;		___awtoft
  2376 ;;		___ftdiv
  2377 ;;		___ftmul
  2378 ;; This function uses a non-reentrant model
  2379 ;;
  2380                           
  2381                           	psect	text10
  2382  0014E6                     __ptext10:
  2383                           	opt stack 0
  2384  0014E6                     ___ftpack:
  2385                           	opt stack 25
  2386                           
  2387                           ;incstack = 0
  2388  0014E6  5016               	movf	___ftpack@exp,w,c
  2389  0014E8  B4D8               	btfsc	status,2,c
  2390  0014EA  D005               	goto	l1821
  2391  0014EC  5013               	movf	___ftpack@arg,w,c
  2392  0014EE  1014               	iorwf	___ftpack@arg+1,w,c
  2393  0014F0  1015               	iorwf	___ftpack@arg+2,w,c
  2394  0014F2  A4D8               	btfss	status,2,c
  2395  0014F4  D00C               	goto	l1827
  2396  0014F6                     l1821:
  2397  0014F6  0E00               	movlw	0
  2398  0014F8  6E13               	movwf	?___ftpack,c
  2399  0014FA  0E00               	movlw	0
  2400  0014FC  6E14               	movwf	?___ftpack+1,c
  2401  0014FE  0E00               	movlw	0
  2402  001500  6E15               	movwf	?___ftpack+2,c
  2403  001502  0012               	return	
  2404  001504                     l1825:
  2405  001504  2A16               	incf	___ftpack@exp,f,c
  2406  001506  90D8               	bcf	status,0,c
  2407  001508  3215               	rrcf	___ftpack@arg+2,f,c
  2408  00150A  3214               	rrcf	___ftpack@arg+1,f,c
  2409  00150C  3213               	rrcf	___ftpack@arg,f,c
  2410  00150E                     l1827:
  2411  00150E  0E00               	movlw	0
  2412  001510  1413               	andwf	___ftpack@arg,w,c
  2413  001512  6E18               	movwf	??___ftpack& (0+255),c
  2414  001514  0E00               	movlw	0
  2415  001516  1414               	andwf	___ftpack@arg+1,w,c
  2416  001518  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2417  00151A  0EFE               	movlw	254
  2418  00151C  1415               	andwf	___ftpack@arg+2,w,c
  2419  00151E  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2420  001520  5018               	movf	??___ftpack,w,c
  2421  001522  1019               	iorwf	??___ftpack+1,w,c
  2422  001524  101A               	iorwf	??___ftpack+2,w,c
  2423  001526  B4D8               	btfsc	status,2,c
  2424  001528  D00C               	goto	l1833
  2425  00152A  D7EC               	goto	l1825
  2426  00152C                     l1829:
  2427  00152C  2A16               	incf	___ftpack@exp,f,c
  2428  00152E  0E01               	movlw	1
  2429  001530  2613               	addwf	___ftpack@arg,f,c
  2430  001532  0E00               	movlw	0
  2431  001534  2214               	addwfc	___ftpack@arg+1,f,c
  2432  001536  0E00               	movlw	0
  2433  001538  2215               	addwfc	___ftpack@arg+2,f,c
  2434  00153A  90D8               	bcf	status,0,c
  2435  00153C  3215               	rrcf	___ftpack@arg+2,f,c
  2436  00153E  3214               	rrcf	___ftpack@arg+1,f,c
  2437  001540  3213               	rrcf	___ftpack@arg,f,c
  2438  001542                     l1833:
  2439  001542  0E00               	movlw	0
  2440  001544  1413               	andwf	___ftpack@arg,w,c
  2441  001546  6E18               	movwf	??___ftpack& (0+255),c
  2442  001548  0E00               	movlw	0
  2443  00154A  1414               	andwf	___ftpack@arg+1,w,c
  2444  00154C  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2445  00154E  0EFF               	movlw	255
  2446  001550  1415               	andwf	___ftpack@arg+2,w,c
  2447  001552  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2448  001554  5018               	movf	??___ftpack,w,c
  2449  001556  1019               	iorwf	??___ftpack+1,w,c
  2450  001558  101A               	iorwf	??___ftpack+2,w,c
  2451  00155A  B4D8               	btfsc	status,2,c
  2452  00155C  D006               	goto	l1837
  2453  00155E  D7E6               	goto	l1829
  2454  001560                     l1835:
  2455  001560  0616               	decf	___ftpack@exp,f,c
  2456  001562  90D8               	bcf	status,0,c
  2457  001564  3613               	rlcf	___ftpack@arg,f,c
  2458  001566  3614               	rlcf	___ftpack@arg+1,f,c
  2459  001568  3615               	rlcf	___ftpack@arg+2,f,c
  2460  00156A                     l1837:
  2461  00156A  BE14               	btfsc	___ftpack@arg+1,7,c
  2462  00156C  D003               	goto	l388
  2463  00156E  0E02               	movlw	2
  2464  001570  6016               	cpfslt	___ftpack@exp,c
  2465  001572  D7F6               	goto	l1835
  2466  001574                     l388:
  2467  001574  A016               	btfss	___ftpack@exp,0,c
  2468  001576  9E14               	bcf	___ftpack@arg+1,7,c
  2469  001578  90D8               	bcf	status,0,c
  2470  00157A  3216               	rrcf	___ftpack@exp,f,c
  2471  00157C  5016               	movf	___ftpack@exp,w,c
  2472  00157E  1215               	iorwf	___ftpack@arg+2,f,c
  2473  001580  5017               	movf	___ftpack@sign,w,c
  2474  001582  A4D8               	btfss	status,2,c
  2475  001584  8E15               	bsf	___ftpack@arg+2,7,c
  2476  001586  C013  F013         	movff	___ftpack@arg,?___ftpack
  2477  00158A  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  2478  00158E  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  2479  001592  0012               	return	
  2480  001594                     __end_of___ftpack:
  2481                           	opt stack 0
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           prodh	equ	0xFF4
  2487                           prodl	equ	0xFF3
  2488                           postinc0	equ	0xFEE
  2489                           wreg	equ	0xFE8
  2490                           indf1	equ	0xFE7
  2491                           postdec1	equ	0xFE5
  2492                           fsr1h	equ	0xFE2
  2493                           fsr1l	equ	0xFE1
  2494                           indf2	equ	0xFDF
  2495                           fsr2h	equ	0xFDA
  2496                           fsr2l	equ	0xFD9
  2497                           status	equ	0xFD8
  2498                           
  2499 ;; *************** function _initUART1 *****************
  2500 ;; Defined at:
  2501 ;;		line 67 in file "main.c"
  2502 ;; Parameters:    Size  Location     Type
  2503 ;;		None
  2504 ;; Auto vars:     Size  Location     Type
  2505 ;;		None
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, status,2
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2515 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2518 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2519 ;;Total ram usage:        0 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:    2
  2522 ;; This function calls:
  2523 ;;		Nothing
  2524 ;; This function is called by:
  2525 ;;		_main
  2526 ;; This function uses a non-reentrant model
  2527 ;;
  2528                           
  2529                           	psect	text11
  2530  0018DE                     __ptext11:
  2531                           	opt stack 0
  2532  0018DE                     _initUART1:
  2533                           	opt stack 28
  2534                           
  2535                           ;main.c: 70: TRISCbits.TRISC7 = 1;
  2536                           
  2537                           ;incstack = 0
  2538  0018DE  8E94               	bsf	3988,7,c	;volatile
  2539                           
  2540                           ;main.c: 71: TRISCbits.TRISC6 = 0;
  2541  0018E0  9C94               	bcf	3988,6,c	;volatile
  2542                           
  2543                           ;main.c: 73: TXSTA1bits.BRGH = 1;
  2544  0018E2  84AD               	bsf	4013,2,c	;volatile
  2545                           
  2546                           ;main.c: 74: BAUDCON1bits.BRG16 = 1;
  2547  0018E4  867E               	bsf	3966,3,c	;volatile
  2548                           
  2549                           ;main.c: 81: SPBRGH1 = 0;
  2550  0018E6  0E00               	movlw	0
  2551  0018E8  6E7F               	movwf	3967,c	;volatile
  2552                           
  2553                           ;main.c: 82: SPBRG1 = 34;
  2554  0018EA  0E22               	movlw	34
  2555  0018EC  6EB0               	movwf	4016,c	;volatile
  2556                           
  2557                           ;main.c: 86: TXSTA1bits.SYNC = 0;
  2558  0018EE  98AD               	bcf	4013,4,c	;volatile
  2559                           
  2560                           ;main.c: 87: RCSTA1bits.SPEN = 1;
  2561  0018F0  8EAC               	bsf	4012,7,c	;volatile
  2562                           
  2563                           ;main.c: 91: PIE1bits.TXIE = 1;
  2564  0018F2  889D               	bsf	3997,4,c	;volatile
  2565                           
  2566                           ;main.c: 92: PIE1bits.RC1IE = 1;
  2567  0018F4  8A9D               	bsf	3997,5,c	;volatile
  2568                           
  2569                           ;main.c: 97: RCSTA1bits.CREN = 1;
  2570  0018F6  88AC               	bsf	4012,4,c	;volatile
  2571  0018F8  0012               	return		;funcret
  2572  0018FA                     __end_of_initUART1:
  2573                           	opt stack 0
  2574                           tblptru	equ	0xFF8
  2575                           tblptrh	equ	0xFF7
  2576                           tblptrl	equ	0xFF6
  2577                           tablat	equ	0xFF5
  2578                           prodh	equ	0xFF4
  2579                           prodl	equ	0xFF3
  2580                           postinc0	equ	0xFEE
  2581                           wreg	equ	0xFE8
  2582                           indf1	equ	0xFE7
  2583                           postdec1	equ	0xFE5
  2584                           fsr1h	equ	0xFE2
  2585                           fsr1l	equ	0xFE1
  2586                           indf2	equ	0xFDF
  2587                           fsr2h	equ	0xFDA
  2588                           fsr2l	equ	0xFD9
  2589                           status	equ	0xFD8
  2590                           
  2591 ;; *************** function _initLoRa *****************
  2592 ;; Defined at:
  2593 ;;		line 197 in file "main.c"
  2594 ;; Parameters:    Size  Location     Type
  2595 ;;		None
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;		None
  2598 ;; Return value:  Size  Location     Type
  2599 ;;                  1    wreg      void 
  2600 ;; Registers used:
  2601 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2602 ;; Tracked objects:
  2603 ;;		On entry : 0/0
  2604 ;;		On exit  : 0/0
  2605 ;;		Unchanged: 0/0
  2606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2607 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2608 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2609 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2610 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2611 ;;Total ram usage:        0 bytes
  2612 ;; Hardware stack levels used:    1
  2613 ;; Hardware stack levels required when called:    3
  2614 ;; This function calls:
  2615 ;;		_delay
  2616 ;;		_sendUARTMessage
  2617 ;; This function is called by:
  2618 ;;		_main
  2619 ;; This function uses a non-reentrant model
  2620 ;;
  2621                           
  2622                           	psect	text12
  2623  0018BC                     __ptext12:
  2624                           	opt stack 0
  2625  0018BC                     _initLoRa:
  2626                           	opt stack 27
  2627                           
  2628                           ;main.c: 198: sendUARTMessage(&set_app_eui);
  2629                           
  2630                           ;incstack = 0
  2631  0018BC  0E60               	movlw	low _set_app_eui
  2632  0018BE  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2633  0018C0  0E0F               	movlw	high _set_app_eui
  2634  0018C2  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2635  0018C4  EC8A  F00C         	call	_sendUARTMessage	;wreg free
  2636                           
  2637                           ;main.c: 199: delay();
  2638  0018C8  ECCB  F00B         	call	_delay	;wreg free
  2639                           
  2640                           ;main.c: 200: sendUARTMessage(&set_app_key);
  2641  0018CC  0E2D               	movlw	low _set_app_key
  2642  0018CE  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2643  0018D0  0E0F               	movlw	high _set_app_key
  2644  0018D2  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2645  0018D4  EC8A  F00C         	call	_sendUARTMessage	;wreg free
  2646                           
  2647                           ;main.c: 201: delay();
  2648  0018D8  ECCB  F00B         	call	_delay	;wreg free
  2649  0018DC  0012               	return		;funcret
  2650  0018DE                     __end_of_initLoRa:
  2651                           	opt stack 0
  2652                           tblptru	equ	0xFF8
  2653                           tblptrh	equ	0xFF7
  2654                           tblptrl	equ	0xFF6
  2655                           tablat	equ	0xFF5
  2656                           prodh	equ	0xFF4
  2657                           prodl	equ	0xFF3
  2658                           postinc0	equ	0xFEE
  2659                           wreg	equ	0xFE8
  2660                           indf1	equ	0xFE7
  2661                           postdec1	equ	0xFE5
  2662                           fsr1h	equ	0xFE2
  2663                           fsr1l	equ	0xFE1
  2664                           indf2	equ	0xFDF
  2665                           fsr2h	equ	0xFDA
  2666                           fsr2l	equ	0xFD9
  2667                           status	equ	0xFD8
  2668                           
  2669 ;; *************** function _sendUARTMessage *****************
  2670 ;; Defined at:
  2671 ;;		line 183 in file "main.c"
  2672 ;; Parameters:    Size  Location     Type
  2673 ;;  newMessagePo    2   18[COMRAM] PTR unsigned char 
  2674 ;;		 -> set_app_key(51), set_app_eui(35), uart_receive_buffer(1000), temp_display_message(20), 
  2675 ;; Auto vars:     Size  Location     Type
  2676 ;;		None
  2677 ;; Return value:  Size  Location     Type
  2678 ;;                  1    wreg      void 
  2679 ;; Registers used:
  2680 ;;		wreg, status,2, status,0
  2681 ;; Tracked objects:
  2682 ;;		On entry : 0/0
  2683 ;;		On exit  : 0/0
  2684 ;;		Unchanged: 0/0
  2685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2686 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2689 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2690 ;;Total ram usage:        2 bytes
  2691 ;; Hardware stack levels used:    1
  2692 ;; Hardware stack levels required when called:    2
  2693 ;; This function calls:
  2694 ;;		Nothing
  2695 ;; This function is called by:
  2696 ;;		_initLoRa
  2697 ;;		_main
  2698 ;; This function uses a non-reentrant model
  2699 ;;
  2700                           
  2701                           	psect	text13
  2702  001914                     __ptext13:
  2703                           	opt stack 0
  2704  001914                     _sendUARTMessage:
  2705                           	opt stack 28
  2706                           
  2707                           ;main.c: 185: if(isCommandSent == 1){
  2708                           
  2709                           ;incstack = 0
  2710  001914  A04C               	btfss	_isCommandSent/(0+8),_isCommandSent& (0+7),c
  2711  001916  0012               	return	
  2712                           
  2713                           ;main.c: 187: currentMessagePointer = newMessagePointer;
  2714  001918  C013  F03C         	movff	sendUARTMessage@newMessagePointer,_currentMessagePointer
  2715  00191C  C014  F03D         	movff	sendUARTMessage@newMessagePointer+1,_currentMessagePointer+1
  2716                           
  2717                           ;main.c: 192: PIE1bits.TXIE = 1;
  2718  001920  889D               	bsf	3997,4,c	;volatile
  2719                           
  2720                           ;main.c: 193: TXSTA1bits.TXEN = 1;
  2721  001922  8AAD               	bsf	4013,5,c	;volatile
  2722  001924  0012               	return	
  2723  001926                     __end_of_sendUARTMessage:
  2724                           	opt stack 0
  2725                           tblptru	equ	0xFF8
  2726                           tblptrh	equ	0xFF7
  2727                           tblptrl	equ	0xFF6
  2728                           tablat	equ	0xFF5
  2729                           prodh	equ	0xFF4
  2730                           prodl	equ	0xFF3
  2731                           postinc0	equ	0xFEE
  2732                           wreg	equ	0xFE8
  2733                           indf1	equ	0xFE7
  2734                           postdec1	equ	0xFE5
  2735                           fsr1h	equ	0xFE2
  2736                           fsr1l	equ	0xFE1
  2737                           indf2	equ	0xFDF
  2738                           fsr2h	equ	0xFDA
  2739                           fsr2l	equ	0xFD9
  2740                           status	equ	0xFD8
  2741                           
  2742 ;; *************** function _delay *****************
  2743 ;; Defined at:
  2744 ;;		line 203 in file "main.c"
  2745 ;; Parameters:    Size  Location     Type
  2746 ;;		None
  2747 ;; Auto vars:     Size  Location     Type
  2748 ;;  time            4   19[COMRAM] long 
  2749 ;; Return value:  Size  Location     Type
  2750 ;;                  1    wreg      void 
  2751 ;; Registers used:
  2752 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2753 ;; Tracked objects:
  2754 ;;		On entry : 0/0
  2755 ;;		On exit  : 0/0
  2756 ;;		Unchanged: 0/0
  2757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2758 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2760 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2761 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2762 ;;Total ram usage:        5 bytes
  2763 ;; Hardware stack levels used:    1
  2764 ;; Hardware stack levels required when called:    2
  2765 ;; This function calls:
  2766 ;;		Nothing
  2767 ;; This function is called by:
  2768 ;;		_initLoRa
  2769 ;;		_main
  2770 ;; This function uses a non-reentrant model
  2771 ;;
  2772                           
  2773                           	psect	text14
  2774  001796                     __ptext14:
  2775                           	opt stack 0
  2776  001796                     _delay:
  2777                           	opt stack 27
  2778                           
  2779                           ;main.c: 204: long time = 0;
  2780                           
  2781                           ;incstack = 0
  2782  001796  0E00               	movlw	0
  2783  001798  6E14               	movwf	delay@time,c
  2784  00179A  0E00               	movlw	0
  2785  00179C  6E15               	movwf	delay@time+1,c
  2786  00179E  0E00               	movlw	0
  2787  0017A0  6E16               	movwf	delay@time+2,c
  2788  0017A2  0E00               	movlw	0
  2789  0017A4  6E17               	movwf	delay@time+3,c
  2790                           
  2791                           ;main.c: 205: while(time < DELAY){
  2792  0017A6  D006               	goto	l1629
  2793  0017A8                     l1627:
  2794                           
  2795                           ;main.c: 206: time++;
  2796  0017A8  0E01               	movlw	1
  2797  0017AA  2614               	addwf	delay@time,f,c
  2798  0017AC  0E00               	movlw	0
  2799  0017AE  2215               	addwfc	delay@time+1,f,c
  2800  0017B0  2216               	addwfc	delay@time+2,f,c
  2801  0017B2  2217               	addwfc	delay@time+3,f,c
  2802  0017B4                     l1629:
  2803  0017B4  0E29               	movlw	low _DELAY
  2804  0017B6  6EF6               	movwf	tblptrl,c
  2805  0017B8                     	if	1	;There is more than 1 active tblptr byte
  2806  0017B8  0E0F               	movlw	high _DELAY
  2807  0017BA  6EF7               	movwf	tblptrh,c
  2808  0017BC                     	endif
  2809  0017BC                     	if	1	;There are 3 active tblptr bytes
  2810  0017BC  0E00               	movlw	low (_DELAY shr (0+16))
  2811  0017BE  6EF8               	movwf	tblptru,c
  2812  0017C0                     	endif
  2813  0017C0  0009               	tblrd		*+
  2814  0017C2  50F5               	movf	tablat,w,c
  2815  0017C4  5C14               	subwf	delay@time,w,c
  2816  0017C6  0009               	tblrd		*+
  2817  0017C8  50F5               	movf	tablat,w,c
  2818  0017CA  5815               	subwfb	delay@time+1,w,c
  2819  0017CC  0009               	tblrd		*+
  2820  0017CE  50F5               	movf	tablat,w,c
  2821  0017D0  5816               	subwfb	delay@time+2,w,c
  2822  0017D2  5017               	movf	delay@time+3,w,c
  2823  0017D4  0A80               	xorlw	128
  2824  0017D6  6E13               	movwf	??_delay& (0+255),c
  2825  0017D8  0009               	tblrd		*+
  2826  0017DA  50F5               	movf	tablat,w,c
  2827  0017DC  0A80               	xorlw	128
  2828  0017DE  5813               	subwfb	??_delay& (0+255),w,c
  2829  0017E0  B0D8               	btfsc	status,0,c
  2830  0017E2  0012               	return	
  2831  0017E4  D7E1               	goto	l1627
  2832  0017E6                     __end_of_delay:
  2833                           	opt stack 0
  2834                           tblptru	equ	0xFF8
  2835                           tblptrh	equ	0xFF7
  2836                           tblptrl	equ	0xFF6
  2837                           tablat	equ	0xFF5
  2838                           prodh	equ	0xFF4
  2839                           prodl	equ	0xFF3
  2840                           postinc0	equ	0xFEE
  2841                           wreg	equ	0xFE8
  2842                           indf1	equ	0xFE7
  2843                           postdec1	equ	0xFE5
  2844                           fsr1h	equ	0xFE2
  2845                           fsr1l	equ	0xFE1
  2846                           indf2	equ	0xFDF
  2847                           fsr2h	equ	0xFDA
  2848                           fsr2l	equ	0xFD9
  2849                           status	equ	0xFD8
  2850                           
  2851 ;; *************** function _initInterrupts *****************
  2852 ;; Defined at:
  2853 ;;		line 171 in file "main.c"
  2854 ;; Parameters:    Size  Location     Type
  2855 ;;		None
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;		None
  2858 ;; Return value:  Size  Location     Type
  2859 ;;                  1    wreg      void 
  2860 ;; Registers used:
  2861 ;;		wreg, status,2
  2862 ;; Tracked objects:
  2863 ;;		On entry : 0/0
  2864 ;;		On exit  : 0/0
  2865 ;;		Unchanged: 0/0
  2866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2867 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2868 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2869 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2870 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2871 ;;Total ram usage:        0 bytes
  2872 ;; Hardware stack levels used:    1
  2873 ;; Hardware stack levels required when called:    2
  2874 ;; This function calls:
  2875 ;;		Nothing
  2876 ;; This function is called by:
  2877 ;;		_main
  2878 ;; This function uses a non-reentrant model
  2879 ;;
  2880                           
  2881                           	psect	text15
  2882  001936                     __ptext15:
  2883                           	opt stack 0
  2884  001936                     _initInterrupts:
  2885                           	opt stack 28
  2886                           
  2887                           ;main.c: 172: INTCON = 0b11000000;
  2888                           
  2889                           ;incstack = 0
  2890  001936  0EC0               	movlw	192
  2891  001938  6EF2               	movwf	intcon,c	;volatile
  2892                           
  2893                           ;main.c: 173: RCONbits.IPEN = 0;
  2894  00193A  9ED0               	bcf	4048,7,c	;volatile
  2895  00193C  0012               	return		;funcret
  2896  00193E                     __end_of_initInterrupts:
  2897                           	opt stack 0
  2898                           tblptru	equ	0xFF8
  2899                           tblptrh	equ	0xFF7
  2900                           tblptrl	equ	0xFF6
  2901                           tablat	equ	0xFF5
  2902                           prodh	equ	0xFF4
  2903                           prodl	equ	0xFF3
  2904                           intcon	equ	0xFF2
  2905                           postinc0	equ	0xFEE
  2906                           wreg	equ	0xFE8
  2907                           indf1	equ	0xFE7
  2908                           postdec1	equ	0xFE5
  2909                           fsr1h	equ	0xFE2
  2910                           fsr1l	equ	0xFE1
  2911                           indf2	equ	0xFDF
  2912                           fsr2h	equ	0xFDA
  2913                           fsr2l	equ	0xFD9
  2914                           status	equ	0xFD8
  2915                           
  2916 ;; *************** function _initADC *****************
  2917 ;; Defined at:
  2918 ;;		line 101 in file "main.c"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;		None
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;		None
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, status,2
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2932 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2933 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2935 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2936 ;;Total ram usage:        0 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:    2
  2939 ;; This function calls:
  2940 ;;		Nothing
  2941 ;; This function is called by:
  2942 ;;		_main
  2943 ;; This function uses a non-reentrant model
  2944 ;;
  2945                           
  2946                           	psect	text16
  2947  00188E                     __ptext16:
  2948                           	opt stack 0
  2949  00188E                     _initADC:
  2950                           	opt stack 28
  2951                           
  2952                           ;main.c: 102: TRISAbits.TRISA0 = '1';
  2953                           
  2954                           ;incstack = 0
  2955  00188E  8092               	bsf	3986,0,c	;volatile
  2956                           
  2957                           ;main.c: 103: TRISAbits.TRISA1 = '1';
  2958  001890  8292               	bsf	3986,1,c	;volatile
  2959                           
  2960                           ;main.c: 104: PORTAbits.RA0 = '0';
  2961  001892  9080               	bcf	3968,0,c	;volatile
  2962                           
  2963                           ;main.c: 105: PORTAbits.RA1 = '0';
  2964  001894  9280               	bcf	3968,1,c	;volatile
  2965                           
  2966                           ;main.c: 107: PORTBbits.RB0 = '0';
  2967  001896  9081               	bcf	3969,0,c	;volatile
  2968                           
  2969                           ;main.c: 108: TRISBbits.TRISB0 = '1';
  2970  001898  8093               	bsf	3987,0,c	;volatile
  2971                           
  2972                           ;main.c: 109: PORTBbits.RB1 = '0';
  2973  00189A  9281               	bcf	3969,1,c	;volatile
  2974                           
  2975                           ;main.c: 110: TRISBbits.TRISB1 = '1';
  2976  00189C  8293               	bsf	3987,1,c	;volatile
  2977                           
  2978                           ;main.c: 113: ANCON0 = 0xFC;
  2979  00189E  0EFC               	movlw	252
  2980  0018A0  010F               	movlb	15	; () banked
  2981  0018A2  6F48               	movwf	72,b	;volatile
  2982                           
  2983                           ;main.c: 114: ANCON1 = 0x1C;
  2984  0018A4  0E1C               	movlw	28
  2985  0018A6  010F               	movlb	15	; () banked
  2986  0018A8  6F49               	movwf	73,b	;volatile
  2987                           
  2988                           ;main.c: 115: ADCON0 = 0x00;
  2989  0018AA  0E00               	movlw	0
  2990  0018AC  6EC2               	movwf	4034,c	;volatile
  2991                           
  2992                           ;main.c: 116: ADCON1 = 0b10111110;
  2993  0018AE  0EBE               	movlw	190
  2994  0018B0  6EC1               	movwf	4033,c	;volatile
  2995                           
  2996                           ; BSR set to: 15
  2997                           ;main.c: 117: ADCON0bits.ADON = 0x01;
  2998  0018B2  80C2               	bsf	4034,0,c	;volatile
  2999                           
  3000                           ; BSR set to: 15
  3001                           ;main.c: 119: PIR1bits.ADIF = 0;
  3002  0018B4  9C9E               	bcf	3998,6,c	;volatile
  3003                           
  3004                           ; BSR set to: 15
  3005                           ;main.c: 120: PIE1bits.ADIE = 1;
  3006  0018B6  8C9D               	bsf	3997,6,c	;volatile
  3007                           
  3008                           ; BSR set to: 15
  3009                           ;main.c: 123: ADCON0bits.GO_DONE = 1;
  3010  0018B8  82C2               	bsf	4034,1,c	;volatile
  3011                           
  3012                           ; BSR set to: 15
  3013  0018BA  0012               	return		;funcret
  3014  0018BC                     __end_of_initADC:
  3015                           	opt stack 0
  3016                           tblptru	equ	0xFF8
  3017                           tblptrh	equ	0xFF7
  3018                           tblptrl	equ	0xFF6
  3019                           tablat	equ	0xFF5
  3020                           prodh	equ	0xFF4
  3021                           prodl	equ	0xFF3
  3022                           intcon	equ	0xFF2
  3023                           postinc0	equ	0xFEE
  3024                           wreg	equ	0xFE8
  3025                           indf1	equ	0xFE7
  3026                           postdec1	equ	0xFE5
  3027                           fsr1h	equ	0xFE2
  3028                           fsr1l	equ	0xFE1
  3029                           indf2	equ	0xFDF
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _clearUARTReceiveBuffer *****************
  3035 ;; Defined at:
  3036 ;;		line 176 in file "main.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  i               2   18[COMRAM] int 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3051 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3053 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3054 ;;Total ram usage:        2 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    2
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_main
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text17
  3065  00181E                     __ptext17:
  3066                           	opt stack 0
  3067  00181E                     _clearUARTReceiveBuffer:
  3068                           	opt stack 28
  3069                           
  3070                           ;main.c: 177: for(int i = 0; i<1000; i++){
  3071                           
  3072                           ; BSR set to: 15
  3073                           ;incstack = 0
  3074  00181E  0E00               	movlw	0
  3075  001820  6E14               	movwf	clearUARTReceiveBuffer@i+1,c
  3076  001822  0E00               	movlw	0
  3077  001824  6E13               	movwf	clearUARTReceiveBuffer@i,c
  3078  001826                     l1677:
  3079  001826  BE14               	btfsc	clearUARTReceiveBuffer@i+1,7,c
  3080  001828  D006               	goto	l1681
  3081  00182A  0EE8               	movlw	232
  3082  00182C  5C13               	subwf	clearUARTReceiveBuffer@i,w,c
  3083  00182E  0E03               	movlw	3
  3084  001830  5814               	subwfb	clearUARTReceiveBuffer@i+1,w,c
  3085  001832  B0D8               	btfsc	status,0,c
  3086  001834  D00B               	goto	l1687
  3087  001836                     l1681:
  3088                           
  3089                           ;main.c: 178: uart_receive_buffer[i] = '\0';
  3090  001836  0E97               	movlw	low _uart_receive_buffer
  3091  001838  2413               	addwf	clearUARTReceiveBuffer@i,w,c
  3092  00183A  6ED9               	movwf	fsr2l,c
  3093  00183C  0E00               	movlw	high _uart_receive_buffer
  3094  00183E  2014               	addwfc	clearUARTReceiveBuffer@i+1,w,c
  3095  001840  6EDA               	movwf	fsr2h,c
  3096  001842  0E00               	movlw	0
  3097  001844  6EDF               	movwf	indf2,c
  3098  001846  4A13               	infsnz	clearUARTReceiveBuffer@i,f,c
  3099  001848  2A14               	incf	clearUARTReceiveBuffer@i+1,f,c
  3100  00184A  D7ED               	goto	l1677
  3101  00184C                     l1687:
  3102                           
  3103                           ;main.c: 179: }
  3104                           ;main.c: 180: uart_receive_buffer_index= 0 ;
  3105  00184C  0E00               	movlw	0
  3106  00184E  6E4B               	movwf	_uart_receive_buffer_index+1,c
  3107  001850  0E00               	movlw	0
  3108  001852  6E4A               	movwf	_uart_receive_buffer_index,c
  3109  001854  0012               	return		;funcret
  3110  001856                     __end_of_clearUARTReceiveBuffer:
  3111                           	opt stack 0
  3112                           tblptru	equ	0xFF8
  3113                           tblptrh	equ	0xFF7
  3114                           tblptrl	equ	0xFF6
  3115                           tablat	equ	0xFF5
  3116                           prodh	equ	0xFF4
  3117                           prodl	equ	0xFF3
  3118                           intcon	equ	0xFF2
  3119                           postinc0	equ	0xFEE
  3120                           wreg	equ	0xFE8
  3121                           indf1	equ	0xFE7
  3122                           postdec1	equ	0xFE5
  3123                           fsr1h	equ	0xFE2
  3124                           fsr1l	equ	0xFE1
  3125                           indf2	equ	0xFDF
  3126                           fsr2h	equ	0xFDA
  3127                           fsr2l	equ	0xFD9
  3128                           status	equ	0xFD8
  3129                           
  3130 ;; *************** function _UARTReceive *****************
  3131 ;; Defined at:
  3132 ;;		line 162 in file "main.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  on_or_off       1    wreg     unsigned char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  on_or_off       1   18[COMRAM] unsigned char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  1    wreg      void 
  3139 ;; Registers used:
  3140 ;;		wreg, status,2, status,0
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3146 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3147 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3148 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3149 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3150 ;;Total ram usage:        1 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		Nothing
  3155 ;; This function is called by:
  3156 ;;		_main
  3157 ;; This function uses a non-reentrant model
  3158 ;;
  3159                           
  3160                           	psect	text18
  3161  001926                     __ptext18:
  3162                           	opt stack 0
  3163  001926                     _UARTReceive:
  3164                           	opt stack 28
  3165                           
  3166                           ;incstack = 0
  3167                           ;UARTReceive@on_or_off stored from wreg
  3168  001926  6E13               	movwf	UARTReceive@on_or_off,c
  3169                           
  3170                           ;main.c: 163: if(on_or_off == 1){
  3171  001928  0413               	decf	UARTReceive@on_or_off,w,c
  3172  00192A  A4D8               	btfss	status,2,c
  3173  00192C  D002               	goto	l110
  3174                           
  3175                           ;main.c: 164: RCSTA1bits.CREN = 1;
  3176  00192E  88AC               	bsf	4012,4,c	;volatile
  3177                           
  3178                           ;main.c: 165: }
  3179  001930  0012               	return	
  3180  001932                     l110:
  3181                           
  3182                           ;main.c: 166: else{
  3183                           ;main.c: 167: RCSTA1bits.CREN = 0;
  3184  001932  98AC               	bcf	4012,4,c	;volatile
  3185  001934  0012               	return	
  3186  001936                     __end_of_UARTReceive:
  3187                           	opt stack 0
  3188                           tblptru	equ	0xFF8
  3189                           tblptrh	equ	0xFF7
  3190                           tblptrl	equ	0xFF6
  3191                           tablat	equ	0xFF5
  3192                           prodh	equ	0xFF4
  3193                           prodl	equ	0xFF3
  3194                           intcon	equ	0xFF2
  3195                           postinc0	equ	0xFEE
  3196                           wreg	equ	0xFE8
  3197                           indf1	equ	0xFE7
  3198                           postdec1	equ	0xFE5
  3199                           fsr1h	equ	0xFE2
  3200                           fsr1l	equ	0xFE1
  3201                           indf2	equ	0xFDF
  3202                           fsr2h	equ	0xFDA
  3203                           fsr2l	equ	0xFD9
  3204                           status	equ	0xFD8
  3205                           
  3206 ;; *************** function _high_ISR *****************
  3207 ;; Defined at:
  3208 ;;		line 261 in file "main.c"
  3209 ;; Parameters:    Size  Location     Type
  3210 ;;		None
  3211 ;; Auto vars:     Size  Location     Type
  3212 ;;		None
  3213 ;; Return value:  Size  Location     Type
  3214 ;;                  1    wreg      void 
  3215 ;; Registers used:
  3216 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3217 ;; Tracked objects:
  3218 ;;		On entry : 0/0
  3219 ;;		On exit  : 0/0
  3220 ;;		Unchanged: 0/0
  3221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3224 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3225 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3226 ;;Total ram usage:       16 bytes
  3227 ;; Hardware stack levels used:    1
  3228 ;; Hardware stack levels required when called:    1
  3229 ;; This function calls:
  3230 ;;		i2_clearUARTReceiveBuffer
  3231 ;; This function is called by:
  3232 ;;		Interrupt level 2
  3233 ;; This function uses a non-reentrant model
  3234 ;;
  3235                           
  3236                           	psect	intcode
  3237  000008                     __pintcode:
  3238                           	opt stack 0
  3239  000008                     _high_ISR:
  3240                           	opt stack 25
  3241                           
  3242                           ;incstack = 0
  3243  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3244  00000A  CFFA F005          	movff	pclath,??_high_ISR+2
  3245  00000E  CFFB F006          	movff	pclatu,??_high_ISR+3
  3246  000012  CFE9 F007          	movff	fsr0l,??_high_ISR+4
  3247  000016  CFEA F008          	movff	fsr0h,??_high_ISR+5
  3248  00001A  CFE1 F009          	movff	fsr1l,??_high_ISR+6
  3249  00001E  CFE2 F00A          	movff	fsr1h,??_high_ISR+7
  3250  000022  CFD9 F00B          	movff	fsr2l,??_high_ISR+8
  3251  000026  CFDA F00C          	movff	fsr2h,??_high_ISR+9
  3252  00002A  CFF3 F00D          	movff	prodl,??_high_ISR+10
  3253  00002E  CFF4 F00E          	movff	prodh,??_high_ISR+11
  3254  000032  CFF6 F00F          	movff	tblptrl,??_high_ISR+12
  3255  000036  CFF7 F010          	movff	tblptrh,??_high_ISR+13
  3256  00003A  CFF8 F011          	movff	tblptru,??_high_ISR+14
  3257  00003E  CFF5 F012          	movff	tablat,??_high_ISR+15
  3258                           
  3259                           ;main.c: 264: if(PIR1bits.TX1IF == 1){
  3260  000042  A89E               	btfss	3998,4,c	;volatile
  3261  000044  D02B               	goto	i2l1761
  3262                           
  3263                           ;main.c: 266: if(*currentMessagePointer == '\0'){
  3264  000046  C03C  FFF6         	movff	_currentMessagePointer,tblptrl
  3265  00004A  C03D  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3266  00004E  0E00               	movlw	low (__smallconst shr (0+16))
  3267  000050  6EF8               	movwf	tblptru,c
  3268  000052  0E0E               	movlw	(high __ramtop+-1)
  3269  000054  64F7               	cpfsgt	tblptrh,c
  3270  000056  D003               	bra	i2u122_47
  3271  000058  0008               	tblrd		*
  3272  00005A  50F5               	movf	tablat,w,c
  3273  00005C  D005               	bra	i2u122_40
  3274  00005E                     i2u122_47:
  3275  00005E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3276  000062  CFF7 FFE2          	movff	tblptrh,fsr1h
  3277  000066  50E7               	movf	indf1,w,c
  3278  000068                     i2u122_40:
  3279  000068  0900               	iorlw	0
  3280  00006A  A4D8               	btfss	status,2,c
  3281  00006C  D003               	goto	i2l1757
  3282                           
  3283                           ;main.c: 267: PIE1bits.TXIE = 0;
  3284  00006E  989D               	bcf	3997,4,c	;volatile
  3285                           
  3286                           ;main.c: 268: isCommandSent = 1;
  3287  000070  804C               	bsf	_isCommandSent/(0+8),_isCommandSent& (0+7),c
  3288                           
  3289                           ;main.c: 269: }
  3290  000072  D014               	goto	i2l1761
  3291  000074                     i2l1757:
  3292                           
  3293                           ;main.c: 270: else{
  3294                           ;main.c: 272: TXREG1 = *currentMessagePointer;
  3295  000074  C03C  FFF6         	movff	_currentMessagePointer,tblptrl
  3296  000078  C03D  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3297  00007C  0E00               	movlw	low (__smallconst shr (0+16))
  3298  00007E  6EF8               	movwf	tblptru,c
  3299  000080  0E0E               	movlw	(high __ramtop+-1)
  3300  000082  64F7               	cpfsgt	tblptrh,c
  3301  000084  D003               	bra	i2u124_47
  3302  000086  0008               	tblrd		*
  3303  000088  50F5               	movf	tablat,w,c
  3304  00008A  D005               	bra	i2u124_40
  3305  00008C                     i2u124_47:
  3306  00008C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3307  000090  CFF7 FFE2          	movff	tblptrh,fsr1h
  3308  000094  50E7               	movf	indf1,w,c
  3309  000096                     i2u124_40:
  3310  000096  6EAE               	movwf	4014,c	;volatile
  3311                           
  3312                           ;main.c: 274: currentMessagePointer += 1;
  3313  000098  4A3C               	infsnz	_currentMessagePointer,f,c
  3314  00009A  2A3D               	incf	_currentMessagePointer+1,f,c
  3315  00009C                     i2l1761:
  3316                           
  3317                           ;main.c: 275: }
  3318                           ;main.c: 276: }
  3319                           ;main.c: 278: if(PIR1bits.RC1IF == 1){
  3320  00009C  AA9E               	btfss	3998,5,c	;volatile
  3321  00009E  D01C               	goto	i2l1777
  3322                           
  3323                           ;main.c: 279: PIR1bits.RC1IF = 0;
  3324  0000A0  9A9E               	bcf	3998,5,c	;volatile
  3325                           
  3326                           ;main.c: 280: uart_receive_buffer[uart_receive_buffer_index] = RCREG1;
  3327  0000A2  0E97               	movlw	low _uart_receive_buffer
  3328  0000A4  244A               	addwf	_uart_receive_buffer_index,w,c
  3329  0000A6  6ED9               	movwf	fsr2l,c
  3330  0000A8  0E00               	movlw	high _uart_receive_buffer
  3331  0000AA  204B               	addwfc	_uart_receive_buffer_index+1,w,c
  3332  0000AC  6EDA               	movwf	fsr2h,c
  3333  0000AE  CFAF FFDF          	movff	4015,indf2	;volatile
  3334                           
  3335                           ;main.c: 281: uart_receive_buffer_index += 1;
  3336  0000B2  4A4A               	infsnz	_uart_receive_buffer_index,f,c
  3337  0000B4  2A4B               	incf	_uart_receive_buffer_index+1,f,c
  3338                           
  3339                           ;main.c: 282: if(uart_receive_buffer[uart_receive_buffer_index] == '\n'){
  3340  0000B6  0E97               	movlw	low _uart_receive_buffer
  3341  0000B8  244A               	addwf	_uart_receive_buffer_index,w,c
  3342  0000BA  6ED9               	movwf	fsr2l,c
  3343  0000BC  0E00               	movlw	high _uart_receive_buffer
  3344  0000BE  204B               	addwfc	_uart_receive_buffer_index+1,w,c
  3345  0000C0  6EDA               	movwf	fsr2h,c
  3346  0000C2  0E0A               	movlw	10
  3347  0000C4  18DE               	xorwf	postinc2,w,c
  3348  0000C6  B4D8               	btfsc	status,2,c
  3349                           
  3350                           ;main.c: 283: RCSTA1bits.CREN = 0;
  3351  0000C8  98AC               	bcf	4012,4,c	;volatile
  3352                           
  3353                           ;main.c: 284: }
  3354                           ;main.c: 285: if(uart_receive_buffer_index > 1000){
  3355  0000CA  0EE9               	movlw	233
  3356  0000CC  5C4A               	subwf	_uart_receive_buffer_index,w,c
  3357  0000CE  0E03               	movlw	3
  3358  0000D0  584B               	subwfb	_uart_receive_buffer_index+1,w,c
  3359  0000D2  B0D8               	btfsc	status,0,c
  3360                           
  3361                           ;main.c: 286: clearUARTReceiveBuffer();
  3362  0000D4  EC2B  F00C         	call	i2_clearUARTReceiveBuffer	;wreg free
  3363  0000D8                     i2l1777:
  3364                           
  3365                           ;main.c: 287: }
  3366                           ;main.c: 288: }
  3367                           ;main.c: 290: if(PIR1bits.ADIF == 1)
  3368  0000D8  AC9E               	btfss	3998,6,c	;volatile
  3369  0000DA  D04D               	goto	i2l163
  3370                           
  3371                           ;main.c: 291: {
  3372                           ;main.c: 292: PIR1bits.ADIF = 0;
  3373  0000DC  9C9E               	bcf	3998,6,c	;volatile
  3374                           
  3375                           ;main.c: 293: switch(currentChannel){
  3376  0000DE  D035               	goto	i2l1791
  3377  0000E0                     i2l158:
  3378                           
  3379                           ;main.c: 295: plus_pipe = ADRES;
  3380  0000E0  CFC3 F044          	movff	4035,_plus_pipe	;volatile
  3381  0000E4  CFC4 F045          	movff	4036,_plus_pipe+1	;volatile
  3382                           
  3383                           ;main.c: 296: ADCON0bits.CHS = 0b1000;
  3384  0000E8  50C2               	movf	4034,w,c	;volatile
  3385  0000EA  0BC3               	andlw	-61
  3386  0000EC  0920               	iorlw	32
  3387  0000EE  6EC2               	movwf	4034,c	;volatile
  3388                           
  3389                           ;main.c: 297: currentChannel = 1;
  3390  0000F0  0E00               	movlw	0
  3391  0000F2  0100               	movlb	0	; () banked
  3392  0000F4  6F96               	movwf	(_currentChannel+1)& (0+255),b
  3393  0000F6  0E01               	movlw	1
  3394  0000F8  D026               	goto	L5
  3395  0000FA                     i2l160:
  3396                           
  3397                           ;main.c: 300: minus_pipe = ADRES;
  3398  0000FA  CFC3 F040          	movff	4035,_minus_pipe	;volatile
  3399  0000FE  CFC4 F041          	movff	4036,_minus_pipe+1	;volatile
  3400                           
  3401                           ;main.c: 301: ADCON0bits.CHS = 0b0001;
  3402  000102  50C2               	movf	4034,w,c	;volatile
  3403  000104  0BC3               	andlw	-61
  3404  000106  0904               	iorlw	4
  3405  000108  6EC2               	movwf	4034,c	;volatile
  3406                           
  3407                           ;main.c: 302: currentChannel = 2;
  3408  00010A  0E00               	movlw	0
  3409  00010C  0100               	movlb	0	; () banked
  3410  00010E  6F96               	movwf	(_currentChannel+1)& (0+255),b
  3411  000110  0E02               	movlw	2
  3412  000112  D019               	goto	L5
  3413  000114                     i2l161:
  3414                           
  3415                           ;main.c: 305: plus_ambient = ADRES;
  3416  000114  CFC3 F042          	movff	4035,_plus_ambient	;volatile
  3417  000118  CFC4 F043          	movff	4036,_plus_ambient+1	;volatile
  3418                           
  3419                           ;main.c: 306: ADCON0bits.CHS = 0b0000;
  3420  00011C  94C2               	bcf	4034,2,c	;volatile
  3421  00011E  96C2               	bcf	4034,3,c	;volatile
  3422  000120  98C2               	bcf	4034,4,c	;volatile
  3423  000122  9AC2               	bcf	4034,5,c	;volatile
  3424                           
  3425                           ;main.c: 307: currentChannel = 3;
  3426  000124  0E00               	movlw	0
  3427  000126  0100               	movlb	0	; () banked
  3428  000128  6F96               	movwf	(_currentChannel+1)& (0+255),b
  3429  00012A  0E03               	movlw	3
  3430  00012C  D00C               	goto	L5
  3431  00012E                     i2l162:
  3432                           
  3433                           ;main.c: 310: minus_ambient = ADRES;
  3434  00012E  CFC3 F03E          	movff	4035,_minus_ambient	;volatile
  3435  000132  CFC4 F03F          	movff	4036,_minus_ambient+1	;volatile
  3436                           
  3437                           ;main.c: 311: ADCON0bits.CHS = 0b1001;
  3438  000136  50C2               	movf	4034,w,c	;volatile
  3439  000138  0BC3               	andlw	-61
  3440  00013A  0924               	iorlw	36
  3441  00013C  6EC2               	movwf	4034,c	;volatile
  3442                           
  3443                           ;main.c: 312: currentChannel = 0;
  3444  00013E  0E00               	movlw	0
  3445  000140  0100               	movlb	0	; () banked
  3446  000142  6F96               	movwf	(_currentChannel+1)& (0+255),b
  3447  000144  0E00               	movlw	0
  3448  000146                     L5:
  3449  000146  6F95               	movwf	_currentChannel& (0+255),b
  3450                           
  3451                           ; BSR set to: 0
  3452                           ;main.c: 314: }
  3453                           
  3454                           ;main.c: 313: break;
  3455  000148  D015               	goto	i2l159
  3456  00014A                     i2l1791:
  3457  00014A  C095  F003         	movff	_currentChannel,??_high_ISR
  3458  00014E  C096  F004         	movff	_currentChannel+1,??_high_ISR+1
  3459                           
  3460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3461                           ; Switch size 1, requested type "space"
  3462                           ; Number of cases is 1, Range of values is 0 to 0
  3463                           ; switch strategies available:
  3464                           ; Name         Instructions Cycles
  3465                           ; simple_byte            4     3 (average)
  3466                           ;	Chosen strategy is simple_byte
  3467  000152  5004               	movf	??_high_ISR+1,w,c
  3468  000154  0A00               	xorlw	0	; case 0
  3469  000156  A4D8               	btfss	status,2,c
  3470  000158  D00D               	goto	i2l159
  3471                           
  3472                           ; Switch size 1, requested type "space"
  3473                           ; Number of cases is 4, Range of values is 0 to 3
  3474                           ; switch strategies available:
  3475                           ; Name         Instructions Cycles
  3476                           ; simple_byte           13     7 (average)
  3477                           ;	Chosen strategy is simple_byte
  3478  00015A  5003               	movf	??_high_ISR,w,c
  3479  00015C  0A00               	xorlw	0	; case 0
  3480  00015E  B4D8               	btfsc	status,2,c
  3481  000160  D7BF               	goto	i2l158
  3482  000162  0A01               	xorlw	1	; case 1
  3483  000164  B4D8               	btfsc	status,2,c
  3484  000166  D7C9               	goto	i2l160
  3485  000168  0A03               	xorlw	3	; case 2
  3486  00016A  B4D8               	btfsc	status,2,c
  3487  00016C  D7D3               	goto	i2l161
  3488  00016E  0A01               	xorlw	1	; case 3
  3489  000170  B4D8               	btfsc	status,2,c
  3490  000172  D7DD               	goto	i2l162
  3491  000174                     i2l159:
  3492                           
  3493                           ;main.c: 315: ADCON0bits.GO_DONE = 1;
  3494  000174  82C2               	bsf	4034,1,c	;volatile
  3495  000176                     i2l163:
  3496  000176  C012  FFF5         	movff	??_high_ISR+15,tablat
  3497  00017A  C011  FFF8         	movff	??_high_ISR+14,tblptru
  3498  00017E  C010  FFF7         	movff	??_high_ISR+13,tblptrh
  3499  000182  C00F  FFF6         	movff	??_high_ISR+12,tblptrl
  3500  000186  C00E  FFF4         	movff	??_high_ISR+11,prodh
  3501  00018A  C00D  FFF3         	movff	??_high_ISR+10,prodl
  3502  00018E  C00C  FFDA         	movff	??_high_ISR+9,fsr2h
  3503  000192  C00B  FFD9         	movff	??_high_ISR+8,fsr2l
  3504  000196  C00A  FFE2         	movff	??_high_ISR+7,fsr1h
  3505  00019A  C009  FFE1         	movff	??_high_ISR+6,fsr1l
  3506  00019E  C008  FFEA         	movff	??_high_ISR+5,fsr0h
  3507  0001A2  C007  FFE9         	movff	??_high_ISR+4,fsr0l
  3508  0001A6  C006  FFFB         	movff	??_high_ISR+3,pclatu
  3509  0001AA  C005  FFFA         	movff	??_high_ISR+2,pclath
  3510  0001AE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3511  0001B0  0011               	retfie		f
  3512  0001B2                     __end_of_high_ISR:
  3513                           	opt stack 0
  3514                           pclatu	equ	0xFFB
  3515                           pclath	equ	0xFFA
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           prodh	equ	0xFF4
  3521                           prodl	equ	0xFF3
  3522                           intcon	equ	0xFF2
  3523                           postinc0	equ	0xFEE
  3524                           fsr0h	equ	0xFEA
  3525                           fsr0l	equ	0xFE9
  3526                           wreg	equ	0xFE8
  3527                           indf1	equ	0xFE7
  3528                           postdec1	equ	0xFE5
  3529                           fsr1h	equ	0xFE2
  3530                           fsr1l	equ	0xFE1
  3531                           indf2	equ	0xFDF
  3532                           postinc2	equ	0xFDE
  3533                           fsr2h	equ	0xFDA
  3534                           fsr2l	equ	0xFD9
  3535                           status	equ	0xFD8
  3536                           
  3537 ;; *************** function i2_clearUARTReceiveBuffer *****************
  3538 ;; Defined at:
  3539 ;;		line 176 in file "main.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;  clearUARTRec    2    0[COMRAM] int 
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  1    wreg      void 
  3546 ;; Registers used:
  3547 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;Total ram usage:        2 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; This function calls:
  3560 ;;		Nothing
  3561 ;; This function is called by:
  3562 ;;		_high_ISR
  3563 ;; This function uses a non-reentrant model
  3564 ;;
  3565                           
  3566                           	psect	text20
  3567  001856                     __ptext20:
  3568                           	opt stack 0
  3569  001856                     i2_clearUARTReceiveBuffer:
  3570                           	opt stack 25
  3571                           
  3572                           ;main.c: 177: for(int i = 0; i<1000; i++){
  3573                           
  3574                           ;incstack = 0
  3575  001856  0E00               	movlw	0
  3576  001858  6E02               	movwf	i2clearUARTReceiveBuffer@i+1,c
  3577  00185A  0E00               	movlw	0
  3578  00185C  6E01               	movwf	i2clearUARTReceiveBuffer@i,c
  3579  00185E                     i2l1707:
  3580  00185E  BE02               	btfsc	i2clearUARTReceiveBuffer@i+1,7,c
  3581  001860  D006               	goto	i2l1711
  3582  001862  0EE8               	movlw	232
  3583  001864  5C01               	subwf	i2clearUARTReceiveBuffer@i,w,c
  3584  001866  0E03               	movlw	3
  3585  001868  5802               	subwfb	i2clearUARTReceiveBuffer@i+1,w,c
  3586  00186A  B0D8               	btfsc	status,0,c
  3587  00186C  D00B               	goto	i2l1717
  3588  00186E                     i2l1711:
  3589                           
  3590                           ;main.c: 178: uart_receive_buffer[i] = '\0';
  3591  00186E  0E97               	movlw	low _uart_receive_buffer
  3592  001870  2401               	addwf	i2clearUARTReceiveBuffer@i,w,c
  3593  001872  6ED9               	movwf	fsr2l,c
  3594  001874  0E00               	movlw	high _uart_receive_buffer
  3595  001876  2002               	addwfc	i2clearUARTReceiveBuffer@i+1,w,c
  3596  001878  6EDA               	movwf	fsr2h,c
  3597  00187A  0E00               	movlw	0
  3598  00187C  6EDF               	movwf	indf2,c
  3599  00187E  4A01               	infsnz	i2clearUARTReceiveBuffer@i,f,c
  3600  001880  2A02               	incf	i2clearUARTReceiveBuffer@i+1,f,c
  3601  001882  D7ED               	goto	i2l1707
  3602  001884                     i2l1717:
  3603                           
  3604                           ;main.c: 179: }
  3605                           ;main.c: 180: uart_receive_buffer_index= 0 ;
  3606  001884  0E00               	movlw	0
  3607  001886  6E4B               	movwf	_uart_receive_buffer_index+1,c
  3608  001888  0E00               	movlw	0
  3609  00188A  6E4A               	movwf	_uart_receive_buffer_index,c
  3610  00188C  0012               	return		;funcret
  3611  00188E                     __end_ofi2_clearUARTReceiveBuffer:
  3612                           	opt stack 0
  3613                           pclatu	equ	0xFFB
  3614                           pclath	equ	0xFFA
  3615                           tblptru	equ	0xFF8
  3616                           tblptrh	equ	0xFF7
  3617                           tblptrl	equ	0xFF6
  3618                           tablat	equ	0xFF5
  3619                           prodh	equ	0xFF4
  3620                           prodl	equ	0xFF3
  3621                           intcon	equ	0xFF2
  3622                           postinc0	equ	0xFEE
  3623                           fsr0h	equ	0xFEA
  3624                           fsr0l	equ	0xFE9
  3625                           wreg	equ	0xFE8
  3626                           indf1	equ	0xFE7
  3627                           postdec1	equ	0xFE5
  3628                           fsr1h	equ	0xFE2
  3629                           fsr1l	equ	0xFE1
  3630                           indf2	equ	0xFDF
  3631                           postinc2	equ	0xFDE
  3632                           fsr2h	equ	0xFDA
  3633                           fsr2l	equ	0xFD9
  3634                           status	equ	0xFD8
  3635                           pclatu	equ	0xFFB
  3636                           pclath	equ	0xFFA
  3637                           tblptru	equ	0xFF8
  3638                           tblptrh	equ	0xFF7
  3639                           tblptrl	equ	0xFF6
  3640                           tablat	equ	0xFF5
  3641                           prodh	equ	0xFF4
  3642                           prodl	equ	0xFF3
  3643                           intcon	equ	0xFF2
  3644                           postinc0	equ	0xFEE
  3645                           fsr0h	equ	0xFEA
  3646                           fsr0l	equ	0xFE9
  3647                           wreg	equ	0xFE8
  3648                           indf1	equ	0xFE7
  3649                           postdec1	equ	0xFE5
  3650                           fsr1h	equ	0xFE2
  3651                           fsr1l	equ	0xFE1
  3652                           indf2	equ	0xFDF
  3653                           postinc2	equ	0xFDE
  3654                           fsr2h	equ	0xFDA
  3655                           fsr2l	equ	0xFD9
  3656                           status	equ	0xFD8
  3657                           
  3658                           	psect	rparam
  3659  0000                     pclatu	equ	0xFFB
  3660                           pclath	equ	0xFFA
  3661                           tblptru	equ	0xFF8
  3662                           tblptrh	equ	0xFF7
  3663                           tblptrl	equ	0xFF6
  3664                           tablat	equ	0xFF5
  3665                           prodh	equ	0xFF4
  3666                           prodl	equ	0xFF3
  3667                           intcon	equ	0xFF2
  3668                           postinc0	equ	0xFEE
  3669                           fsr0h	equ	0xFEA
  3670                           fsr0l	equ	0xFE9
  3671                           wreg	equ	0xFE8
  3672                           indf1	equ	0xFE7
  3673                           postdec1	equ	0xFE5
  3674                           fsr1h	equ	0xFE2
  3675                           fsr1l	equ	0xFE1
  3676                           indf2	equ	0xFDF
  3677                           postinc2	equ	0xFDE
  3678                           fsr2h	equ	0xFDA
  3679                           fsr2l	equ	0xFD9
  3680                           status	equ	0xFD8
  3681                           
  3682                           	psect	temp
  3683  00004D                     btemp:
  3684                           	opt stack 0
  3685  00004D                     	ds	1
  3686  0000                     int$flags	set	btemp
  3687                           pclatu	equ	0xFFB
  3688                           pclath	equ	0xFFA
  3689                           tblptru	equ	0xFF8
  3690                           tblptrh	equ	0xFF7
  3691                           tblptrl	equ	0xFF6
  3692                           tablat	equ	0xFF5
  3693                           prodh	equ	0xFF4
  3694                           prodl	equ	0xFF3
  3695                           intcon	equ	0xFF2
  3696                           postinc0	equ	0xFEE
  3697                           fsr0h	equ	0xFEA
  3698                           fsr0l	equ	0xFE9
  3699                           wreg	equ	0xFE8
  3700                           indf1	equ	0xFE7
  3701                           postdec1	equ	0xFE5
  3702                           fsr1h	equ	0xFE2
  3703                           fsr1l	equ	0xFE1
  3704                           indf2	equ	0xFDF
  3705                           postinc2	equ	0xFDE
  3706                           fsr2h	equ	0xFDA
  3707                           fsr2l	equ	0xFD9
  3708                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    130
    Data        25
    BSS         1018
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      76
    BANK0           160     28      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sendUARTMessage@newMessagePointer	PTR unsigned char  size(2) Largest target is 1000
		 -> set_app_key(CODE[51]), set_app_eui(CODE[35]), uart_receive_buffer(BIGRAM[1000]), temp_display_message(BANK0[20]), 

    currentMessagePointer	PTR unsigned char  size(2) Largest target is 1000
		 -> NULL(NULL[0]), set_app_key(CODE[51]), set_app_eui(CODE[35]), uart_receive_buffer(BIGRAM[1000]), 
		 -> temp_display_message(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_makeTempMessage
    _fillInTemp->___awdiv
    ___awdiv->___awmod
    _calculateTemp->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _initLoRa->_delay

Critical Paths under _high_ISR in COMRAM

    _high_ISR->i2_clearUARTReceiveBuffer

Critical Paths under _main in BANK0

    _makeTempMessage->_calculateTemp
    _calculateTemp->___fttol
    ___fttol->___ftmul

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12306
                        _UARTReceive
             _clearUARTReceiveBuffer
                              _delay
                            _initADC
                     _initInterrupts
                           _initLoRa
                          _initUART1
                    _makeTempMessage
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _makeTempMessage                                      1     1      0   11484
                                             58 COMRAM     1     1      0
                      _calculateTemp
                         _fillInTemp
 ---------------------------------------------------------------------------------
 (2) _fillInTemp                                          12    12      0    1513
                                             32 COMRAM    12    12      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     552
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     556
                                             24 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                       11     7      4    9940
                                             17 BANK0     11     7      4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     448
                                             54 COMRAM     4     0      4
                                              6 BANK0     11    11      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3160
                                             45 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3246
                                             30 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2614
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _initUART1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLoRa                                             0     0      0     366
                              _delay
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _sendUARTMessage                                      2     0      2     342
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     5      0      24
                                             18 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearUARTReceiveBuffer                               2     2      0      68
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UARTReceive                                          1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_ISR                                            16    16      0      68
                                              2 COMRAM    16    16      0
           i2_clearUARTReceiveBuffer
 ---------------------------------------------------------------------------------
 (6) i2_clearUARTReceiveBuffer                             2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReceive
   _clearUARTReceiveBuffer
   _delay
   _initADC
   _initInterrupts
   _initLoRa
     _delay
     _sendUARTMessage
   _initUART1
   _makeTempMessage
     _calculateTemp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
     _fillInTemp
       ___awdiv
         ___awmod (ARG)
       ___awmod
   _sendUARTMessage

 _high_ISR (ROOT)
   i2_clearUARTReceiveBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      37       5       34.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     3B      4C       1       80.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      83       6        0.0%
DATA                 0      0     46B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 16 15:03:17 2017

        ?i2_clearUARTReceiveBuffer 0001             _clearUARTReceiveBuffer 181E  
                               l99 0FD6                       ___awdiv@sign 001E  
                              l110 1932                                l102 102A  
                              l446 13FC                                l388 1574  
                     ___awmod@sign 0018                                prod 000FF3  
                              wreg 000FE8                         _TXSTA1bits 000FAD  
                     ___ftdiv@cntr 0028                       ___ftdiv@sign 002D  
                             l2001 1216                               l2021 1772  
                             l2031 16A0                               l1503 167E  
                             l1441 15B8                               l1451 15DA  
                             l1435 15A8                               l1611 10C0  
                             l1447 15CE                               l1463 1600  
                             l1607 10B8                               l1449 15D6  
                             l1627 17A8                               l1467 160E  
                             l1459 15F6                               l1491 1652  
                             l1483 1638                               l1629 17B4  
                             l1821 14F6                               l1573 0FA4  
                             l1911 1280                               l1495 1666  
                             l1487 1646                               l1479 162C  
                             l1591 1032                               l1681 1836  
                             l1833 1542                               l1825 1504  
                             l1905 1254                               l1489 164E  
                             l1585 0FF8                               l1835 1560  
                             l1827 150E                               l1499 1670  
                             l1579 0FE0                               l1677 1826  
                             l1837 156A                               l1829 152C  
                             l1925 12C2                               l1597 1046  
                             l1687 184C                               l1935 12F4  
                             l1599 104C                               l1865 1398  
                             l1929 12D8                               l1955 17FA  
                             l1859 1370                               l1939 130A  
                             l1885 13D6                               l1965 1130  
                             l1983 11B2                               l1993 11E0  
                             l1995 11F0                               l1987 11C6  
                             l1997 11FA                               u1070 0FD6  
                             u1090 102A                               u1421 1238  
                             u1510 1156                               u1441 1264  
                             u1371 1358                               u1515 114C  
                             u1391 1380                               u1491 110E  
                             _main 1688                       ___ftpack@arg 0013  
                     ___ftpack@exp 0016                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004D  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 01B2  
                 fillInTemp@i_1006 0028                   fillInTemp@i_1007 002A  
                     ___ftmul@cntr 0064            __end_of_makeTempMessage 1796  
                     ___param_bank 000010                       ___ftmul@sign 0065  
                     ___fttol@exp1 0070                       ___fttol@lval 006C  
                 ?_sendUARTMessage 0013                       _BAUDCON1bits 000F7E  
                            ?_main 0001                    __end_of___awdiv 1618  
                            _ADRES 000FC3              __end_of_ambient_ascii 0F24  
                  __end_of___awmod 1688                              _DELAY 0F29  
                  __end_of___ftdiv 142E                    __end_of___ftmul 1348  
                  ___awdiv@divisor 001B                    __end_of___fttol 1228  
                            i2l160 00FA                              i2l161 0114  
                            i2l162 012E                              i2l163 0176  
                            i2l158 00E0                              i2l159 0174  
                  ___awdiv@counter 001D                    __end_of_initADC 18BC  
                    ___awtoft@sign 001E                              _delay 1796  
                    ___ftpack@sign 0017                              tablat 000FF5  
                            status 000FD8                    __initialization 16F6  
                     __end_of_main 16F6                             ??_main 003C  
                    ___fttol@sign1 006B                      __activetblptr 000003  
                           ?_delay 0001                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ANCON0 000F48  
                           _ANCON1 000F49                   ___awdiv@dividend 0019  
                 __end_of___awtoft 181E                   __end_of___ftpack 1594  
                           i2l1711 186E                             i2l1707 185E  
                           i2l1717 1884                     __CFG_WDTEN$OFF 000000  
                           i2l1761 009C                             i2l1757 0074  
                           i2l1791 014A                             i2l1777 00D8  
                           _INTCON 000FF2                             _RCREG1 000FAF  
                           _SPBRG1 000FB0                             _TXREG1 000FAE  
                     ?_UARTReceive 0001                     __CFG_XINST$OFF 000000  
                 __end_of_high_ISR 01B2               _temp_display_message 0081  
                 ?_makeTempMessage 0001                          ??___awdiv 001D  
                        ??___awmod 0017                          ??___ftdiv 0025  
                        ??___ftmul 0034                          ??___fttol 0066  
                 __end_of_initLoRa 18DE                             clear_0 16FE  
                           clear_1 1716                   ___awdiv@quotient 001F  
                  ___awmod@divisor 0015                    ___awmod@counter 0017  
                        ??_initADC 0013              ___ftmul@f3_as_product 0061  
            __end_of_set_data_rate 0F11                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8   __end_ofi2_clearUARTReceiveBuffer 188E  
                       __accesstop 0060            __end_of__initialization 173C  
          ?_clearUARTReceiveBuffer 0001                      __end_of_DELAY 0F2D  
                    ___rparam_used 000001                         ___ftdiv@f1 001F  
                       ___ftdiv@f2 0022                         ___ftdiv@f3 0029  
                       ___awtoft@c 001B                         ___ftmul@f1 002E  
                       ___ftmul@f2 0031                         ___fttol@f1 0037  
                   __pcstackCOMRAM 0001                       __pidataBANK0 18FA  
                    __end_of_delay 17E6            __size_of_initInterrupts 0008  
                          ??_delay 0013                         __pbssBANK0 0095  
               __size_of_initUART1 001C     __end_of_clearUARTReceiveBuffer 1856  
            __end_of_getVerCommand 0F1F                          ?___awtoft 001B  
                        ?___ftpack 0013                         _fillInTemp 0F84  
           __size_of_calculateTemp 00B8                 __CFG_OSC$INTOSCPLL 000000  
                          _SPBRGH1 000F7F                          ?_high_ISR 0001  
                        ?_initLoRa 0001               UARTReceive@on_or_off 0013  
         i2_clearUARTReceiveBuffer 1856                            __Hparam 0000  
                          __Lparam 0000               __size_of_UARTReceive 0010  
                          ___awdiv 1594                            ___awmod 1618  
                          ___ftdiv 1348                            ___ftmul 1228  
                          ___fttol 10FA                       __psmallconst 0F00  
                          __pcinit 16F6                         ??___awtoft 001E  
                       ??___ftpack 0018                  __end_of_initUART1 18FA  
                          __ramtop 0F00                            __ptext0 1688  
                          __ptext1 1746                            __ptext2 0F84  
                          __ptext3 1618                            __ptext4 1594  
                          __ptext5 142E                            __ptext6 10FA  
                          __ptext7 1228                            __ptext8 1348  
                          __ptext9 17E6                            _initADC 188E  
                 ___awmod@dividend 0013           __size_of_sendUARTMessage 0012  
                       ??_high_ISR 0003               end_of_initialization 173C  
                       _minus_pipe 0040                         _pipe_ascii 0F24  
                       ??_initLoRa 0018                      _calculateTemp 142E  
                          postdec1 000FE5                     _initInterrupts 1936  
                          postinc0 000FEE                            postinc2 000FDE  
                      ?_fillInTemp 0001          _uart_receive_buffer_index 004A  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                 __CFG_CPUDIV$OSC1 000000                          _TRISAbits 000F92  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                   ?_calculateTemp 0071                        ___ftdiv@exp 002C  
           __end_of_initInterrupts 193E                        ___ftmul@exp 0060  
                    _minus_ambient 003E           __size_of_makeTempMessage 0050  
                    _ambient_ascii 0F1F                      __pbitnvCOMRAM 0260  
              start_initialization 16F6            clearUARTReceiveBuffer@i 0013  
 sendUARTMessage@newMessagePointer 0013                  ??_sendUARTMessage 0015  
              __size_of_fillInTemp 0176                     _currentChannel 0095  
                  ?_initInterrupts 0001                        __pdataBANK0 007C  
               _calculateTemp$1596 0077                  __size_of___awtoft 0038  
                __size_of___ftpack 00AE                        __pbssBIGRAM 0097  
                      __pbssCOMRAM 003C                      __pcstackBANK0 0060  
       ??i2_clearUARTReceiveBuffer 0001                    ??_calculateTemp 0075  
                __size_of_high_ISR 01AA                  __size_of_initLoRa 0022  
                        __pintcode 0008                          _asciiTemp 007C  
                         ?___awdiv 0019                           ?___awmod 0013  
                         ?___ftdiv 001F                           ?___ftmul 002E  
                         ?___fttol 0037                           ?_initADC 0001  
                      __smallconst 0F00                      _set_data_rate 0F01  
                        _initUART1 18DE                     __size_of_delay 0050  
                ??_makeTempMessage 003B                          delay@time 0014  
                    ??_UARTReceive 0013                           _PIE1bits 000F9D  
                         i2u122_40 0068                           i2u122_47 005E  
                         i2u124_40 0096                           i2u124_47 008C  
            _currentMessagePointer 003C                           _PIR1bits 000F9E  
                         _RCONbits 000FD0                          _temp_pipe 0048  
                        _plus_pipe 0044                       ??_fillInTemp 0021  
                       _ADCON0bits 000FC2                         ?_initUART1 0001  
              _uart_receive_buffer 0097                  __CFG_CFGPLLEN$OFF 000000  
         ??_clearUARTReceiveBuffer 0013                     fillInTemp@temp 002B  
                        copy_data0 1730         fillInTemp@pipe_or_ambience 0025  
               __end_of_fillInTemp 10FA                           __Hrparam 0000  
                         __Lrparam 0000                      _getVerCommand 0F11  
              __end_of_UARTReceive 1936                __end_of_set_app_eui 0F83  
              __end_of_set_app_key 0F60                   __size_of___awdiv 0084  
                 __size_of___awmod 0070                   __size_of___ftdiv 00E6  
                 __size_of___ftmul 0120                   __size_of___fttol 012E  
                         ___awtoft 17E6                           ___ftpack 14E6  
                  _sendUARTMessage 1914                   __size_of_initADC 002E  
                         __ptext10 14E6                           __ptext11 18DE  
                         __ptext20 1856                           __ptext12 18BC  
                         __ptext13 1914                           __ptext14 1796  
                         __ptext15 1936                           __ptext16 188E  
                         __ptext17 181E                           __ptext18 1926  
                         _high_ISR 0008                      _isCommandSent 0260  
                 ??_initInterrupts 0013                           _initLoRa 18BC  
                    __size_of_main 006E                           int$flags 004D  
   makeTempMessage@pipe_or_ambient 003B                       _temp_ambient 0046  
               __end_of_pipe_ascii 0F29                        ??_initUART1 0013  
  __size_of_clearUARTReceiveBuffer 0038                           intlevel2 0000  
               calculateTemp@minus 0073                        _UARTReceive 1926  
                       _RCSTA1bits 000FAC                        _set_app_eui 0F60  
                      _set_app_key 0F2D                         _OSCCONbits 000FD3  
        i2clearUARTReceiveBuffer@i 0001            __end_of_sendUARTMessage 1926  
                     _plus_ambient 0042                    _makeTempMessage 1746  
                calculateTemp@temp 007A                  calculateTemp@plus 0071  
                      fillInTemp@i 0026              __end_of_calculateTemp 14E6  
__size_ofi2_clearUARTReceiveBuffer 0038  
