

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 16 17:18:44 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18LF27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	bitnvCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    14                           	psect	text0,global,reloc=2,class=CODE,delta=1
    15                           	psect	text1,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	text5,global,reloc=2,class=CODE,delta=1
    20                           	psect	text6,global,reloc=2,class=CODE,delta=1
    21                           	psect	text7,global,reloc=2,class=CODE,delta=1
    22                           	psect	text8,global,reloc=2,class=CODE,delta=1
    23                           	psect	text9,global,reloc=2,class=CODE,delta=1
    24                           	psect	text10,global,reloc=2,class=CODE,delta=1
    25                           	psect	text11,global,reloc=2,class=CODE,delta=1
    26                           	psect	text12,global,reloc=2,class=CODE,delta=1
    27                           	psect	text13,global,reloc=2,class=CODE,delta=1
    28                           	psect	text14,global,reloc=2,class=CODE,delta=1
    29                           	psect	text15,global,reloc=2,class=CODE,delta=1
    30                           	psect	text16,global,reloc=2,class=CODE,delta=1
    31                           	psect	text17,global,reloc=2,class=CODE,delta=1
    32                           	psect	text18,global,reloc=2,class=CODE,delta=1
    33                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    34                           	psect	text20,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    37                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    38  0000                     
    39                           	psect	idataBANK0
    40  001930                     __pidataBANK0:
    41                           	opt stack 0
    42                           
    43                           ;initializer for _asciiTemp
    44  001930  20                 	db	32
    45  001931  20                 	db	32
    46  001932  20                 	db	32
    47  001933  20                 	db	32
    48  001934  20                 	db	32
    49                           
    50                           ;initializer for _temp_display_message
    51  001935  50                 	db	80
    52  001936  69                 	db	105
    53  001937  70                 	db	112
    54  001938  65                 	db	101
    55  001939  20                 	db	32
    56  00193A  74                 	db	116
    57  00193B  65                 	db	101
    58  00193C  6D                 	db	109
    59  00193D  70                 	db	112
    60  00193E  20                 	db	32
    61  00193F  3D                 	db	61
    62  001940  20                 	db	32
    63  001941  20                 	db	32
    64  001942  20                 	db	32
    65  001943  20                 	db	32
    66  001944  20                 	db	32
    67  001945  20                 	db	32
    68  001946  0D                 	db	13
    69  001947  0A                 	db	10
    70  001948  00                 	db	0
    71                           
    72                           	psect	smallconst
    73  000F00                     __psmallconst:
    74                           	opt stack 0
    75  000F00  00                 	db	0
    76  000F01                     _set_data_rate:
    77                           	opt stack 0
    78  000F01  6D                 	db	109
    79  000F02  61                 	db	97
    80  000F03  63                 	db	99
    81  000F04  20                 	db	32
    82  000F05  73                 	db	115
    83  000F06  65                 	db	101
    84  000F07  74                 	db	116
    85  000F08  20                 	db	32
    86  000F09  64                 	db	100
    87  000F0A  72                 	db	114
    88  000F0B  20                 	db	32
    89  000F0C  78                 	db	120
    90  000F0D  0D                 	db	13
    91  000F0E  0A                 	db	10
    92  000F0F  00                 	db	0
    93  000F10                     __end_of_set_data_rate:
    94                           	opt stack 0
    95  000F10                     _getVerCommand:
    96                           	opt stack 0
    97  000F10  73                 	db	115
    98  000F11  79                 	db	121
    99  000F12  73                 	db	115
   100  000F13  20                 	db	32
   101  000F14  67                 	db	103
   102  000F15  65                 	db	101
   103  000F16  74                 	db	116
   104  000F17  20                 	db	32
   105  000F18  76                 	db	118
   106  000F19  65                 	db	101
   107  000F1A  72                 	db	114
   108  000F1B  0D                 	db	13
   109  000F1C  0A                 	db	10
   110  000F1D  00                 	db	0
   111  000F1E                     __end_of_getVerCommand:
   112                           	opt stack 0
   113  000F1E                     _ambient_ascii:
   114                           	opt stack 0
   115  000F1E  41                 	db	65
   116  000F1F  6D                 	db	109
   117  000F20  62                 	db	98
   118  000F21  2E                 	db	46
   119  000F22  00                 	db	0
   120  000F23                     __end_of_ambient_ascii:
   121                           	opt stack 0
   122  000F23                     _pipe_ascii:
   123                           	opt stack 0
   124  000F23  50                 	db	80
   125  000F24  69                 	db	105
   126  000F25  70                 	db	112
   127  000F26  65                 	db	101
   128  000F27  00                 	db	0
   129  000F28                     __end_of_pipe_ascii:
   130                           	opt stack 0
   131  000F28                     _DELAY:
   132                           	opt stack 0
   133  000F28  D4C0               	dw	54464
   134  000F2A  0001               	dw	1
   135  000F2C                     __end_of_DELAY:
   136                           	opt stack 0
   137  000F2C                     _set_app_key:
   138                           	opt stack 0
   139  000F2C  6D                 	db	109
   140  000F2D  61                 	db	97
   141  000F2E  63                 	db	99
   142  000F2F  20                 	db	32
   143  000F30  73                 	db	115
   144  000F31  65                 	db	101
   145  000F32  74                 	db	116
   146  000F33  20                 	db	32
   147  000F34  61                 	db	97
   148  000F35  70                 	db	112
   149  000F36  70                 	db	112
   150  000F37  6B                 	db	107
   151  000F38  65                 	db	101
   152  000F39  79                 	db	121
   153  000F3A  20                 	db	32
   154  000F3B  32                 	db	50
   155  000F3C  45                 	db	69
   156  000F3D  31                 	db	49
   157  000F3E  35                 	db	53
   158  000F3F  41                 	db	65
   159  000F40  46                 	db	70
   160  000F41  43                 	db	67
   161  000F42  39                 	db	57
   162  000F43  34                 	db	52
   163  000F44  41                 	db	65
   164  000F45  37                 	db	55
   165  000F46  45                 	db	69
   166  000F47  46                 	db	70
   167  000F48  36                 	db	54
   168  000F49  39                 	db	57
   169  000F4A  41                 	db	65
   170  000F4B  45                 	db	69
   171  000F4C  36                 	db	54
   172  000F4D  31                 	db	49
   173  000F4E  41                 	db	65
   174  000F4F  38                 	db	56
   175  000F50  31                 	db	49
   176  000F51  34                 	db	52
   177  000F52  37                 	db	55
   178  000F53  33                 	db	51
   179  000F54  37                 	db	55
   180  000F55  43                 	db	67
   181  000F56  33                 	db	51
   182  000F57  38                 	db	56
   183  000F58  36                 	db	54
   184  000F59  39                 	db	57
   185  000F5A  39                 	db	57
   186  000F5B  0D                 	db	13
   187  000F5C  0A                 	db	10
   188  000F5D  00                 	db	0
   189  000F5E                     __end_of_set_app_key:
   190                           	opt stack 0
   191  000F5E                     _set_app_eui:
   192                           	opt stack 0
   193  000F5E  6D                 	db	109
   194  000F5F  61                 	db	97
   195  000F60  63                 	db	99
   196  000F61  20                 	db	32
   197  000F62  73                 	db	115
   198  000F63  65                 	db	101
   199  000F64  74                 	db	116
   200  000F65  20                 	db	32
   201  000F66  61                 	db	97
   202  000F67  70                 	db	112
   203  000F68  70                 	db	112
   204  000F69  65                 	db	101
   205  000F6A  75                 	db	117
   206  000F6B  69                 	db	105
   207  000F6C  20                 	db	32
   208  000F6D  37                 	db	55
   209  000F6E  34                 	db	52
   210  000F6F  43                 	db	67
   211  000F70  35                 	db	53
   212  000F71  34                 	db	52
   213  000F72  32                 	db	50
   214  000F73  34                 	db	52
   215  000F74  35                 	db	53
   216  000F75  33                 	db	51
   217  000F76  38                 	db	56
   218  000F77  35                 	db	53
   219  000F78  37                 	db	55
   220  000F79  39                 	db	57
   221  000F7A  37                 	db	55
   222  000F7B  34                 	db	52
   223  000F7C  41                 	db	65
   224  000F7D  0D                 	db	13
   225  000F7E  0A                 	db	10
   226  000F7F  00                 	db	0
   227  000F80                     __end_of_set_app_eui:
   228                           	opt stack 0
   229  000F80                     _set_dev_eui:
   230                           	opt stack 0
   231  000F80  6D                 	db	109
   232  000F81  61                 	db	97
   233  000F82  63                 	db	99
   234  000F83  20                 	db	32
   235  000F84  73                 	db	115
   236  000F85  65                 	db	101
   237  000F86  74                 	db	116
   238  000F87  20                 	db	32
   239  000F88  64                 	db	100
   240  000F89  65                 	db	101
   241  000F8A  76                 	db	118
   242  000F8B  65                 	db	101
   243  000F8C  75                 	db	117
   244  000F8D  69                 	db	105
   245  000F8E  20                 	db	32
   246  000F8F  30                 	db	48
   247  000F90  30                 	db	48
   248  000F91  30                 	db	48
   249  000F92  34                 	db	52
   250  000F93  41                 	db	65
   251  000F94  33                 	db	51
   252  000F95  30                 	db	48
   253  000F96  42                 	db	66
   254  000F97  30                 	db	48
   255  000F98  30                 	db	48
   256  000F99  31                 	db	49
   257  000F9A  41                 	db	65
   258  000F9B  43                 	db	67
   259  000F9C  46                 	db	70
   260  000F9D  37                 	db	55
   261  000F9E  44                 	db	68
   262  000F9F  0D                 	db	13
   263  000FA0  0A                 	db	10
   264  000FA1  00                 	db	0
   265  000FA2                     __end_of_set_dev_eui:
   266                           	opt stack 0
   267  000FA2                     _join_network:
   268                           	opt stack 0
   269  000FA2  6D                 	db	109
   270  000FA3  61                 	db	97
   271  000FA4  63                 	db	99
   272  000FA5  20                 	db	32
   273  000FA6  6A                 	db	106
   274  000FA7  6F                 	db	111
   275  000FA8  69                 	db	105
   276  000FA9  6E                 	db	110
   277  000FAA  20                 	db	32
   278  000FAB  6F                 	db	111
   279  000FAC  74                 	db	116
   280  000FAD  61                 	db	97
   281  000FAE  61                 	db	97
   282  000FAF  0D                 	db	13
   283  000FB0  0A                 	db	10
   284  000FB1  00                 	db	0
   285  000FB2                     __end_of_join_network:
   286                           	opt stack 0
   287  000FB2  00                 	db	0	; dummy byte at the end
   288  0000                     
   289                           	psect	bitnvCOMRAM
   290  000260                     __pbitnvCOMRAM:
   291                           	opt stack 0
   292  000260                     _isCommandSent:
   293                           	opt stack 0
   294  000260                     	ds	1
   295  0000                     _ANCON0	set	3912
   296  0000                     _ANCON1	set	3913
   297  0000                     _ADRES	set	4035
   298  0000                     _ADCON0	set	4034
   299  0000                     _ADCON0bits	set	4034
   300  0000                     _ADCON1	set	4033
   301  0000                     _BAUDCON1bits	set	3966
   302  0000                     _INTCON	set	4082
   303  0000                     _OSCCONbits	set	4051
   304  0000                     _PIE1bits	set	3997
   305  0000                     _PIR1bits	set	3998
   306  0000                     _PORTAbits	set	3968
   307  0000                     _PORTBbits	set	3969
   308  0000                     _RCONbits	set	4048
   309  0000                     _RCREG1	set	4015
   310  0000                     _RCSTA1bits	set	4012
   311  0000                     _SPBRG1	set	4016
   312  0000                     _SPBRGH1	set	3967
   313  0000                     _TRISAbits	set	3986
   314  0000                     _TRISBbits	set	3987
   315  0000                     _TRISCbits	set	3988
   316  0000                     _TXREG1	set	4014
   317  0000                     _TXSTA1bits	set	4013
   318                           
   319                           ; #config settings
   320  0000                     
   321                           	psect	cinit
   322  0017BA                     __pcinit:
   323                           	opt stack 0
   324  0017BA                     start_initialization:
   325                           	opt stack 0
   326  0017BA                     __initialization:
   327                           	opt stack 0
   328                           
   329                           ; Clear objects allocated to BANK0 (102 bytes)
   330  0017BA  EE00  F060         	lfsr	0,__pbssBANK0
   331  0017BE  0E66               	movlw	102
   332  0017C0                     clear_0:
   333  0017C0  6AEE               	clrf	postinc0,c
   334  0017C2  06E8               	decf	wreg,f,c
   335  0017C4  E1FD               	bnz	clear_0
   336                           
   337                           ; Clear objects allocated to COMRAM (16 bytes)
   338  0017C6  EE00  F03C         	lfsr	0,__pbssCOMRAM
   339  0017CA  0E10               	movlw	16
   340  0017CC                     clear_1:
   341  0017CC  6AEE               	clrf	postinc0,c
   342  0017CE  06E8               	decf	wreg,f,c
   343  0017D0  E1FD               	bnz	clear_1
   344                           
   345                           ; Initialize objects allocated to BANK0 (25 bytes)
   346                           ; load TBLPTR registers with __pidataBANK0
   347  0017D2  0E30               	movlw	low __pidataBANK0
   348  0017D4  6EF6               	movwf	tblptrl,c
   349  0017D6  0E19               	movlw	high __pidataBANK0
   350  0017D8  6EF7               	movwf	tblptrh,c
   351  0017DA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   352  0017DC  6EF8               	movwf	tblptru,c
   353  0017DE  EE00  F0E2         	lfsr	0,__pdataBANK0
   354  0017E2  EE10 F019          	lfsr	1,25
   355  0017E6                     copy_data0:
   356  0017E6  0009               	tblrd		*+
   357  0017E8  CFF5 FFEE          	movff	tablat,postinc0
   358  0017EC  50E5               	movf	postdec1,w,c
   359  0017EE  50E1               	movf	fsr1l,w,c
   360  0017F0  E1FA               	bnz	copy_data0
   361  0017F2                     end_of_initialization:
   362                           	opt stack 0
   363  0017F2                     __end_of__initialization:
   364                           	opt stack 0
   365  0017F2  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   366  0017F4  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   367  0017F6  0100               	movlb	0
   368  0017F8  EF5C  F00B         	goto	_main	;jump to C main() function
   369                           tblptru	equ	0xFF8
   370                           tblptrh	equ	0xFF7
   371                           tblptrl	equ	0xFF6
   372                           tablat	equ	0xFF5
   373                           postinc0	equ	0xFEE
   374                           wreg	equ	0xFE8
   375                           postdec1	equ	0xFE5
   376                           fsr1l	equ	0xFE1
   377                           
   378                           	psect	bssCOMRAM
   379  00003C                     __pbssCOMRAM:
   380                           	opt stack 0
   381  00003C                     _currentMessagePointer:
   382                           	opt stack 0
   383  00003C                     	ds	2
   384  00003E                     _minus_ambient:
   385                           	opt stack 0
   386  00003E                     	ds	2
   387  000040                     _minus_pipe:
   388                           	opt stack 0
   389  000040                     	ds	2
   390  000042                     _plus_ambient:
   391                           	opt stack 0
   392  000042                     	ds	2
   393  000044                     _plus_pipe:
   394                           	opt stack 0
   395  000044                     	ds	2
   396  000046                     _temp_ambient:
   397                           	opt stack 0
   398  000046                     	ds	2
   399  000048                     _temp_pipe:
   400                           	opt stack 0
   401  000048                     	ds	2
   402  00004A                     _uart_receive_buffer_index:
   403                           	opt stack 0
   404  00004A                     	ds	2
   405                           tblptru	equ	0xFF8
   406                           tblptrh	equ	0xFF7
   407                           tblptrl	equ	0xFF6
   408                           tablat	equ	0xFF5
   409                           postinc0	equ	0xFEE
   410                           wreg	equ	0xFE8
   411                           postdec1	equ	0xFE5
   412                           fsr1l	equ	0xFE1
   413                           
   414                           	psect	bssBANK0
   415  000060                     __pbssBANK0:
   416                           	opt stack 0
   417  000060                     _uart_receive_buffer:
   418                           	opt stack 0
   419  000060                     	ds	100
   420  0000C4                     _currentChannel:
   421                           	opt stack 0
   422  0000C4                     	ds	2
   423                           tblptru	equ	0xFF8
   424                           tblptrh	equ	0xFF7
   425                           tblptrl	equ	0xFF6
   426                           tablat	equ	0xFF5
   427                           postinc0	equ	0xFEE
   428                           wreg	equ	0xFE8
   429                           postdec1	equ	0xFE5
   430                           fsr1l	equ	0xFE1
   431                           
   432                           	psect	dataBANK0
   433  0000E2                     __pdataBANK0:
   434                           	opt stack 0
   435  0000E2                     _asciiTemp:
   436                           	opt stack 0
   437  0000E2                     	ds	5
   438  0000E7                     _temp_display_message:
   439                           	opt stack 0
   440  0000E7                     	ds	20
   441                           tblptru	equ	0xFF8
   442                           tblptrh	equ	0xFF7
   443                           tblptrl	equ	0xFF6
   444                           tablat	equ	0xFF5
   445                           postinc0	equ	0xFEE
   446                           wreg	equ	0xFE8
   447                           postdec1	equ	0xFE5
   448                           fsr1l	equ	0xFE1
   449                           
   450                           	psect	cstackBANK0
   451  0000C6                     __pcstackBANK0:
   452                           	opt stack 0
   453  0000C6                     ___ftmul@exp:
   454                           	opt stack 0
   455                           
   456                           ; 1 bytes @ 0x0
   457  0000C6                     	ds	1
   458  0000C7                     ___ftmul@f3_as_product:
   459                           	opt stack 0
   460                           
   461                           ; 3 bytes @ 0x1
   462  0000C7                     	ds	3
   463  0000CA                     ___ftmul@cntr:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x4
   467  0000CA                     	ds	1
   468  0000CB                     ___ftmul@sign:
   469                           	opt stack 0
   470                           
   471                           ; 1 bytes @ 0x5
   472  0000CB                     	ds	1
   473  0000CC                     ??___fttol:
   474                           
   475                           ; 1 bytes @ 0x6
   476  0000CC                     	ds	5
   477  0000D1                     ___fttol@sign1:
   478                           	opt stack 0
   479                           
   480                           ; 1 bytes @ 0xB
   481  0000D1                     	ds	1
   482  0000D2                     ___fttol@lval:
   483                           	opt stack 0
   484                           
   485                           ; 4 bytes @ 0xC
   486  0000D2                     	ds	4
   487  0000D6                     ___fttol@exp1:
   488                           	opt stack 0
   489                           
   490                           ; 1 bytes @ 0x10
   491  0000D6                     	ds	1
   492  0000D7                     ?_calculateTemp:
   493                           	opt stack 0
   494  0000D7                     calculateTemp@plus:
   495                           	opt stack 0
   496                           
   497                           ; 2 bytes @ 0x11
   498  0000D7                     	ds	2
   499  0000D9                     calculateTemp@minus:
   500                           	opt stack 0
   501                           
   502                           ; 2 bytes @ 0x13
   503  0000D9                     	ds	2
   504  0000DB                     ??_calculateTemp:
   505                           
   506                           ; 1 bytes @ 0x15
   507  0000DB                     	ds	2
   508  0000DD                     _calculateTemp$1701:
   509                           	opt stack 0
   510                           
   511                           ; 3 bytes @ 0x17
   512  0000DD                     	ds	3
   513  0000E0                     calculateTemp@temp:
   514                           	opt stack 0
   515                           
   516                           ; 2 bytes @ 0x1A
   517  0000E0                     	ds	2
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	cstackCOMRAM
   528  000001                     __pcstackCOMRAM:
   529                           	opt stack 0
   530  000001                     i2clearUARTReceiveBuffer@i:
   531                           	opt stack 0
   532                           
   533                           ; 2 bytes @ 0x0
   534  000001                     	ds	2
   535  000003                     ??_high_ISR:
   536                           
   537                           ; 1 bytes @ 0x2
   538  000003                     	ds	16
   539  000013                     ??_delay:
   540  000013                     ?___awmod:
   541                           	opt stack 0
   542  000013                     ?___ftpack:
   543                           	opt stack 0
   544  000013                     UARTReceive@on_or_off:
   545                           	opt stack 0
   546  000013                     sendUARTMessage@newMessagePointer:
   547                           	opt stack 0
   548  000013                     clearUARTReceiveBuffer@i:
   549                           	opt stack 0
   550  000013                     ___awmod@dividend:
   551                           	opt stack 0
   552  000013                     ___ftpack@arg:
   553                           	opt stack 0
   554                           
   555                           ; 3 bytes @ 0x12
   556  000013                     	ds	1
   557  000014                     delay@time:
   558                           	opt stack 0
   559                           
   560                           ; 4 bytes @ 0x13
   561  000014                     	ds	1
   562  000015                     ___awmod@divisor:
   563                           	opt stack 0
   564                           
   565                           ; 2 bytes @ 0x14
   566  000015                     	ds	1
   567  000016                     ___ftpack@exp:
   568                           	opt stack 0
   569                           
   570                           ; 1 bytes @ 0x15
   571  000016                     	ds	1
   572  000017                     ___awmod@counter:
   573                           	opt stack 0
   574  000017                     ___ftpack@sign:
   575                           	opt stack 0
   576                           
   577                           ; 1 bytes @ 0x16
   578  000017                     	ds	1
   579  000018                     ??___ftpack:
   580  000018                     ___awmod@sign:
   581                           	opt stack 0
   582                           
   583                           ; 1 bytes @ 0x17
   584  000018                     	ds	1
   585  000019                     ?___awdiv:
   586                           	opt stack 0
   587  000019                     ___awdiv@dividend:
   588                           	opt stack 0
   589                           
   590                           ; 2 bytes @ 0x18
   591  000019                     	ds	2
   592  00001B                     ?___awtoft:
   593                           	opt stack 0
   594  00001B                     ___awdiv@divisor:
   595                           	opt stack 0
   596  00001B                     ___awtoft@c:
   597                           	opt stack 0
   598                           
   599                           ; 2 bytes @ 0x1A
   600  00001B                     	ds	2
   601  00001D                     ___awdiv@counter:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x1C
   605  00001D                     	ds	1
   606  00001E                     ___awdiv@sign:
   607                           	opt stack 0
   608  00001E                     ___awtoft@sign:
   609                           	opt stack 0
   610                           
   611                           ; 1 bytes @ 0x1D
   612  00001E                     	ds	1
   613  00001F                     ?___ftdiv:
   614                           	opt stack 0
   615  00001F                     ___awdiv@quotient:
   616                           	opt stack 0
   617  00001F                     ___ftdiv@f1:
   618                           	opt stack 0
   619                           
   620                           ; 3 bytes @ 0x1E
   621  00001F                     	ds	2
   622  000021                     ??_fillInTemp:
   623                           
   624                           ; 1 bytes @ 0x20
   625  000021                     	ds	1
   626  000022                     ___ftdiv@f2:
   627                           	opt stack 0
   628                           
   629                           ; 3 bytes @ 0x21
   630  000022                     	ds	3
   631  000025                     ??___ftdiv:
   632  000025                     fillInTemp@pipe_or_ambience:
   633                           	opt stack 0
   634                           
   635                           ; 1 bytes @ 0x24
   636  000025                     	ds	1
   637  000026                     fillInTemp@i:
   638                           	opt stack 0
   639                           
   640                           ; 2 bytes @ 0x25
   641  000026                     	ds	2
   642  000028                     ___ftdiv@cntr:
   643                           	opt stack 0
   644  000028                     fillInTemp@i_836:
   645                           	opt stack 0
   646                           
   647                           ; 2 bytes @ 0x27
   648  000028                     	ds	1
   649  000029                     ___ftdiv@f3:
   650                           	opt stack 0
   651                           
   652                           ; 3 bytes @ 0x28
   653  000029                     	ds	1
   654  00002A                     fillInTemp@i_837:
   655                           	opt stack 0
   656                           
   657                           ; 1 bytes @ 0x29
   658  00002A                     	ds	1
   659  00002B                     fillInTemp@temp:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x2A
   663  00002B                     	ds	1
   664  00002C                     ___ftdiv@exp:
   665                           	opt stack 0
   666                           
   667                           ; 1 bytes @ 0x2B
   668  00002C                     	ds	1
   669  00002D                     ___ftdiv@sign:
   670                           	opt stack 0
   671                           
   672                           ; 1 bytes @ 0x2C
   673  00002D                     	ds	1
   674  00002E                     ?___ftmul:
   675                           	opt stack 0
   676  00002E                     ___ftmul@f1:
   677                           	opt stack 0
   678                           
   679                           ; 3 bytes @ 0x2D
   680  00002E                     	ds	3
   681  000031                     ___ftmul@f2:
   682                           	opt stack 0
   683                           
   684                           ; 3 bytes @ 0x30
   685  000031                     	ds	3
   686  000034                     ??___ftmul:
   687                           
   688                           ; 1 bytes @ 0x33
   689  000034                     	ds	3
   690  000037                     ?___fttol:
   691                           	opt stack 0
   692  000037                     ___fttol@f1:
   693                           	opt stack 0
   694                           
   695                           ; 3 bytes @ 0x36
   696  000037                     	ds	4
   697  00003B                     makeTempMessage@pipe_or_ambient:
   698                           	opt stack 0
   699                           
   700                           ; 1 bytes @ 0x3A
   701  00003B                     	ds	1
   702  00003C                     tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           postdec1	equ	0xFE5
   709                           fsr1l	equ	0xFE1
   710                           
   711                           ; 1 bytes @ 0x3B
   712 ;;
   713 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   714 ;;
   715 ;; *************** function _main *****************
   716 ;; Defined at:
   717 ;;		line 186 in file "main.c"
   718 ;; Parameters:    Size  Location     Type
   719 ;;		None
   720 ;; Auto vars:     Size  Location     Type
   721 ;;		None
   722 ;; Return value:  Size  Location     Type
   723 ;;                  1    wreg      void 
   724 ;; Registers used:
   725 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   726 ;; Tracked objects:
   727 ;;		On entry : 0/0
   728 ;;		On exit  : 0/0
   729 ;;		Unchanged: 0/0
   730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   731 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   734 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   735 ;;Total ram usage:        0 bytes
   736 ;; Hardware stack levels required when called:    6
   737 ;; This function calls:
   738 ;;		_UARTReceive
   739 ;;		_clearUARTReceiveBuffer
   740 ;;		_delay
   741 ;;		_initADC
   742 ;;		_initInterrupts
   743 ;;		_initLoRa
   744 ;;		_initUART1
   745 ;;		_makeTempMessage
   746 ;;		_sendUARTMessage
   747 ;; This function is called by:
   748 ;;		Startup code after reset
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text0
   753  0016B8                     __ptext0:
   754                           	opt stack 0
   755  0016B8                     _main:
   756                           	opt stack 25
   757                           
   758                           ;main.c: 188: OSCCONbits.IRCF0 = 1;
   759                           
   760                           ;incstack = 0
   761  0016B8  88D3               	bsf	4051,4,c	;volatile
   762                           
   763                           ;main.c: 189: OSCCONbits.SCS0 = 1;
   764  0016BA  80D3               	bsf	4051,0,c	;volatile
   765                           
   766                           ;main.c: 190: OSCCONbits.SCS1 = 1;
   767  0016BC  82D3               	bsf	4051,1,c	;volatile
   768                           
   769                           ;main.c: 192: isCommandSent = 1;
   770  0016BE  804C               	bsf	_isCommandSent/(0+8),_isCommandSent& (0+7),c
   771                           
   772                           ;main.c: 193: initUART1();
   773  0016C0  EC8A  F00C         	call	_initUART1	;wreg free
   774                           
   775                           ;main.c: 194: initADC();
   776  0016C4  EC73  F00C         	call	_initADC	;wreg free
   777                           
   778                           ;main.c: 195: initInterrupts();
   779  0016C8  ECB6  F00C         	call	_initInterrupts	;wreg free
   780                           
   781                           ;main.c: 196: clearUARTReceiveBuffer();
   782  0016CC  EC3B  F00C         	call	_clearUARTReceiveBuffer	;wreg free
   783  0016D0                     l2059:
   784                           
   785                           ;main.c: 198: UARTReceive(1);
   786  0016D0  0E01               	movlw	1
   787  0016D2  ECAE  F00C         	call	_UARTReceive
   788                           
   789                           ;main.c: 199: initLoRa();
   790  0016D6  ECFE  F00B         	call	_initLoRa	;wreg free
   791                           
   792                           ;main.c: 200: UARTReceive(0);
   793  0016DA  0E00               	movlw	0
   794  0016DC  ECAE  F00C         	call	_UARTReceive
   795                           
   796                           ;main.c: 202: delay();
   797  0016E0  ECB5  F00B         	call	_delay	;wreg free
   798                           
   799                           ;main.c: 203: clearUARTReceiveBuffer();
   800  0016E4  EC3B  F00C         	call	_clearUARTReceiveBuffer	;wreg free
   801                           
   802                           ;main.c: 204: delay();
   803  0016E8  ECB5  F00B         	call	_delay	;wreg free
   804                           
   805                           ;main.c: 206: makeTempMessage(0);
   806  0016EC  0E00               	movlw	0
   807  0016EE  EC8D  F00B         	call	_makeTempMessage
   808                           
   809                           ;main.c: 207: sendUARTMessage(temp_display_message);
   810  0016F2  0EE7               	movlw	low _temp_display_message
   811  0016F4  6E13               	movwf	sendUARTMessage@newMessagePointer,c
   812  0016F6  0E00               	movlw	high _temp_display_message
   813  0016F8  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
   814  0016FA  ECA5  F00C         	call	_sendUARTMessage	;wreg free
   815                           
   816                           ;main.c: 208: delay();
   817  0016FE  ECB5  F00B         	call	_delay	;wreg free
   818                           
   819                           ;main.c: 210: makeTempMessage(1);
   820  001702  0E01               	movlw	1
   821  001704  EC8D  F00B         	call	_makeTempMessage
   822                           
   823                           ;main.c: 211: sendUARTMessage(temp_display_message);
   824  001708  0EE7               	movlw	low _temp_display_message
   825  00170A  6E13               	movwf	sendUARTMessage@newMessagePointer,c
   826  00170C  0E00               	movlw	high _temp_display_message
   827  00170E  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
   828  001710  ECA5  F00C         	call	_sendUARTMessage	;wreg free
   829                           
   830                           ;main.c: 212: delay();
   831  001714  ECB5  F00B         	call	_delay	;wreg free
   832  001718  D7DB               	goto	l2059
   833  00171A                     __end_of_main:
   834                           	opt stack 0
   835                           tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           postinc0	equ	0xFEE
   840                           wreg	equ	0xFE8
   841                           postdec1	equ	0xFE5
   842                           fsr1l	equ	0xFE1
   843                           
   844 ;; *************** function _makeTempMessage *****************
   845 ;; Defined at:
   846 ;;		line 173 in file "main.c"
   847 ;; Parameters:    Size  Location     Type
   848 ;;  pipe_or_ambi    1    wreg     unsigned char 
   849 ;; Auto vars:     Size  Location     Type
   850 ;;  pipe_or_ambi    1   58[COMRAM] unsigned char 
   851 ;; Return value:  Size  Location     Type
   852 ;;                  1    wreg      void 
   853 ;; Registers used:
   854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   855 ;; Tracked objects:
   856 ;;		On entry : 0/0
   857 ;;		On exit  : 0/0
   858 ;;		Unchanged: 0/0
   859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   860 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   862 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   863 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   864 ;;Total ram usage:        1 bytes
   865 ;; Hardware stack levels used:    1
   866 ;; Hardware stack levels required when called:    5
   867 ;; This function calls:
   868 ;;		_calculateTemp
   869 ;;		_fillInTemp
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           	psect	text1
   876  00171A                     __ptext1:
   877                           	opt stack 0
   878  00171A                     _makeTempMessage:
   879                           	opt stack 25
   880                           
   881                           ;incstack = 0
   882                           ;makeTempMessage@pipe_or_ambient stored from wreg
   883  00171A  6E3B               	movwf	makeTempMessage@pipe_or_ambient,c
   884                           
   885                           ;main.c: 174: if(pipe_or_ambient == 0){
   886  00171C  503B               	movf	makeTempMessage@pipe_or_ambient,w,c
   887  00171E  A4D8               	btfss	status,2,c
   888  001720  D012               	goto	l2049
   889                           
   890                           ;main.c: 175: temp_pipe = calculateTemp(plus_pipe, minus_pipe);
   891  001722  C044  F0D7         	movff	_plus_pipe,calculateTemp@plus
   892  001726  C045  F0D8         	movff	_plus_pipe+1,calculateTemp@plus+1
   893  00172A  C040  F0D9         	movff	_minus_pipe,calculateTemp@minus
   894  00172E  C041  F0DA         	movff	_minus_pipe+1,calculateTemp@minus+1
   895  001732  EC2F  F00A         	call	_calculateTemp	;wreg free
   896  001736  C0D7  F048         	movff	?_calculateTemp,_temp_pipe
   897  00173A  C0D8  F049         	movff	?_calculateTemp+1,_temp_pipe+1
   898                           
   899                           ;main.c: 176: fillInTemp(0);
   900  00173E  0E00               	movlw	0
   901  001740  ECDA  F007         	call	_fillInTemp
   902                           
   903                           ;main.c: 177: }
   904  001744  0012               	return	
   905  001746                     l2049:
   906                           
   907                           ;main.c: 178: else{
   908                           ;main.c: 179: temp_ambient = calculateTemp(plus_ambient, minus_ambient);
   909  001746  C042  F0D7         	movff	_plus_ambient,calculateTemp@plus
   910  00174A  C043  F0D8         	movff	_plus_ambient+1,calculateTemp@plus+1
   911  00174E  C03E  F0D9         	movff	_minus_ambient,calculateTemp@minus
   912  001752  C03F  F0DA         	movff	_minus_ambient+1,calculateTemp@minus+1
   913  001756  EC2F  F00A         	call	_calculateTemp	;wreg free
   914  00175A  C0D7  F046         	movff	?_calculateTemp,_temp_ambient
   915  00175E  C0D8  F047         	movff	?_calculateTemp+1,_temp_ambient+1
   916                           
   917                           ;main.c: 180: fillInTemp(1);
   918  001762  0E01               	movlw	1
   919  001764  ECDA  F007         	call	_fillInTemp
   920  001768  0012               	return	
   921  00176A                     __end_of_makeTempMessage:
   922                           	opt stack 0
   923                           tblptru	equ	0xFF8
   924                           tblptrh	equ	0xFF7
   925                           tblptrl	equ	0xFF6
   926                           tablat	equ	0xFF5
   927                           postinc0	equ	0xFEE
   928                           wreg	equ	0xFE8
   929                           postdec1	equ	0xFE5
   930                           fsr1l	equ	0xFE1
   931                           status	equ	0xFD8
   932                           
   933 ;; *************** function _fillInTemp *****************
   934 ;; Defined at:
   935 ;;		line 92 in file "main.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  pipe_or_ambi    1    wreg     unsigned char 
   938 ;; Auto vars:     Size  Location     Type
   939 ;;  pipe_or_ambi    1   36[COMRAM] unsigned char 
   940 ;;  i               2   39[COMRAM] int 
   941 ;;  i               2   37[COMRAM] int 
   942 ;;  i               1   41[COMRAM] unsigned char 
   943 ;;  temp            2   42[COMRAM] int 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   954 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   955 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   956 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   957 ;;Total ram usage:       12 bytes
   958 ;; Hardware stack levels used:    1
   959 ;; Hardware stack levels required when called:    3
   960 ;; This function calls:
   961 ;;		___awdiv
   962 ;;		___awmod
   963 ;; This function is called by:
   964 ;;		_makeTempMessage
   965 ;; This function uses a non-reentrant model
   966 ;;
   967                           
   968                           	psect	text2
   969  000FB4                     __ptext2:
   970                           	opt stack 0
   971  000FB4                     _fillInTemp:
   972                           	opt stack 26
   973                           
   974                           ;incstack = 0
   975                           ;fillInTemp@pipe_or_ambience stored from wreg
   976  000FB4  6E25               	movwf	fillInTemp@pipe_or_ambience,c
   977                           
   978                           ;main.c: 93: signed int temp;
   979                           ;main.c: 94: if(pipe_or_ambience == 0){
   980  000FB6  5025               	movf	fillInTemp@pipe_or_ambience,w,c
   981  000FB8  A4D8               	btfss	status,2,c
   982  000FBA  D02A               	goto	l1603
   983                           
   984                           ;main.c: 95: for(int i = 0; i<4; i++){
   985  000FBC  0E00               	movlw	0
   986  000FBE  6E27               	movwf	fillInTemp@i+1,c
   987  000FC0  0E00               	movlw	0
   988  000FC2  6E26               	movwf	fillInTemp@i,c
   989  000FC4  BE27               	btfsc	fillInTemp@i+1,7,c
   990  000FC6  D006               	goto	l1597
   991  000FC8  5027               	movf	fillInTemp@i+1,w,c
   992  000FCA  E11D               	bnz	l98
   993  000FCC  0E04               	movlw	4
   994  000FCE  5C26               	subwf	fillInTemp@i,w,c
   995  000FD0  B0D8               	btfsc	status,0,c
   996  000FD2  D019               	goto	l98
   997  000FD4                     l1597:
   998                           
   999                           ;main.c: 96: temp_display_message[i] = pipe_ascii[i];
  1000  000FD4  0E23               	movlw	low _pipe_ascii
  1001  000FD6  2426               	addwf	fillInTemp@i,w,c
  1002  000FD8  6EF6               	movwf	tblptrl,c
  1003  000FDA  0E0F               	movlw	high _pipe_ascii
  1004  000FDC  2027               	addwfc	fillInTemp@i+1,w,c
  1005  000FDE  6EF7               	movwf	tblptrh,c
  1006  000FE0                     	if	1	;There are 3 active tblptr bytes
  1007  000FE0  6AF8               	clrf	tblptru,c
  1008  000FE2  0E00               	movlw	low (__mediumconst shr (0+16))
  1009  000FE4  22F8               	addwfc	tblptru,f,c
  1010  000FE6                     	endif
  1011  000FE6  0EE7               	movlw	low _temp_display_message
  1012  000FE8  2426               	addwf	fillInTemp@i,w,c
  1013  000FEA  6ED9               	movwf	fsr2l,c
  1014  000FEC  0E00               	movlw	high _temp_display_message
  1015  000FEE  2027               	addwfc	fillInTemp@i+1,w,c
  1016  000FF0  6EDA               	movwf	fsr2h,c
  1017  000FF2  0008               	tblrd		*
  1018  000FF4  CFF5 FFDF          	movff	tablat,indf2
  1019  000FF8  4A26               	infsnz	fillInTemp@i,f,c
  1020  000FFA  2A27               	incf	fillInTemp@i+1,f,c
  1021  000FFC  BE27               	btfsc	fillInTemp@i+1,7,c
  1022  000FFE  D7EA               	goto	l1597
  1023  001000  5027               	movf	fillInTemp@i+1,w,c
  1024  001002  E101               	bnz	u1070
  1025  001004  D7E3               	goto	L1
  1026  001006                     u1070:
  1027  001006                     l98:
  1028                           
  1029                           ;main.c: 97: }
  1030                           ;main.c: 98: temp = temp_pipe;
  1031  001006  C048  F02B         	movff	_temp_pipe,fillInTemp@temp
  1032  00100A  C049  F02C         	movff	_temp_pipe+1,fillInTemp@temp+1
  1033                           
  1034                           ;main.c: 99: }
  1035  00100E  D029               	goto	l1615
  1036  001010                     l1603:
  1037                           
  1038                           ;main.c: 100: else{
  1039                           ;main.c: 101: for(int i = 0; i<4; i++){
  1040  001010  0E00               	movlw	0
  1041  001012  6E29               	movwf	fillInTemp@i_836+1,c
  1042  001014  0E00               	movlw	0
  1043  001016  6E28               	movwf	fillInTemp@i_836,c
  1044  001018  BE29               	btfsc	fillInTemp@i_836+1,7,c
  1045  00101A  D006               	goto	l1609
  1046  00101C  5029               	movf	fillInTemp@i_836+1,w,c
  1047  00101E  E11D               	bnz	l101
  1048  001020  0E04               	movlw	4
  1049  001022  5C28               	subwf	fillInTemp@i_836,w,c
  1050  001024  B0D8               	btfsc	status,0,c
  1051  001026  D019               	goto	l101
  1052  001028                     l1609:
  1053                           
  1054                           ;main.c: 102: temp_display_message[i] = ambient_ascii[i];
  1055  001028  0E1E               	movlw	low _ambient_ascii
  1056  00102A  2428               	addwf	fillInTemp@i_836,w,c
  1057  00102C  6EF6               	movwf	tblptrl,c
  1058  00102E  0E0F               	movlw	high _ambient_ascii
  1059  001030  2029               	addwfc	fillInTemp@i_836+1,w,c
  1060  001032  6EF7               	movwf	tblptrh,c
  1061  001034                     	if	1	;There are 3 active tblptr bytes
  1062  001034  6AF8               	clrf	tblptru,c
  1063  001036  0E00               	movlw	low (__mediumconst shr (0+16))
  1064  001038  22F8               	addwfc	tblptru,f,c
  1065  00103A                     	endif
  1066  00103A  0EE7               	movlw	low _temp_display_message
  1067  00103C  2428               	addwf	fillInTemp@i_836,w,c
  1068  00103E  6ED9               	movwf	fsr2l,c
  1069  001040  0E00               	movlw	high _temp_display_message
  1070  001042  2029               	addwfc	fillInTemp@i_836+1,w,c
  1071  001044  6EDA               	movwf	fsr2h,c
  1072  001046  0008               	tblrd		*
  1073  001048  CFF5 FFDF          	movff	tablat,indf2
  1074  00104C  4A28               	infsnz	fillInTemp@i_836,f,c
  1075  00104E  2A29               	incf	fillInTemp@i_836+1,f,c
  1076  001050  BE29               	btfsc	fillInTemp@i_836+1,7,c
  1077  001052  D7EA               	goto	l1609
  1078  001054  5029               	movf	fillInTemp@i_836+1,w,c
  1079  001056  E101               	bnz	u1090
  1080  001058  D7E3               	goto	L2
  1081  00105A                     u1090:
  1082  00105A                     l101:
  1083                           
  1084                           ;main.c: 103: }
  1085                           ;main.c: 104: temp = temp_ambient;
  1086  00105A  C046  F02B         	movff	_temp_ambient,fillInTemp@temp
  1087  00105E  C047  F02C         	movff	_temp_ambient+1,fillInTemp@temp+1
  1088  001062                     l1615:
  1089                           
  1090                           ;main.c: 105: }
  1091                           ;main.c: 108: if(temp < 0){
  1092  001062  AE2C               	btfss	fillInTemp@temp+1,7,c
  1093  001064  D008               	goto	l1621
  1094                           
  1095                           ;main.c: 109: asciiTemp[0] = '-';
  1096  001066  0E2D               	movlw	45
  1097  001068  0100               	movlb	0	; () banked
  1098  00106A  6FE2               	movwf	_asciiTemp& (0+255),b
  1099                           
  1100                           ; BSR set to: 0
  1101                           ;main.c: 110: temp = - temp;
  1102  00106C  6C2B               	negf	fillInTemp@temp,c
  1103  00106E  1E2C               	comf	fillInTemp@temp+1,f,c
  1104  001070  B0D8               	btfsc	status,0,c
  1105  001072  2A2C               	incf	fillInTemp@temp+1,f,c
  1106                           
  1107                           ;main.c: 111: }
  1108  001074  D003               	goto	l1623
  1109  001076                     l1621:
  1110                           
  1111                           ;main.c: 112: else{
  1112                           ;main.c: 113: asciiTemp[0] = ' ';
  1113  001076  0E20               	movlw	32
  1114  001078  0100               	movlb	0	; () banked
  1115  00107A  6FE2               	movwf	_asciiTemp& (0+255),b
  1116  00107C                     l1623:
  1117                           
  1118                           ; BSR set to: 0
  1119                           ;main.c: 114: }
  1120                           ;main.c: 115: asciiTemp[1] = temp/100 + 48;
  1121  00107C  C02B  F019         	movff	fillInTemp@temp,___awdiv@dividend
  1122  001080  C02C  F01A         	movff	fillInTemp@temp+1,___awdiv@dividend+1
  1123  001084  0E00               	movlw	0
  1124  001086  6E1C               	movwf	___awdiv@divisor+1,c
  1125  001088  0E64               	movlw	100
  1126  00108A  6E1B               	movwf	___awdiv@divisor,c
  1127  00108C  ECE2  F00A         	call	___awdiv	;wreg free
  1128  001090  5019               	movf	?___awdiv,w,c
  1129  001092  0F30               	addlw	48
  1130  001094  0100               	movlb	0	; () banked
  1131  001096  6FE3               	movwf	(_asciiTemp+1)& (0+255),b
  1132                           
  1133                           ; BSR set to: 0
  1134                           ;main.c: 116: asciiTemp[2] = temp % 100 / 10 + 48;
  1135  001098  0E00               	movlw	0
  1136  00109A  6E16               	movwf	___awmod@divisor+1,c
  1137  00109C  0E64               	movlw	100
  1138  00109E  6E15               	movwf	___awmod@divisor,c
  1139  0010A0  C02B  F013         	movff	fillInTemp@temp,___awmod@dividend
  1140  0010A4  C02C  F014         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1141  0010A8  EC24  F00B         	call	___awmod	;wreg free
  1142  0010AC  C013  F019         	movff	?___awmod,___awdiv@dividend
  1143  0010B0  C014  F01A         	movff	?___awmod+1,___awdiv@dividend+1
  1144  0010B4  0E00               	movlw	0
  1145  0010B6  6E1C               	movwf	___awdiv@divisor+1,c
  1146  0010B8  0E0A               	movlw	10
  1147  0010BA  6E1B               	movwf	___awdiv@divisor,c
  1148  0010BC  ECE2  F00A         	call	___awdiv	;wreg free
  1149  0010C0  5019               	movf	?___awdiv,w,c
  1150  0010C2  0F30               	addlw	48
  1151  0010C4  0100               	movlb	0	; () banked
  1152  0010C6  6FE4               	movwf	(_asciiTemp+2)& (0+255),b
  1153                           
  1154                           ; BSR set to: 0
  1155                           ;main.c: 117: asciiTemp[3] = temp % 10 + 48;
  1156  0010C8  C02B  F013         	movff	fillInTemp@temp,___awmod@dividend
  1157  0010CC  C02C  F014         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1158  0010D0  0E00               	movlw	0
  1159  0010D2  6E16               	movwf	___awmod@divisor+1,c
  1160  0010D4  0E0A               	movlw	10
  1161  0010D6  6E15               	movwf	___awmod@divisor,c
  1162  0010D8  EC24  F00B         	call	___awmod	;wreg free
  1163  0010DC  5013               	movf	?___awmod,w,c
  1164  0010DE  0F30               	addlw	48
  1165  0010E0  0100               	movlb	0	; () banked
  1166  0010E2  6FE5               	movwf	(_asciiTemp+3)& (0+255),b
  1167                           
  1168                           ; BSR set to: 0
  1169                           ;main.c: 121: for(char i = 12; i<17; i++){
  1170  0010E4  0E0C               	movlw	12
  1171  0010E6  6E2A               	movwf	fillInTemp@i_837,c
  1172  0010E8                     l1631:
  1173                           
  1174                           ; BSR set to: 0
  1175  0010E8  0E10               	movlw	16
  1176  0010EA  642A               	cpfsgt	fillInTemp@i_837,c
  1177  0010EC  D001               	goto	l1635
  1178  0010EE  0012               	return	
  1179  0010F0                     l1635:
  1180                           
  1181                           ;main.c: 122: temp_display_message[i] = asciiTemp[i-12];
  1182  0010F0  0EF4               	movlw	244
  1183  0010F2  6E21               	movwf	??_fillInTemp& (0+255),c
  1184  0010F4  0EFF               	movlw	255
  1185  0010F6  6E22               	movwf	(??_fillInTemp+1)& (0+255),c
  1186  0010F8  502A               	movf	fillInTemp@i_837,w,c
  1187  0010FA  6E23               	movwf	(??_fillInTemp+2)& (0+255),c
  1188  0010FC  6A24               	clrf	(??_fillInTemp+3)& (0+255),c
  1189  0010FE  5021               	movf	??_fillInTemp,w,c
  1190  001100  2623               	addwf	??_fillInTemp+2,f,c
  1191  001102  5022               	movf	??_fillInTemp+1,w,c
  1192  001104  2224               	addwfc	??_fillInTemp+3,f,c
  1193  001106  0EE2               	movlw	low _asciiTemp
  1194  001108  2423               	addwf	??_fillInTemp+2,w,c
  1195  00110A  6ED9               	movwf	fsr2l,c
  1196  00110C  0E00               	movlw	high _asciiTemp
  1197  00110E  2024               	addwfc	??_fillInTemp+3,w,c
  1198  001110  6EDA               	movwf	fsr2h,c
  1199  001112  502A               	movf	fillInTemp@i_837,w,c
  1200  001114  0D01               	mullw	1
  1201  001116  0EE7               	movlw	low _temp_display_message
  1202  001118  24F3               	addwf	prodl,w,c
  1203  00111A  6EE1               	movwf	fsr1l,c
  1204  00111C  0E00               	movlw	high _temp_display_message
  1205  00111E  20F4               	addwfc	prodh,w,c
  1206  001120  6EE2               	movwf	fsr1h,c
  1207  001122  CFDF FFE7          	movff	indf2,indf1
  1208  001126  2A2A               	incf	fillInTemp@i_837,f,c
  1209  001128  D7DF               	goto	l1631
  1210  00112A                     __end_of_fillInTemp:
  1211                           	opt stack 0
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           prodh	equ	0xFF4
  1217                           prodl	equ	0xFF3
  1218                           postinc0	equ	0xFEE
  1219                           wreg	equ	0xFE8
  1220                           indf1	equ	0xFE7
  1221                           postdec1	equ	0xFE5
  1222                           fsr1h	equ	0xFE2
  1223                           fsr1l	equ	0xFE1
  1224                           indf2	equ	0xFDF
  1225                           fsr2h	equ	0xFDA
  1226                           fsr2l	equ	0xFD9
  1227                           status	equ	0xFD8
  1228                           
  1229 ;; *************** function ___awmod *****************
  1230 ;; Defined at:
  1231 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;  dividend        2   18[COMRAM] int 
  1234 ;;  divisor         2   20[COMRAM] int 
  1235 ;; Auto vars:     Size  Location     Type
  1236 ;;  sign            1   23[COMRAM] unsigned char 
  1237 ;;  counter         1   22[COMRAM] unsigned char 
  1238 ;; Return value:  Size  Location     Type
  1239 ;;                  2   18[COMRAM] int 
  1240 ;; Registers used:
  1241 ;;		wreg, status,2, status,0
  1242 ;; Tracked objects:
  1243 ;;		On entry : 0/0
  1244 ;;		On exit  : 0/0
  1245 ;;		Unchanged: 0/0
  1246 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1247 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1248 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1249 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1250 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1251 ;;Total ram usage:        6 bytes
  1252 ;; Hardware stack levels used:    1
  1253 ;; Hardware stack levels required when called:    2
  1254 ;; This function calls:
  1255 ;;		Nothing
  1256 ;; This function is called by:
  1257 ;;		_fillInTemp
  1258 ;; This function uses a non-reentrant model
  1259 ;;
  1260                           
  1261                           	psect	text3
  1262  001648                     __ptext3:
  1263                           	opt stack 0
  1264  001648                     ___awmod:
  1265                           	opt stack 26
  1266                           
  1267                           ;incstack = 0
  1268  001648  0E00               	movlw	0
  1269  00164A  6E18               	movwf	___awmod@sign,c
  1270  00164C  AE14               	btfss	___awmod@dividend+1,7,c
  1271  00164E  D006               	goto	l1503
  1272  001650  6C13               	negf	___awmod@dividend,c
  1273  001652  1E14               	comf	___awmod@dividend+1,f,c
  1274  001654  B0D8               	btfsc	status,0,c
  1275  001656  2A14               	incf	___awmod@dividend+1,f,c
  1276  001658  0E01               	movlw	1
  1277  00165A  6E18               	movwf	___awmod@sign,c
  1278  00165C                     l1503:
  1279  00165C  AE16               	btfss	___awmod@divisor+1,7,c
  1280  00165E  D004               	goto	l1507
  1281  001660  6C15               	negf	___awmod@divisor,c
  1282  001662  1E16               	comf	___awmod@divisor+1,f,c
  1283  001664  B0D8               	btfsc	status,0,c
  1284  001666  2A16               	incf	___awmod@divisor+1,f,c
  1285  001668                     l1507:
  1286  001668  5015               	movf	___awmod@divisor,w,c
  1287  00166A  1016               	iorwf	___awmod@divisor+1,w,c
  1288  00166C  B4D8               	btfsc	status,2,c
  1289  00166E  D018               	goto	l1523
  1290  001670  0E01               	movlw	1
  1291  001672  6E17               	movwf	___awmod@counter,c
  1292  001674  D004               	goto	l1513
  1293  001676                     l1511:
  1294  001676  90D8               	bcf	status,0,c
  1295  001678  3615               	rlcf	___awmod@divisor,f,c
  1296  00167A  3616               	rlcf	___awmod@divisor+1,f,c
  1297  00167C  2A17               	incf	___awmod@counter,f,c
  1298  00167E                     l1513:
  1299  00167E  AE16               	btfss	___awmod@divisor+1,7,c
  1300  001680  D7FA               	goto	l1511
  1301  001682                     l1515:
  1302  001682  5015               	movf	___awmod@divisor,w,c
  1303  001684  5C13               	subwf	___awmod@dividend,w,c
  1304  001686  5016               	movf	___awmod@divisor+1,w,c
  1305  001688  5814               	subwfb	___awmod@dividend+1,w,c
  1306  00168A  A0D8               	btfss	status,0,c
  1307  00168C  D004               	goto	l1519
  1308  00168E  5015               	movf	___awmod@divisor,w,c
  1309  001690  5E13               	subwf	___awmod@dividend,f,c
  1310  001692  5016               	movf	___awmod@divisor+1,w,c
  1311  001694  5A14               	subwfb	___awmod@dividend+1,f,c
  1312  001696                     l1519:
  1313  001696  90D8               	bcf	status,0,c
  1314  001698  3216               	rrcf	___awmod@divisor+1,f,c
  1315  00169A  3215               	rrcf	___awmod@divisor,f,c
  1316  00169C  2E17               	decfsz	___awmod@counter,f,c
  1317  00169E  D7F1               	goto	l1515
  1318  0016A0                     l1523:
  1319  0016A0  5018               	movf	___awmod@sign,w,c
  1320  0016A2  B4D8               	btfsc	status,2,c
  1321  0016A4  D004               	goto	l1527
  1322  0016A6  6C13               	negf	___awmod@dividend,c
  1323  0016A8  1E14               	comf	___awmod@dividend+1,f,c
  1324  0016AA  B0D8               	btfsc	status,0,c
  1325  0016AC  2A14               	incf	___awmod@dividend+1,f,c
  1326  0016AE                     l1527:
  1327  0016AE  C013  F013         	movff	___awmod@dividend,?___awmod
  1328  0016B2  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  1329  0016B6  0012               	return	
  1330  0016B8                     __end_of___awmod:
  1331                           	opt stack 0
  1332                           tblptru	equ	0xFF8
  1333                           tblptrh	equ	0xFF7
  1334                           tblptrl	equ	0xFF6
  1335                           tablat	equ	0xFF5
  1336                           prodh	equ	0xFF4
  1337                           prodl	equ	0xFF3
  1338                           postinc0	equ	0xFEE
  1339                           wreg	equ	0xFE8
  1340                           indf1	equ	0xFE7
  1341                           postdec1	equ	0xFE5
  1342                           fsr1h	equ	0xFE2
  1343                           fsr1l	equ	0xFE1
  1344                           indf2	equ	0xFDF
  1345                           fsr2h	equ	0xFDA
  1346                           fsr2l	equ	0xFD9
  1347                           status	equ	0xFD8
  1348                           
  1349 ;; *************** function ___awdiv *****************
  1350 ;; Defined at:
  1351 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  1352 ;; Parameters:    Size  Location     Type
  1353 ;;  dividend        2   24[COMRAM] int 
  1354 ;;  divisor         2   26[COMRAM] int 
  1355 ;; Auto vars:     Size  Location     Type
  1356 ;;  quotient        2   30[COMRAM] int 
  1357 ;;  sign            1   29[COMRAM] unsigned char 
  1358 ;;  counter         1   28[COMRAM] unsigned char 
  1359 ;; Return value:  Size  Location     Type
  1360 ;;                  2   24[COMRAM] int 
  1361 ;; Registers used:
  1362 ;;		wreg, status,2, status,0
  1363 ;; Tracked objects:
  1364 ;;		On entry : 0/0
  1365 ;;		On exit  : 0/0
  1366 ;;		Unchanged: 0/0
  1367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1368 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1369 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1370 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1371 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1372 ;;Total ram usage:        8 bytes
  1373 ;; Hardware stack levels used:    1
  1374 ;; Hardware stack levels required when called:    2
  1375 ;; This function calls:
  1376 ;;		Nothing
  1377 ;; This function is called by:
  1378 ;;		_fillInTemp
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           	psect	text4
  1383  0015C4                     __ptext4:
  1384                           	opt stack 0
  1385  0015C4                     ___awdiv:
  1386                           	opt stack 26
  1387                           
  1388                           ;incstack = 0
  1389  0015C4  0E00               	movlw	0
  1390  0015C6  6E1E               	movwf	___awdiv@sign,c
  1391  0015C8  AE1C               	btfss	___awdiv@divisor+1,7,c
  1392  0015CA  D006               	goto	l1459
  1393  0015CC  6C1B               	negf	___awdiv@divisor,c
  1394  0015CE  1E1C               	comf	___awdiv@divisor+1,f,c
  1395  0015D0  B0D8               	btfsc	status,0,c
  1396  0015D2  2A1C               	incf	___awdiv@divisor+1,f,c
  1397  0015D4  0E01               	movlw	1
  1398  0015D6  6E1E               	movwf	___awdiv@sign,c
  1399  0015D8                     l1459:
  1400  0015D8  AE1A               	btfss	___awdiv@dividend+1,7,c
  1401  0015DA  D006               	goto	l1465
  1402  0015DC  6C19               	negf	___awdiv@dividend,c
  1403  0015DE  1E1A               	comf	___awdiv@dividend+1,f,c
  1404  0015E0  B0D8               	btfsc	status,0,c
  1405  0015E2  2A1A               	incf	___awdiv@dividend+1,f,c
  1406  0015E4  0E01               	movlw	1
  1407  0015E6  1A1E               	xorwf	___awdiv@sign,f,c
  1408  0015E8                     l1465:
  1409  0015E8  0E00               	movlw	0
  1410  0015EA  6E20               	movwf	___awdiv@quotient+1,c
  1411  0015EC  0E00               	movlw	0
  1412  0015EE  6E1F               	movwf	___awdiv@quotient,c
  1413  0015F0  501B               	movf	___awdiv@divisor,w,c
  1414  0015F2  101C               	iorwf	___awdiv@divisor+1,w,c
  1415  0015F4  B4D8               	btfsc	status,2,c
  1416  0015F6  D01C               	goto	l1487
  1417  0015F8  0E01               	movlw	1
  1418  0015FA  6E1D               	movwf	___awdiv@counter,c
  1419  0015FC  D004               	goto	l1473
  1420  0015FE                     l1471:
  1421  0015FE  90D8               	bcf	status,0,c
  1422  001600  361B               	rlcf	___awdiv@divisor,f,c
  1423  001602  361C               	rlcf	___awdiv@divisor+1,f,c
  1424  001604  2A1D               	incf	___awdiv@counter,f,c
  1425  001606                     l1473:
  1426  001606  AE1C               	btfss	___awdiv@divisor+1,7,c
  1427  001608  D7FA               	goto	l1471
  1428  00160A                     l1475:
  1429  00160A  90D8               	bcf	status,0,c
  1430  00160C  361F               	rlcf	___awdiv@quotient,f,c
  1431  00160E  3620               	rlcf	___awdiv@quotient+1,f,c
  1432  001610  501B               	movf	___awdiv@divisor,w,c
  1433  001612  5C19               	subwf	___awdiv@dividend,w,c
  1434  001614  501C               	movf	___awdiv@divisor+1,w,c
  1435  001616  581A               	subwfb	___awdiv@dividend+1,w,c
  1436  001618  A0D8               	btfss	status,0,c
  1437  00161A  D005               	goto	l1483
  1438  00161C  501B               	movf	___awdiv@divisor,w,c
  1439  00161E  5E19               	subwf	___awdiv@dividend,f,c
  1440  001620  501C               	movf	___awdiv@divisor+1,w,c
  1441  001622  5A1A               	subwfb	___awdiv@dividend+1,f,c
  1442  001624  801F               	bsf	___awdiv@quotient,0,c
  1443  001626                     l1483:
  1444  001626  90D8               	bcf	status,0,c
  1445  001628  321C               	rrcf	___awdiv@divisor+1,f,c
  1446  00162A  321B               	rrcf	___awdiv@divisor,f,c
  1447  00162C  2E1D               	decfsz	___awdiv@counter,f,c
  1448  00162E  D7ED               	goto	l1475
  1449  001630                     l1487:
  1450  001630  501E               	movf	___awdiv@sign,w,c
  1451  001632  B4D8               	btfsc	status,2,c
  1452  001634  D004               	goto	l1491
  1453  001636  6C1F               	negf	___awdiv@quotient,c
  1454  001638  1E20               	comf	___awdiv@quotient+1,f,c
  1455  00163A  B0D8               	btfsc	status,0,c
  1456  00163C  2A20               	incf	___awdiv@quotient+1,f,c
  1457  00163E                     l1491:
  1458  00163E  C01F  F019         	movff	___awdiv@quotient,?___awdiv
  1459  001642  C020  F01A         	movff	___awdiv@quotient+1,?___awdiv+1
  1460  001646  0012               	return	
  1461  001648                     __end_of___awdiv:
  1462                           	opt stack 0
  1463                           tblptru	equ	0xFF8
  1464                           tblptrh	equ	0xFF7
  1465                           tblptrl	equ	0xFF6
  1466                           tablat	equ	0xFF5
  1467                           prodh	equ	0xFF4
  1468                           prodl	equ	0xFF3
  1469                           postinc0	equ	0xFEE
  1470                           wreg	equ	0xFE8
  1471                           indf1	equ	0xFE7
  1472                           postdec1	equ	0xFE5
  1473                           fsr1h	equ	0xFE2
  1474                           fsr1l	equ	0xFE1
  1475                           indf2	equ	0xFDF
  1476                           fsr2h	equ	0xFDA
  1477                           fsr2l	equ	0xFD9
  1478                           status	equ	0xFD8
  1479                           
  1480 ;; *************** function _calculateTemp *****************
  1481 ;; Defined at:
  1482 ;;		line 165 in file "main.c"
  1483 ;; Parameters:    Size  Location     Type
  1484 ;;  plus            2   17[BANK0 ] int 
  1485 ;;  minus           2   19[BANK0 ] int 
  1486 ;; Auto vars:     Size  Location     Type
  1487 ;;  temp            2   26[BANK0 ] int 
  1488 ;; Return value:  Size  Location     Type
  1489 ;;                  2   17[BANK0 ] int 
  1490 ;; Registers used:
  1491 ;;		wreg, status,2, status,0, cstack
  1492 ;; Tracked objects:
  1493 ;;		On entry : 0/0
  1494 ;;		On exit  : 0/0
  1495 ;;		Unchanged: 0/0
  1496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1497 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1498 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1499 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1500 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1501 ;;Total ram usage:       11 bytes
  1502 ;; Hardware stack levels used:    1
  1503 ;; Hardware stack levels required when called:    4
  1504 ;; This function calls:
  1505 ;;		___awtoft
  1506 ;;		___ftdiv
  1507 ;;		___ftmul
  1508 ;;		___fttol
  1509 ;; This function is called by:
  1510 ;;		_makeTempMessage
  1511 ;; This function uses a non-reentrant model
  1512 ;;
  1513                           
  1514                           	psect	text5
  1515  00145E                     __ptext5:
  1516                           	opt stack 0
  1517  00145E                     _calculateTemp:
  1518                           	opt stack 25
  1519                           
  1520                           ;main.c: 166: signed int temp;
  1521                           ;main.c: 167: temp = plus - minus;
  1522                           
  1523                           ;incstack = 0
  1524  00145E  C0D9  F0DB         	movff	calculateTemp@minus,??_calculateTemp
  1525  001462  C0DA  F0DC         	movff	calculateTemp@minus+1,??_calculateTemp+1
  1526  001466  0100               	movlb	0	; () banked
  1527  001468  1FDB               	comf	??_calculateTemp& (0+255),f,b
  1528  00146A  1FDC               	comf	(??_calculateTemp+1)& (0+255),f,b
  1529  00146C  4BDB               	infsnz	??_calculateTemp& (0+255),f,b
  1530  00146E  2BDC               	incf	(??_calculateTemp+1)& (0+255),f,b
  1531  001470  0100               	movlb	0	; () banked
  1532  001472  51D7               	movf	calculateTemp@plus& (0+255),w,b
  1533  001474  0100               	movlb	0	; () banked
  1534  001476  25DB               	addwf	??_calculateTemp& (0+255),w,b
  1535  001478  0100               	movlb	0	; () banked
  1536  00147A  6FE0               	movwf	calculateTemp@temp& (0+255),b
  1537  00147C  0100               	movlb	0	; () banked
  1538  00147E  51D8               	movf	(calculateTemp@plus+1)& (0+255),w,b
  1539  001480  0100               	movlb	0	; () banked
  1540  001482  21DC               	addwfc	(??_calculateTemp+1)& (0+255),w,b
  1541  001484  0100               	movlb	0	; () banked
  1542  001486  6FE1               	movwf	(calculateTemp@temp+1)& (0+255),b
  1543                           
  1544                           ; BSR set to: 0
  1545                           ;main.c: 168: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1546  001488  0EE0               	movlw	224
  1547  00148A  6E31               	movwf	___ftmul@f2,c
  1548  00148C  0E2B               	movlw	43
  1549  00148E  6E32               	movwf	___ftmul@f2+1,c
  1550  001490  0E45               	movlw	69
  1551  001492  6E33               	movwf	___ftmul@f2+2,c
  1552  001494  0E00               	movlw	0
  1553  001496  6E22               	movwf	___ftdiv@f2,c
  1554  001498  0E80               	movlw	128
  1555  00149A  6E23               	movwf	___ftdiv@f2+1,c
  1556  00149C  0E44               	movlw	68
  1557  00149E  6E24               	movwf	___ftdiv@f2+2,c
  1558  0014A0  C0E0  F01B         	movff	calculateTemp@temp,___awtoft@c
  1559  0014A4  C0E1  F01C         	movff	calculateTemp@temp+1,___awtoft@c+1
  1560  0014A8  EC1F  F00C         	call	___awtoft	;wreg free
  1561  0014AC  C01B  F01F         	movff	?___awtoft,___ftdiv@f1
  1562  0014B0  C01C  F020         	movff	?___awtoft+1,___ftdiv@f1+1
  1563  0014B4  C01D  F021         	movff	?___awtoft+2,___ftdiv@f1+2
  1564  0014B8  ECBC  F009         	call	___ftdiv	;wreg free
  1565  0014BC  C01F  F02E         	movff	?___ftdiv,___ftmul@f1
  1566  0014C0  C020  F02F         	movff	?___ftdiv+1,___ftmul@f1+1
  1567  0014C4  C021  F030         	movff	?___ftdiv+2,___ftmul@f1+2
  1568  0014C8  EC2C  F009         	call	___ftmul	;wreg free
  1569  0014CC  C02E  F0DD         	movff	?___ftmul,_calculateTemp$1701
  1570  0014D0  C02F  F0DE         	movff	?___ftmul+1,_calculateTemp$1701+1
  1571  0014D4  C030  F0DF         	movff	?___ftmul+2,_calculateTemp$1701+2
  1572                           
  1573                           ;main.c: 168: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1574  0014D8  0E00               	movlw	0
  1575  0014DA  6E22               	movwf	___ftdiv@f2,c
  1576  0014DC  0E20               	movlw	32
  1577  0014DE  6E23               	movwf	___ftdiv@f2+1,c
  1578  0014E0  0E41               	movlw	65
  1579  0014E2  6E24               	movwf	___ftdiv@f2+2,c
  1580  0014E4  C0DD  F01F         	movff	_calculateTemp$1701,___ftdiv@f1
  1581  0014E8  C0DE  F020         	movff	_calculateTemp$1701+1,___ftdiv@f1+1
  1582  0014EC  C0DF  F021         	movff	_calculateTemp$1701+2,___ftdiv@f1+2
  1583  0014F0  ECBC  F009         	call	___ftdiv	;wreg free
  1584  0014F4  C01F  F037         	movff	?___ftdiv,___fttol@f1
  1585  0014F8  C020  F038         	movff	?___ftdiv+1,___fttol@f1+1
  1586  0014FC  C021  F039         	movff	?___ftdiv+2,___fttol@f1+2
  1587  001500  EC95  F008         	call	___fttol	;wreg free
  1588  001504  C037  F0E0         	movff	?___fttol,calculateTemp@temp
  1589  001508  C038  F0E1         	movff	?___fttol+1,calculateTemp@temp+1
  1590                           
  1591                           ;main.c: 170: return temp;
  1592  00150C  C0E0  F0D7         	movff	calculateTemp@temp,?_calculateTemp
  1593  001510  C0E1  F0D8         	movff	calculateTemp@temp+1,?_calculateTemp+1
  1594  001514  0012               	return	
  1595  001516                     __end_of_calculateTemp:
  1596                           	opt stack 0
  1597                           tblptru	equ	0xFF8
  1598                           tblptrh	equ	0xFF7
  1599                           tblptrl	equ	0xFF6
  1600                           tablat	equ	0xFF5
  1601                           prodh	equ	0xFF4
  1602                           prodl	equ	0xFF3
  1603                           postinc0	equ	0xFEE
  1604                           wreg	equ	0xFE8
  1605                           indf1	equ	0xFE7
  1606                           postdec1	equ	0xFE5
  1607                           fsr1h	equ	0xFE2
  1608                           fsr1l	equ	0xFE1
  1609                           indf2	equ	0xFDF
  1610                           fsr2h	equ	0xFDA
  1611                           fsr2l	equ	0xFD9
  1612                           status	equ	0xFD8
  1613                           
  1614 ;; *************** function ___fttol *****************
  1615 ;; Defined at:
  1616 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  1617 ;; Parameters:    Size  Location     Type
  1618 ;;  f1              3   54[COMRAM] float 
  1619 ;; Auto vars:     Size  Location     Type
  1620 ;;  lval            4   12[BANK0 ] unsigned long 
  1621 ;;  exp1            1   16[BANK0 ] unsigned char 
  1622 ;;  sign1           1   11[BANK0 ] unsigned char 
  1623 ;; Return value:  Size  Location     Type
  1624 ;;                  4   54[COMRAM] long 
  1625 ;; Registers used:
  1626 ;;		wreg, status,2, status,0
  1627 ;; Tracked objects:
  1628 ;;		On entry : 0/0
  1629 ;;		On exit  : 0/0
  1630 ;;		Unchanged: 0/0
  1631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1632 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1633 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1634 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1635 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1636 ;;Total ram usage:       15 bytes
  1637 ;; Hardware stack levels used:    1
  1638 ;; Hardware stack levels required when called:    2
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_calculateTemp
  1643 ;; This function uses a non-reentrant model
  1644 ;;
  1645                           
  1646                           	psect	text6
  1647  00112A                     __ptext6:
  1648                           	opt stack 0
  1649  00112A                     ___fttol:
  1650                           	opt stack 26
  1651                           
  1652                           ;incstack = 0
  1653  00112A  C039  F0CC         	movff	___fttol@f1+2,??___fttol
  1654  00112E  0100               	movlb	0	; () banked
  1655  001130  6BCD               	clrf	(??___fttol+1)& (0+255),b
  1656  001132  6BCE               	clrf	(??___fttol+2)& (0+255),b
  1657  001134  3438               	rlcf	___fttol@f1+1,w,c
  1658  001136  0100               	movlb	0	; () banked
  1659  001138  37CC               	rlcf	??___fttol& (0+255),f,b
  1660  00113A  E301               	bnc	u1491
  1661  00113C  81CD               	bsf	(??___fttol+1)& (0+255),0,b
  1662  00113E                     u1491:
  1663  00113E  0100               	movlb	0	; () banked
  1664  001140  51CC               	movf	??___fttol& (0+255),w,b
  1665  001142  0100               	movlb	0	; () banked
  1666  001144  6FD6               	movwf	___fttol@exp1& (0+255),b
  1667  001146  0100               	movlb	0	; () banked
  1668  001148  51D6               	movf	___fttol@exp1& (0+255),w,b
  1669  00114A  A4D8               	btfss	status,2,c
  1670  00114C  D009               	goto	l1993
  1671                           
  1672                           ; BSR set to: 0
  1673  00114E  0E00               	movlw	0
  1674  001150  6E37               	movwf	?___fttol,c
  1675  001152  0E00               	movlw	0
  1676  001154  6E38               	movwf	?___fttol+1,c
  1677  001156  0E00               	movlw	0
  1678  001158  6E39               	movwf	?___fttol+2,c
  1679  00115A  0E00               	movlw	0
  1680  00115C  6E3A               	movwf	?___fttol+3,c
  1681                           
  1682                           ; BSR set to: 0
  1683  00115E  0012               	return	
  1684  001160                     l1993:
  1685                           
  1686                           ; BSR set to: 0
  1687  001160  0E17               	movlw	23
  1688  001162  0100               	movlb	0	; () banked
  1689  001164  6FCC               	movwf	??___fttol& (0+255),b
  1690  001166  C037  F0CD         	movff	___fttol@f1,??___fttol+1
  1691  00116A  C038  F0CE         	movff	___fttol@f1+1,??___fttol+2
  1692  00116E  C039  F0CF         	movff	___fttol@f1+2,??___fttol+3
  1693  001172  0100               	movlb	0	; () banked
  1694  001174  29CC               	incf	??___fttol& (0+255),w,b
  1695  001176  0100               	movlb	0	; () banked
  1696  001178  6FD0               	movwf	(??___fttol+4)& (0+255),b
  1697  00117A  D005               	goto	u1510
  1698  00117C                     u1515:
  1699  00117C  0100               	movlb	0	; () banked
  1700  00117E  90D8               	bcf	status,0,c
  1701  001180  33CF               	rrcf	(??___fttol+3)& (0+255),f,b
  1702  001182  33CE               	rrcf	(??___fttol+2)& (0+255),f,b
  1703  001184  33CD               	rrcf	(??___fttol+1)& (0+255),f,b
  1704  001186                     u1510:
  1705  001186  0100               	movlb	0	; () banked
  1706  001188  2FD0               	decfsz	(??___fttol+4)& (0+255),f,b
  1707  00118A  D7F8               	goto	u1515
  1708  00118C  0100               	movlb	0	; () banked
  1709  00118E  51CD               	movf	(??___fttol+1)& (0+255),w,b
  1710  001190  0100               	movlb	0	; () banked
  1711  001192  6FD1               	movwf	___fttol@sign1& (0+255),b
  1712                           
  1713                           ; BSR set to: 0
  1714  001194  8E38               	bsf	___fttol@f1+1,7,c
  1715                           
  1716                           ; BSR set to: 0
  1717  001196  0EFF               	movlw	255
  1718  001198  1637               	andwf	___fttol@f1,f,c
  1719  00119A  0EFF               	movlw	255
  1720  00119C  1638               	andwf	___fttol@f1+1,f,c
  1721  00119E  0E00               	movlw	0
  1722  0011A0  1639               	andwf	___fttol@f1+2,f,c
  1723                           
  1724                           ; BSR set to: 0
  1725  0011A2  5037               	movf	___fttol@f1,w,c
  1726  0011A4  0100               	movlb	0	; () banked
  1727  0011A6  6FD2               	movwf	___fttol@lval& (0+255),b
  1728  0011A8  5038               	movf	___fttol@f1+1,w,c
  1729  0011AA  0100               	movlb	0	; () banked
  1730  0011AC  6FD3               	movwf	(___fttol@lval+1)& (0+255),b
  1731  0011AE  5039               	movf	___fttol@f1+2,w,c
  1732  0011B0  0100               	movlb	0	; () banked
  1733  0011B2  6FD4               	movwf	(___fttol@lval+2)& (0+255),b
  1734  0011B4  0100               	movlb	0	; () banked
  1735  0011B6  6BD5               	clrf	(___fttol@lval+3)& (0+255),b
  1736                           
  1737                           ; BSR set to: 0
  1738  0011B8  0E8E               	movlw	142
  1739  0011BA  0100               	movlb	0	; () banked
  1740  0011BC  5FD6               	subwf	___fttol@exp1& (0+255),f,b
  1741                           
  1742                           ; BSR set to: 0
  1743  0011BE  0100               	movlb	0	; () banked
  1744  0011C0  AFD6               	btfss	___fttol@exp1& (0+255),7,b
  1745  0011C2  D019               	goto	l2015
  1746                           
  1747                           ; BSR set to: 0
  1748  0011C4  0100               	movlb	0	; () banked
  1749  0011C6  51D6               	movf	___fttol@exp1& (0+255),w,b
  1750  0011C8  0A80               	xorlw	128
  1751  0011CA  0F8F               	addlw	143
  1752  0011CC  B0D8               	btfsc	status,0,c
  1753  0011CE  D009               	goto	l2011
  1754                           
  1755                           ; BSR set to: 0
  1756  0011D0  0E00               	movlw	0
  1757  0011D2  6E37               	movwf	?___fttol,c
  1758  0011D4  0E00               	movlw	0
  1759  0011D6  6E38               	movwf	?___fttol+1,c
  1760  0011D8  0E00               	movlw	0
  1761  0011DA  6E39               	movwf	?___fttol+2,c
  1762  0011DC  0E00               	movlw	0
  1763  0011DE  6E3A               	movwf	?___fttol+3,c
  1764                           
  1765                           ; BSR set to: 0
  1766  0011E0  0012               	return	
  1767  0011E2                     l2011:
  1768                           
  1769                           ; BSR set to: 0
  1770  0011E2  0100               	movlb	0	; () banked
  1771  0011E4  90D8               	bcf	status,0,c
  1772  0011E6  33D5               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1773  0011E8  33D4               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1774  0011EA  33D3               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1775  0011EC  33D2               	rrcf	___fttol@lval& (0+255),f,b
  1776                           
  1777                           ; BSR set to: 0
  1778  0011EE  0100               	movlb	0	; () banked
  1779  0011F0  3FD6               	incfsz	___fttol@exp1& (0+255),f,b
  1780  0011F2  D7F7               	goto	l2011
  1781                           
  1782                           ; BSR set to: 0
  1783  0011F4  D01A               	goto	l2025
  1784  0011F6                     l2015:
  1785                           
  1786                           ; BSR set to: 0
  1787  0011F6  0E17               	movlw	23
  1788  0011F8  0100               	movlb	0	; () banked
  1789  0011FA  65D6               	cpfsgt	___fttol@exp1& (0+255),b
  1790  0011FC  D011               	goto	l2023
  1791                           
  1792                           ; BSR set to: 0
  1793  0011FE  0E00               	movlw	0
  1794  001200  6E37               	movwf	?___fttol,c
  1795  001202  0E00               	movlw	0
  1796  001204  6E38               	movwf	?___fttol+1,c
  1797  001206  0E00               	movlw	0
  1798  001208  6E39               	movwf	?___fttol+2,c
  1799  00120A  0E00               	movlw	0
  1800  00120C  6E3A               	movwf	?___fttol+3,c
  1801                           
  1802                           ; BSR set to: 0
  1803  00120E  0012               	return	
  1804  001210                     l2021:
  1805                           
  1806                           ; BSR set to: 0
  1807  001210  0100               	movlb	0	; () banked
  1808  001212  90D8               	bcf	status,0,c
  1809  001214  37D2               	rlcf	___fttol@lval& (0+255),f,b
  1810  001216  37D3               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1811  001218  37D4               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1812  00121A  37D5               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1813  00121C  0100               	movlb	0	; () banked
  1814  00121E  07D6               	decf	___fttol@exp1& (0+255),f,b
  1815  001220                     l2023:
  1816                           
  1817                           ; BSR set to: 0
  1818  001220  0100               	movlb	0	; () banked
  1819  001222  51D6               	movf	___fttol@exp1& (0+255),w,b
  1820  001224  0100               	movlb	0	; () banked
  1821  001226  A4D8               	btfss	status,2,c
  1822  001228  D7F3               	goto	l2021
  1823  00122A                     l2025:
  1824                           
  1825                           ; BSR set to: 0
  1826  00122A  0100               	movlb	0	; () banked
  1827  00122C  51D1               	movf	___fttol@sign1& (0+255),w,b
  1828  00122E  0100               	movlb	0	; () banked
  1829  001230  B4D8               	btfsc	status,2,c
  1830  001232  D009               	goto	l2029
  1831                           
  1832                           ; BSR set to: 0
  1833  001234  0100               	movlb	0	; () banked
  1834  001236  1FD5               	comf	(___fttol@lval+3)& (0+255),f,b
  1835  001238  1FD4               	comf	(___fttol@lval+2)& (0+255),f,b
  1836  00123A  1FD3               	comf	(___fttol@lval+1)& (0+255),f,b
  1837  00123C  6DD2               	negf	___fttol@lval& (0+255),b
  1838  00123E  0E00               	movlw	0
  1839  001240  23D3               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1840  001242  23D4               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1841  001244  23D5               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1842  001246                     l2029:
  1843                           
  1844                           ; BSR set to: 0
  1845  001246  C0D2  F037         	movff	___fttol@lval,?___fttol
  1846  00124A  C0D3  F038         	movff	___fttol@lval+1,?___fttol+1
  1847  00124E  C0D4  F039         	movff	___fttol@lval+2,?___fttol+2
  1848  001252  C0D5  F03A         	movff	___fttol@lval+3,?___fttol+3
  1849  001256  0012               	return	
  1850  001258                     __end_of___fttol:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           prodh	equ	0xFF4
  1857                           prodl	equ	0xFF3
  1858                           postinc0	equ	0xFEE
  1859                           wreg	equ	0xFE8
  1860                           indf1	equ	0xFE7
  1861                           postdec1	equ	0xFE5
  1862                           fsr1h	equ	0xFE2
  1863                           fsr1l	equ	0xFE1
  1864                           indf2	equ	0xFDF
  1865                           fsr2h	equ	0xFDA
  1866                           fsr2l	equ	0xFD9
  1867                           status	equ	0xFD8
  1868                           
  1869 ;; *************** function ___ftmul *****************
  1870 ;; Defined at:
  1871 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  f1              3   45[COMRAM] float 
  1874 ;;  f2              3   48[COMRAM] float 
  1875 ;; Auto vars:     Size  Location     Type
  1876 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  1877 ;;  sign            1    5[BANK0 ] unsigned char 
  1878 ;;  cntr            1    4[BANK0 ] unsigned char 
  1879 ;;  exp             1    0[BANK0 ] unsigned char 
  1880 ;; Return value:  Size  Location     Type
  1881 ;;                  3   45[COMRAM] float 
  1882 ;; Registers used:
  1883 ;;		wreg, status,2, status,0, cstack
  1884 ;; Tracked objects:
  1885 ;;		On entry : 0/0
  1886 ;;		On exit  : 0/0
  1887 ;;		Unchanged: 0/0
  1888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1889 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1890 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1891 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1892 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1893 ;;Total ram usage:       15 bytes
  1894 ;; Hardware stack levels used:    1
  1895 ;; Hardware stack levels required when called:    3
  1896 ;; This function calls:
  1897 ;;		___ftpack
  1898 ;; This function is called by:
  1899 ;;		_calculateTemp
  1900 ;; This function uses a non-reentrant model
  1901 ;;
  1902                           
  1903                           	psect	text7
  1904  001258                     __ptext7:
  1905                           	opt stack 0
  1906  001258                     ___ftmul:
  1907                           	opt stack 25
  1908                           
  1909                           ; BSR set to: 0
  1910                           ;incstack = 0
  1911  001258  C030  F034         	movff	___ftmul@f1+2,??___ftmul
  1912  00125C  6A35               	clrf	(??___ftmul+1)& (0+255),c
  1913  00125E  6A36               	clrf	(??___ftmul+2)& (0+255),c
  1914  001260  342F               	rlcf	___ftmul@f1+1,w,c
  1915  001262  3634               	rlcf	??___ftmul& (0+255),f,c
  1916  001264  E301               	bnc	u1421
  1917  001266  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  1918  001268                     u1421:
  1919  001268  5034               	movf	??___ftmul,w,c
  1920  00126A  0100               	movlb	0	; () banked
  1921  00126C  6FC6               	movwf	___ftmul@exp& (0+255),b
  1922  00126E  0100               	movlb	0	; () banked
  1923  001270  51C6               	movf	___ftmul@exp& (0+255),w,b
  1924  001272  A4D8               	btfss	status,2,c
  1925  001274  D007               	goto	l1933
  1926                           
  1927                           ; BSR set to: 0
  1928  001276  0E00               	movlw	0
  1929  001278  6E2E               	movwf	?___ftmul,c
  1930  00127A  0E00               	movlw	0
  1931  00127C  6E2F               	movwf	?___ftmul+1,c
  1932  00127E  0E00               	movlw	0
  1933  001280  6E30               	movwf	?___ftmul+2,c
  1934                           
  1935                           ; BSR set to: 0
  1936  001282  0012               	return	
  1937  001284                     l1933:
  1938                           
  1939                           ; BSR set to: 0
  1940  001284  C033  F034         	movff	___ftmul@f2+2,??___ftmul
  1941  001288  6A35               	clrf	(??___ftmul+1)& (0+255),c
  1942  00128A  6A36               	clrf	(??___ftmul+2)& (0+255),c
  1943  00128C  3432               	rlcf	___ftmul@f2+1,w,c
  1944  00128E  3634               	rlcf	??___ftmul& (0+255),f,c
  1945  001290  E301               	bnc	u1441
  1946  001292  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  1947  001294                     u1441:
  1948  001294  5034               	movf	??___ftmul,w,c
  1949  001296  0100               	movlb	0	; () banked
  1950  001298  6FCB               	movwf	___ftmul@sign& (0+255),b
  1951  00129A  0100               	movlb	0	; () banked
  1952  00129C  51CB               	movf	___ftmul@sign& (0+255),w,b
  1953  00129E  A4D8               	btfss	status,2,c
  1954  0012A0  D007               	goto	l1939
  1955                           
  1956                           ; BSR set to: 0
  1957  0012A2  0E00               	movlw	0
  1958  0012A4  6E2E               	movwf	?___ftmul,c
  1959  0012A6  0E00               	movlw	0
  1960  0012A8  6E2F               	movwf	?___ftmul+1,c
  1961  0012AA  0E00               	movlw	0
  1962  0012AC  6E30               	movwf	?___ftmul+2,c
  1963                           
  1964                           ; BSR set to: 0
  1965  0012AE  0012               	return	
  1966  0012B0                     l1939:
  1967                           
  1968                           ; BSR set to: 0
  1969  0012B0  0100               	movlb	0	; () banked
  1970  0012B2  51CB               	movf	___ftmul@sign& (0+255),w,b
  1971  0012B4  0F7B               	addlw	123
  1972  0012B6  0100               	movlb	0	; () banked
  1973  0012B8  27C6               	addwf	___ftmul@exp& (0+255),f,b
  1974                           
  1975                           ; BSR set to: 0
  1976  0012BA  C030  F0CB         	movff	___ftmul@f1+2,___ftmul@sign
  1977  0012BE  5033               	movf	___ftmul@f2+2,w,c
  1978  0012C0  0100               	movlb	0	; () banked
  1979  0012C2  1BCB               	xorwf	___ftmul@sign& (0+255),f,b
  1980  0012C4  0E80               	movlw	128
  1981  0012C6  0100               	movlb	0	; () banked
  1982  0012C8  17CB               	andwf	___ftmul@sign& (0+255),f,b
  1983                           
  1984                           ; BSR set to: 0
  1985  0012CA  8E2F               	bsf	___ftmul@f1+1,7,c
  1986                           
  1987                           ; BSR set to: 0
  1988  0012CC  8E32               	bsf	___ftmul@f2+1,7,c
  1989                           
  1990                           ; BSR set to: 0
  1991  0012CE  0EFF               	movlw	255
  1992  0012D0  1631               	andwf	___ftmul@f2,f,c
  1993  0012D2  0EFF               	movlw	255
  1994  0012D4  1632               	andwf	___ftmul@f2+1,f,c
  1995  0012D6  0E00               	movlw	0
  1996  0012D8  1633               	andwf	___ftmul@f2+2,f,c
  1997                           
  1998                           ; BSR set to: 0
  1999  0012DA  0E00               	movlw	0
  2000  0012DC  0100               	movlb	0	; () banked
  2001  0012DE  6FC7               	movwf	___ftmul@f3_as_product& (0+255),b
  2002  0012E0  0E00               	movlw	0
  2003  0012E2  0100               	movlb	0	; () banked
  2004  0012E4  6FC8               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2005  0012E6  0E00               	movlw	0
  2006  0012E8  0100               	movlb	0	; () banked
  2007  0012EA  6FC9               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2008                           
  2009                           ; BSR set to: 0
  2010  0012EC  0E07               	movlw	7
  2011  0012EE  0100               	movlb	0	; () banked
  2012  0012F0  6FCA               	movwf	___ftmul@cntr& (0+255),b
  2013  0012F2                     l1953:
  2014                           
  2015                           ; BSR set to: 0
  2016  0012F2  A02E               	btfss	___ftmul@f1,0,c
  2017  0012F4  D009               	goto	l1957
  2018                           
  2019                           ; BSR set to: 0
  2020  0012F6  5031               	movf	___ftmul@f2,w,c
  2021  0012F8  0100               	movlb	0	; () banked
  2022  0012FA  27C7               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2023  0012FC  5032               	movf	___ftmul@f2+1,w,c
  2024  0012FE  0100               	movlb	0	; () banked
  2025  001300  23C8               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2026  001302  5033               	movf	___ftmul@f2+2,w,c
  2027  001304  0100               	movlb	0	; () banked
  2028  001306  23C9               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2029  001308                     l1957:
  2030                           
  2031                           ; BSR set to: 0
  2032  001308  90D8               	bcf	status,0,c
  2033  00130A  3230               	rrcf	___ftmul@f1+2,f,c
  2034  00130C  322F               	rrcf	___ftmul@f1+1,f,c
  2035  00130E  322E               	rrcf	___ftmul@f1,f,c
  2036  001310  90D8               	bcf	status,0,c
  2037  001312  3631               	rlcf	___ftmul@f2,f,c
  2038  001314  3632               	rlcf	___ftmul@f2+1,f,c
  2039  001316  3633               	rlcf	___ftmul@f2+2,f,c
  2040                           
  2041                           ; BSR set to: 0
  2042  001318  0100               	movlb	0	; () banked
  2043  00131A  2FCA               	decfsz	___ftmul@cntr& (0+255),f,b
  2044  00131C  D7EA               	goto	l1953
  2045                           
  2046                           ; BSR set to: 0
  2047                           
  2048                           ; BSR set to: 0
  2049  00131E  0E09               	movlw	9
  2050  001320  0100               	movlb	0	; () banked
  2051  001322  6FCA               	movwf	___ftmul@cntr& (0+255),b
  2052  001324                     l1963:
  2053                           
  2054                           ; BSR set to: 0
  2055  001324  A02E               	btfss	___ftmul@f1,0,c
  2056  001326  D009               	goto	l1967
  2057                           
  2058                           ; BSR set to: 0
  2059  001328  5031               	movf	___ftmul@f2,w,c
  2060  00132A  0100               	movlb	0	; () banked
  2061  00132C  27C7               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2062  00132E  5032               	movf	___ftmul@f2+1,w,c
  2063  001330  0100               	movlb	0	; () banked
  2064  001332  23C8               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2065  001334  5033               	movf	___ftmul@f2+2,w,c
  2066  001336  0100               	movlb	0	; () banked
  2067  001338  23C9               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2068  00133A                     l1967:
  2069                           
  2070                           ; BSR set to: 0
  2071  00133A  90D8               	bcf	status,0,c
  2072  00133C  3230               	rrcf	___ftmul@f1+2,f,c
  2073  00133E  322F               	rrcf	___ftmul@f1+1,f,c
  2074  001340  322E               	rrcf	___ftmul@f1,f,c
  2075  001342  0100               	movlb	0	; () banked
  2076  001344  90D8               	bcf	status,0,c
  2077  001346  33C9               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2078  001348  33C8               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2079  00134A  33C7               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2080                           
  2081                           ; BSR set to: 0
  2082  00134C  0100               	movlb	0	; () banked
  2083  00134E  2FCA               	decfsz	___ftmul@cntr& (0+255),f,b
  2084  001350  D7E9               	goto	l1963
  2085                           
  2086                           ; BSR set to: 0
  2087                           
  2088                           ; BSR set to: 0
  2089  001352  C0C7  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  2090  001356  C0C8  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2091  00135A  C0C9  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2092  00135E  C0C6  F016         	movff	___ftmul@exp,___ftpack@exp
  2093  001362  C0CB  F017         	movff	___ftmul@sign,___ftpack@sign
  2094  001366  EC8B  F00A         	call	___ftpack	;wreg free
  2095  00136A  C013  F02E         	movff	?___ftpack,?___ftmul
  2096  00136E  C014  F02F         	movff	?___ftpack+1,?___ftmul+1
  2097  001372  C015  F030         	movff	?___ftpack+2,?___ftmul+2
  2098  001376  0012               	return	
  2099  001378                     __end_of___ftmul:
  2100                           	opt stack 0
  2101                           tblptru	equ	0xFF8
  2102                           tblptrh	equ	0xFF7
  2103                           tblptrl	equ	0xFF6
  2104                           tablat	equ	0xFF5
  2105                           prodh	equ	0xFF4
  2106                           prodl	equ	0xFF3
  2107                           postinc0	equ	0xFEE
  2108                           wreg	equ	0xFE8
  2109                           indf1	equ	0xFE7
  2110                           postdec1	equ	0xFE5
  2111                           fsr1h	equ	0xFE2
  2112                           fsr1l	equ	0xFE1
  2113                           indf2	equ	0xFDF
  2114                           fsr2h	equ	0xFDA
  2115                           fsr2l	equ	0xFD9
  2116                           status	equ	0xFD8
  2117                           
  2118 ;; *************** function ___ftdiv *****************
  2119 ;; Defined at:
  2120 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  2121 ;; Parameters:    Size  Location     Type
  2122 ;;  f1              3   30[COMRAM] float 
  2123 ;;  f2              3   33[COMRAM] float 
  2124 ;; Auto vars:     Size  Location     Type
  2125 ;;  f3              3   40[COMRAM] float 
  2126 ;;  sign            1   44[COMRAM] unsigned char 
  2127 ;;  exp             1   43[COMRAM] unsigned char 
  2128 ;;  cntr            1   39[COMRAM] unsigned char 
  2129 ;; Return value:  Size  Location     Type
  2130 ;;                  3   30[COMRAM] float 
  2131 ;; Registers used:
  2132 ;;		wreg, status,2, status,0, cstack
  2133 ;; Tracked objects:
  2134 ;;		On entry : 0/0
  2135 ;;		On exit  : 0/0
  2136 ;;		Unchanged: 0/0
  2137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2138 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2139 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2140 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2141 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;Total ram usage:       15 bytes
  2143 ;; Hardware stack levels used:    1
  2144 ;; Hardware stack levels required when called:    3
  2145 ;; This function calls:
  2146 ;;		___ftpack
  2147 ;; This function is called by:
  2148 ;;		_calculateTemp
  2149 ;; This function uses a non-reentrant model
  2150 ;;
  2151                           
  2152                           	psect	text8
  2153  001378                     __ptext8:
  2154                           	opt stack 0
  2155  001378                     ___ftdiv:
  2156                           	opt stack 25
  2157                           
  2158                           ;incstack = 0
  2159  001378  C021  F025         	movff	___ftdiv@f1+2,??___ftdiv
  2160  00137C  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  2161  00137E  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  2162  001380  3420               	rlcf	___ftdiv@f1+1,w,c
  2163  001382  3625               	rlcf	??___ftdiv& (0+255),f,c
  2164  001384  E301               	bnc	u1371
  2165  001386  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  2166  001388                     u1371:
  2167  001388  5025               	movf	??___ftdiv,w,c
  2168  00138A  6E2C               	movwf	___ftdiv@exp,c
  2169  00138C  502C               	movf	___ftdiv@exp,w,c
  2170  00138E  A4D8               	btfss	status,2,c
  2171  001390  D007               	goto	l1887
  2172  001392  0E00               	movlw	0
  2173  001394  6E1F               	movwf	?___ftdiv,c
  2174  001396  0E00               	movlw	0
  2175  001398  6E20               	movwf	?___ftdiv+1,c
  2176  00139A  0E00               	movlw	0
  2177  00139C  6E21               	movwf	?___ftdiv+2,c
  2178  00139E  0012               	return	
  2179  0013A0                     l1887:
  2180  0013A0  C024  F025         	movff	___ftdiv@f2+2,??___ftdiv
  2181  0013A4  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  2182  0013A6  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  2183  0013A8  3423               	rlcf	___ftdiv@f2+1,w,c
  2184  0013AA  3625               	rlcf	??___ftdiv& (0+255),f,c
  2185  0013AC  E301               	bnc	u1391
  2186  0013AE  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  2187  0013B0                     u1391:
  2188  0013B0  5025               	movf	??___ftdiv,w,c
  2189  0013B2  6E2D               	movwf	___ftdiv@sign,c
  2190  0013B4  502D               	movf	___ftdiv@sign,w,c
  2191  0013B6  A4D8               	btfss	status,2,c
  2192  0013B8  D007               	goto	l1893
  2193  0013BA  0E00               	movlw	0
  2194  0013BC  6E1F               	movwf	?___ftdiv,c
  2195  0013BE  0E00               	movlw	0
  2196  0013C0  6E20               	movwf	?___ftdiv+1,c
  2197  0013C2  0E00               	movlw	0
  2198  0013C4  6E21               	movwf	?___ftdiv+2,c
  2199  0013C6  0012               	return	
  2200  0013C8                     l1893:
  2201  0013C8  0E00               	movlw	0
  2202  0013CA  6E29               	movwf	___ftdiv@f3,c
  2203  0013CC  0E00               	movlw	0
  2204  0013CE  6E2A               	movwf	___ftdiv@f3+1,c
  2205  0013D0  0E00               	movlw	0
  2206  0013D2  6E2B               	movwf	___ftdiv@f3+2,c
  2207  0013D4  502D               	movf	___ftdiv@sign,w,c
  2208  0013D6  0F89               	addlw	137
  2209  0013D8  5E2C               	subwf	___ftdiv@exp,f,c
  2210  0013DA  C021  F02D         	movff	___ftdiv@f1+2,___ftdiv@sign
  2211  0013DE  5024               	movf	___ftdiv@f2+2,w,c
  2212  0013E0  1A2D               	xorwf	___ftdiv@sign,f,c
  2213  0013E2  0E80               	movlw	128
  2214  0013E4  162D               	andwf	___ftdiv@sign,f,c
  2215  0013E6  8E20               	bsf	___ftdiv@f1+1,7,c
  2216  0013E8  0EFF               	movlw	255
  2217  0013EA  161F               	andwf	___ftdiv@f1,f,c
  2218  0013EC  0EFF               	movlw	255
  2219  0013EE  1620               	andwf	___ftdiv@f1+1,f,c
  2220  0013F0  0E00               	movlw	0
  2221  0013F2  1621               	andwf	___ftdiv@f1+2,f,c
  2222  0013F4  8E23               	bsf	___ftdiv@f2+1,7,c
  2223  0013F6  0EFF               	movlw	255
  2224  0013F8  1622               	andwf	___ftdiv@f2,f,c
  2225  0013FA  0EFF               	movlw	255
  2226  0013FC  1623               	andwf	___ftdiv@f2+1,f,c
  2227  0013FE  0E00               	movlw	0
  2228  001400  1624               	andwf	___ftdiv@f2+2,f,c
  2229  001402  0E18               	movlw	24
  2230  001404  6E28               	movwf	___ftdiv@cntr,c
  2231  001406                     l1913:
  2232  001406  90D8               	bcf	status,0,c
  2233  001408  3629               	rlcf	___ftdiv@f3,f,c
  2234  00140A  362A               	rlcf	___ftdiv@f3+1,f,c
  2235  00140C  362B               	rlcf	___ftdiv@f3+2,f,c
  2236  00140E  5022               	movf	___ftdiv@f2,w,c
  2237  001410  5C1F               	subwf	___ftdiv@f1,w,c
  2238  001412  5023               	movf	___ftdiv@f2+1,w,c
  2239  001414  5820               	subwfb	___ftdiv@f1+1,w,c
  2240  001416  5024               	movf	___ftdiv@f2+2,w,c
  2241  001418  5821               	subwfb	___ftdiv@f1+2,w,c
  2242  00141A  A0D8               	btfss	status,0,c
  2243  00141C  D007               	goto	l466
  2244  00141E  5022               	movf	___ftdiv@f2,w,c
  2245  001420  5E1F               	subwf	___ftdiv@f1,f,c
  2246  001422  5023               	movf	___ftdiv@f2+1,w,c
  2247  001424  5A20               	subwfb	___ftdiv@f1+1,f,c
  2248  001426  5024               	movf	___ftdiv@f2+2,w,c
  2249  001428  5A21               	subwfb	___ftdiv@f1+2,f,c
  2250  00142A  8029               	bsf	___ftdiv@f3,0,c
  2251  00142C                     l466:
  2252  00142C  90D8               	bcf	status,0,c
  2253  00142E  361F               	rlcf	___ftdiv@f1,f,c
  2254  001430  3620               	rlcf	___ftdiv@f1+1,f,c
  2255  001432  3621               	rlcf	___ftdiv@f1+2,f,c
  2256  001434  2E28               	decfsz	___ftdiv@cntr,f,c
  2257  001436  D7E7               	goto	l1913
  2258  001438  C029  F013         	movff	___ftdiv@f3,___ftpack@arg
  2259  00143C  C02A  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2260  001440  C02B  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2261  001444  C02C  F016         	movff	___ftdiv@exp,___ftpack@exp
  2262  001448  C02D  F017         	movff	___ftdiv@sign,___ftpack@sign
  2263  00144C  EC8B  F00A         	call	___ftpack	;wreg free
  2264  001450  C013  F01F         	movff	?___ftpack,?___ftdiv
  2265  001454  C014  F020         	movff	?___ftpack+1,?___ftdiv+1
  2266  001458  C015  F021         	movff	?___ftpack+2,?___ftdiv+2
  2267  00145C  0012               	return	
  2268  00145E                     __end_of___ftdiv:
  2269                           	opt stack 0
  2270                           tblptru	equ	0xFF8
  2271                           tblptrh	equ	0xFF7
  2272                           tblptrl	equ	0xFF6
  2273                           tablat	equ	0xFF5
  2274                           prodh	equ	0xFF4
  2275                           prodl	equ	0xFF3
  2276                           postinc0	equ	0xFEE
  2277                           wreg	equ	0xFE8
  2278                           indf1	equ	0xFE7
  2279                           postdec1	equ	0xFE5
  2280                           fsr1h	equ	0xFE2
  2281                           fsr1l	equ	0xFE1
  2282                           indf2	equ	0xFDF
  2283                           fsr2h	equ	0xFDA
  2284                           fsr2l	equ	0xFD9
  2285                           status	equ	0xFD8
  2286                           
  2287 ;; *************** function ___awtoft *****************
  2288 ;; Defined at:
  2289 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  2290 ;; Parameters:    Size  Location     Type
  2291 ;;  c               2   26[COMRAM] int 
  2292 ;; Auto vars:     Size  Location     Type
  2293 ;;  sign            1   29[COMRAM] unsigned char 
  2294 ;; Return value:  Size  Location     Type
  2295 ;;                  3   26[COMRAM] float 
  2296 ;; Registers used:
  2297 ;;		wreg, status,2, status,0, cstack
  2298 ;; Tracked objects:
  2299 ;;		On entry : 0/0
  2300 ;;		On exit  : 0/0
  2301 ;;		Unchanged: 0/0
  2302 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2303 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2304 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2305 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2306 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2307 ;;Total ram usage:        4 bytes
  2308 ;; Hardware stack levels used:    1
  2309 ;; Hardware stack levels required when called:    3
  2310 ;; This function calls:
  2311 ;;		___ftpack
  2312 ;; This function is called by:
  2313 ;;		_calculateTemp
  2314 ;; This function uses a non-reentrant model
  2315 ;;
  2316                           
  2317                           	psect	text9
  2318  00183E                     __ptext9:
  2319                           	opt stack 0
  2320  00183E                     ___awtoft:
  2321                           	opt stack 25
  2322                           
  2323                           ;incstack = 0
  2324  00183E  0E00               	movlw	0
  2325  001840  6E1E               	movwf	___awtoft@sign,c
  2326  001842  AE1C               	btfss	___awtoft@c+1,7,c
  2327  001844  D006               	goto	l1983
  2328  001846  6C1B               	negf	___awtoft@c,c
  2329  001848  1E1C               	comf	___awtoft@c+1,f,c
  2330  00184A  B0D8               	btfsc	status,0,c
  2331  00184C  2A1C               	incf	___awtoft@c+1,f,c
  2332  00184E  0E01               	movlw	1
  2333  001850  6E1E               	movwf	___awtoft@sign,c
  2334  001852                     l1983:
  2335  001852  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  2336  001856  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  2337  00185A  6A15               	clrf	___ftpack@arg+2,c
  2338  00185C  0E8E               	movlw	142
  2339  00185E  6E16               	movwf	___ftpack@exp,c
  2340  001860  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  2341  001864  EC8B  F00A         	call	___ftpack	;wreg free
  2342  001868  C013  F01B         	movff	?___ftpack,?___awtoft
  2343  00186C  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  2344  001870  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  2345  001874  0012               	return	
  2346  001876                     __end_of___awtoft:
  2347                           	opt stack 0
  2348                           tblptru	equ	0xFF8
  2349                           tblptrh	equ	0xFF7
  2350                           tblptrl	equ	0xFF6
  2351                           tablat	equ	0xFF5
  2352                           prodh	equ	0xFF4
  2353                           prodl	equ	0xFF3
  2354                           postinc0	equ	0xFEE
  2355                           wreg	equ	0xFE8
  2356                           indf1	equ	0xFE7
  2357                           postdec1	equ	0xFE5
  2358                           fsr1h	equ	0xFE2
  2359                           fsr1l	equ	0xFE1
  2360                           indf2	equ	0xFDF
  2361                           fsr2h	equ	0xFDA
  2362                           fsr2l	equ	0xFD9
  2363                           status	equ	0xFD8
  2364                           
  2365 ;; *************** function ___ftpack *****************
  2366 ;; Defined at:
  2367 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  2368 ;; Parameters:    Size  Location     Type
  2369 ;;  arg             3   18[COMRAM] unsigned um
  2370 ;;  exp             1   21[COMRAM] unsigned char 
  2371 ;;  sign            1   22[COMRAM] unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;		None
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  3   18[COMRAM] float 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2, status,0
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2383 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2384 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2385 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2386 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2387 ;;Total ram usage:        8 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:    2
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		___awtoft
  2394 ;;		___ftdiv
  2395 ;;		___ftmul
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           	psect	text10
  2400  001516                     __ptext10:
  2401                           	opt stack 0
  2402  001516                     ___ftpack:
  2403                           	opt stack 25
  2404                           
  2405                           ;incstack = 0
  2406  001516  5016               	movf	___ftpack@exp,w,c
  2407  001518  B4D8               	btfsc	status,2,c
  2408  00151A  D005               	goto	l1849
  2409  00151C  5013               	movf	___ftpack@arg,w,c
  2410  00151E  1014               	iorwf	___ftpack@arg+1,w,c
  2411  001520  1015               	iorwf	___ftpack@arg+2,w,c
  2412  001522  A4D8               	btfss	status,2,c
  2413  001524  D00C               	goto	l1855
  2414  001526                     l1849:
  2415  001526  0E00               	movlw	0
  2416  001528  6E13               	movwf	?___ftpack,c
  2417  00152A  0E00               	movlw	0
  2418  00152C  6E14               	movwf	?___ftpack+1,c
  2419  00152E  0E00               	movlw	0
  2420  001530  6E15               	movwf	?___ftpack+2,c
  2421  001532  0012               	return	
  2422  001534                     l1853:
  2423  001534  2A16               	incf	___ftpack@exp,f,c
  2424  001536  90D8               	bcf	status,0,c
  2425  001538  3215               	rrcf	___ftpack@arg+2,f,c
  2426  00153A  3214               	rrcf	___ftpack@arg+1,f,c
  2427  00153C  3213               	rrcf	___ftpack@arg,f,c
  2428  00153E                     l1855:
  2429  00153E  0E00               	movlw	0
  2430  001540  1413               	andwf	___ftpack@arg,w,c
  2431  001542  6E18               	movwf	??___ftpack& (0+255),c
  2432  001544  0E00               	movlw	0
  2433  001546  1414               	andwf	___ftpack@arg+1,w,c
  2434  001548  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2435  00154A  0EFE               	movlw	254
  2436  00154C  1415               	andwf	___ftpack@arg+2,w,c
  2437  00154E  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2438  001550  5018               	movf	??___ftpack,w,c
  2439  001552  1019               	iorwf	??___ftpack+1,w,c
  2440  001554  101A               	iorwf	??___ftpack+2,w,c
  2441  001556  B4D8               	btfsc	status,2,c
  2442  001558  D00C               	goto	l1861
  2443  00155A  D7EC               	goto	l1853
  2444  00155C                     l1857:
  2445  00155C  2A16               	incf	___ftpack@exp,f,c
  2446  00155E  0E01               	movlw	1
  2447  001560  2613               	addwf	___ftpack@arg,f,c
  2448  001562  0E00               	movlw	0
  2449  001564  2214               	addwfc	___ftpack@arg+1,f,c
  2450  001566  0E00               	movlw	0
  2451  001568  2215               	addwfc	___ftpack@arg+2,f,c
  2452  00156A  90D8               	bcf	status,0,c
  2453  00156C  3215               	rrcf	___ftpack@arg+2,f,c
  2454  00156E  3214               	rrcf	___ftpack@arg+1,f,c
  2455  001570  3213               	rrcf	___ftpack@arg,f,c
  2456  001572                     l1861:
  2457  001572  0E00               	movlw	0
  2458  001574  1413               	andwf	___ftpack@arg,w,c
  2459  001576  6E18               	movwf	??___ftpack& (0+255),c
  2460  001578  0E00               	movlw	0
  2461  00157A  1414               	andwf	___ftpack@arg+1,w,c
  2462  00157C  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2463  00157E  0EFF               	movlw	255
  2464  001580  1415               	andwf	___ftpack@arg+2,w,c
  2465  001582  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2466  001584  5018               	movf	??___ftpack,w,c
  2467  001586  1019               	iorwf	??___ftpack+1,w,c
  2468  001588  101A               	iorwf	??___ftpack+2,w,c
  2469  00158A  B4D8               	btfsc	status,2,c
  2470  00158C  D006               	goto	l1865
  2471  00158E  D7E6               	goto	l1857
  2472  001590                     l1863:
  2473  001590  0616               	decf	___ftpack@exp,f,c
  2474  001592  90D8               	bcf	status,0,c
  2475  001594  3613               	rlcf	___ftpack@arg,f,c
  2476  001596  3614               	rlcf	___ftpack@arg+1,f,c
  2477  001598  3615               	rlcf	___ftpack@arg+2,f,c
  2478  00159A                     l1865:
  2479  00159A  BE14               	btfsc	___ftpack@arg+1,7,c
  2480  00159C  D003               	goto	l408
  2481  00159E  0E02               	movlw	2
  2482  0015A0  6016               	cpfslt	___ftpack@exp,c
  2483  0015A2  D7F6               	goto	l1863
  2484  0015A4                     l408:
  2485  0015A4  A016               	btfss	___ftpack@exp,0,c
  2486  0015A6  9E14               	bcf	___ftpack@arg+1,7,c
  2487  0015A8  90D8               	bcf	status,0,c
  2488  0015AA  3216               	rrcf	___ftpack@exp,f,c
  2489  0015AC  5016               	movf	___ftpack@exp,w,c
  2490  0015AE  1215               	iorwf	___ftpack@arg+2,f,c
  2491  0015B0  5017               	movf	___ftpack@sign,w,c
  2492  0015B2  A4D8               	btfss	status,2,c
  2493  0015B4  8E15               	bsf	___ftpack@arg+2,7,c
  2494  0015B6  C013  F013         	movff	___ftpack@arg,?___ftpack
  2495  0015BA  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  2496  0015BE  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  2497  0015C2  0012               	return	
  2498  0015C4                     __end_of___ftpack:
  2499                           	opt stack 0
  2500                           tblptru	equ	0xFF8
  2501                           tblptrh	equ	0xFF7
  2502                           tblptrl	equ	0xFF6
  2503                           tablat	equ	0xFF5
  2504                           prodh	equ	0xFF4
  2505                           prodl	equ	0xFF3
  2506                           postinc0	equ	0xFEE
  2507                           wreg	equ	0xFE8
  2508                           indf1	equ	0xFE7
  2509                           postdec1	equ	0xFE5
  2510                           fsr1h	equ	0xFE2
  2511                           fsr1l	equ	0xFE1
  2512                           indf2	equ	0xFDF
  2513                           fsr2h	equ	0xFDA
  2514                           fsr2l	equ	0xFD9
  2515                           status	equ	0xFD8
  2516                           
  2517 ;; *************** function _initUART1 *****************
  2518 ;; Defined at:
  2519 ;;		line 15 in file "uart.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;		None
  2522 ;; Auto vars:     Size  Location     Type
  2523 ;;		None
  2524 ;; Return value:  Size  Location     Type
  2525 ;;                  1    wreg      void 
  2526 ;; Registers used:
  2527 ;;		wreg, status,2
  2528 ;; Tracked objects:
  2529 ;;		On entry : 0/0
  2530 ;;		On exit  : 0/0
  2531 ;;		Unchanged: 0/0
  2532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2537 ;;Total ram usage:        0 bytes
  2538 ;; Hardware stack levels used:    1
  2539 ;; Hardware stack levels required when called:    2
  2540 ;; This function calls:
  2541 ;;		Nothing
  2542 ;; This function is called by:
  2543 ;;		_main
  2544 ;; This function uses a non-reentrant model
  2545 ;;
  2546                           
  2547                           	psect	text11
  2548  001914                     __ptext11:
  2549                           	opt stack 0
  2550  001914                     _initUART1:
  2551                           	opt stack 28
  2552                           
  2553                           ;uart.c: 18: TRISCbits.TRISC7 = 1;
  2554                           
  2555                           ;incstack = 0
  2556  001914  8E94               	bsf	3988,7,c	;volatile
  2557                           
  2558                           ;uart.c: 19: TRISCbits.TRISC6 = 0;
  2559  001916  9C94               	bcf	3988,6,c	;volatile
  2560                           
  2561                           ;uart.c: 21: TXSTA1bits.BRGH = 1;
  2562  001918  84AD               	bsf	4013,2,c	;volatile
  2563                           
  2564                           ;uart.c: 22: BAUDCON1bits.BRG16 = 1;
  2565  00191A  867E               	bsf	3966,3,c	;volatile
  2566                           
  2567                           ;uart.c: 29: SPBRGH1 = 0;
  2568  00191C  0E00               	movlw	0
  2569  00191E  6E7F               	movwf	3967,c	;volatile
  2570                           
  2571                           ;uart.c: 30: SPBRG1 = 34;
  2572  001920  0E22               	movlw	34
  2573  001922  6EB0               	movwf	4016,c	;volatile
  2574                           
  2575                           ;uart.c: 34: TXSTA1bits.SYNC = 0;
  2576  001924  98AD               	bcf	4013,4,c	;volatile
  2577                           
  2578                           ;uart.c: 35: RCSTA1bits.SPEN = 1;
  2579  001926  8EAC               	bsf	4012,7,c	;volatile
  2580                           
  2581                           ;uart.c: 39: PIE1bits.TXIE = 1;
  2582  001928  889D               	bsf	3997,4,c	;volatile
  2583                           
  2584                           ;uart.c: 40: PIE1bits.RC1IE = 1;
  2585  00192A  8A9D               	bsf	3997,5,c	;volatile
  2586                           
  2587                           ;uart.c: 45: RCSTA1bits.CREN = 1;
  2588  00192C  88AC               	bsf	4012,4,c	;volatile
  2589  00192E  0012               	return		;funcret
  2590  001930                     __end_of_initUART1:
  2591                           	opt stack 0
  2592                           tblptru	equ	0xFF8
  2593                           tblptrh	equ	0xFF7
  2594                           tblptrl	equ	0xFF6
  2595                           tablat	equ	0xFF5
  2596                           prodh	equ	0xFF4
  2597                           prodl	equ	0xFF3
  2598                           postinc0	equ	0xFEE
  2599                           wreg	equ	0xFE8
  2600                           indf1	equ	0xFE7
  2601                           postdec1	equ	0xFE5
  2602                           fsr1h	equ	0xFE2
  2603                           fsr1l	equ	0xFE1
  2604                           indf2	equ	0xFDF
  2605                           fsr2h	equ	0xFDA
  2606                           fsr2l	equ	0xFD9
  2607                           status	equ	0xFD8
  2608                           
  2609 ;; *************** function _initLoRa *****************
  2610 ;; Defined at:
  2611 ;;		line 148 in file "main.c"
  2612 ;; Parameters:    Size  Location     Type
  2613 ;;		None
  2614 ;; Auto vars:     Size  Location     Type
  2615 ;;		None
  2616 ;; Return value:  Size  Location     Type
  2617 ;;                  1    wreg      void 
  2618 ;; Registers used:
  2619 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2620 ;; Tracked objects:
  2621 ;;		On entry : 0/0
  2622 ;;		On exit  : 0/0
  2623 ;;		Unchanged: 0/0
  2624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2625 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2626 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2627 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2628 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2629 ;;Total ram usage:        0 bytes
  2630 ;; Hardware stack levels used:    1
  2631 ;; Hardware stack levels required when called:    3
  2632 ;; This function calls:
  2633 ;;		_delay
  2634 ;;		_sendUARTMessage
  2635 ;; This function is called by:
  2636 ;;		_main
  2637 ;; This function uses a non-reentrant model
  2638 ;;
  2639                           
  2640                           	psect	text12
  2641  0017FC                     __ptext12:
  2642                           	opt stack 0
  2643  0017FC                     _initLoRa:
  2644                           	opt stack 27
  2645                           
  2646                           ;main.c: 149: sendUARTMessage(&set_dev_eui);
  2647                           
  2648                           ;incstack = 0
  2649  0017FC  0E80               	movlw	low _set_dev_eui
  2650  0017FE  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2651  001800  0E0F               	movlw	high _set_dev_eui
  2652  001802  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2653  001804  ECA5  F00C         	call	_sendUARTMessage	;wreg free
  2654                           
  2655                           ;main.c: 150: delay();
  2656  001808  ECB5  F00B         	call	_delay	;wreg free
  2657                           
  2658                           ;main.c: 151: sendUARTMessage(&set_app_eui);
  2659  00180C  0E5E               	movlw	low _set_app_eui
  2660  00180E  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2661  001810  0E0F               	movlw	high _set_app_eui
  2662  001812  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2663  001814  ECA5  F00C         	call	_sendUARTMessage	;wreg free
  2664                           
  2665                           ;main.c: 152: delay();
  2666  001818  ECB5  F00B         	call	_delay	;wreg free
  2667                           
  2668                           ;main.c: 153: sendUARTMessage(&set_app_key);
  2669  00181C  0E2C               	movlw	low _set_app_key
  2670  00181E  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2671  001820  0E0F               	movlw	high _set_app_key
  2672  001822  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2673  001824  ECA5  F00C         	call	_sendUARTMessage	;wreg free
  2674                           
  2675                           ;main.c: 154: delay();
  2676  001828  ECB5  F00B         	call	_delay	;wreg free
  2677                           
  2678                           ;main.c: 155: sendUARTMessage(&join_network);
  2679  00182C  0EA2               	movlw	low _join_network
  2680  00182E  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2681  001830  0E0F               	movlw	high _join_network
  2682  001832  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2683  001834  ECA5  F00C         	call	_sendUARTMessage	;wreg free
  2684                           
  2685                           ;main.c: 156: delay();
  2686  001838  ECB5  F00B         	call	_delay	;wreg free
  2687  00183C  0012               	return		;funcret
  2688  00183E                     __end_of_initLoRa:
  2689                           	opt stack 0
  2690                           tblptru	equ	0xFF8
  2691                           tblptrh	equ	0xFF7
  2692                           tblptrl	equ	0xFF6
  2693                           tablat	equ	0xFF5
  2694                           prodh	equ	0xFF4
  2695                           prodl	equ	0xFF3
  2696                           postinc0	equ	0xFEE
  2697                           wreg	equ	0xFE8
  2698                           indf1	equ	0xFE7
  2699                           postdec1	equ	0xFE5
  2700                           fsr1h	equ	0xFE2
  2701                           fsr1l	equ	0xFE1
  2702                           indf2	equ	0xFDF
  2703                           fsr2h	equ	0xFDA
  2704                           fsr2l	equ	0xFD9
  2705                           status	equ	0xFD8
  2706                           
  2707 ;; *************** function _sendUARTMessage *****************
  2708 ;; Defined at:
  2709 ;;		line 134 in file "main.c"
  2710 ;; Parameters:    Size  Location     Type
  2711 ;;  newMessagePo    2   18[COMRAM] PTR unsigned char 
  2712 ;;		 -> join_network(16), set_app_key(50), set_app_eui(34), set_dev_eui(34), 
  2713 ;;		 -> temp_display_message(20), 
  2714 ;; Auto vars:     Size  Location     Type
  2715 ;;		None
  2716 ;; Return value:  Size  Location     Type
  2717 ;;                  1    wreg      void 
  2718 ;; Registers used:
  2719 ;;		wreg, status,2, status,0
  2720 ;; Tracked objects:
  2721 ;;		On entry : 0/0
  2722 ;;		On exit  : 0/0
  2723 ;;		Unchanged: 0/0
  2724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2726 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2728 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2729 ;;Total ram usage:        2 bytes
  2730 ;; Hardware stack levels used:    1
  2731 ;; Hardware stack levels required when called:    2
  2732 ;; This function calls:
  2733 ;;		Nothing
  2734 ;; This function is called by:
  2735 ;;		_initLoRa
  2736 ;;		_main
  2737 ;; This function uses a non-reentrant model
  2738 ;;
  2739                           
  2740                           	psect	text13
  2741  00194A                     __ptext13:
  2742                           	opt stack 0
  2743  00194A                     _sendUARTMessage:
  2744                           	opt stack 28
  2745                           
  2746                           ;main.c: 136: if(isCommandSent == 1){
  2747                           
  2748                           ;incstack = 0
  2749  00194A  A04C               	btfss	_isCommandSent/(0+8),_isCommandSent& (0+7),c
  2750  00194C  0012               	return	
  2751                           
  2752                           ;main.c: 138: currentMessagePointer = newMessagePointer;
  2753  00194E  C013  F03C         	movff	sendUARTMessage@newMessagePointer,_currentMessagePointer
  2754  001952  C014  F03D         	movff	sendUARTMessage@newMessagePointer+1,_currentMessagePointer+1
  2755                           
  2756                           ;main.c: 143: PIE1bits.TXIE = 1;
  2757  001956  889D               	bsf	3997,4,c	;volatile
  2758                           
  2759                           ;main.c: 144: TXSTA1bits.TXEN = 1;
  2760  001958  8AAD               	bsf	4013,5,c	;volatile
  2761  00195A  0012               	return	
  2762  00195C                     __end_of_sendUARTMessage:
  2763                           	opt stack 0
  2764                           tblptru	equ	0xFF8
  2765                           tblptrh	equ	0xFF7
  2766                           tblptrl	equ	0xFF6
  2767                           tablat	equ	0xFF5
  2768                           prodh	equ	0xFF4
  2769                           prodl	equ	0xFF3
  2770                           postinc0	equ	0xFEE
  2771                           wreg	equ	0xFE8
  2772                           indf1	equ	0xFE7
  2773                           postdec1	equ	0xFE5
  2774                           fsr1h	equ	0xFE2
  2775                           fsr1l	equ	0xFE1
  2776                           indf2	equ	0xFDF
  2777                           fsr2h	equ	0xFDA
  2778                           fsr2l	equ	0xFD9
  2779                           status	equ	0xFD8
  2780                           
  2781 ;; *************** function _delay *****************
  2782 ;; Defined at:
  2783 ;;		line 158 in file "main.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;		None
  2786 ;; Auto vars:     Size  Location     Type
  2787 ;;  time            4   19[COMRAM] long 
  2788 ;; Return value:  Size  Location     Type
  2789 ;;                  1    wreg      void 
  2790 ;; Registers used:
  2791 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2792 ;; Tracked objects:
  2793 ;;		On entry : 0/0
  2794 ;;		On exit  : 0/0
  2795 ;;		Unchanged: 0/0
  2796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2798 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2799 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;Total ram usage:        5 bytes
  2802 ;; Hardware stack levels used:    1
  2803 ;; Hardware stack levels required when called:    2
  2804 ;; This function calls:
  2805 ;;		Nothing
  2806 ;; This function is called by:
  2807 ;;		_initLoRa
  2808 ;;		_main
  2809 ;; This function uses a non-reentrant model
  2810 ;;
  2811                           
  2812                           	psect	text14
  2813  00176A                     __ptext14:
  2814                           	opt stack 0
  2815  00176A                     _delay:
  2816                           	opt stack 27
  2817                           
  2818                           ;main.c: 159: long time = 0;
  2819                           
  2820                           ;incstack = 0
  2821  00176A  0E00               	movlw	0
  2822  00176C  6E14               	movwf	delay@time,c
  2823  00176E  0E00               	movlw	0
  2824  001770  6E15               	movwf	delay@time+1,c
  2825  001772  0E00               	movlw	0
  2826  001774  6E16               	movwf	delay@time+2,c
  2827  001776  0E00               	movlw	0
  2828  001778  6E17               	movwf	delay@time+3,c
  2829                           
  2830                           ;main.c: 160: while(time < DELAY){
  2831  00177A  D006               	goto	l1653
  2832  00177C                     l1651:
  2833                           
  2834                           ;main.c: 161: time++;
  2835  00177C  0E01               	movlw	1
  2836  00177E  2614               	addwf	delay@time,f,c
  2837  001780  0E00               	movlw	0
  2838  001782  2215               	addwfc	delay@time+1,f,c
  2839  001784  2216               	addwfc	delay@time+2,f,c
  2840  001786  2217               	addwfc	delay@time+3,f,c
  2841  001788                     l1653:
  2842  001788  0E28               	movlw	low _DELAY
  2843  00178A  6EF6               	movwf	tblptrl,c
  2844  00178C                     	if	1	;There is more than 1 active tblptr byte
  2845  00178C  0E0F               	movlw	high _DELAY
  2846  00178E  6EF7               	movwf	tblptrh,c
  2847  001790                     	endif
  2848  001790                     	if	1	;There are 3 active tblptr bytes
  2849  001790  0E00               	movlw	low (_DELAY shr (0+16))
  2850  001792  6EF8               	movwf	tblptru,c
  2851  001794                     	endif
  2852  001794  0009               	tblrd		*+
  2853  001796  50F5               	movf	tablat,w,c
  2854  001798  5C14               	subwf	delay@time,w,c
  2855  00179A  0009               	tblrd		*+
  2856  00179C  50F5               	movf	tablat,w,c
  2857  00179E  5815               	subwfb	delay@time+1,w,c
  2858  0017A0  0009               	tblrd		*+
  2859  0017A2  50F5               	movf	tablat,w,c
  2860  0017A4  5816               	subwfb	delay@time+2,w,c
  2861  0017A6  5017               	movf	delay@time+3,w,c
  2862  0017A8  0A80               	xorlw	128
  2863  0017AA  6E13               	movwf	??_delay& (0+255),c
  2864  0017AC  0009               	tblrd		*+
  2865  0017AE  50F5               	movf	tablat,w,c
  2866  0017B0  0A80               	xorlw	128
  2867  0017B2  5813               	subwfb	??_delay& (0+255),w,c
  2868  0017B4  B0D8               	btfsc	status,0,c
  2869  0017B6  0012               	return	
  2870  0017B8  D7E1               	goto	l1651
  2871  0017BA                     __end_of_delay:
  2872                           	opt stack 0
  2873                           tblptru	equ	0xFF8
  2874                           tblptrh	equ	0xFF7
  2875                           tblptrl	equ	0xFF6
  2876                           tablat	equ	0xFF5
  2877                           prodh	equ	0xFF4
  2878                           prodl	equ	0xFF3
  2879                           postinc0	equ	0xFEE
  2880                           wreg	equ	0xFE8
  2881                           indf1	equ	0xFE7
  2882                           postdec1	equ	0xFE5
  2883                           fsr1h	equ	0xFE2
  2884                           fsr1l	equ	0xFE1
  2885                           indf2	equ	0xFDF
  2886                           fsr2h	equ	0xFDA
  2887                           fsr2l	equ	0xFD9
  2888                           status	equ	0xFD8
  2889                           
  2890 ;; *************** function _initInterrupts *****************
  2891 ;; Defined at:
  2892 ;;		line 128 in file "main.c"
  2893 ;; Parameters:    Size  Location     Type
  2894 ;;		None
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, status,2
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2906 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2909 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2910 ;;Total ram usage:        0 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    2
  2913 ;; This function calls:
  2914 ;;		Nothing
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;; This function uses a non-reentrant model
  2918 ;;
  2919                           
  2920                           	psect	text15
  2921  00196C                     __ptext15:
  2922                           	opt stack 0
  2923  00196C                     _initInterrupts:
  2924                           	opt stack 28
  2925                           
  2926                           ;main.c: 129: INTCON = 0b11000000;
  2927                           
  2928                           ;incstack = 0
  2929  00196C  0EC0               	movlw	192
  2930  00196E  6EF2               	movwf	intcon,c	;volatile
  2931                           
  2932                           ;main.c: 130: RCONbits.IPEN = 0;
  2933  001970  9ED0               	bcf	4048,7,c	;volatile
  2934  001972  0012               	return		;funcret
  2935  001974                     __end_of_initInterrupts:
  2936                           	opt stack 0
  2937                           tblptru	equ	0xFF8
  2938                           tblptrh	equ	0xFF7
  2939                           tblptrl	equ	0xFF6
  2940                           tablat	equ	0xFF5
  2941                           prodh	equ	0xFF4
  2942                           prodl	equ	0xFF3
  2943                           intcon	equ	0xFF2
  2944                           postinc0	equ	0xFEE
  2945                           wreg	equ	0xFE8
  2946                           indf1	equ	0xFE7
  2947                           postdec1	equ	0xFE5
  2948                           fsr1h	equ	0xFE2
  2949                           fsr1l	equ	0xFE1
  2950                           indf2	equ	0xFDF
  2951                           fsr2h	equ	0xFDA
  2952                           fsr2l	equ	0xFD9
  2953                           status	equ	0xFD8
  2954                           
  2955 ;; *************** function _initADC *****************
  2956 ;; Defined at:
  2957 ;;		line 66 in file "main.c"
  2958 ;; Parameters:    Size  Location     Type
  2959 ;;		None
  2960 ;; Auto vars:     Size  Location     Type
  2961 ;;		None
  2962 ;; Return value:  Size  Location     Type
  2963 ;;                  1    wreg      void 
  2964 ;; Registers used:
  2965 ;;		wreg, status,2
  2966 ;; Tracked objects:
  2967 ;;		On entry : 0/0
  2968 ;;		On exit  : 0/0
  2969 ;;		Unchanged: 0/0
  2970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2971 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2972 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2974 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2975 ;;Total ram usage:        0 bytes
  2976 ;; Hardware stack levels used:    1
  2977 ;; Hardware stack levels required when called:    2
  2978 ;; This function calls:
  2979 ;;		Nothing
  2980 ;; This function is called by:
  2981 ;;		_main
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text16
  2986  0018E6                     __ptext16:
  2987                           	opt stack 0
  2988  0018E6                     _initADC:
  2989                           	opt stack 28
  2990                           
  2991                           ;main.c: 67: TRISAbits.TRISA0 = '1';
  2992                           
  2993                           ;incstack = 0
  2994  0018E6  8092               	bsf	3986,0,c	;volatile
  2995                           
  2996                           ;main.c: 68: TRISAbits.TRISA1 = '1';
  2997  0018E8  8292               	bsf	3986,1,c	;volatile
  2998                           
  2999                           ;main.c: 69: PORTAbits.RA0 = '0';
  3000  0018EA  9080               	bcf	3968,0,c	;volatile
  3001                           
  3002                           ;main.c: 70: PORTAbits.RA1 = '0';
  3003  0018EC  9280               	bcf	3968,1,c	;volatile
  3004                           
  3005                           ;main.c: 72: PORTBbits.RB0 = '0';
  3006  0018EE  9081               	bcf	3969,0,c	;volatile
  3007                           
  3008                           ;main.c: 73: TRISBbits.TRISB0 = '1';
  3009  0018F0  8093               	bsf	3987,0,c	;volatile
  3010                           
  3011                           ;main.c: 74: PORTBbits.RB1 = '0';
  3012  0018F2  9281               	bcf	3969,1,c	;volatile
  3013                           
  3014                           ;main.c: 75: TRISBbits.TRISB1 = '1';
  3015  0018F4  8293               	bsf	3987,1,c	;volatile
  3016                           
  3017                           ;main.c: 78: ANCON0 = 0xFC;
  3018  0018F6  0EFC               	movlw	252
  3019  0018F8  010F               	movlb	15	; () banked
  3020  0018FA  6F48               	movwf	72,b	;volatile
  3021                           
  3022                           ;main.c: 79: ANCON1 = 0x1C;
  3023  0018FC  0E1C               	movlw	28
  3024  0018FE  010F               	movlb	15	; () banked
  3025  001900  6F49               	movwf	73,b	;volatile
  3026                           
  3027                           ;main.c: 80: ADCON0 = 0x00;
  3028  001902  0E00               	movlw	0
  3029  001904  6EC2               	movwf	4034,c	;volatile
  3030                           
  3031                           ;main.c: 81: ADCON1 = 0b10111110;
  3032  001906  0EBE               	movlw	190
  3033  001908  6EC1               	movwf	4033,c	;volatile
  3034                           
  3035                           ; BSR set to: 15
  3036                           ;main.c: 82: ADCON0bits.ADON = 0x01;
  3037  00190A  80C2               	bsf	4034,0,c	;volatile
  3038                           
  3039                           ; BSR set to: 15
  3040                           ;main.c: 84: PIR1bits.ADIF = 0;
  3041  00190C  9C9E               	bcf	3998,6,c	;volatile
  3042                           
  3043                           ; BSR set to: 15
  3044                           ;main.c: 85: PIE1bits.ADIE = 1;
  3045  00190E  8C9D               	bsf	3997,6,c	;volatile
  3046                           
  3047                           ; BSR set to: 15
  3048                           ;main.c: 88: ADCON0bits.GO_DONE = 1;
  3049  001910  82C2               	bsf	4034,1,c	;volatile
  3050                           
  3051                           ; BSR set to: 15
  3052  001912  0012               	return		;funcret
  3053  001914                     __end_of_initADC:
  3054                           	opt stack 0
  3055                           tblptru	equ	0xFF8
  3056                           tblptrh	equ	0xFF7
  3057                           tblptrl	equ	0xFF6
  3058                           tablat	equ	0xFF5
  3059                           prodh	equ	0xFF4
  3060                           prodl	equ	0xFF3
  3061                           intcon	equ	0xFF2
  3062                           postinc0	equ	0xFEE
  3063                           wreg	equ	0xFE8
  3064                           indf1	equ	0xFE7
  3065                           postdec1	equ	0xFE5
  3066                           fsr1h	equ	0xFE2
  3067                           fsr1l	equ	0xFE1
  3068                           indf2	equ	0xFDF
  3069                           fsr2h	equ	0xFDA
  3070                           fsr2l	equ	0xFD9
  3071                           status	equ	0xFD8
  3072                           
  3073 ;; *************** function _clearUARTReceiveBuffer *****************
  3074 ;; Defined at:
  3075 ;;		line 55 in file "uart.c"
  3076 ;; Parameters:    Size  Location     Type
  3077 ;;		None
  3078 ;; Auto vars:     Size  Location     Type
  3079 ;;  i               2   18[COMRAM] int 
  3080 ;; Return value:  Size  Location     Type
  3081 ;;                  1    wreg      void 
  3082 ;; Registers used:
  3083 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3084 ;; Tracked objects:
  3085 ;;		On entry : 0/0
  3086 ;;		On exit  : 0/0
  3087 ;;		Unchanged: 0/0
  3088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3089 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3090 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3091 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3092 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3093 ;;Total ram usage:        2 bytes
  3094 ;; Hardware stack levels used:    1
  3095 ;; Hardware stack levels required when called:    2
  3096 ;; This function calls:
  3097 ;;		Nothing
  3098 ;; This function is called by:
  3099 ;;		_main
  3100 ;; This function uses a non-reentrant model
  3101 ;;
  3102                           
  3103                           	psect	text17
  3104  001876                     __ptext17:
  3105                           	opt stack 0
  3106  001876                     _clearUARTReceiveBuffer:
  3107                           	opt stack 28
  3108                           
  3109                           ;uart.c: 56: for(int i = 0; i<100; i++){
  3110                           
  3111                           ; BSR set to: 15
  3112                           ;incstack = 0
  3113  001876  0E00               	movlw	0
  3114  001878  6E14               	movwf	clearUARTReceiveBuffer@i+1,c
  3115  00187A  0E00               	movlw	0
  3116  00187C  6E13               	movwf	clearUARTReceiveBuffer@i,c
  3117  00187E                     l1719:
  3118  00187E  BE14               	btfsc	clearUARTReceiveBuffer@i+1,7,c
  3119  001880  D006               	goto	l1723
  3120  001882  5014               	movf	clearUARTReceiveBuffer@i+1,w,c
  3121  001884  E10F               	bnz	l1729
  3122  001886  0E64               	movlw	100
  3123  001888  5C13               	subwf	clearUARTReceiveBuffer@i,w,c
  3124  00188A  B0D8               	btfsc	status,0,c
  3125  00188C  D00B               	goto	l1729
  3126  00188E                     l1723:
  3127                           
  3128                           ;uart.c: 57: uart_receive_buffer[i] = '\0';
  3129  00188E  0E60               	movlw	low _uart_receive_buffer
  3130  001890  2413               	addwf	clearUARTReceiveBuffer@i,w,c
  3131  001892  6ED9               	movwf	fsr2l,c
  3132  001894  0E00               	movlw	high _uart_receive_buffer
  3133  001896  2014               	addwfc	clearUARTReceiveBuffer@i+1,w,c
  3134  001898  6EDA               	movwf	fsr2h,c
  3135  00189A  0E00               	movlw	0
  3136  00189C  6EDF               	movwf	indf2,c
  3137  00189E  4A13               	infsnz	clearUARTReceiveBuffer@i,f,c
  3138  0018A0  2A14               	incf	clearUARTReceiveBuffer@i+1,f,c
  3139  0018A2  D7ED               	goto	l1719
  3140  0018A4                     l1729:
  3141                           
  3142                           ;uart.c: 58: }
  3143                           ;uart.c: 59: uart_receive_buffer_index= 0 ;
  3144  0018A4  0E00               	movlw	0
  3145  0018A6  6E4B               	movwf	_uart_receive_buffer_index+1,c
  3146  0018A8  0E00               	movlw	0
  3147  0018AA  6E4A               	movwf	_uart_receive_buffer_index,c
  3148  0018AC  0012               	return		;funcret
  3149  0018AE                     __end_of_clearUARTReceiveBuffer:
  3150                           	opt stack 0
  3151                           tblptru	equ	0xFF8
  3152                           tblptrh	equ	0xFF7
  3153                           tblptrl	equ	0xFF6
  3154                           tablat	equ	0xFF5
  3155                           prodh	equ	0xFF4
  3156                           prodl	equ	0xFF3
  3157                           intcon	equ	0xFF2
  3158                           postinc0	equ	0xFEE
  3159                           wreg	equ	0xFE8
  3160                           indf1	equ	0xFE7
  3161                           postdec1	equ	0xFE5
  3162                           fsr1h	equ	0xFE2
  3163                           fsr1l	equ	0xFE1
  3164                           indf2	equ	0xFDF
  3165                           fsr2h	equ	0xFDA
  3166                           fsr2l	equ	0xFD9
  3167                           status	equ	0xFD8
  3168                           
  3169 ;; *************** function _UARTReceive *****************
  3170 ;; Defined at:
  3171 ;;		line 47 in file "uart.c"
  3172 ;; Parameters:    Size  Location     Type
  3173 ;;  on_or_off       1    wreg     unsigned char 
  3174 ;; Auto vars:     Size  Location     Type
  3175 ;;  on_or_off       1   18[COMRAM] unsigned char 
  3176 ;; Return value:  Size  Location     Type
  3177 ;;                  1    wreg      void 
  3178 ;; Registers used:
  3179 ;;		wreg, status,2, status,0
  3180 ;; Tracked objects:
  3181 ;;		On entry : 0/0
  3182 ;;		On exit  : 0/0
  3183 ;;		Unchanged: 0/0
  3184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3186 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3188 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3189 ;;Total ram usage:        1 bytes
  3190 ;; Hardware stack levels used:    1
  3191 ;; Hardware stack levels required when called:    2
  3192 ;; This function calls:
  3193 ;;		Nothing
  3194 ;; This function is called by:
  3195 ;;		_main
  3196 ;; This function uses a non-reentrant model
  3197 ;;
  3198                           
  3199                           	psect	text18
  3200  00195C                     __ptext18:
  3201                           	opt stack 0
  3202  00195C                     _UARTReceive:
  3203                           	opt stack 28
  3204                           
  3205                           ;incstack = 0
  3206                           ;UARTReceive@on_or_off stored from wreg
  3207  00195C  6E13               	movwf	UARTReceive@on_or_off,c
  3208                           
  3209                           ;uart.c: 48: if(on_or_off == 1){
  3210  00195E  0413               	decf	UARTReceive@on_or_off,w,c
  3211  001960  A4D8               	btfss	status,2,c
  3212  001962  D002               	goto	l176
  3213                           
  3214                           ;uart.c: 49: RCSTA1bits.CREN = 1;
  3215  001964  88AC               	bsf	4012,4,c	;volatile
  3216                           
  3217                           ;uart.c: 50: }
  3218  001966  0012               	return	
  3219  001968                     l176:
  3220                           
  3221                           ;uart.c: 51: else{
  3222                           ;uart.c: 52: RCSTA1bits.CREN = 0;
  3223  001968  98AC               	bcf	4012,4,c	;volatile
  3224  00196A  0012               	return	
  3225  00196C                     __end_of_UARTReceive:
  3226                           	opt stack 0
  3227                           tblptru	equ	0xFF8
  3228                           tblptrh	equ	0xFF7
  3229                           tblptrl	equ	0xFF6
  3230                           tablat	equ	0xFF5
  3231                           prodh	equ	0xFF4
  3232                           prodl	equ	0xFF3
  3233                           intcon	equ	0xFF2
  3234                           postinc0	equ	0xFEE
  3235                           wreg	equ	0xFE8
  3236                           indf1	equ	0xFE7
  3237                           postdec1	equ	0xFE5
  3238                           fsr1h	equ	0xFE2
  3239                           fsr1l	equ	0xFE1
  3240                           indf2	equ	0xFDF
  3241                           fsr2h	equ	0xFDA
  3242                           fsr2l	equ	0xFD9
  3243                           status	equ	0xFD8
  3244                           
  3245 ;; *************** function _high_ISR *****************
  3246 ;; Defined at:
  3247 ;;		line 216 in file "main.c"
  3248 ;; Parameters:    Size  Location     Type
  3249 ;;		None
  3250 ;; Auto vars:     Size  Location     Type
  3251 ;;		None
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3263 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3264 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3265 ;;Total ram usage:       16 bytes
  3266 ;; Hardware stack levels used:    1
  3267 ;; Hardware stack levels required when called:    1
  3268 ;; This function calls:
  3269 ;;		i2_clearUARTReceiveBuffer
  3270 ;; This function is called by:
  3271 ;;		Interrupt level 2
  3272 ;; This function uses a non-reentrant model
  3273 ;;
  3274                           
  3275                           	psect	intcode
  3276  000008                     __pintcode:
  3277                           	opt stack 0
  3278  000008                     _high_ISR:
  3279                           	opt stack 25
  3280                           
  3281                           ;incstack = 0
  3282  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3283  00000A  CFFA F005          	movff	pclath,??_high_ISR+2
  3284  00000E  CFFB F006          	movff	pclatu,??_high_ISR+3
  3285  000012  CFE9 F007          	movff	fsr0l,??_high_ISR+4
  3286  000016  CFEA F008          	movff	fsr0h,??_high_ISR+5
  3287  00001A  CFE1 F009          	movff	fsr1l,??_high_ISR+6
  3288  00001E  CFE2 F00A          	movff	fsr1h,??_high_ISR+7
  3289  000022  CFD9 F00B          	movff	fsr2l,??_high_ISR+8
  3290  000026  CFDA F00C          	movff	fsr2h,??_high_ISR+9
  3291  00002A  CFF3 F00D          	movff	prodl,??_high_ISR+10
  3292  00002E  CFF4 F00E          	movff	prodh,??_high_ISR+11
  3293  000032  CFF6 F00F          	movff	tblptrl,??_high_ISR+12
  3294  000036  CFF7 F010          	movff	tblptrh,??_high_ISR+13
  3295  00003A  CFF8 F011          	movff	tblptru,??_high_ISR+14
  3296  00003E  CFF5 F012          	movff	tablat,??_high_ISR+15
  3297                           
  3298                           ;main.c: 219: if(PIR1bits.TX1IF == 1){
  3299  000042  A89E               	btfss	3998,4,c	;volatile
  3300  000044  D02B               	goto	i2l1789
  3301                           
  3302                           ;main.c: 221: if(*currentMessagePointer == '\0'){
  3303  000046  C03C  FFF6         	movff	_currentMessagePointer,tblptrl
  3304  00004A  C03D  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3305  00004E  0E00               	movlw	low (__smallconst shr (0+16))
  3306  000050  6EF8               	movwf	tblptru,c
  3307  000052  0E0E               	movlw	(high __ramtop+-1)
  3308  000054  64F7               	cpfsgt	tblptrh,c
  3309  000056  D003               	bra	i2u122_47
  3310  000058  0008               	tblrd		*
  3311  00005A  50F5               	movf	tablat,w,c
  3312  00005C  D005               	bra	i2u122_40
  3313  00005E                     i2u122_47:
  3314  00005E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3315  000062  CFF7 FFE2          	movff	tblptrh,fsr1h
  3316  000066  50E7               	movf	indf1,w,c
  3317  000068                     i2u122_40:
  3318  000068  0900               	iorlw	0
  3319  00006A  A4D8               	btfss	status,2,c
  3320  00006C  D003               	goto	i2l1785
  3321                           
  3322                           ;main.c: 222: PIE1bits.TXIE = 0;
  3323  00006E  989D               	bcf	3997,4,c	;volatile
  3324                           
  3325                           ;main.c: 223: isCommandSent = 1;
  3326  000070  804C               	bsf	_isCommandSent/(0+8),_isCommandSent& (0+7),c
  3327                           
  3328                           ;main.c: 224: }
  3329  000072  D014               	goto	i2l1789
  3330  000074                     i2l1785:
  3331                           
  3332                           ;main.c: 225: else{
  3333                           ;main.c: 227: TXREG1 = *currentMessagePointer;
  3334  000074  C03C  FFF6         	movff	_currentMessagePointer,tblptrl
  3335  000078  C03D  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3336  00007C  0E00               	movlw	low (__smallconst shr (0+16))
  3337  00007E  6EF8               	movwf	tblptru,c
  3338  000080  0E0E               	movlw	(high __ramtop+-1)
  3339  000082  64F7               	cpfsgt	tblptrh,c
  3340  000084  D003               	bra	i2u124_47
  3341  000086  0008               	tblrd		*
  3342  000088  50F5               	movf	tablat,w,c
  3343  00008A  D005               	bra	i2u124_40
  3344  00008C                     i2u124_47:
  3345  00008C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3346  000090  CFF7 FFE2          	movff	tblptrh,fsr1h
  3347  000094  50E7               	movf	indf1,w,c
  3348  000096                     i2u124_40:
  3349  000096  6EAE               	movwf	4014,c	;volatile
  3350                           
  3351                           ;main.c: 229: currentMessagePointer += 1;
  3352  000098  4A3C               	infsnz	_currentMessagePointer,f,c
  3353  00009A  2A3D               	incf	_currentMessagePointer+1,f,c
  3354  00009C                     i2l1789:
  3355                           
  3356                           ;main.c: 230: }
  3357                           ;main.c: 231: }
  3358                           ;main.c: 233: if(PIR1bits.RC1IF == 1){
  3359  00009C  AA9E               	btfss	3998,5,c	;volatile
  3360  00009E  D01C               	goto	i2l1805
  3361                           
  3362                           ;main.c: 234: PIR1bits.RC1IF = 0;
  3363  0000A0  9A9E               	bcf	3998,5,c	;volatile
  3364                           
  3365                           ;main.c: 235: uart_receive_buffer[uart_receive_buffer_index] = RCREG1;
  3366  0000A2  0E60               	movlw	low _uart_receive_buffer
  3367  0000A4  244A               	addwf	_uart_receive_buffer_index,w,c
  3368  0000A6  6ED9               	movwf	fsr2l,c
  3369  0000A8  0E00               	movlw	high _uart_receive_buffer
  3370  0000AA  204B               	addwfc	_uart_receive_buffer_index+1,w,c
  3371  0000AC  6EDA               	movwf	fsr2h,c
  3372  0000AE  CFAF FFDF          	movff	4015,indf2	;volatile
  3373                           
  3374                           ;main.c: 236: uart_receive_buffer_index += 1;
  3375  0000B2  4A4A               	infsnz	_uart_receive_buffer_index,f,c
  3376  0000B4  2A4B               	incf	_uart_receive_buffer_index+1,f,c
  3377                           
  3378                           ;main.c: 237: if(uart_receive_buffer[uart_receive_buffer_index] == '\n'){
  3379  0000B6  0E60               	movlw	low _uart_receive_buffer
  3380  0000B8  244A               	addwf	_uart_receive_buffer_index,w,c
  3381  0000BA  6ED9               	movwf	fsr2l,c
  3382  0000BC  0E00               	movlw	high _uart_receive_buffer
  3383  0000BE  204B               	addwfc	_uart_receive_buffer_index+1,w,c
  3384  0000C0  6EDA               	movwf	fsr2h,c
  3385  0000C2  0E0A               	movlw	10
  3386  0000C4  18DE               	xorwf	postinc2,w,c
  3387  0000C6  B4D8               	btfsc	status,2,c
  3388                           
  3389                           ;main.c: 238: RCSTA1bits.CREN = 0;
  3390  0000C8  98AC               	bcf	4012,4,c	;volatile
  3391                           
  3392                           ;main.c: 239: }
  3393                           ;main.c: 240: if(uart_receive_buffer_index > 100){
  3394  0000CA  504B               	movf	_uart_receive_buffer_index+1,w,c
  3395  0000CC  E103               	bnz	i2u127_40
  3396  0000CE  0E65               	movlw	101
  3397  0000D0  5C4A               	subwf	_uart_receive_buffer_index,w,c
  3398  0000D2  B0D8               	btfsc	status,0,c
  3399  0000D4                     i2u127_40:
  3400                           
  3401                           ;main.c: 241: clearUARTReceiveBuffer();
  3402  0000D4  EC57  F00C         	call	i2_clearUARTReceiveBuffer	;wreg free
  3403  0000D8                     i2l1805:
  3404                           
  3405                           ;main.c: 242: }
  3406                           ;main.c: 243: }
  3407                           ;main.c: 245: if(PIR1bits.ADIF == 1)
  3408  0000D8  AC9E               	btfss	3998,6,c	;volatile
  3409  0000DA  D04D               	goto	i2l152
  3410                           
  3411                           ;main.c: 246: {
  3412                           ;main.c: 247: PIR1bits.ADIF = 0;
  3413  0000DC  9C9E               	bcf	3998,6,c	;volatile
  3414                           
  3415                           ;main.c: 248: switch(currentChannel){
  3416  0000DE  D035               	goto	i2l1819
  3417  0000E0                     i2l147:
  3418                           
  3419                           ;main.c: 250: plus_pipe = ADRES;
  3420  0000E0  CFC3 F044          	movff	4035,_plus_pipe	;volatile
  3421  0000E4  CFC4 F045          	movff	4036,_plus_pipe+1	;volatile
  3422                           
  3423                           ;main.c: 251: ADCON0bits.CHS = 0b1000;
  3424  0000E8  50C2               	movf	4034,w,c	;volatile
  3425  0000EA  0BC3               	andlw	-61
  3426  0000EC  0920               	iorlw	32
  3427  0000EE  6EC2               	movwf	4034,c	;volatile
  3428                           
  3429                           ;main.c: 252: currentChannel = 1;
  3430  0000F0  0E00               	movlw	0
  3431  0000F2  0100               	movlb	0	; () banked
  3432  0000F4  6FC5               	movwf	(_currentChannel+1)& (0+255),b
  3433  0000F6  0E01               	movlw	1
  3434  0000F8  D026               	goto	L5
  3435  0000FA                     i2l149:
  3436                           
  3437                           ;main.c: 255: minus_pipe = ADRES;
  3438  0000FA  CFC3 F040          	movff	4035,_minus_pipe	;volatile
  3439  0000FE  CFC4 F041          	movff	4036,_minus_pipe+1	;volatile
  3440                           
  3441                           ;main.c: 256: ADCON0bits.CHS = 0b0001;
  3442  000102  50C2               	movf	4034,w,c	;volatile
  3443  000104  0BC3               	andlw	-61
  3444  000106  0904               	iorlw	4
  3445  000108  6EC2               	movwf	4034,c	;volatile
  3446                           
  3447                           ;main.c: 257: currentChannel = 2;
  3448  00010A  0E00               	movlw	0
  3449  00010C  0100               	movlb	0	; () banked
  3450  00010E  6FC5               	movwf	(_currentChannel+1)& (0+255),b
  3451  000110  0E02               	movlw	2
  3452  000112  D019               	goto	L5
  3453  000114                     i2l150:
  3454                           
  3455                           ;main.c: 260: plus_ambient = ADRES;
  3456  000114  CFC3 F042          	movff	4035,_plus_ambient	;volatile
  3457  000118  CFC4 F043          	movff	4036,_plus_ambient+1	;volatile
  3458                           
  3459                           ;main.c: 261: ADCON0bits.CHS = 0b0000;
  3460  00011C  94C2               	bcf	4034,2,c	;volatile
  3461  00011E  96C2               	bcf	4034,3,c	;volatile
  3462  000120  98C2               	bcf	4034,4,c	;volatile
  3463  000122  9AC2               	bcf	4034,5,c	;volatile
  3464                           
  3465                           ;main.c: 262: currentChannel = 3;
  3466  000124  0E00               	movlw	0
  3467  000126  0100               	movlb	0	; () banked
  3468  000128  6FC5               	movwf	(_currentChannel+1)& (0+255),b
  3469  00012A  0E03               	movlw	3
  3470  00012C  D00C               	goto	L5
  3471  00012E                     i2l151:
  3472                           
  3473                           ;main.c: 265: minus_ambient = ADRES;
  3474  00012E  CFC3 F03E          	movff	4035,_minus_ambient	;volatile
  3475  000132  CFC4 F03F          	movff	4036,_minus_ambient+1	;volatile
  3476                           
  3477                           ;main.c: 266: ADCON0bits.CHS = 0b1001;
  3478  000136  50C2               	movf	4034,w,c	;volatile
  3479  000138  0BC3               	andlw	-61
  3480  00013A  0924               	iorlw	36
  3481  00013C  6EC2               	movwf	4034,c	;volatile
  3482                           
  3483                           ;main.c: 267: currentChannel = 0;
  3484  00013E  0E00               	movlw	0
  3485  000140  0100               	movlb	0	; () banked
  3486  000142  6FC5               	movwf	(_currentChannel+1)& (0+255),b
  3487  000144  0E00               	movlw	0
  3488  000146                     L5:
  3489  000146  6FC4               	movwf	_currentChannel& (0+255),b
  3490                           
  3491                           ; BSR set to: 0
  3492                           ;main.c: 269: }
  3493                           
  3494                           ;main.c: 268: break;
  3495  000148  D015               	goto	i2l148
  3496  00014A                     i2l1819:
  3497  00014A  C0C4  F003         	movff	_currentChannel,??_high_ISR
  3498  00014E  C0C5  F004         	movff	_currentChannel+1,??_high_ISR+1
  3499                           
  3500                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3501                           ; Switch size 1, requested type "space"
  3502                           ; Number of cases is 1, Range of values is 0 to 0
  3503                           ; switch strategies available:
  3504                           ; Name         Instructions Cycles
  3505                           ; simple_byte            4     3 (average)
  3506                           ;	Chosen strategy is simple_byte
  3507  000152  5004               	movf	??_high_ISR+1,w,c
  3508  000154  0A00               	xorlw	0	; case 0
  3509  000156  A4D8               	btfss	status,2,c
  3510  000158  D00D               	goto	i2l148
  3511                           
  3512                           ; Switch size 1, requested type "space"
  3513                           ; Number of cases is 4, Range of values is 0 to 3
  3514                           ; switch strategies available:
  3515                           ; Name         Instructions Cycles
  3516                           ; simple_byte           13     7 (average)
  3517                           ;	Chosen strategy is simple_byte
  3518  00015A  5003               	movf	??_high_ISR,w,c
  3519  00015C  0A00               	xorlw	0	; case 0
  3520  00015E  B4D8               	btfsc	status,2,c
  3521  000160  D7BF               	goto	i2l147
  3522  000162  0A01               	xorlw	1	; case 1
  3523  000164  B4D8               	btfsc	status,2,c
  3524  000166  D7C9               	goto	i2l149
  3525  000168  0A03               	xorlw	3	; case 2
  3526  00016A  B4D8               	btfsc	status,2,c
  3527  00016C  D7D3               	goto	i2l150
  3528  00016E  0A01               	xorlw	1	; case 3
  3529  000170  B4D8               	btfsc	status,2,c
  3530  000172  D7DD               	goto	i2l151
  3531  000174                     i2l148:
  3532                           
  3533                           ;main.c: 270: ADCON0bits.GO_DONE = 1;
  3534  000174  82C2               	bsf	4034,1,c	;volatile
  3535  000176                     i2l152:
  3536  000176  C012  FFF5         	movff	??_high_ISR+15,tablat
  3537  00017A  C011  FFF8         	movff	??_high_ISR+14,tblptru
  3538  00017E  C010  FFF7         	movff	??_high_ISR+13,tblptrh
  3539  000182  C00F  FFF6         	movff	??_high_ISR+12,tblptrl
  3540  000186  C00E  FFF4         	movff	??_high_ISR+11,prodh
  3541  00018A  C00D  FFF3         	movff	??_high_ISR+10,prodl
  3542  00018E  C00C  FFDA         	movff	??_high_ISR+9,fsr2h
  3543  000192  C00B  FFD9         	movff	??_high_ISR+8,fsr2l
  3544  000196  C00A  FFE2         	movff	??_high_ISR+7,fsr1h
  3545  00019A  C009  FFE1         	movff	??_high_ISR+6,fsr1l
  3546  00019E  C008  FFEA         	movff	??_high_ISR+5,fsr0h
  3547  0001A2  C007  FFE9         	movff	??_high_ISR+4,fsr0l
  3548  0001A6  C006  FFFB         	movff	??_high_ISR+3,pclatu
  3549  0001AA  C005  FFFA         	movff	??_high_ISR+2,pclath
  3550  0001AE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3551  0001B0  0011               	retfie		f
  3552  0001B2                     __end_of_high_ISR:
  3553                           	opt stack 0
  3554                           pclatu	equ	0xFFB
  3555                           pclath	equ	0xFFA
  3556                           tblptru	equ	0xFF8
  3557                           tblptrh	equ	0xFF7
  3558                           tblptrl	equ	0xFF6
  3559                           tablat	equ	0xFF5
  3560                           prodh	equ	0xFF4
  3561                           prodl	equ	0xFF3
  3562                           intcon	equ	0xFF2
  3563                           postinc0	equ	0xFEE
  3564                           fsr0h	equ	0xFEA
  3565                           fsr0l	equ	0xFE9
  3566                           wreg	equ	0xFE8
  3567                           indf1	equ	0xFE7
  3568                           postdec1	equ	0xFE5
  3569                           fsr1h	equ	0xFE2
  3570                           fsr1l	equ	0xFE1
  3571                           indf2	equ	0xFDF
  3572                           postinc2	equ	0xFDE
  3573                           fsr2h	equ	0xFDA
  3574                           fsr2l	equ	0xFD9
  3575                           status	equ	0xFD8
  3576                           
  3577 ;; *************** function i2_clearUARTReceiveBuffer *****************
  3578 ;; Defined at:
  3579 ;;		line 55 in file "uart.c"
  3580 ;; Parameters:    Size  Location     Type
  3581 ;;		None
  3582 ;; Auto vars:     Size  Location     Type
  3583 ;;  clearUARTRec    2    0[COMRAM] int 
  3584 ;; Return value:  Size  Location     Type
  3585 ;;                  1    wreg      void 
  3586 ;; Registers used:
  3587 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3588 ;; Tracked objects:
  3589 ;;		On entry : 0/0
  3590 ;;		On exit  : 0/0
  3591 ;;		Unchanged: 0/0
  3592 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3593 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3594 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3595 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3596 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3597 ;;Total ram usage:        2 bytes
  3598 ;; Hardware stack levels used:    1
  3599 ;; This function calls:
  3600 ;;		Nothing
  3601 ;; This function is called by:
  3602 ;;		_high_ISR
  3603 ;; This function uses a non-reentrant model
  3604 ;;
  3605                           
  3606                           	psect	text20
  3607  0018AE                     __ptext20:
  3608                           	opt stack 0
  3609  0018AE                     i2_clearUARTReceiveBuffer:
  3610                           	opt stack 25
  3611                           
  3612                           ;uart.c: 56: for(int i = 0; i<100; i++){
  3613                           
  3614                           ;incstack = 0
  3615  0018AE  0E00               	movlw	0
  3616  0018B0  6E02               	movwf	i2clearUARTReceiveBuffer@i+1,c
  3617  0018B2  0E00               	movlw	0
  3618  0018B4  6E01               	movwf	i2clearUARTReceiveBuffer@i,c
  3619  0018B6                     i2l1737:
  3620  0018B6  BE02               	btfsc	i2clearUARTReceiveBuffer@i+1,7,c
  3621  0018B8  D006               	goto	i2l1741
  3622  0018BA  5002               	movf	i2clearUARTReceiveBuffer@i+1,w,c
  3623  0018BC  E10F               	bnz	i2l1747
  3624  0018BE  0E64               	movlw	100
  3625  0018C0  5C01               	subwf	i2clearUARTReceiveBuffer@i,w,c
  3626  0018C2  B0D8               	btfsc	status,0,c
  3627  0018C4  D00B               	goto	i2l1747
  3628  0018C6                     i2l1741:
  3629                           
  3630                           ;uart.c: 57: uart_receive_buffer[i] = '\0';
  3631  0018C6  0E60               	movlw	low _uart_receive_buffer
  3632  0018C8  2401               	addwf	i2clearUARTReceiveBuffer@i,w,c
  3633  0018CA  6ED9               	movwf	fsr2l,c
  3634  0018CC  0E00               	movlw	high _uart_receive_buffer
  3635  0018CE  2002               	addwfc	i2clearUARTReceiveBuffer@i+1,w,c
  3636  0018D0  6EDA               	movwf	fsr2h,c
  3637  0018D2  0E00               	movlw	0
  3638  0018D4  6EDF               	movwf	indf2,c
  3639  0018D6  4A01               	infsnz	i2clearUARTReceiveBuffer@i,f,c
  3640  0018D8  2A02               	incf	i2clearUARTReceiveBuffer@i+1,f,c
  3641  0018DA  D7ED               	goto	i2l1737
  3642  0018DC                     i2l1747:
  3643                           
  3644                           ;uart.c: 58: }
  3645                           ;uart.c: 59: uart_receive_buffer_index= 0 ;
  3646  0018DC  0E00               	movlw	0
  3647  0018DE  6E4B               	movwf	_uart_receive_buffer_index+1,c
  3648  0018E0  0E00               	movlw	0
  3649  0018E2  6E4A               	movwf	_uart_receive_buffer_index,c
  3650  0018E4  0012               	return		;funcret
  3651  0018E6                     __end_ofi2_clearUARTReceiveBuffer:
  3652                           	opt stack 0
  3653                           pclatu	equ	0xFFB
  3654                           pclath	equ	0xFFA
  3655                           tblptru	equ	0xFF8
  3656                           tblptrh	equ	0xFF7
  3657                           tblptrl	equ	0xFF6
  3658                           tablat	equ	0xFF5
  3659                           prodh	equ	0xFF4
  3660                           prodl	equ	0xFF3
  3661                           intcon	equ	0xFF2
  3662                           postinc0	equ	0xFEE
  3663                           fsr0h	equ	0xFEA
  3664                           fsr0l	equ	0xFE9
  3665                           wreg	equ	0xFE8
  3666                           indf1	equ	0xFE7
  3667                           postdec1	equ	0xFE5
  3668                           fsr1h	equ	0xFE2
  3669                           fsr1l	equ	0xFE1
  3670                           indf2	equ	0xFDF
  3671                           postinc2	equ	0xFDE
  3672                           fsr2h	equ	0xFDA
  3673                           fsr2l	equ	0xFD9
  3674                           status	equ	0xFD8
  3675                           pclatu	equ	0xFFB
  3676                           pclath	equ	0xFFA
  3677                           tblptru	equ	0xFF8
  3678                           tblptrh	equ	0xFF7
  3679                           tblptrl	equ	0xFF6
  3680                           tablat	equ	0xFF5
  3681                           prodh	equ	0xFF4
  3682                           prodl	equ	0xFF3
  3683                           intcon	equ	0xFF2
  3684                           postinc0	equ	0xFEE
  3685                           fsr0h	equ	0xFEA
  3686                           fsr0l	equ	0xFE9
  3687                           wreg	equ	0xFE8
  3688                           indf1	equ	0xFE7
  3689                           postdec1	equ	0xFE5
  3690                           fsr1h	equ	0xFE2
  3691                           fsr1l	equ	0xFE1
  3692                           indf2	equ	0xFDF
  3693                           postinc2	equ	0xFDE
  3694                           fsr2h	equ	0xFDA
  3695                           fsr2l	equ	0xFD9
  3696                           status	equ	0xFD8
  3697                           
  3698                           	psect	rparam
  3699  0000                     pclatu	equ	0xFFB
  3700                           pclath	equ	0xFFA
  3701                           tblptru	equ	0xFF8
  3702                           tblptrh	equ	0xFF7
  3703                           tblptrl	equ	0xFF6
  3704                           tablat	equ	0xFF5
  3705                           prodh	equ	0xFF4
  3706                           prodl	equ	0xFF3
  3707                           intcon	equ	0xFF2
  3708                           postinc0	equ	0xFEE
  3709                           fsr0h	equ	0xFEA
  3710                           fsr0l	equ	0xFE9
  3711                           wreg	equ	0xFE8
  3712                           indf1	equ	0xFE7
  3713                           postdec1	equ	0xFE5
  3714                           fsr1h	equ	0xFE2
  3715                           fsr1l	equ	0xFE1
  3716                           indf2	equ	0xFDF
  3717                           postinc2	equ	0xFDE
  3718                           fsr2h	equ	0xFDA
  3719                           fsr2l	equ	0xFD9
  3720                           status	equ	0xFD8
  3721                           
  3722                           	psect	temp
  3723  00004D                     btemp:
  3724                           	opt stack 0
  3725  00004D                     	ds	1
  3726  0000                     int$flags	set	btemp
  3727                           pclatu	equ	0xFFB
  3728                           pclath	equ	0xFFA
  3729                           tblptru	equ	0xFF8
  3730                           tblptrh	equ	0xFF7
  3731                           tblptrl	equ	0xFF6
  3732                           tablat	equ	0xFF5
  3733                           prodh	equ	0xFF4
  3734                           prodl	equ	0xFF3
  3735                           intcon	equ	0xFF2
  3736                           postinc0	equ	0xFEE
  3737                           fsr0h	equ	0xFEA
  3738                           fsr0l	equ	0xFE9
  3739                           wreg	equ	0xFE8
  3740                           indf1	equ	0xFE7
  3741                           postdec1	equ	0xFE5
  3742                           fsr1h	equ	0xFE2
  3743                           fsr1l	equ	0xFE1
  3744                           indf2	equ	0xFDF
  3745                           postinc2	equ	0xFDE
  3746                           fsr2h	equ	0xFDA
  3747                           fsr2l	equ	0xFD9
  3748                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    177
    Data        25
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      76
    BANK0           160     28     155
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sendUARTMessage@newMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), set_dev_eui(CODE[34]), 
		 -> temp_display_message(BANK0[20]), 

    currentMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), 
		 -> set_dev_eui(CODE[34]), temp_display_message(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_makeTempMessage
    _fillInTemp->___awdiv
    ___awdiv->___awmod
    _calculateTemp->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _initLoRa->_delay

Critical Paths under _high_ISR in COMRAM

    _high_ISR->i2_clearUARTReceiveBuffer

Critical Paths under _main in BANK0

    _makeTempMessage->_calculateTemp
    _calculateTemp->___fttol
    ___fttol->___ftmul

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12434
                        _UARTReceive
             _clearUARTReceiveBuffer
                              _delay
                            _initADC
                     _initInterrupts
                           _initLoRa
                          _initUART1
                    _makeTempMessage
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _makeTempMessage                                      1     1      0   11484
                                             58 COMRAM     1     1      0
                      _calculateTemp
                         _fillInTemp
 ---------------------------------------------------------------------------------
 (2) _fillInTemp                                          12    12      0    1513
                                             32 COMRAM    12    12      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     552
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     556
                                             24 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                       11     7      4    9940
                                             17 BANK0     11     7      4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     448
                                             54 COMRAM     4     0      4
                                              6 BANK0     11    11      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3160
                                             45 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3246
                                             30 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2614
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _initUART1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLoRa                                             0     0      0     430
                              _delay
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _sendUARTMessage                                      2     0      2     406
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     5      0      24
                                             18 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearUARTReceiveBuffer                               2     2      0      68
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UARTReceive                                          1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_ISR                                            16    16      0      68
                                              2 COMRAM    16    16      0
           i2_clearUARTReceiveBuffer
 ---------------------------------------------------------------------------------
 (6) i2_clearUARTReceiveBuffer                             2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReceive
   _clearUARTReceiveBuffer
   _delay
   _initADC
   _initInterrupts
   _initLoRa
     _delay
     _sendUARTMessage
   _initUART1
   _makeTempMessage
     _calculateTemp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
     _fillInTemp
       ___awdiv
         ___awmod (ARG)
       ___awmod
   _sendUARTMessage

 _high_ISR (ROOT)
   i2_clearUARTReceiveBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      9B       5       96.9%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     3B      4C       1       80.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E7       6        0.0%
DATA                 0      0      E7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 16 17:18:44 2017

        ?i2_clearUARTReceiveBuffer 0001             _clearUARTReceiveBuffer 1876  
                               l98 1006                       ___awdiv@sign 001E  
                              l101 105A                                l176 1968  
                              l408 15A4                                l466 142C  
                     ___awmod@sign 0018                                prod 000FF3  
                              wreg 000FE8                         _TXSTA1bits 000FAD  
                     ___ftdiv@cntr 0028                       ___ftdiv@sign 002D  
                             l2011 11E2                               l2021 1210  
                             l2023 1220                               l2015 11F6  
                             l2025 122A                               l2029 1246  
                             l1511 1676                               l1503 165C  
                             l1513 167E                               l2049 1746  
                             l1515 1682                               l1523 16A0  
                             l1507 1668                               l1603 1010  
                             l2059 16D0                               l1621 1076  
                             l1471 15FE                               l1527 16AE  
                             l1519 1696                               l1631 10E8  
                             l1623 107C                               l1615 1062  
                             l1473 1606                               l1465 15E8  
                             l1609 1028                               l1723 188E  
                             l1651 177C                               l1491 163E  
                             l1483 1626                               l1475 160A  
                             l1459 15D8                               l1635 10F0  
                             l1653 1788                               l1719 187E  
                             l1487 1630                               l1729 18A4  
                             l1913 1406                               l1861 1572  
                             l1853 1534                               l1933 1284  
                             l1597 0FD4                               l1863 1590  
                             l1855 153E                               l1865 159A  
                             l1857 155C                               l1849 1526  
                             l1953 12F2                               l1963 1324  
                             l1939 12B0                               l1893 13C8  
                             l1957 1308                               l1983 1852  
                             l1887 13A0                               l1967 133A  
                             l1993 1160                               u1070 1006  
                             u1090 105A                               u1421 1268  
                             u1510 1186                               u1441 1294  
                             u1371 1388                               u1515 117C  
                             u1391 13B0                               u1491 113E  
                             _main 16B8                       ___ftpack@arg 0013  
                     ___ftpack@exp 0016                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004D  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 01B2  
                     ___ftmul@cntr 00CA            __end_of_makeTempMessage 176A  
                     ___param_bank 000010                       ___ftmul@sign 00CB  
                     ___fttol@exp1 00D6                       ___fttol@lval 00D2  
                 ?_sendUARTMessage 0013                       _BAUDCON1bits 000F7E  
                            ?_main 0001                    __end_of___awdiv 1648  
                            _ADRES 000FC3              __end_of_ambient_ascii 0F23  
                  __end_of___awmod 16B8                              _DELAY 0F28  
                  __end_of___ftdiv 145E                    __end_of___ftmul 1378  
                  ___awdiv@divisor 001B                    __end_of___fttol 1258  
                            i2l150 0114                              i2l151 012E  
                            i2l152 0176                              i2l147 00E0  
                            i2l148 0174                              i2l149 00FA  
                  ___awdiv@counter 001D                    __end_of_initADC 1914  
                    ___awtoft@sign 001E                              _delay 176A  
                    ___ftpack@sign 0017                              tablat 000FF5  
                            status 000FD8                    __initialization 17BA  
                     __end_of_main 171A                             ??_main 003C  
                    ___fttol@sign1 00D1                      __activetblptr 000003  
                           ?_delay 0001                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ANCON0 000F48  
                           _ANCON1 000F49                   ___awdiv@dividend 0019  
                 __end_of___awtoft 1876                   __end_of___ftpack 15C4  
                           i2l1741 18C6                             i2l1805 00D8  
                   __CFG_WDTEN$OFF 000000                             i2l1737 18B6  
                           i2l1747 18DC                             i2l1819 014A  
                           i2l1785 0074                             i2l1789 009C  
                           _INTCON 000FF2                             _RCREG1 000FAF  
                           _SPBRG1 000FB0                             _TXREG1 000FAE  
                     ?_UARTReceive 0001                     __CFG_XINST$OFF 000000  
                 __end_of_high_ISR 01B2               _temp_display_message 00E7  
                 ?_makeTempMessage 0001                          ??___awdiv 001D  
                        ??___awmod 0017                          ??___ftdiv 0025  
                        ??___ftmul 0034                          ??___fttol 00CC  
                 __end_of_initLoRa 183E                             clear_0 17C0  
                           clear_1 17CC                   ___awdiv@quotient 001F  
                  ___awmod@divisor 0015                    ___awmod@counter 0017  
                        ??_initADC 0013              ___ftmul@f3_as_product 00C7  
            __end_of_set_data_rate 0F10                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8   __end_ofi2_clearUARTReceiveBuffer 18E6  
                       __accesstop 0060            __end_of__initialization 17F2  
          ?_clearUARTReceiveBuffer 0001                      __end_of_DELAY 0F2C  
                    ___rparam_used 000001                         ___ftdiv@f1 001F  
                       ___ftdiv@f2 0022                         ___ftdiv@f3 0029  
                       ___awtoft@c 001B                         ___ftmul@f1 002E  
                       ___ftmul@f2 0031                         ___fttol@f1 0037  
                   __pcstackCOMRAM 0001                       __pidataBANK0 1930  
                    __end_of_delay 17BA            __size_of_initInterrupts 0008  
                          ??_delay 0013                         __pbssBANK0 0060  
               __size_of_initUART1 001C     __end_of_clearUARTReceiveBuffer 18AE  
            __end_of_getVerCommand 0F1E                          ?___awtoft 001B  
                        ?___ftpack 0013                         _fillInTemp 0FB4  
           __size_of_calculateTemp 00B8                 __CFG_OSC$INTOSCPLL 000000  
                          _SPBRGH1 000F7F                          ?_high_ISR 0001  
                 __CFG_CFGPLLEN$ON 000000                          ?_initLoRa 0001  
             UARTReceive@on_or_off 0013           i2_clearUARTReceiveBuffer 18AE  
                          __Hparam 0000                            __Lparam 0000  
             __size_of_UARTReceive 0010                            ___awdiv 15C4  
                          ___awmod 1648                            ___ftdiv 1378  
                          ___ftmul 1258                            ___fttol 112A  
                     __psmallconst 0F00                            __pcinit 17BA  
                       ??___awtoft 001E                         ??___ftpack 0018  
                __end_of_initUART1 1930                            __ramtop 0F00  
                          __ptext0 16B8                            __ptext1 171A  
                          __ptext2 0FB4                            __ptext3 1648  
                          __ptext4 15C4                            __ptext5 145E  
                          __ptext6 112A                            __ptext7 1258  
                          __ptext8 1378                            __ptext9 183E  
                          _initADC 18E6                   ___awmod@dividend 0013  
         __size_of_sendUARTMessage 0012                         ??_high_ISR 0003  
             end_of_initialization 17F2                         _minus_pipe 0040  
                       _pipe_ascii 0F23                         ??_initLoRa 0018  
             __end_of_join_network 0FB2                      _calculateTemp 145E  
                          postdec1 000FE5                     _initInterrupts 196C  
                          postinc0 000FEE                            postinc2 000FDE  
                      ?_fillInTemp 0001          _uart_receive_buffer_index 004A  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                 __CFG_CPUDIV$OSC1 000000                          _TRISAbits 000F92  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                   ?_calculateTemp 00D7                        ___ftdiv@exp 002C  
           __end_of_initInterrupts 1974                    fillInTemp@i_836 0028  
                  fillInTemp@i_837 002A                        ___ftmul@exp 00C6  
                    _minus_ambient 003E           __size_of_makeTempMessage 0050  
                    _ambient_ascii 0F1E                      __pbitnvCOMRAM 0260  
              start_initialization 17BA            clearUARTReceiveBuffer@i 0013  
 sendUARTMessage@newMessagePointer 0013                  ??_sendUARTMessage 0015  
              __size_of_fillInTemp 0176                     _currentChannel 00C4  
                  ?_initInterrupts 0001                        __pdataBANK0 00E2  
               _calculateTemp$1701 00DD                  __size_of___awtoft 0038  
                __size_of___ftpack 00AE                        __pbssCOMRAM 003C  
                    __pcstackBANK0 00C6         ??i2_clearUARTReceiveBuffer 0001  
                  ??_calculateTemp 00DB                  __size_of_high_ISR 01AA  
                __size_of_initLoRa 0042                          __pintcode 0008  
                        _asciiTemp 00E2                           ?___awdiv 0019  
                         ?___awmod 0013                           ?___ftdiv 001F  
                         ?___ftmul 002E                           ?___fttol 0037  
                     _join_network 0FA2                           ?_initADC 0001  
                      __smallconst 0F00                      _set_data_rate 0F01  
                        _initUART1 1914                     __size_of_delay 0050  
                ??_makeTempMessage 003B                          delay@time 0014  
                    ??_UARTReceive 0013                           _PIE1bits 000F9D  
                         i2u122_40 0068                           i2u122_47 005E  
                         i2u124_40 0096                           i2u124_47 008C  
            _currentMessagePointer 003C                           i2u127_40 00D4  
                         _PIR1bits 000F9E                           _RCONbits 000FD0  
                        _temp_pipe 0048                          _plus_pipe 0044  
                     ??_fillInTemp 0021                         _ADCON0bits 000FC2  
                       ?_initUART1 0001                _uart_receive_buffer 0060  
         ??_clearUARTReceiveBuffer 0013                     fillInTemp@temp 002B  
                        copy_data0 17E6         fillInTemp@pipe_or_ambience 0025  
               __end_of_fillInTemp 112A                           __Hrparam 0000  
                         __Lrparam 0000                      _getVerCommand 0F10  
              __end_of_UARTReceive 196C                __end_of_set_dev_eui 0FA2  
              __end_of_set_app_eui 0F80                __end_of_set_app_key 0F5E  
                 __size_of___awdiv 0084                   __size_of___awmod 0070  
                 __size_of___ftdiv 00E6                   __size_of___ftmul 0120  
                 __size_of___fttol 012E                           ___awtoft 183E  
                         ___ftpack 1516                    _sendUARTMessage 194A  
                 __size_of_initADC 002E                           __ptext10 1516  
                         __ptext11 1914                           __ptext20 18AE  
                         __ptext12 17FC                           __ptext13 194A  
                         __ptext14 176A                           __ptext15 196C  
                         __ptext16 18E6                           __ptext17 1876  
                         __ptext18 195C                           _high_ISR 0008  
                    _isCommandSent 0260                   ??_initInterrupts 0013  
                         _initLoRa 17FC                      __size_of_main 0062  
                         int$flags 004D     makeTempMessage@pipe_or_ambient 003B  
                     _temp_ambient 0046                 __end_of_pipe_ascii 0F28  
                      ??_initUART1 0013    __size_of_clearUARTReceiveBuffer 0038  
                         intlevel2 0000                 calculateTemp@minus 00D9  
                      _UARTReceive 195C                         _RCSTA1bits 000FAC  
                      _set_dev_eui 0F80                        _set_app_eui 0F5E  
                      _set_app_key 0F2C                         _OSCCONbits 000FD3  
        i2clearUARTReceiveBuffer@i 0001            __end_of_sendUARTMessage 195C  
                     _plus_ambient 0042                    _makeTempMessage 171A  
                calculateTemp@temp 00E0                  calculateTemp@plus 00D7  
                      fillInTemp@i 0026              __end_of_calculateTemp 1516  
__size_ofi2_clearUARTReceiveBuffer 0038  
