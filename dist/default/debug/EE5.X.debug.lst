

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 23 17:45:13 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18LF27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    40                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    41                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    42  0000                     
    43                           	psect	idataBANK0
    44  001AF6                     __pidataBANK0:
    45                           	opt stack 0
    46                           
    47                           ;initializer for _asciiTemp
    48  001AF6  20                 	db	32
    49  001AF7  20                 	db	32
    50  001AF8  20                 	db	32
    51  001AF9  20                 	db	32
    52  001AFA  20                 	db	32
    53                           
    54                           ;initializer for _isCommandSent
    55  001AFB  01                 	db	1
    56                           
    57                           ;initializer for _temp_display_message
    58  001AFC  50                 	db	80
    59  001AFD  69                 	db	105
    60  001AFE  70                 	db	112
    61  001AFF  65                 	db	101
    62  001B00  20                 	db	32
    63  001B01  74                 	db	116
    64  001B02  65                 	db	101
    65  001B03  6D                 	db	109
    66  001B04  70                 	db	112
    67  001B05  20                 	db	32
    68  001B06  3D                 	db	61
    69  001B07  20                 	db	32
    70  001B08  20                 	db	32
    71  001B09  20                 	db	32
    72  001B0A  20                 	db	32
    73  001B0B  20                 	db	32
    74  001B0C  20                 	db	32
    75  001B0D  0D                 	db	13
    76  001B0E  0A                 	db	10
    77  001B0F  00                 	db	0
    78                           
    79                           	psect	smallconst
    80  000F00                     __psmallconst:
    81                           	opt stack 0
    82  000F00  00                 	db	0
    83  000F01                     _set_data_rate:
    84                           	opt stack 0
    85  000F01  6D                 	db	109
    86  000F02  61                 	db	97
    87  000F03  63                 	db	99
    88  000F04  20                 	db	32
    89  000F05  73                 	db	115
    90  000F06  65                 	db	101
    91  000F07  74                 	db	116
    92  000F08  20                 	db	32
    93  000F09  64                 	db	100
    94  000F0A  72                 	db	114
    95  000F0B  20                 	db	32
    96  000F0C  78                 	db	120
    97  000F0D  0D                 	db	13
    98  000F0E  0A                 	db	10
    99  000F0F  00                 	db	0
   100  000F10                     __end_of_set_data_rate:
   101                           	opt stack 0
   102  000F10                     _getVerCommand:
   103                           	opt stack 0
   104  000F10  73                 	db	115
   105  000F11  79                 	db	121
   106  000F12  73                 	db	115
   107  000F13  20                 	db	32
   108  000F14  67                 	db	103
   109  000F15  65                 	db	101
   110  000F16  74                 	db	116
   111  000F17  20                 	db	32
   112  000F18  76                 	db	118
   113  000F19  65                 	db	101
   114  000F1A  72                 	db	114
   115  000F1B  0D                 	db	13
   116  000F1C  0A                 	db	10
   117  000F1D  00                 	db	0
   118  000F1E                     __end_of_getVerCommand:
   119                           	opt stack 0
   120  000F1E                     _ambient_ascii:
   121                           	opt stack 0
   122  000F1E  41                 	db	65
   123  000F1F  6D                 	db	109
   124  000F20  62                 	db	98
   125  000F21  2E                 	db	46
   126  000F22  00                 	db	0
   127  000F23                     __end_of_ambient_ascii:
   128                           	opt stack 0
   129  000F23                     _pipe_ascii:
   130                           	opt stack 0
   131  000F23  50                 	db	80
   132  000F24  69                 	db	105
   133  000F25  70                 	db	112
   134  000F26  65                 	db	101
   135  000F27  00                 	db	0
   136  000F28                     __end_of_pipe_ascii:
   137                           	opt stack 0
   138  000F28                     _set_app_key:
   139                           	opt stack 0
   140  000F28  6D                 	db	109
   141  000F29  61                 	db	97
   142  000F2A  63                 	db	99
   143  000F2B  20                 	db	32
   144  000F2C  73                 	db	115
   145  000F2D  65                 	db	101
   146  000F2E  74                 	db	116
   147  000F2F  20                 	db	32
   148  000F30  61                 	db	97
   149  000F31  70                 	db	112
   150  000F32  70                 	db	112
   151  000F33  6B                 	db	107
   152  000F34  65                 	db	101
   153  000F35  79                 	db	121
   154  000F36  20                 	db	32
   155  000F37  32                 	db	50
   156  000F38  45                 	db	69
   157  000F39  31                 	db	49
   158  000F3A  35                 	db	53
   159  000F3B  41                 	db	65
   160  000F3C  46                 	db	70
   161  000F3D  43                 	db	67
   162  000F3E  39                 	db	57
   163  000F3F  34                 	db	52
   164  000F40  41                 	db	65
   165  000F41  37                 	db	55
   166  000F42  45                 	db	69
   167  000F43  46                 	db	70
   168  000F44  36                 	db	54
   169  000F45  39                 	db	57
   170  000F46  41                 	db	65
   171  000F47  45                 	db	69
   172  000F48  36                 	db	54
   173  000F49  31                 	db	49
   174  000F4A  41                 	db	65
   175  000F4B  38                 	db	56
   176  000F4C  31                 	db	49
   177  000F4D  34                 	db	52
   178  000F4E  37                 	db	55
   179  000F4F  33                 	db	51
   180  000F50  37                 	db	55
   181  000F51  43                 	db	67
   182  000F52  33                 	db	51
   183  000F53  38                 	db	56
   184  000F54  36                 	db	54
   185  000F55  39                 	db	57
   186  000F56  39                 	db	57
   187  000F57  0D                 	db	13
   188  000F58  0A                 	db	10
   189  000F59  00                 	db	0
   190  000F5A                     __end_of_set_app_key:
   191                           	opt stack 0
   192  000F5A                     _set_app_eui:
   193                           	opt stack 0
   194  000F5A  6D                 	db	109
   195  000F5B  61                 	db	97
   196  000F5C  63                 	db	99
   197  000F5D  20                 	db	32
   198  000F5E  73                 	db	115
   199  000F5F  65                 	db	101
   200  000F60  74                 	db	116
   201  000F61  20                 	db	32
   202  000F62  61                 	db	97
   203  000F63  70                 	db	112
   204  000F64  70                 	db	112
   205  000F65  65                 	db	101
   206  000F66  75                 	db	117
   207  000F67  69                 	db	105
   208  000F68  20                 	db	32
   209  000F69  37                 	db	55
   210  000F6A  34                 	db	52
   211  000F6B  43                 	db	67
   212  000F6C  35                 	db	53
   213  000F6D  34                 	db	52
   214  000F6E  32                 	db	50
   215  000F6F  34                 	db	52
   216  000F70  35                 	db	53
   217  000F71  33                 	db	51
   218  000F72  38                 	db	56
   219  000F73  35                 	db	53
   220  000F74  37                 	db	55
   221  000F75  39                 	db	57
   222  000F76  37                 	db	55
   223  000F77  34                 	db	52
   224  000F78  41                 	db	65
   225  000F79  0D                 	db	13
   226  000F7A  0A                 	db	10
   227  000F7B  00                 	db	0
   228  000F7C                     __end_of_set_app_eui:
   229                           	opt stack 0
   230  000F7C                     _set_dev_eui:
   231                           	opt stack 0
   232  000F7C  6D                 	db	109
   233  000F7D  61                 	db	97
   234  000F7E  63                 	db	99
   235  000F7F  20                 	db	32
   236  000F80  73                 	db	115
   237  000F81  65                 	db	101
   238  000F82  74                 	db	116
   239  000F83  20                 	db	32
   240  000F84  64                 	db	100
   241  000F85  65                 	db	101
   242  000F86  76                 	db	118
   243  000F87  65                 	db	101
   244  000F88  75                 	db	117
   245  000F89  69                 	db	105
   246  000F8A  20                 	db	32
   247  000F8B  30                 	db	48
   248  000F8C  30                 	db	48
   249  000F8D  30                 	db	48
   250  000F8E  34                 	db	52
   251  000F8F  41                 	db	65
   252  000F90  33                 	db	51
   253  000F91  30                 	db	48
   254  000F92  42                 	db	66
   255  000F93  30                 	db	48
   256  000F94  30                 	db	48
   257  000F95  31                 	db	49
   258  000F96  41                 	db	65
   259  000F97  43                 	db	67
   260  000F98  46                 	db	70
   261  000F99  37                 	db	55
   262  000F9A  44                 	db	68
   263  000F9B  0D                 	db	13
   264  000F9C  0A                 	db	10
   265  000F9D  00                 	db	0
   266  000F9E                     __end_of_set_dev_eui:
   267                           	opt stack 0
   268  000F9E                     _join_network:
   269                           	opt stack 0
   270  000F9E  6D                 	db	109
   271  000F9F  61                 	db	97
   272  000FA0  63                 	db	99
   273  000FA1  20                 	db	32
   274  000FA2  6A                 	db	106
   275  000FA3  6F                 	db	111
   276  000FA4  69                 	db	105
   277  000FA5  6E                 	db	110
   278  000FA6  20                 	db	32
   279  000FA7  6F                 	db	111
   280  000FA8  74                 	db	116
   281  000FA9  61                 	db	97
   282  000FAA  61                 	db	97
   283  000FAB  0D                 	db	13
   284  000FAC  0A                 	db	10
   285  000FAD  00                 	db	0
   286  000FAE                     __end_of_join_network:
   287                           	opt stack 0
   288  000FAE  00                 	db	0	; dummy byte at the end
   289  0000                     
   290                           	psect	nvBANK0
   291  0000FD                     __pnvBANK0:
   292                           	opt stack 0
   293  0000FD                     _inductive:
   294                           	opt stack 0
   295  0000FD                     	ds	2
   296  0000                     _ANCON0	set	3912
   297  0000                     _ANCON1	set	3913
   298  0000                     _CCP8CON	set	3846
   299  0000                     _CCPR8H	set	3848
   300  0000                     _CCPR8L	set	3847
   301  0000                     _CCPTMRS2bits	set	3920
   302  0000                     _ADRES	set	4035
   303  0000                     _ADCON0	set	4034
   304  0000                     _ADCON0bits	set	4034
   305  0000                     _ADCON1	set	4033
   306  0000                     _BAUDCON1bits	set	3966
   307  0000                     _INTCON	set	4082
   308  0000                     _INTCONbits	set	4082
   309  0000                     _OSCCONbits	set	4051
   310  0000                     _PIE1bits	set	3997
   311  0000                     _PIE4bits	set	3982
   312  0000                     _PIR1bits	set	3998
   313  0000                     _PIR4bits	set	3983
   314  0000                     _PORTAbits	set	3968
   315  0000                     _PORTBbits	set	3969
   316  0000                     _RCONbits	set	4048
   317  0000                     _RCREG1	set	4015
   318  0000                     _RCSTA1bits	set	4012
   319  0000                     _SPBRG1	set	4016
   320  0000                     _SPBRGH1	set	3967
   321  0000                     _T1CONbits	set	4045
   322  0000                     _TMR1H	set	4047
   323  0000                     _TMR1L	set	4046
   324  0000                     _TRISAbits	set	3986
   325  0000                     _TRISBbits	set	3987
   326  0000                     _TRISCbits	set	3988
   327  0000                     _TXREG1	set	4014
   328  0000                     _TXSTA1bits	set	4013
   329                           
   330                           ; #config settings
   331  0000                     
   332                           	psect	cinit
   333  001970                     __pcinit:
   334                           	opt stack 0
   335  001970                     start_initialization:
   336                           	opt stack 0
   337  001970                     __initialization:
   338                           	opt stack 0
   339                           
   340                           ; Clear objects allocated to BANK0 (115 bytes)
   341  001970  EE00  F060         	lfsr	0,__pbssBANK0
   342  001974  0E73               	movlw	115
   343  001976                     clear_0:
   344  001976  6AEE               	clrf	postinc0,c
   345  001978  06E8               	decf	wreg,f,c
   346  00197A  E1FD               	bnz	clear_0
   347                           
   348                           ; Clear objects allocated to COMRAM (16 bytes)
   349  00197C  EE00  F03E         	lfsr	0,__pbssCOMRAM
   350  001980  0E10               	movlw	16
   351  001982                     clear_1:
   352  001982  6AEE               	clrf	postinc0,c
   353  001984  06E8               	decf	wreg,f,c
   354  001986  E1FD               	bnz	clear_1
   355                           
   356                           ; Initialize objects allocated to BANK0 (26 bytes)
   357                           ; load TBLPTR registers with __pidataBANK0
   358  001988  0EF6               	movlw	low __pidataBANK0
   359  00198A  6EF6               	movwf	tblptrl,c
   360  00198C  0E1A               	movlw	high __pidataBANK0
   361  00198E  6EF7               	movwf	tblptrh,c
   362  001990  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   363  001992  6EF8               	movwf	tblptru,c
   364  001994  EE00  F0D3         	lfsr	0,__pdataBANK0
   365  001998  EE10 F01A          	lfsr	1,26
   366  00199C                     copy_data0:
   367  00199C  0009               	tblrd		*+
   368  00199E  CFF5 FFEE          	movff	tablat,postinc0
   369  0019A2  50E5               	movf	postdec1,w,c
   370  0019A4  50E1               	movf	fsr1l,w,c
   371  0019A6  E1FA               	bnz	copy_data0
   372  0019A8                     end_of_initialization:
   373                           	opt stack 0
   374  0019A8                     __end_of__initialization:
   375                           	opt stack 0
   376  0019A8  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   377  0019AA  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   378  0019AC  0100               	movlb	0
   379  0019AE  EF7B  F00A         	goto	_main	;jump to C main() function
   380                           tblptru	equ	0xFF8
   381                           tblptrh	equ	0xFF7
   382                           tblptrl	equ	0xFF6
   383                           tablat	equ	0xFF5
   384                           postinc0	equ	0xFEE
   385                           wreg	equ	0xFE8
   386                           postdec1	equ	0xFE5
   387                           fsr1l	equ	0xFE1
   388                           
   389                           	psect	bssCOMRAM
   390  00003E                     __pbssCOMRAM:
   391                           	opt stack 0
   392  00003E                     _currentMessagePointer:
   393                           	opt stack 0
   394  00003E                     	ds	2
   395  000040                     _minus_ambient:
   396                           	opt stack 0
   397  000040                     	ds	2
   398  000042                     _minus_pipe:
   399                           	opt stack 0
   400  000042                     	ds	2
   401  000044                     _plus_ambient:
   402                           	opt stack 0
   403  000044                     	ds	2
   404  000046                     _plus_pipe:
   405                           	opt stack 0
   406  000046                     	ds	2
   407  000048                     _temp_ambient:
   408                           	opt stack 0
   409  000048                     	ds	2
   410  00004A                     _temp_pipe:
   411                           	opt stack 0
   412  00004A                     	ds	2
   413  00004C                     _uart_receive_buffer_index:
   414                           	opt stack 0
   415  00004C                     	ds	2
   416                           tblptru	equ	0xFF8
   417                           tblptrh	equ	0xFF7
   418                           tblptrl	equ	0xFF6
   419                           tablat	equ	0xFF5
   420                           postinc0	equ	0xFEE
   421                           wreg	equ	0xFE8
   422                           postdec1	equ	0xFE5
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	bssBANK0
   426  000060                     __pbssBANK0:
   427                           	opt stack 0
   428  000060                     _uart_receive_buffer:
   429                           	opt stack 0
   430  000060                     	ds	100
   431  0000C4                     _percent:
   432                           	opt stack 0
   433  0000C4                     	ds	3
   434  0000C7                     _currentChannel:
   435                           	opt stack 0
   436  0000C7                     	ds	2
   437  0000C9                     _last_received_message_index:
   438                           	opt stack 0
   439  0000C9                     	ds	2
   440  0000CB                     _timer:
   441                           	opt stack 0
   442  0000CB                     	ds	2
   443  0000CD                     _valueH:
   444                           	opt stack 0
   445  0000CD                     	ds	2
   446  0000CF                     _valueL:
   447                           	opt stack 0
   448  0000CF                     	ds	2
   449  0000D1                     _value:
   450                           	opt stack 0
   451  0000D1                     	ds	2
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	dataBANK0
   462  0000D3                     __pdataBANK0:
   463                           	opt stack 0
   464  0000D3                     _asciiTemp:
   465                           	opt stack 0
   466  0000D3                     	ds	5
   467  0000D8                     _isCommandSent:
   468                           	opt stack 0
   469  0000D8                     	ds	1
   470  0000D9                     _temp_display_message:
   471                           	opt stack 0
   472  0000D9                     	ds	20
   473                           tblptru	equ	0xFF8
   474                           tblptrh	equ	0xFF7
   475                           tblptrl	equ	0xFF6
   476                           tablat	equ	0xFF5
   477                           postinc0	equ	0xFEE
   478                           wreg	equ	0xFE8
   479                           postdec1	equ	0xFE5
   480                           fsr1l	equ	0xFE1
   481                           
   482                           	psect	cstackBANK1
   483  000100                     __pcstackBANK1:
   484                           	opt stack 0
   485  000100                     ?_calculateTemp:
   486                           	opt stack 0
   487  000100                     calculateTemp@plus:
   488                           	opt stack 0
   489                           
   490                           ; 2 bytes @ 0x0
   491  000100                     	ds	2
   492  000102                     calculateTemp@minus:
   493                           	opt stack 0
   494                           
   495                           ; 2 bytes @ 0x2
   496  000102                     	ds	2
   497  000104                     _calculateTemp$1924:
   498                           	opt stack 0
   499                           
   500                           ; 3 bytes @ 0x4
   501  000104                     	ds	3
   502  000107                     calculateTemp@temp:
   503                           	opt stack 0
   504                           
   505                           ; 2 bytes @ 0x7
   506  000107                     	ds	2
   507  000109                     _main$1923:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x9
   511  000109                     	ds	2
   512                           tblptru	equ	0xFF8
   513                           tblptrh	equ	0xFF7
   514                           tblptrl	equ	0xFF6
   515                           tablat	equ	0xFF5
   516                           postinc0	equ	0xFEE
   517                           wreg	equ	0xFE8
   518                           postdec1	equ	0xFE5
   519                           fsr1l	equ	0xFE1
   520                           
   521                           	psect	cstackBANK0
   522  0000ED                     __pcstackBANK0:
   523                           	opt stack 0
   524  0000ED                     ?___fttol:
   525                           	opt stack 0
   526  0000ED                     ___fttol@f1:
   527                           	opt stack 0
   528                           
   529                           ; 3 bytes @ 0x0
   530  0000ED                     	ds	4
   531  0000F1                     ??___fttol:
   532                           
   533                           ; 1 bytes @ 0x4
   534  0000F1                     	ds	5
   535  0000F6                     ___fttol@sign1:
   536                           	opt stack 0
   537                           
   538                           ; 1 bytes @ 0x9
   539  0000F6                     	ds	1
   540  0000F7                     ___fttol@lval:
   541                           	opt stack 0
   542                           
   543                           ; 4 bytes @ 0xA
   544  0000F7                     	ds	4
   545  0000FB                     ___fttol@exp1:
   546                           	opt stack 0
   547                           
   548                           ; 1 bytes @ 0xE
   549  0000FB                     	ds	1
   550  0000FC                     makeTempMessage@pipe_or_ambient:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0xF
   554  0000FC                     	ds	1
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           postdec1	equ	0xFE5
   562                           fsr1l	equ	0xFE1
   563                           
   564                           	psect	cstackCOMRAM
   565  000001                     __pcstackCOMRAM:
   566                           	opt stack 0
   567  000001                     ??_temperature_interrupt:
   568  000001                     ??_frequency_interrupt:
   569  000001                     
   570                           ; 1 bytes @ 0x0
   571  000001                     	ds	3
   572  000004                     ??_high_ISR:
   573                           
   574                           ; 1 bytes @ 0x3
   575  000004                     	ds	14
   576  000012                     ?___wmul:
   577                           	opt stack 0
   578  000012                     ?___awmod:
   579                           	opt stack 0
   580  000012                     ?___ftpack:
   581                           	opt stack 0
   582  000012                     UARTReceive@on_or_off:
   583                           	opt stack 0
   584  000012                     delay_ms@ms:
   585                           	opt stack 0
   586  000012                     ___wmul@multiplier:
   587                           	opt stack 0
   588  000012                     ___awmod@dividend:
   589                           	opt stack 0
   590  000012                     ___ftpack@arg:
   591                           	opt stack 0
   592                           
   593                           ; 3 bytes @ 0x11
   594  000012                     	ds	2
   595  000014                     ??_delay_ms:
   596  000014                     ___wmul@multiplicand:
   597                           	opt stack 0
   598  000014                     ___awmod@divisor:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x13
   602  000014                     	ds	1
   603  000015                     ___ftpack@exp:
   604                           	opt stack 0
   605  000015                     delay_ms@i:
   606                           	opt stack 0
   607                           
   608                           ; 2 bytes @ 0x14
   609  000015                     	ds	1
   610  000016                     ___awmod@counter:
   611                           	opt stack 0
   612  000016                     ___ftpack@sign:
   613                           	opt stack 0
   614  000016                     ___wmul@product:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x15
   618  000016                     	ds	1
   619  000017                     ??___ftpack:
   620  000017                     ___awmod@sign:
   621                           	opt stack 0
   622  000017                     sendUARTMessage@newMessagePointer:
   623                           	opt stack 0
   624                           
   625                           ; 2 bytes @ 0x16
   626  000017                     	ds	1
   627  000018                     ?___awdiv:
   628                           	opt stack 0
   629  000018                     ___awdiv@dividend:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x17
   633  000018                     	ds	1
   634  000019                     
   635                           ; 1 bytes @ 0x18
   636  000019                     	ds	1
   637  00001A                     ?___awtoft:
   638                           	opt stack 0
   639  00001A                     ___awdiv@divisor:
   640                           	opt stack 0
   641  00001A                     ___awtoft@c:
   642                           	opt stack 0
   643                           
   644                           ; 2 bytes @ 0x19
   645  00001A                     	ds	2
   646  00001C                     ___awdiv@counter:
   647                           	opt stack 0
   648                           
   649                           ; 1 bytes @ 0x1B
   650  00001C                     	ds	1
   651  00001D                     ___awdiv@sign:
   652                           	opt stack 0
   653  00001D                     ___awtoft@sign:
   654                           	opt stack 0
   655                           
   656                           ; 1 bytes @ 0x1C
   657  00001D                     	ds	1
   658  00001E                     ?___ftdiv:
   659                           	opt stack 0
   660  00001E                     ___awdiv@quotient:
   661                           	opt stack 0
   662  00001E                     ___ftdiv@f1:
   663                           	opt stack 0
   664                           
   665                           ; 3 bytes @ 0x1D
   666  00001E                     	ds	2
   667  000020                     ??_fillInTemp:
   668                           
   669                           ; 1 bytes @ 0x1F
   670  000020                     	ds	1
   671  000021                     ___ftdiv@f2:
   672                           	opt stack 0
   673                           
   674                           ; 3 bytes @ 0x20
   675  000021                     	ds	3
   676  000024                     ??___ftdiv:
   677  000024                     fillInTemp@pipe_or_ambience:
   678                           	opt stack 0
   679                           
   680                           ; 1 bytes @ 0x23
   681  000024                     	ds	1
   682  000025                     fillInTemp@i:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x24
   686  000025                     	ds	2
   687  000027                     ___ftdiv@cntr:
   688                           	opt stack 0
   689  000027                     fillInTemp@i_1135:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x26
   693  000027                     	ds	1
   694  000028                     ___ftdiv@f3:
   695                           	opt stack 0
   696                           
   697                           ; 3 bytes @ 0x27
   698  000028                     	ds	1
   699  000029                     fillInTemp@i_1136:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x28
   703  000029                     	ds	1
   704  00002A                     fillInTemp@temp:
   705                           	opt stack 0
   706                           
   707                           ; 2 bytes @ 0x29
   708  00002A                     	ds	1
   709  00002B                     ___ftdiv@exp:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x2A
   713  00002B                     	ds	1
   714  00002C                     ___ftdiv@sign:
   715                           	opt stack 0
   716                           
   717                           ; 1 bytes @ 0x2B
   718  00002C                     	ds	1
   719  00002D                     ?___ftmul:
   720                           	opt stack 0
   721  00002D                     ___ftmul@f1:
   722                           	opt stack 0
   723                           
   724                           ; 3 bytes @ 0x2C
   725  00002D                     	ds	3
   726  000030                     ___ftmul@f2:
   727                           	opt stack 0
   728                           
   729                           ; 3 bytes @ 0x2F
   730  000030                     	ds	3
   731  000033                     ??___ftmul:
   732                           
   733                           ; 1 bytes @ 0x32
   734  000033                     	ds	3
   735  000036                     ___ftmul@exp:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x35
   739  000036                     	ds	1
   740  000037                     ___ftmul@f3_as_product:
   741                           	opt stack 0
   742                           
   743                           ; 3 bytes @ 0x36
   744  000037                     	ds	3
   745  00003A                     ___ftmul@cntr:
   746                           	opt stack 0
   747                           
   748                           ; 1 bytes @ 0x39
   749  00003A                     	ds	1
   750  00003B                     ___ftmul@sign:
   751                           	opt stack 0
   752                           
   753                           ; 1 bytes @ 0x3A
   754  00003B                     	ds	1
   755  00003C                     ??_calculateTemp:
   756                           
   757                           ; 1 bytes @ 0x3B
   758  00003C                     	ds	2
   759  00003E                     tblptru	equ	0xFF8
   760                           tblptrh	equ	0xFF7
   761                           tblptrl	equ	0xFF6
   762                           tablat	equ	0xFF5
   763                           postinc0	equ	0xFEE
   764                           wreg	equ	0xFE8
   765                           postdec1	equ	0xFE5
   766                           fsr1l	equ	0xFE1
   767                           
   768                           ; 1 bytes @ 0x3D
   769 ;;
   770 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   771 ;;
   772 ;; *************** function _main *****************
   773 ;; Defined at:
   774 ;;		line 25 in file "main.c"
   775 ;; Parameters:    Size  Location     Type
   776 ;;		None
   777 ;; Auto vars:     Size  Location     Type
   778 ;;		None
   779 ;; Return value:  Size  Location     Type
   780 ;;                  1    wreg      void 
   781 ;; Registers used:
   782 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   783 ;; Tracked objects:
   784 ;;		On entry : 0/0
   785 ;;		On exit  : 0/0
   786 ;;		Unchanged: 0/0
   787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   789 ;;      Locals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   791 ;;      Totals:         0       0       2       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   792 ;;Total ram usage:        2 bytes
   793 ;; Hardware stack levels required when called:    6
   794 ;; This function calls:
   795 ;;		_UARTReceive
   796 ;;		___wmul
   797 ;;		_delay_ms
   798 ;;		_initADC
   799 ;;		_initInterrupts
   800 ;;		_initLoRa
   801 ;;		_initUART1
   802 ;;		_init_frequency
   803 ;;		_makeTempMessage
   804 ;;		_sendUARTMessage
   805 ;; This function is called by:
   806 ;;		Startup code after reset
   807 ;; This function uses a non-reentrant model
   808 ;;
   809                           
   810                           	psect	text0
   811  0014F6                     __ptext0:
   812                           	opt stack 0
   813  0014F6                     _main:
   814                           	opt stack 25
   815                           
   816                           ;main.c: 27: OSCCONbits.IRCF0 = 1;
   817                           
   818                           ;incstack = 0
   819  0014F6  88D3               	bsf	4051,4,c	;volatile
   820                           
   821                           ;main.c: 28: OSCCONbits.SCS0 = 1;
   822  0014F8  80D3               	bsf	4051,0,c	;volatile
   823                           
   824                           ;main.c: 29: OSCCONbits.SCS1 = 1;
   825  0014FA  82D3               	bsf	4051,1,c	;volatile
   826                           
   827                           ;main.c: 31: isCommandSent = 1;
   828  0014FC  0E01               	movlw	1
   829  0014FE  0100               	movlb	0	; () banked
   830  001500  6FD8               	movwf	_isCommandSent& (0+255),b
   831                           
   832                           ; BSR set to: 0
   833                           ;main.c: 32: init_frequency();
   834  001502  ECD9  F00C         	call	_init_frequency	;wreg free
   835                           
   836                           ;main.c: 33: initUART1();
   837  001506  EC6D  F00D         	call	_initUART1	;wreg free
   838                           
   839                           ;main.c: 34: initADC();
   840  00150A  EC43  F00D         	call	_initADC	;wreg free
   841                           
   842                           ;main.c: 35: initInterrupts();
   843  00150E  EC90  F00D         	call	_initInterrupts	;wreg free
   844  001512                     l2427:
   845                           
   846                           ;main.c: 37: inductive= 40*value*value;
   847  001512  C0D1  F012         	movff	_value,___wmul@multiplier
   848  001516  C0D2  F013         	movff	_value+1,___wmul@multiplier+1
   849  00151A  C0D1  F014         	movff	_value,___wmul@multiplicand
   850  00151E  C0D2  F015         	movff	_value+1,___wmul@multiplicand+1
   851  001522  EC5A  F00D         	call	___wmul	;wreg free
   852  001526  C012  F109         	movff	?___wmul,_main$1923
   853  00152A  C013  F10A         	movff	?___wmul+1,_main$1923+1
   854                           
   855                           ;main.c: 37: inductive= 40*value*value;
   856  00152E  C109  F012         	movff	_main$1923,___wmul@multiplier
   857  001532  C10A  F013         	movff	_main$1923+1,___wmul@multiplier+1
   858  001536  0E00               	movlw	0
   859  001538  6E15               	movwf	___wmul@multiplicand+1,c
   860  00153A  0E28               	movlw	40
   861  00153C  6E14               	movwf	___wmul@multiplicand,c
   862  00153E  EC5A  F00D         	call	___wmul	;wreg free
   863  001542  C012  F0FD         	movff	?___wmul,_inductive
   864  001546  C013  F0FE         	movff	?___wmul+1,_inductive+1
   865                           
   866                           ;main.c: 38: UARTReceive(1);
   867  00154A  0E01               	movlw	1
   868  00154C  EC88  F00D         	call	_UARTReceive
   869                           
   870                           ;main.c: 39: initLoRa();
   871  001550  EC2E  F00C         	call	_initLoRa	;wreg free
   872                           
   873                           ;main.c: 40: UARTReceive(0);
   874  001554  0E00               	movlw	0
   875  001556  EC88  F00D         	call	_UARTReceive
   876                           
   877                           ;main.c: 42: delay_ms(800);
   878  00155A  0E03               	movlw	3
   879  00155C  6E13               	movwf	delay_ms@ms+1,c
   880  00155E  0E20               	movlw	32
   881  001560  6E12               	movwf	delay_ms@ms,c
   882  001562  EC12  F00D         	call	_delay_ms	;wreg free
   883                           
   884                           ;main.c: 44: makeTempMessage(0);
   885  001566  0E00               	movlw	0
   886  001568  EC8D  F00C         	call	_makeTempMessage
   887                           
   888                           ;main.c: 45: sendUARTMessage(temp_display_message);
   889  00156C  0ED9               	movlw	low _temp_display_message
   890  00156E  6E17               	movwf	sendUARTMessage@newMessagePointer,c
   891  001570  0E00               	movlw	high _temp_display_message
   892  001572  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
   893  001574  ECBB  F00B         	call	_sendUARTMessage	;wreg free
   894                           
   895                           ;main.c: 46: delay_ms(800);
   896  001578  0E03               	movlw	3
   897  00157A  6E13               	movwf	delay_ms@ms+1,c
   898  00157C  0E20               	movlw	32
   899  00157E  6E12               	movwf	delay_ms@ms,c
   900  001580  EC12  F00D         	call	_delay_ms	;wreg free
   901                           
   902                           ;main.c: 48: makeTempMessage(1);
   903  001584  0E01               	movlw	1
   904  001586  EC8D  F00C         	call	_makeTempMessage
   905                           
   906                           ;main.c: 49: sendUARTMessage(temp_display_message);
   907  00158A  0ED9               	movlw	low _temp_display_message
   908  00158C  6E17               	movwf	sendUARTMessage@newMessagePointer,c
   909  00158E  0E00               	movlw	high _temp_display_message
   910  001590  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
   911  001592  ECBB  F00B         	call	_sendUARTMessage	;wreg free
   912                           
   913                           ;main.c: 50: delay_ms(800);
   914  001596  0E03               	movlw	3
   915  001598  6E13               	movwf	delay_ms@ms+1,c
   916  00159A  0E20               	movlw	32
   917  00159C  6E12               	movwf	delay_ms@ms,c
   918  00159E  EC12  F00D         	call	_delay_ms	;wreg free
   919  0015A2  D7B7               	goto	l2427
   920  0015A4                     __end_of_main:
   921                           	opt stack 0
   922                           tblptru	equ	0xFF8
   923                           tblptrh	equ	0xFF7
   924                           tblptrl	equ	0xFF6
   925                           tablat	equ	0xFF5
   926                           postinc0	equ	0xFEE
   927                           wreg	equ	0xFE8
   928                           postdec1	equ	0xFE5
   929                           fsr1l	equ	0xFE1
   930                           
   931 ;; *************** function _makeTempMessage *****************
   932 ;; Defined at:
   933 ;;		line 100 in file "temperature.c"
   934 ;; Parameters:    Size  Location     Type
   935 ;;  pipe_or_ambi    1    wreg     unsigned char 
   936 ;; Auto vars:     Size  Location     Type
   937 ;;  pipe_or_ambi    1   15[BANK0 ] unsigned char 
   938 ;; Return value:  Size  Location     Type
   939 ;;                  1    wreg      void 
   940 ;; Registers used:
   941 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   942 ;; Tracked objects:
   943 ;;		On entry : 0/0
   944 ;;		On exit  : 0/0
   945 ;;		Unchanged: 0/0
   946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   947 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   948 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   949 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   950 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   951 ;;Total ram usage:        1 bytes
   952 ;; Hardware stack levels used:    1
   953 ;; Hardware stack levels required when called:    5
   954 ;; This function calls:
   955 ;;		_calculateTemp
   956 ;;		_fillInTemp
   957 ;; This function is called by:
   958 ;;		_main
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           	psect	text1
   963  00191A                     __ptext1:
   964                           	opt stack 0
   965  00191A                     _makeTempMessage:
   966                           	opt stack 25
   967                           
   968                           ;incstack = 0
   969                           ;makeTempMessage@pipe_or_ambient stored from wreg
   970  00191A  0100               	movlb	0	; () banked
   971  00191C  6FFC               	movwf	makeTempMessage@pipe_or_ambient& (0+255),b
   972                           
   973                           ;temperature.c: 102: if(pipe_or_ambient == 0){
   974  00191E  0100               	movlb	0	; () banked
   975  001920  51FC               	movf	makeTempMessage@pipe_or_ambient& (0+255),w,b
   976  001922  0100               	movlb	0	; () banked
   977  001924  A4D8               	btfss	status,2,c
   978  001926  D012               	goto	l2405
   979                           
   980                           ; BSR set to: 0
   981                           ;temperature.c: 103: temp_pipe = calculateTemp(plus_pipe, minus_pipe);
   982  001928  C046  F100         	movff	_plus_pipe,calculateTemp@plus
   983  00192C  C047  F101         	movff	_plus_pipe+1,calculateTemp@plus+1
   984  001930  C042  F102         	movff	_minus_pipe,calculateTemp@minus
   985  001934  C043  F103         	movff	_minus_pipe+1,calculateTemp@minus+1
   986  001938  EC22  F00A         	call	_calculateTemp	;wreg free
   987  00193C  C100  F04A         	movff	?_calculateTemp,_temp_pipe
   988  001940  C101  F04B         	movff	?_calculateTemp+1,_temp_pipe+1
   989                           
   990                           ;temperature.c: 104: fillInTemp(0);
   991  001944  0E00               	movlw	0
   992  001946  ECD8  F007         	call	_fillInTemp
   993                           
   994                           ;temperature.c: 105: }
   995  00194A  0012               	return	
   996  00194C                     l2405:
   997                           
   998                           ;temperature.c: 107: else{
   999                           ;temperature.c: 108: temp_ambient = calculateTemp(plus_ambient, minus_ambient);
  1000  00194C  C044  F100         	movff	_plus_ambient,calculateTemp@plus
  1001  001950  C045  F101         	movff	_plus_ambient+1,calculateTemp@plus+1
  1002  001954  C040  F102         	movff	_minus_ambient,calculateTemp@minus
  1003  001958  C041  F103         	movff	_minus_ambient+1,calculateTemp@minus+1
  1004  00195C  EC22  F00A         	call	_calculateTemp	;wreg free
  1005  001960  C100  F048         	movff	?_calculateTemp,_temp_ambient
  1006  001964  C101  F049         	movff	?_calculateTemp+1,_temp_ambient+1
  1007                           
  1008                           ;temperature.c: 109: fillInTemp(1);
  1009  001968  0E01               	movlw	1
  1010  00196A  ECD8  F007         	call	_fillInTemp
  1011  00196E  0012               	return	
  1012  001970                     __end_of_makeTempMessage:
  1013                           	opt stack 0
  1014                           tblptru	equ	0xFF8
  1015                           tblptrh	equ	0xFF7
  1016                           tblptrl	equ	0xFF6
  1017                           tablat	equ	0xFF5
  1018                           postinc0	equ	0xFEE
  1019                           wreg	equ	0xFE8
  1020                           postdec1	equ	0xFE5
  1021                           fsr1l	equ	0xFE1
  1022                           status	equ	0xFD8
  1023                           
  1024 ;; *************** function _fillInTemp *****************
  1025 ;; Defined at:
  1026 ;;		line 50 in file "temperature.c"
  1027 ;; Parameters:    Size  Location     Type
  1028 ;;  pipe_or_ambi    1    wreg     unsigned char 
  1029 ;; Auto vars:     Size  Location     Type
  1030 ;;  pipe_or_ambi    1   35[COMRAM] unsigned char 
  1031 ;;  i               2   38[COMRAM] int 
  1032 ;;  i               2   36[COMRAM] int 
  1033 ;;  i               1   40[COMRAM] unsigned char 
  1034 ;;  temp            2   41[COMRAM] int 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1044 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1045 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1046 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1047 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1048 ;;Total ram usage:       12 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    3
  1051 ;; This function calls:
  1052 ;;		___awdiv
  1053 ;;		___awmod
  1054 ;; This function is called by:
  1055 ;;		_makeTempMessage
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           
  1059                           	psect	text2
  1060  000FB0                     __ptext2:
  1061                           	opt stack 0
  1062  000FB0                     _fillInTemp:
  1063                           	opt stack 26
  1064                           
  1065                           ;incstack = 0
  1066                           ;fillInTemp@pipe_or_ambience stored from wreg
  1067  000FB0  6E24               	movwf	fillInTemp@pipe_or_ambience,c
  1068                           
  1069                           ;temperature.c: 51: signed int temp;
  1070                           ;temperature.c: 53: if(pipe_or_ambience == 0){
  1071  000FB2  5024               	movf	fillInTemp@pipe_or_ambience,w,c
  1072  000FB4  A4D8               	btfss	status,2,c
  1073  000FB6  D02A               	goto	l2285
  1074                           
  1075                           ;temperature.c: 55: for(int i = 0; i<4; i++){
  1076  000FB8  0E00               	movlw	0
  1077  000FBA  6E26               	movwf	fillInTemp@i+1,c
  1078  000FBC  0E00               	movlw	0
  1079  000FBE  6E25               	movwf	fillInTemp@i,c
  1080  000FC0  BE26               	btfsc	fillInTemp@i+1,7,c
  1081  000FC2  D006               	goto	l2279
  1082  000FC4  5026               	movf	fillInTemp@i+1,w,c
  1083  000FC6  E11D               	bnz	l199
  1084  000FC8  0E04               	movlw	4
  1085  000FCA  5C25               	subwf	fillInTemp@i,w,c
  1086  000FCC  B0D8               	btfsc	status,0,c
  1087  000FCE  D019               	goto	l199
  1088  000FD0                     l2279:
  1089                           
  1090                           ;temperature.c: 56: temp_display_message[i] = pipe_ascii[i];
  1091  000FD0  0E23               	movlw	low _pipe_ascii
  1092  000FD2  2425               	addwf	fillInTemp@i,w,c
  1093  000FD4  6EF6               	movwf	tblptrl,c
  1094  000FD6  0E0F               	movlw	high _pipe_ascii
  1095  000FD8  2026               	addwfc	fillInTemp@i+1,w,c
  1096  000FDA  6EF7               	movwf	tblptrh,c
  1097  000FDC                     	if	1	;There are 3 active tblptr bytes
  1098  000FDC  6AF8               	clrf	tblptru,c
  1099  000FDE  0E00               	movlw	low (__mediumconst shr (0+16))
  1100  000FE0  22F8               	addwfc	tblptru,f,c
  1101  000FE2                     	endif
  1102  000FE2  0ED9               	movlw	low _temp_display_message
  1103  000FE4  2425               	addwf	fillInTemp@i,w,c
  1104  000FE6  6ED9               	movwf	fsr2l,c
  1105  000FE8  0E00               	movlw	high _temp_display_message
  1106  000FEA  2026               	addwfc	fillInTemp@i+1,w,c
  1107  000FEC  6EDA               	movwf	fsr2h,c
  1108  000FEE  0008               	tblrd		*
  1109  000FF0  CFF5 FFDF          	movff	tablat,indf2
  1110  000FF4  4A25               	infsnz	fillInTemp@i,f,c
  1111  000FF6  2A26               	incf	fillInTemp@i+1,f,c
  1112  000FF8  BE26               	btfsc	fillInTemp@i+1,7,c
  1113  000FFA  D7EA               	goto	l2279
  1114  000FFC  5026               	movf	fillInTemp@i+1,w,c
  1115  000FFE  E101               	bnz	u1680
  1116  001000  D7E3               	goto	L1
  1117  001002                     u1680:
  1118  001002                     l199:
  1119                           
  1120                           ;temperature.c: 57: }
  1121                           ;temperature.c: 58: temp = temp_pipe;
  1122  001002  C04A  F02A         	movff	_temp_pipe,fillInTemp@temp
  1123  001006  C04B  F02B         	movff	_temp_pipe+1,fillInTemp@temp+1
  1124                           
  1125                           ;temperature.c: 59: }
  1126  00100A  D029               	goto	l2297
  1127  00100C                     l2285:
  1128                           
  1129                           ;temperature.c: 60: else{
  1130                           ;temperature.c: 62: for(int i = 0; i<4; i++){
  1131  00100C  0E00               	movlw	0
  1132  00100E  6E28               	movwf	fillInTemp@i_1135+1,c
  1133  001010  0E00               	movlw	0
  1134  001012  6E27               	movwf	fillInTemp@i_1135,c
  1135  001014  BE28               	btfsc	fillInTemp@i_1135+1,7,c
  1136  001016  D006               	goto	l2291
  1137  001018  5028               	movf	fillInTemp@i_1135+1,w,c
  1138  00101A  E11D               	bnz	l202
  1139  00101C  0E04               	movlw	4
  1140  00101E  5C27               	subwf	fillInTemp@i_1135,w,c
  1141  001020  B0D8               	btfsc	status,0,c
  1142  001022  D019               	goto	l202
  1143  001024                     l2291:
  1144                           
  1145                           ;temperature.c: 63: temp_display_message[i] = ambient_ascii[i];
  1146  001024  0E1E               	movlw	low _ambient_ascii
  1147  001026  2427               	addwf	fillInTemp@i_1135,w,c
  1148  001028  6EF6               	movwf	tblptrl,c
  1149  00102A  0E0F               	movlw	high _ambient_ascii
  1150  00102C  2028               	addwfc	fillInTemp@i_1135+1,w,c
  1151  00102E  6EF7               	movwf	tblptrh,c
  1152  001030                     	if	1	;There are 3 active tblptr bytes
  1153  001030  6AF8               	clrf	tblptru,c
  1154  001032  0E00               	movlw	low (__mediumconst shr (0+16))
  1155  001034  22F8               	addwfc	tblptru,f,c
  1156  001036                     	endif
  1157  001036  0ED9               	movlw	low _temp_display_message
  1158  001038  2427               	addwf	fillInTemp@i_1135,w,c
  1159  00103A  6ED9               	movwf	fsr2l,c
  1160  00103C  0E00               	movlw	high _temp_display_message
  1161  00103E  2028               	addwfc	fillInTemp@i_1135+1,w,c
  1162  001040  6EDA               	movwf	fsr2h,c
  1163  001042  0008               	tblrd		*
  1164  001044  CFF5 FFDF          	movff	tablat,indf2
  1165  001048  4A27               	infsnz	fillInTemp@i_1135,f,c
  1166  00104A  2A28               	incf	fillInTemp@i_1135+1,f,c
  1167  00104C  BE28               	btfsc	fillInTemp@i_1135+1,7,c
  1168  00104E  D7EA               	goto	l2291
  1169  001050  5028               	movf	fillInTemp@i_1135+1,w,c
  1170  001052  E101               	bnz	u1700
  1171  001054  D7E3               	goto	L2
  1172  001056                     u1700:
  1173  001056                     l202:
  1174                           
  1175                           ;temperature.c: 64: }
  1176                           ;temperature.c: 65: temp = temp_ambient;
  1177  001056  C048  F02A         	movff	_temp_ambient,fillInTemp@temp
  1178  00105A  C049  F02B         	movff	_temp_ambient+1,fillInTemp@temp+1
  1179  00105E                     l2297:
  1180                           
  1181                           ;temperature.c: 66: }
  1182                           ;temperature.c: 69: if(temp < 0){
  1183  00105E  AE2B               	btfss	fillInTemp@temp+1,7,c
  1184  001060  D008               	goto	l2303
  1185                           
  1186                           ;temperature.c: 71: asciiTemp[0] = '-';
  1187  001062  0E2D               	movlw	45
  1188  001064  0100               	movlb	0	; () banked
  1189  001066  6FD3               	movwf	_asciiTemp& (0+255),b
  1190                           
  1191                           ; BSR set to: 0
  1192                           ;temperature.c: 73: temp = - temp;
  1193  001068  6C2A               	negf	fillInTemp@temp,c
  1194  00106A  1E2B               	comf	fillInTemp@temp+1,f,c
  1195  00106C  B0D8               	btfsc	status,0,c
  1196  00106E  2A2B               	incf	fillInTemp@temp+1,f,c
  1197                           
  1198                           ;temperature.c: 74: }
  1199  001070  D003               	goto	l2305
  1200  001072                     l2303:
  1201                           
  1202                           ;temperature.c: 75: else{
  1203                           ;temperature.c: 76: asciiTemp[0] = ' ';
  1204  001072  0E20               	movlw	32
  1205  001074  0100               	movlb	0	; () banked
  1206  001076  6FD3               	movwf	_asciiTemp& (0+255),b
  1207  001078                     l2305:
  1208                           
  1209                           ; BSR set to: 0
  1210                           ;temperature.c: 77: }
  1211                           ;temperature.c: 79: asciiTemp[1] =(char) (temp/100 + 48);
  1212  001078  C02A  F018         	movff	fillInTemp@temp,___awdiv@dividend
  1213  00107C  C02B  F019         	movff	fillInTemp@temp+1,___awdiv@dividend+1
  1214  001080  0E00               	movlw	0
  1215  001082  6E1B               	movwf	___awdiv@divisor+1,c
  1216  001084  0E64               	movlw	100
  1217  001086  6E1A               	movwf	___awdiv@divisor,c
  1218  001088  EC79  F00B         	call	___awdiv	;wreg free
  1219  00108C  5018               	movf	?___awdiv,w,c
  1220  00108E  0F30               	addlw	48
  1221  001090  0100               	movlb	0	; () banked
  1222  001092  6FD4               	movwf	(_asciiTemp+1)& (0+255),b
  1223                           
  1224                           ; BSR set to: 0
  1225                           ;temperature.c: 80: asciiTemp[2] =(char) (temp % 100 / 10 + 48);
  1226  001094  0E00               	movlw	0
  1227  001096  6E15               	movwf	___awmod@divisor+1,c
  1228  001098  0E64               	movlw	100
  1229  00109A  6E14               	movwf	___awmod@divisor,c
  1230  00109C  C02A  F012         	movff	fillInTemp@temp,___awmod@dividend
  1231  0010A0  C02B  F013         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1232  0010A4  ECF6  F00B         	call	___awmod	;wreg free
  1233  0010A8  C012  F018         	movff	?___awmod,___awdiv@dividend
  1234  0010AC  C013  F019         	movff	?___awmod+1,___awdiv@dividend+1
  1235  0010B0  0E00               	movlw	0
  1236  0010B2  6E1B               	movwf	___awdiv@divisor+1,c
  1237  0010B4  0E0A               	movlw	10
  1238  0010B6  6E1A               	movwf	___awdiv@divisor,c
  1239  0010B8  EC79  F00B         	call	___awdiv	;wreg free
  1240  0010BC  5018               	movf	?___awdiv,w,c
  1241  0010BE  0F30               	addlw	48
  1242  0010C0  0100               	movlb	0	; () banked
  1243  0010C2  6FD5               	movwf	(_asciiTemp+2)& (0+255),b
  1244                           
  1245                           ; BSR set to: 0
  1246                           ;temperature.c: 81: asciiTemp[3] = (char) (temp % 10 + 48);
  1247  0010C4  C02A  F012         	movff	fillInTemp@temp,___awmod@dividend
  1248  0010C8  C02B  F013         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1249  0010CC  0E00               	movlw	0
  1250  0010CE  6E15               	movwf	___awmod@divisor+1,c
  1251  0010D0  0E0A               	movlw	10
  1252  0010D2  6E14               	movwf	___awmod@divisor,c
  1253  0010D4  ECF6  F00B         	call	___awmod	;wreg free
  1254  0010D8  5012               	movf	?___awmod,w,c
  1255  0010DA  0F30               	addlw	48
  1256  0010DC  0100               	movlb	0	; () banked
  1257  0010DE  6FD6               	movwf	(_asciiTemp+3)& (0+255),b
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;temperature.c: 85: for(char i = 12; i<17; i++){
  1261  0010E0  0E0C               	movlw	12
  1262  0010E2  6E29               	movwf	fillInTemp@i_1136,c
  1263  0010E4                     l2313:
  1264                           
  1265                           ; BSR set to: 0
  1266  0010E4  0E10               	movlw	16
  1267  0010E6  6429               	cpfsgt	fillInTemp@i_1136,c
  1268  0010E8  D001               	goto	l2317
  1269  0010EA  0012               	return	
  1270  0010EC                     l2317:
  1271                           
  1272                           ;temperature.c: 86: temp_display_message[i] = asciiTemp[i-12];
  1273  0010EC  0EF4               	movlw	244
  1274  0010EE  6E20               	movwf	??_fillInTemp& (0+255),c
  1275  0010F0  0EFF               	movlw	255
  1276  0010F2  6E21               	movwf	(??_fillInTemp+1)& (0+255),c
  1277  0010F4  5029               	movf	fillInTemp@i_1136,w,c
  1278  0010F6  6E22               	movwf	(??_fillInTemp+2)& (0+255),c
  1279  0010F8  6A23               	clrf	(??_fillInTemp+3)& (0+255),c
  1280  0010FA  5020               	movf	??_fillInTemp,w,c
  1281  0010FC  2622               	addwf	??_fillInTemp+2,f,c
  1282  0010FE  5021               	movf	??_fillInTemp+1,w,c
  1283  001100  2223               	addwfc	??_fillInTemp+3,f,c
  1284  001102  0ED3               	movlw	low _asciiTemp
  1285  001104  2422               	addwf	??_fillInTemp+2,w,c
  1286  001106  6ED9               	movwf	fsr2l,c
  1287  001108  0E00               	movlw	high _asciiTemp
  1288  00110A  2023               	addwfc	??_fillInTemp+3,w,c
  1289  00110C  6EDA               	movwf	fsr2h,c
  1290  00110E  5029               	movf	fillInTemp@i_1136,w,c
  1291  001110  0D01               	mullw	1
  1292  001112  0ED9               	movlw	low _temp_display_message
  1293  001114  24F3               	addwf	prodl,w,c
  1294  001116  6EE1               	movwf	fsr1l,c
  1295  001118  0E00               	movlw	high _temp_display_message
  1296  00111A  20F4               	addwfc	prodh,w,c
  1297  00111C  6EE2               	movwf	fsr1h,c
  1298  00111E  CFDF FFE7          	movff	indf2,indf1
  1299  001122  2A29               	incf	fillInTemp@i_1136,f,c
  1300  001124  D7DF               	goto	l2313
  1301  001126                     __end_of_fillInTemp:
  1302                           	opt stack 0
  1303                           tblptru	equ	0xFF8
  1304                           tblptrh	equ	0xFF7
  1305                           tblptrl	equ	0xFF6
  1306                           tablat	equ	0xFF5
  1307                           prodh	equ	0xFF4
  1308                           prodl	equ	0xFF3
  1309                           postinc0	equ	0xFEE
  1310                           wreg	equ	0xFE8
  1311                           indf1	equ	0xFE7
  1312                           postdec1	equ	0xFE5
  1313                           fsr1h	equ	0xFE2
  1314                           fsr1l	equ	0xFE1
  1315                           indf2	equ	0xFDF
  1316                           fsr2h	equ	0xFDA
  1317                           fsr2l	equ	0xFD9
  1318                           status	equ	0xFD8
  1319                           
  1320 ;; *************** function ___awmod *****************
  1321 ;; Defined at:
  1322 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  dividend        2   17[COMRAM] int 
  1325 ;;  divisor         2   19[COMRAM] int 
  1326 ;; Auto vars:     Size  Location     Type
  1327 ;;  sign            1   22[COMRAM] unsigned char 
  1328 ;;  counter         1   21[COMRAM] unsigned char 
  1329 ;; Return value:  Size  Location     Type
  1330 ;;                  2   17[COMRAM] int 
  1331 ;; Registers used:
  1332 ;;		wreg, status,2, status,0
  1333 ;; Tracked objects:
  1334 ;;		On entry : 0/0
  1335 ;;		On exit  : 0/0
  1336 ;;		Unchanged: 0/0
  1337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1338 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1339 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1341 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1342 ;;Total ram usage:        6 bytes
  1343 ;; Hardware stack levels used:    1
  1344 ;; Hardware stack levels required when called:    2
  1345 ;; This function calls:
  1346 ;;		Nothing
  1347 ;; This function is called by:
  1348 ;;		_fillInTemp
  1349 ;; This function uses a non-reentrant model
  1350 ;;
  1351                           
  1352                           	psect	text3
  1353  0017EC                     __ptext3:
  1354                           	opt stack 0
  1355  0017EC                     ___awmod:
  1356                           	opt stack 26
  1357                           
  1358                           ;incstack = 0
  1359  0017EC  0E00               	movlw	0
  1360  0017EE  6E17               	movwf	___awmod@sign,c
  1361  0017F0  AE13               	btfss	___awmod@dividend+1,7,c
  1362  0017F2  D006               	goto	l2171
  1363  0017F4  6C12               	negf	___awmod@dividend,c
  1364  0017F6  1E13               	comf	___awmod@dividend+1,f,c
  1365  0017F8  B0D8               	btfsc	status,0,c
  1366  0017FA  2A13               	incf	___awmod@dividend+1,f,c
  1367  0017FC  0E01               	movlw	1
  1368  0017FE  6E17               	movwf	___awmod@sign,c
  1369  001800                     l2171:
  1370  001800  AE15               	btfss	___awmod@divisor+1,7,c
  1371  001802  D004               	goto	l2175
  1372  001804  6C14               	negf	___awmod@divisor,c
  1373  001806  1E15               	comf	___awmod@divisor+1,f,c
  1374  001808  B0D8               	btfsc	status,0,c
  1375  00180A  2A15               	incf	___awmod@divisor+1,f,c
  1376  00180C                     l2175:
  1377  00180C  5014               	movf	___awmod@divisor,w,c
  1378  00180E  1015               	iorwf	___awmod@divisor+1,w,c
  1379  001810  B4D8               	btfsc	status,2,c
  1380  001812  D018               	goto	l2191
  1381  001814  0E01               	movlw	1
  1382  001816  6E16               	movwf	___awmod@counter,c
  1383  001818  D004               	goto	l2181
  1384  00181A                     l2179:
  1385  00181A  90D8               	bcf	status,0,c
  1386  00181C  3614               	rlcf	___awmod@divisor,f,c
  1387  00181E  3615               	rlcf	___awmod@divisor+1,f,c
  1388  001820  2A16               	incf	___awmod@counter,f,c
  1389  001822                     l2181:
  1390  001822  AE15               	btfss	___awmod@divisor+1,7,c
  1391  001824  D7FA               	goto	l2179
  1392  001826                     l2183:
  1393  001826  5014               	movf	___awmod@divisor,w,c
  1394  001828  5C12               	subwf	___awmod@dividend,w,c
  1395  00182A  5015               	movf	___awmod@divisor+1,w,c
  1396  00182C  5813               	subwfb	___awmod@dividend+1,w,c
  1397  00182E  A0D8               	btfss	status,0,c
  1398  001830  D004               	goto	l2187
  1399  001832  5014               	movf	___awmod@divisor,w,c
  1400  001834  5E12               	subwf	___awmod@dividend,f,c
  1401  001836  5015               	movf	___awmod@divisor+1,w,c
  1402  001838  5A13               	subwfb	___awmod@dividend+1,f,c
  1403  00183A                     l2187:
  1404  00183A  90D8               	bcf	status,0,c
  1405  00183C  3215               	rrcf	___awmod@divisor+1,f,c
  1406  00183E  3214               	rrcf	___awmod@divisor,f,c
  1407  001840  2E16               	decfsz	___awmod@counter,f,c
  1408  001842  D7F1               	goto	l2183
  1409  001844                     l2191:
  1410  001844  5017               	movf	___awmod@sign,w,c
  1411  001846  B4D8               	btfsc	status,2,c
  1412  001848  D004               	goto	l2195
  1413  00184A  6C12               	negf	___awmod@dividend,c
  1414  00184C  1E13               	comf	___awmod@dividend+1,f,c
  1415  00184E  B0D8               	btfsc	status,0,c
  1416  001850  2A13               	incf	___awmod@dividend+1,f,c
  1417  001852                     l2195:
  1418  001852  C012  F012         	movff	___awmod@dividend,?___awmod
  1419  001856  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
  1420  00185A  0012               	return	
  1421  00185C                     __end_of___awmod:
  1422                           	opt stack 0
  1423                           tblptru	equ	0xFF8
  1424                           tblptrh	equ	0xFF7
  1425                           tblptrl	equ	0xFF6
  1426                           tablat	equ	0xFF5
  1427                           prodh	equ	0xFF4
  1428                           prodl	equ	0xFF3
  1429                           postinc0	equ	0xFEE
  1430                           wreg	equ	0xFE8
  1431                           indf1	equ	0xFE7
  1432                           postdec1	equ	0xFE5
  1433                           fsr1h	equ	0xFE2
  1434                           fsr1l	equ	0xFE1
  1435                           indf2	equ	0xFDF
  1436                           fsr2h	equ	0xFDA
  1437                           fsr2l	equ	0xFD9
  1438                           status	equ	0xFD8
  1439                           
  1440 ;; *************** function ___awdiv *****************
  1441 ;; Defined at:
  1442 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;  dividend        2   23[COMRAM] int 
  1445 ;;  divisor         2   25[COMRAM] int 
  1446 ;; Auto vars:     Size  Location     Type
  1447 ;;  quotient        2   29[COMRAM] int 
  1448 ;;  sign            1   28[COMRAM] unsigned char 
  1449 ;;  counter         1   27[COMRAM] unsigned char 
  1450 ;; Return value:  Size  Location     Type
  1451 ;;                  2   23[COMRAM] int 
  1452 ;; Registers used:
  1453 ;;		wreg, status,2, status,0
  1454 ;; Tracked objects:
  1455 ;;		On entry : 0/0
  1456 ;;		On exit  : 0/0
  1457 ;;		Unchanged: 0/0
  1458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1459 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1460 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1462 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1463 ;;Total ram usage:        8 bytes
  1464 ;; Hardware stack levels used:    1
  1465 ;; Hardware stack levels required when called:    2
  1466 ;; This function calls:
  1467 ;;		Nothing
  1468 ;; This function is called by:
  1469 ;;		_fillInTemp
  1470 ;; This function uses a non-reentrant model
  1471 ;;
  1472                           
  1473                           	psect	text4
  1474  0016F2                     __ptext4:
  1475                           	opt stack 0
  1476  0016F2                     ___awdiv:
  1477                           	opt stack 26
  1478                           
  1479                           ;incstack = 0
  1480  0016F2  0E00               	movlw	0
  1481  0016F4  6E1D               	movwf	___awdiv@sign,c
  1482  0016F6  AE1B               	btfss	___awdiv@divisor+1,7,c
  1483  0016F8  D006               	goto	l2127
  1484  0016FA  6C1A               	negf	___awdiv@divisor,c
  1485  0016FC  1E1B               	comf	___awdiv@divisor+1,f,c
  1486  0016FE  B0D8               	btfsc	status,0,c
  1487  001700  2A1B               	incf	___awdiv@divisor+1,f,c
  1488  001702  0E01               	movlw	1
  1489  001704  6E1D               	movwf	___awdiv@sign,c
  1490  001706                     l2127:
  1491  001706  AE19               	btfss	___awdiv@dividend+1,7,c
  1492  001708  D006               	goto	l2133
  1493  00170A  6C18               	negf	___awdiv@dividend,c
  1494  00170C  1E19               	comf	___awdiv@dividend+1,f,c
  1495  00170E  B0D8               	btfsc	status,0,c
  1496  001710  2A19               	incf	___awdiv@dividend+1,f,c
  1497  001712  0E01               	movlw	1
  1498  001714  1A1D               	xorwf	___awdiv@sign,f,c
  1499  001716                     l2133:
  1500  001716  0E00               	movlw	0
  1501  001718  6E1F               	movwf	___awdiv@quotient+1,c
  1502  00171A  0E00               	movlw	0
  1503  00171C  6E1E               	movwf	___awdiv@quotient,c
  1504  00171E  501A               	movf	___awdiv@divisor,w,c
  1505  001720  101B               	iorwf	___awdiv@divisor+1,w,c
  1506  001722  B4D8               	btfsc	status,2,c
  1507  001724  D01C               	goto	l2155
  1508  001726  0E01               	movlw	1
  1509  001728  6E1C               	movwf	___awdiv@counter,c
  1510  00172A  D004               	goto	l2141
  1511  00172C                     l2139:
  1512  00172C  90D8               	bcf	status,0,c
  1513  00172E  361A               	rlcf	___awdiv@divisor,f,c
  1514  001730  361B               	rlcf	___awdiv@divisor+1,f,c
  1515  001732  2A1C               	incf	___awdiv@counter,f,c
  1516  001734                     l2141:
  1517  001734  AE1B               	btfss	___awdiv@divisor+1,7,c
  1518  001736  D7FA               	goto	l2139
  1519  001738                     l2143:
  1520  001738  90D8               	bcf	status,0,c
  1521  00173A  361E               	rlcf	___awdiv@quotient,f,c
  1522  00173C  361F               	rlcf	___awdiv@quotient+1,f,c
  1523  00173E  501A               	movf	___awdiv@divisor,w,c
  1524  001740  5C18               	subwf	___awdiv@dividend,w,c
  1525  001742  501B               	movf	___awdiv@divisor+1,w,c
  1526  001744  5819               	subwfb	___awdiv@dividend+1,w,c
  1527  001746  A0D8               	btfss	status,0,c
  1528  001748  D005               	goto	l2151
  1529  00174A  501A               	movf	___awdiv@divisor,w,c
  1530  00174C  5E18               	subwf	___awdiv@dividend,f,c
  1531  00174E  501B               	movf	___awdiv@divisor+1,w,c
  1532  001750  5A19               	subwfb	___awdiv@dividend+1,f,c
  1533  001752  801E               	bsf	___awdiv@quotient,0,c
  1534  001754                     l2151:
  1535  001754  90D8               	bcf	status,0,c
  1536  001756  321B               	rrcf	___awdiv@divisor+1,f,c
  1537  001758  321A               	rrcf	___awdiv@divisor,f,c
  1538  00175A  2E1C               	decfsz	___awdiv@counter,f,c
  1539  00175C  D7ED               	goto	l2143
  1540  00175E                     l2155:
  1541  00175E  501D               	movf	___awdiv@sign,w,c
  1542  001760  B4D8               	btfsc	status,2,c
  1543  001762  D004               	goto	l2159
  1544  001764  6C1E               	negf	___awdiv@quotient,c
  1545  001766  1E1F               	comf	___awdiv@quotient+1,f,c
  1546  001768  B0D8               	btfsc	status,0,c
  1547  00176A  2A1F               	incf	___awdiv@quotient+1,f,c
  1548  00176C                     l2159:
  1549  00176C  C01E  F018         	movff	___awdiv@quotient,?___awdiv
  1550  001770  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
  1551  001774  0012               	return	
  1552  001776                     __end_of___awdiv:
  1553                           	opt stack 0
  1554                           tblptru	equ	0xFF8
  1555                           tblptrh	equ	0xFF7
  1556                           tblptrl	equ	0xFF6
  1557                           tablat	equ	0xFF5
  1558                           prodh	equ	0xFF4
  1559                           prodl	equ	0xFF3
  1560                           postinc0	equ	0xFEE
  1561                           wreg	equ	0xFE8
  1562                           indf1	equ	0xFE7
  1563                           postdec1	equ	0xFE5
  1564                           fsr1h	equ	0xFE2
  1565                           fsr1l	equ	0xFE1
  1566                           indf2	equ	0xFDF
  1567                           fsr2h	equ	0xFDA
  1568                           fsr2l	equ	0xFD9
  1569                           status	equ	0xFD8
  1570                           
  1571 ;; *************** function _calculateTemp *****************
  1572 ;; Defined at:
  1573 ;;		line 90 in file "temperature.c"
  1574 ;; Parameters:    Size  Location     Type
  1575 ;;  plus            2    0[BANK1 ] int 
  1576 ;;  minus           2    2[BANK1 ] int 
  1577 ;; Auto vars:     Size  Location     Type
  1578 ;;  temp            2    7[BANK1 ] int 
  1579 ;; Return value:  Size  Location     Type
  1580 ;;                  2    0[BANK1 ] int 
  1581 ;; Registers used:
  1582 ;;		wreg, status,2, status,0, cstack
  1583 ;; Tracked objects:
  1584 ;;		On entry : 0/0
  1585 ;;		On exit  : 0/0
  1586 ;;		Unchanged: 0/0
  1587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1588 ;;      Params:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1589 ;;      Locals:         0       0       5       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1590 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1591 ;;      Totals:         2       0       9       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1592 ;;Total ram usage:       11 bytes
  1593 ;; Hardware stack levels used:    1
  1594 ;; Hardware stack levels required when called:    4
  1595 ;; This function calls:
  1596 ;;		___awtoft
  1597 ;;		___ftdiv
  1598 ;;		___ftmul
  1599 ;;		___fttol
  1600 ;; This function is called by:
  1601 ;;		_makeTempMessage
  1602 ;; This function uses a non-reentrant model
  1603 ;;
  1604                           
  1605                           	psect	text5
  1606  001444                     __ptext5:
  1607                           	opt stack 0
  1608  001444                     _calculateTemp:
  1609                           	opt stack 25
  1610                           
  1611                           ;temperature.c: 91: signed int temp;
  1612                           ;temperature.c: 93: temp = plus - minus;
  1613                           
  1614                           ;incstack = 0
  1615  001444  C102  F03C         	movff	calculateTemp@minus,??_calculateTemp
  1616  001448  C103  F03D         	movff	calculateTemp@minus+1,??_calculateTemp+1
  1617  00144C  1E3C               	comf	??_calculateTemp,f,c
  1618  00144E  1E3D               	comf	??_calculateTemp+1,f,c
  1619  001450  4A3C               	infsnz	??_calculateTemp,f,c
  1620  001452  2A3D               	incf	??_calculateTemp+1,f,c
  1621  001454  0101               	movlb	1	; () banked
  1622  001456  5100               	movf	calculateTemp@plus& (0+255),w,b
  1623  001458  243C               	addwf	??_calculateTemp,w,c
  1624  00145A  0101               	movlb	1	; () banked
  1625  00145C  6F07               	movwf	calculateTemp@temp& (0+255),b
  1626  00145E  0101               	movlb	1	; () banked
  1627  001460  5101               	movf	(calculateTemp@plus+1)& (0+255),w,b
  1628  001462  203D               	addwfc	??_calculateTemp+1,w,c
  1629  001464  0101               	movlb	1	; () banked
  1630  001466  6F08               	movwf	(calculateTemp@temp+1)& (0+255),b
  1631                           
  1632                           ; BSR set to: 1
  1633                           ;temperature.c: 95: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1634  001468  0EE0               	movlw	224
  1635  00146A  6E30               	movwf	___ftmul@f2,c
  1636  00146C  0E2B               	movlw	43
  1637  00146E  6E31               	movwf	___ftmul@f2+1,c
  1638  001470  0E45               	movlw	69
  1639  001472  6E32               	movwf	___ftmul@f2+2,c
  1640  001474  0E00               	movlw	0
  1641  001476  6E21               	movwf	___ftdiv@f2,c
  1642  001478  0E80               	movlw	128
  1643  00147A  6E22               	movwf	___ftdiv@f2+1,c
  1644  00147C  0E44               	movlw	68
  1645  00147E  6E23               	movwf	___ftdiv@f2+2,c
  1646  001480  C107  F01A         	movff	calculateTemp@temp,___awtoft@c
  1647  001484  C108  F01B         	movff	calculateTemp@temp+1,___awtoft@c+1
  1648  001488  ECF6  F00C         	call	___awtoft	;wreg free
  1649  00148C  C01A  F01E         	movff	?___awtoft,___ftdiv@f1
  1650  001490  C01B  F01F         	movff	?___awtoft+1,___ftdiv@f1+1
  1651  001494  C01C  F020         	movff	?___awtoft+2,___ftdiv@f1+2
  1652  001498  ECAF  F009         	call	___ftdiv	;wreg free
  1653  00149C  C01E  F02D         	movff	?___ftdiv,___ftmul@f1
  1654  0014A0  C01F  F02E         	movff	?___ftdiv+1,___ftmul@f1+1
  1655  0014A4  C020  F02F         	movff	?___ftdiv+2,___ftmul@f1+2
  1656  0014A8  EC35  F009         	call	___ftmul	;wreg free
  1657  0014AC  C02D  F104         	movff	?___ftmul,_calculateTemp$1924
  1658  0014B0  C02E  F105         	movff	?___ftmul+1,_calculateTemp$1924+1
  1659  0014B4  C02F  F106         	movff	?___ftmul+2,_calculateTemp$1924+2
  1660                           
  1661                           ;temperature.c: 95: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1662  0014B8  0E00               	movlw	0
  1663  0014BA  6E21               	movwf	___ftdiv@f2,c
  1664  0014BC  0E20               	movlw	32
  1665  0014BE  6E22               	movwf	___ftdiv@f2+1,c
  1666  0014C0  0E41               	movlw	65
  1667  0014C2  6E23               	movwf	___ftdiv@f2+2,c
  1668  0014C4  C104  F01E         	movff	_calculateTemp$1924,___ftdiv@f1
  1669  0014C8  C105  F01F         	movff	_calculateTemp$1924+1,___ftdiv@f1+1
  1670  0014CC  C106  F020         	movff	_calculateTemp$1924+2,___ftdiv@f1+2
  1671  0014D0  ECAF  F009         	call	___ftdiv	;wreg free
  1672  0014D4  C01E  F0ED         	movff	?___ftdiv,___fttol@f1
  1673  0014D8  C01F  F0EE         	movff	?___ftdiv+1,___fttol@f1+1
  1674  0014DC  C020  F0EF         	movff	?___ftdiv+2,___fttol@f1+2
  1675  0014E0  EC93  F008         	call	___fttol	;wreg free
  1676  0014E4  C0ED  F107         	movff	?___fttol,calculateTemp@temp
  1677  0014E8  C0EE  F108         	movff	?___fttol+1,calculateTemp@temp+1
  1678                           
  1679                           ;temperature.c: 97: return temp;
  1680  0014EC  C107  F100         	movff	calculateTemp@temp,?_calculateTemp
  1681  0014F0  C108  F101         	movff	calculateTemp@temp+1,?_calculateTemp+1
  1682  0014F4  0012               	return	
  1683  0014F6                     __end_of_calculateTemp:
  1684                           	opt stack 0
  1685                           tblptru	equ	0xFF8
  1686                           tblptrh	equ	0xFF7
  1687                           tblptrl	equ	0xFF6
  1688                           tablat	equ	0xFF5
  1689                           prodh	equ	0xFF4
  1690                           prodl	equ	0xFF3
  1691                           postinc0	equ	0xFEE
  1692                           wreg	equ	0xFE8
  1693                           indf1	equ	0xFE7
  1694                           postdec1	equ	0xFE5
  1695                           fsr1h	equ	0xFE2
  1696                           fsr1l	equ	0xFE1
  1697                           indf2	equ	0xFDF
  1698                           fsr2h	equ	0xFDA
  1699                           fsr2l	equ	0xFD9
  1700                           status	equ	0xFD8
  1701                           
  1702 ;; *************** function ___fttol *****************
  1703 ;; Defined at:
  1704 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  1705 ;; Parameters:    Size  Location     Type
  1706 ;;  f1              3    0[BANK0 ] float 
  1707 ;; Auto vars:     Size  Location     Type
  1708 ;;  lval            4   10[BANK0 ] unsigned long 
  1709 ;;  exp1            1   14[BANK0 ] unsigned char 
  1710 ;;  sign1           1    9[BANK0 ] unsigned char 
  1711 ;; Return value:  Size  Location     Type
  1712 ;;                  4    0[BANK0 ] long 
  1713 ;; Registers used:
  1714 ;;		wreg, status,2, status,0
  1715 ;; Tracked objects:
  1716 ;;		On entry : 0/0
  1717 ;;		On exit  : 0/0
  1718 ;;		Unchanged: 0/0
  1719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1720 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1721 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1722 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1723 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1724 ;;Total ram usage:       15 bytes
  1725 ;; Hardware stack levels used:    1
  1726 ;; Hardware stack levels required when called:    2
  1727 ;; This function calls:
  1728 ;;		Nothing
  1729 ;; This function is called by:
  1730 ;;		_calculateTemp
  1731 ;; This function uses a non-reentrant model
  1732 ;;
  1733                           
  1734                           	psect	text6
  1735  001126                     __ptext6:
  1736                           	opt stack 0
  1737  001126                     ___fttol:
  1738                           	opt stack 26
  1739                           
  1740                           ;incstack = 0
  1741  001126  C0EF  F0F1         	movff	___fttol@f1+2,??___fttol
  1742  00112A  0100               	movlb	0	; () banked
  1743  00112C  6BF2               	clrf	(??___fttol+1)& (0+255),b
  1744  00112E  6BF3               	clrf	(??___fttol+2)& (0+255),b
  1745  001130  0100               	movlb	0	; () banked
  1746  001132  35EE               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1747  001134  0100               	movlb	0	; () banked
  1748  001136  37F1               	rlcf	??___fttol& (0+255),f,b
  1749  001138  E301               	bnc	u1541
  1750  00113A  81F2               	bsf	(??___fttol+1)& (0+255),0,b
  1751  00113C                     u1541:
  1752  00113C  0100               	movlb	0	; () banked
  1753  00113E  51F1               	movf	??___fttol& (0+255),w,b
  1754  001140  0100               	movlb	0	; () banked
  1755  001142  6FFB               	movwf	___fttol@exp1& (0+255),b
  1756  001144  0100               	movlb	0	; () banked
  1757  001146  51FB               	movf	___fttol@exp1& (0+255),w,b
  1758  001148  A4D8               	btfss	status,2,c
  1759  00114A  D00A               	goto	l2217
  1760                           
  1761                           ; BSR set to: 0
  1762  00114C  0E00               	movlw	0
  1763  00114E  0100               	movlb	0	; () banked
  1764  001150  6FED               	movwf	?___fttol& (0+255),b
  1765  001152  0E00               	movlw	0
  1766  001154  6FEE               	movwf	(?___fttol+1)& (0+255),b
  1767  001156  0E00               	movlw	0
  1768  001158  6FEF               	movwf	(?___fttol+2)& (0+255),b
  1769  00115A  0E00               	movlw	0
  1770  00115C  6FF0               	movwf	(?___fttol+3)& (0+255),b
  1771                           
  1772                           ; BSR set to: 0
  1773  00115E  0012               	return	
  1774  001160                     l2217:
  1775                           
  1776                           ; BSR set to: 0
  1777  001160  0E17               	movlw	23
  1778  001162  0100               	movlb	0	; () banked
  1779  001164  6FF1               	movwf	??___fttol& (0+255),b
  1780  001166  C0ED  F0F2         	movff	___fttol@f1,??___fttol+1
  1781  00116A  C0EE  F0F3         	movff	___fttol@f1+1,??___fttol+2
  1782  00116E  C0EF  F0F4         	movff	___fttol@f1+2,??___fttol+3
  1783  001172  0100               	movlb	0	; () banked
  1784  001174  29F1               	incf	??___fttol& (0+255),w,b
  1785  001176  0100               	movlb	0	; () banked
  1786  001178  6FF5               	movwf	(??___fttol+4)& (0+255),b
  1787  00117A  D005               	goto	u1560
  1788  00117C                     u1565:
  1789  00117C  0100               	movlb	0	; () banked
  1790  00117E  90D8               	bcf	status,0,c
  1791  001180  33F4               	rrcf	(??___fttol+3)& (0+255),f,b
  1792  001182  33F3               	rrcf	(??___fttol+2)& (0+255),f,b
  1793  001184  33F2               	rrcf	(??___fttol+1)& (0+255),f,b
  1794  001186                     u1560:
  1795  001186  0100               	movlb	0	; () banked
  1796  001188  2FF5               	decfsz	(??___fttol+4)& (0+255),f,b
  1797  00118A  D7F8               	goto	u1565
  1798  00118C  0100               	movlb	0	; () banked
  1799  00118E  51F2               	movf	(??___fttol+1)& (0+255),w,b
  1800  001190  0100               	movlb	0	; () banked
  1801  001192  6FF6               	movwf	___fttol@sign1& (0+255),b
  1802                           
  1803                           ; BSR set to: 0
  1804  001194  0100               	movlb	0	; () banked
  1805  001196  8FEE               	bsf	(___fttol@f1+1)& (0+255),7,b
  1806                           
  1807                           ; BSR set to: 0
  1808  001198  0EFF               	movlw	255
  1809  00119A  0100               	movlb	0	; () banked
  1810  00119C  17ED               	andwf	___fttol@f1& (0+255),f,b
  1811  00119E  0EFF               	movlw	255
  1812  0011A0  0100               	movlb	0	; () banked
  1813  0011A2  17EE               	andwf	(___fttol@f1+1)& (0+255),f,b
  1814  0011A4  0E00               	movlw	0
  1815  0011A6  0100               	movlb	0	; () banked
  1816  0011A8  17EF               	andwf	(___fttol@f1+2)& (0+255),f,b
  1817                           
  1818                           ; BSR set to: 0
  1819  0011AA  0100               	movlb	0	; () banked
  1820  0011AC  51ED               	movf	___fttol@f1& (0+255),w,b
  1821  0011AE  0100               	movlb	0	; () banked
  1822  0011B0  6FF7               	movwf	___fttol@lval& (0+255),b
  1823  0011B2  0100               	movlb	0	; () banked
  1824  0011B4  51EE               	movf	(___fttol@f1+1)& (0+255),w,b
  1825  0011B6  0100               	movlb	0	; () banked
  1826  0011B8  6FF8               	movwf	(___fttol@lval+1)& (0+255),b
  1827  0011BA  0100               	movlb	0	; () banked
  1828  0011BC  51EF               	movf	(___fttol@f1+2)& (0+255),w,b
  1829  0011BE  0100               	movlb	0	; () banked
  1830  0011C0  6FF9               	movwf	(___fttol@lval+2)& (0+255),b
  1831  0011C2  0100               	movlb	0	; () banked
  1832  0011C4  6BFA               	clrf	(___fttol@lval+3)& (0+255),b
  1833                           
  1834                           ; BSR set to: 0
  1835  0011C6  0E8E               	movlw	142
  1836  0011C8  0100               	movlb	0	; () banked
  1837  0011CA  5FFB               	subwf	___fttol@exp1& (0+255),f,b
  1838                           
  1839                           ; BSR set to: 0
  1840  0011CC  0100               	movlb	0	; () banked
  1841  0011CE  AFFB               	btfss	___fttol@exp1& (0+255),7,b
  1842  0011D0  D01A               	goto	l2239
  1843                           
  1844                           ; BSR set to: 0
  1845  0011D2  0100               	movlb	0	; () banked
  1846  0011D4  51FB               	movf	___fttol@exp1& (0+255),w,b
  1847  0011D6  0A80               	xorlw	128
  1848  0011D8  0F8F               	addlw	143
  1849  0011DA  B0D8               	btfsc	status,0,c
  1850  0011DC  D00A               	goto	l2235
  1851                           
  1852                           ; BSR set to: 0
  1853  0011DE  0E00               	movlw	0
  1854  0011E0  0100               	movlb	0	; () banked
  1855  0011E2  6FED               	movwf	?___fttol& (0+255),b
  1856  0011E4  0E00               	movlw	0
  1857  0011E6  6FEE               	movwf	(?___fttol+1)& (0+255),b
  1858  0011E8  0E00               	movlw	0
  1859  0011EA  6FEF               	movwf	(?___fttol+2)& (0+255),b
  1860  0011EC  0E00               	movlw	0
  1861  0011EE  6FF0               	movwf	(?___fttol+3)& (0+255),b
  1862                           
  1863                           ; BSR set to: 0
  1864  0011F0  0012               	return	
  1865  0011F2                     l2235:
  1866                           
  1867                           ; BSR set to: 0
  1868  0011F2  0100               	movlb	0	; () banked
  1869  0011F4  90D8               	bcf	status,0,c
  1870  0011F6  33FA               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1871  0011F8  33F9               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1872  0011FA  33F8               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1873  0011FC  33F7               	rrcf	___fttol@lval& (0+255),f,b
  1874                           
  1875                           ; BSR set to: 0
  1876  0011FE  0100               	movlb	0	; () banked
  1877  001200  3FFB               	incfsz	___fttol@exp1& (0+255),f,b
  1878  001202  D7F7               	goto	l2235
  1879                           
  1880                           ; BSR set to: 0
  1881  001204  D01B               	goto	l2249
  1882  001206                     l2239:
  1883                           
  1884                           ; BSR set to: 0
  1885  001206  0E17               	movlw	23
  1886  001208  0100               	movlb	0	; () banked
  1887  00120A  65FB               	cpfsgt	___fttol@exp1& (0+255),b
  1888  00120C  D012               	goto	l2247
  1889                           
  1890                           ; BSR set to: 0
  1891  00120E  0E00               	movlw	0
  1892  001210  0100               	movlb	0	; () banked
  1893  001212  6FED               	movwf	?___fttol& (0+255),b
  1894  001214  0E00               	movlw	0
  1895  001216  6FEE               	movwf	(?___fttol+1)& (0+255),b
  1896  001218  0E00               	movlw	0
  1897  00121A  6FEF               	movwf	(?___fttol+2)& (0+255),b
  1898  00121C  0E00               	movlw	0
  1899  00121E  6FF0               	movwf	(?___fttol+3)& (0+255),b
  1900                           
  1901                           ; BSR set to: 0
  1902  001220  0012               	return	
  1903  001222                     l2245:
  1904                           
  1905                           ; BSR set to: 0
  1906  001222  0100               	movlb	0	; () banked
  1907  001224  90D8               	bcf	status,0,c
  1908  001226  37F7               	rlcf	___fttol@lval& (0+255),f,b
  1909  001228  37F8               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1910  00122A  37F9               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1911  00122C  37FA               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1912  00122E  0100               	movlb	0	; () banked
  1913  001230  07FB               	decf	___fttol@exp1& (0+255),f,b
  1914  001232                     l2247:
  1915                           
  1916                           ; BSR set to: 0
  1917  001232  0100               	movlb	0	; () banked
  1918  001234  51FB               	movf	___fttol@exp1& (0+255),w,b
  1919  001236  0100               	movlb	0	; () banked
  1920  001238  A4D8               	btfss	status,2,c
  1921  00123A  D7F3               	goto	l2245
  1922  00123C                     l2249:
  1923                           
  1924                           ; BSR set to: 0
  1925  00123C  0100               	movlb	0	; () banked
  1926  00123E  51F6               	movf	___fttol@sign1& (0+255),w,b
  1927  001240  0100               	movlb	0	; () banked
  1928  001242  B4D8               	btfsc	status,2,c
  1929  001244  D009               	goto	l2253
  1930                           
  1931                           ; BSR set to: 0
  1932  001246  0100               	movlb	0	; () banked
  1933  001248  1FFA               	comf	(___fttol@lval+3)& (0+255),f,b
  1934  00124A  1FF9               	comf	(___fttol@lval+2)& (0+255),f,b
  1935  00124C  1FF8               	comf	(___fttol@lval+1)& (0+255),f,b
  1936  00124E  6DF7               	negf	___fttol@lval& (0+255),b
  1937  001250  0E00               	movlw	0
  1938  001252  23F8               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1939  001254  23F9               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1940  001256  23FA               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1941  001258                     l2253:
  1942                           
  1943                           ; BSR set to: 0
  1944  001258  C0F7  F0ED         	movff	___fttol@lval,?___fttol
  1945  00125C  C0F8  F0EE         	movff	___fttol@lval+1,?___fttol+1
  1946  001260  C0F9  F0EF         	movff	___fttol@lval+2,?___fttol+2
  1947  001264  C0FA  F0F0         	movff	___fttol@lval+3,?___fttol+3
  1948  001268  0012               	return	
  1949  00126A                     __end_of___fttol:
  1950                           	opt stack 0
  1951                           tblptru	equ	0xFF8
  1952                           tblptrh	equ	0xFF7
  1953                           tblptrl	equ	0xFF6
  1954                           tablat	equ	0xFF5
  1955                           prodh	equ	0xFF4
  1956                           prodl	equ	0xFF3
  1957                           postinc0	equ	0xFEE
  1958                           wreg	equ	0xFE8
  1959                           indf1	equ	0xFE7
  1960                           postdec1	equ	0xFE5
  1961                           fsr1h	equ	0xFE2
  1962                           fsr1l	equ	0xFE1
  1963                           indf2	equ	0xFDF
  1964                           fsr2h	equ	0xFDA
  1965                           fsr2l	equ	0xFD9
  1966                           status	equ	0xFD8
  1967                           
  1968 ;; *************** function ___ftmul *****************
  1969 ;; Defined at:
  1970 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  1971 ;; Parameters:    Size  Location     Type
  1972 ;;  f1              3   44[COMRAM] float 
  1973 ;;  f2              3   47[COMRAM] float 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  f3_as_produc    3   54[COMRAM] unsigned um
  1976 ;;  sign            1   58[COMRAM] unsigned char 
  1977 ;;  cntr            1   57[COMRAM] unsigned char 
  1978 ;;  exp             1   53[COMRAM] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  3   44[COMRAM] float 
  1981 ;; Registers used:
  1982 ;;		wreg, status,2, status,0, cstack
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1988 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1989 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1990 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1991 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1992 ;;Total ram usage:       15 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    3
  1995 ;; This function calls:
  1996 ;;		___ftpack
  1997 ;; This function is called by:
  1998 ;;		_calculateTemp
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text7
  2003  00126A                     __ptext7:
  2004                           	opt stack 0
  2005  00126A                     ___ftmul:
  2006                           	opt stack 25
  2007                           
  2008                           ; BSR set to: 0
  2009                           ;incstack = 0
  2010  00126A  C02F  F033         	movff	___ftmul@f1+2,??___ftmul
  2011  00126E  6A34               	clrf	(??___ftmul+1)& (0+255),c
  2012  001270  6A35               	clrf	(??___ftmul+2)& (0+255),c
  2013  001272  342E               	rlcf	___ftmul@f1+1,w,c
  2014  001274  3633               	rlcf	??___ftmul& (0+255),f,c
  2015  001276  E301               	bnc	u1351
  2016  001278  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  2017  00127A                     u1351:
  2018  00127A  5033               	movf	??___ftmul,w,c
  2019  00127C  6E36               	movwf	___ftmul@exp,c
  2020  00127E  5036               	movf	___ftmul@exp,w,c
  2021  001280  A4D8               	btfss	status,2,c
  2022  001282  D007               	goto	l2077
  2023  001284  0E00               	movlw	0
  2024  001286  6E2D               	movwf	?___ftmul,c
  2025  001288  0E00               	movlw	0
  2026  00128A  6E2E               	movwf	?___ftmul+1,c
  2027  00128C  0E00               	movlw	0
  2028  00128E  6E2F               	movwf	?___ftmul+2,c
  2029  001290  0012               	return	
  2030  001292                     l2077:
  2031  001292  C032  F033         	movff	___ftmul@f2+2,??___ftmul
  2032  001296  6A34               	clrf	(??___ftmul+1)& (0+255),c
  2033  001298  6A35               	clrf	(??___ftmul+2)& (0+255),c
  2034  00129A  3431               	rlcf	___ftmul@f2+1,w,c
  2035  00129C  3633               	rlcf	??___ftmul& (0+255),f,c
  2036  00129E  E301               	bnc	u1371
  2037  0012A0  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  2038  0012A2                     u1371:
  2039  0012A2  5033               	movf	??___ftmul,w,c
  2040  0012A4  6E3B               	movwf	___ftmul@sign,c
  2041  0012A6  503B               	movf	___ftmul@sign,w,c
  2042  0012A8  A4D8               	btfss	status,2,c
  2043  0012AA  D007               	goto	l2083
  2044  0012AC  0E00               	movlw	0
  2045  0012AE  6E2D               	movwf	?___ftmul,c
  2046  0012B0  0E00               	movlw	0
  2047  0012B2  6E2E               	movwf	?___ftmul+1,c
  2048  0012B4  0E00               	movlw	0
  2049  0012B6  6E2F               	movwf	?___ftmul+2,c
  2050  0012B8  0012               	return	
  2051  0012BA                     l2083:
  2052  0012BA  503B               	movf	___ftmul@sign,w,c
  2053  0012BC  0F7B               	addlw	123
  2054  0012BE  2636               	addwf	___ftmul@exp,f,c
  2055  0012C0  C02F  F03B         	movff	___ftmul@f1+2,___ftmul@sign
  2056  0012C4  5032               	movf	___ftmul@f2+2,w,c
  2057  0012C6  1A3B               	xorwf	___ftmul@sign,f,c
  2058  0012C8  0E80               	movlw	128
  2059  0012CA  163B               	andwf	___ftmul@sign,f,c
  2060  0012CC  8E2E               	bsf	___ftmul@f1+1,7,c
  2061  0012CE  8E31               	bsf	___ftmul@f2+1,7,c
  2062  0012D0  0EFF               	movlw	255
  2063  0012D2  1630               	andwf	___ftmul@f2,f,c
  2064  0012D4  0EFF               	movlw	255
  2065  0012D6  1631               	andwf	___ftmul@f2+1,f,c
  2066  0012D8  0E00               	movlw	0
  2067  0012DA  1632               	andwf	___ftmul@f2+2,f,c
  2068  0012DC  0E00               	movlw	0
  2069  0012DE  6E37               	movwf	___ftmul@f3_as_product,c
  2070  0012E0  0E00               	movlw	0
  2071  0012E2  6E38               	movwf	___ftmul@f3_as_product+1,c
  2072  0012E4  0E00               	movlw	0
  2073  0012E6  6E39               	movwf	___ftmul@f3_as_product+2,c
  2074  0012E8  0E07               	movlw	7
  2075  0012EA  6E3A               	movwf	___ftmul@cntr,c
  2076  0012EC                     l2097:
  2077  0012EC  A02D               	btfss	___ftmul@f1,0,c
  2078  0012EE  D006               	goto	l2101
  2079  0012F0  5030               	movf	___ftmul@f2,w,c
  2080  0012F2  2637               	addwf	___ftmul@f3_as_product,f,c
  2081  0012F4  5031               	movf	___ftmul@f2+1,w,c
  2082  0012F6  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  2083  0012F8  5032               	movf	___ftmul@f2+2,w,c
  2084  0012FA  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  2085  0012FC                     l2101:
  2086  0012FC  90D8               	bcf	status,0,c
  2087  0012FE  322F               	rrcf	___ftmul@f1+2,f,c
  2088  001300  322E               	rrcf	___ftmul@f1+1,f,c
  2089  001302  322D               	rrcf	___ftmul@f1,f,c
  2090  001304  90D8               	bcf	status,0,c
  2091  001306  3630               	rlcf	___ftmul@f2,f,c
  2092  001308  3631               	rlcf	___ftmul@f2+1,f,c
  2093  00130A  3632               	rlcf	___ftmul@f2+2,f,c
  2094  00130C  2E3A               	decfsz	___ftmul@cntr,f,c
  2095  00130E  D7EE               	goto	l2097
  2096  001310  0E09               	movlw	9
  2097  001312  6E3A               	movwf	___ftmul@cntr,c
  2098  001314                     l2107:
  2099  001314  A02D               	btfss	___ftmul@f1,0,c
  2100  001316  D006               	goto	l2111
  2101  001318  5030               	movf	___ftmul@f2,w,c
  2102  00131A  2637               	addwf	___ftmul@f3_as_product,f,c
  2103  00131C  5031               	movf	___ftmul@f2+1,w,c
  2104  00131E  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  2105  001320  5032               	movf	___ftmul@f2+2,w,c
  2106  001322  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  2107  001324                     l2111:
  2108  001324  90D8               	bcf	status,0,c
  2109  001326  322F               	rrcf	___ftmul@f1+2,f,c
  2110  001328  322E               	rrcf	___ftmul@f1+1,f,c
  2111  00132A  322D               	rrcf	___ftmul@f1,f,c
  2112  00132C  90D8               	bcf	status,0,c
  2113  00132E  3239               	rrcf	___ftmul@f3_as_product+2,f,c
  2114  001330  3238               	rrcf	___ftmul@f3_as_product+1,f,c
  2115  001332  3237               	rrcf	___ftmul@f3_as_product,f,c
  2116  001334  2E3A               	decfsz	___ftmul@cntr,f,c
  2117  001336  D7EE               	goto	l2107
  2118  001338  C037  F012         	movff	___ftmul@f3_as_product,___ftpack@arg
  2119  00133C  C038  F013         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2120  001340  C039  F014         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2121  001344  C036  F015         	movff	___ftmul@exp,___ftpack@exp
  2122  001348  C03B  F016         	movff	___ftmul@sign,___ftpack@sign
  2123  00134C  ECD2  F00A         	call	___ftpack	;wreg free
  2124  001350  C012  F02D         	movff	?___ftpack,?___ftmul
  2125  001354  C013  F02E         	movff	?___ftpack+1,?___ftmul+1
  2126  001358  C014  F02F         	movff	?___ftpack+2,?___ftmul+2
  2127  00135C  0012               	return	
  2128  00135E                     __end_of___ftmul:
  2129                           	opt stack 0
  2130                           tblptru	equ	0xFF8
  2131                           tblptrh	equ	0xFF7
  2132                           tblptrl	equ	0xFF6
  2133                           tablat	equ	0xFF5
  2134                           prodh	equ	0xFF4
  2135                           prodl	equ	0xFF3
  2136                           postinc0	equ	0xFEE
  2137                           wreg	equ	0xFE8
  2138                           indf1	equ	0xFE7
  2139                           postdec1	equ	0xFE5
  2140                           fsr1h	equ	0xFE2
  2141                           fsr1l	equ	0xFE1
  2142                           indf2	equ	0xFDF
  2143                           fsr2h	equ	0xFDA
  2144                           fsr2l	equ	0xFD9
  2145                           status	equ	0xFD8
  2146                           
  2147 ;; *************** function ___ftdiv *****************
  2148 ;; Defined at:
  2149 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  2150 ;; Parameters:    Size  Location     Type
  2151 ;;  f1              3   29[COMRAM] float 
  2152 ;;  f2              3   32[COMRAM] float 
  2153 ;; Auto vars:     Size  Location     Type
  2154 ;;  f3              3   39[COMRAM] float 
  2155 ;;  sign            1   43[COMRAM] unsigned char 
  2156 ;;  exp             1   42[COMRAM] unsigned char 
  2157 ;;  cntr            1   38[COMRAM] unsigned char 
  2158 ;; Return value:  Size  Location     Type
  2159 ;;                  3   29[COMRAM] float 
  2160 ;; Registers used:
  2161 ;;		wreg, status,2, status,0, cstack
  2162 ;; Tracked objects:
  2163 ;;		On entry : 0/0
  2164 ;;		On exit  : 0/0
  2165 ;;		Unchanged: 0/0
  2166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2167 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2168 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2169 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2170 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2171 ;;Total ram usage:       15 bytes
  2172 ;; Hardware stack levels used:    1
  2173 ;; Hardware stack levels required when called:    3
  2174 ;; This function calls:
  2175 ;;		___ftpack
  2176 ;; This function is called by:
  2177 ;;		_calculateTemp
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           	psect	text8
  2182  00135E                     __ptext8:
  2183                           	opt stack 0
  2184  00135E                     ___ftdiv:
  2185                           	opt stack 25
  2186                           
  2187                           ;incstack = 0
  2188  00135E  C020  F024         	movff	___ftdiv@f1+2,??___ftdiv
  2189  001362  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  2190  001364  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  2191  001366  341F               	rlcf	___ftdiv@f1+1,w,c
  2192  001368  3624               	rlcf	??___ftdiv& (0+255),f,c
  2193  00136A  E301               	bnc	u1301
  2194  00136C  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  2195  00136E                     u1301:
  2196  00136E  5024               	movf	??___ftdiv,w,c
  2197  001370  6E2B               	movwf	___ftdiv@exp,c
  2198  001372  502B               	movf	___ftdiv@exp,w,c
  2199  001374  A4D8               	btfss	status,2,c
  2200  001376  D007               	goto	l2031
  2201  001378  0E00               	movlw	0
  2202  00137A  6E1E               	movwf	?___ftdiv,c
  2203  00137C  0E00               	movlw	0
  2204  00137E  6E1F               	movwf	?___ftdiv+1,c
  2205  001380  0E00               	movlw	0
  2206  001382  6E20               	movwf	?___ftdiv+2,c
  2207  001384  0012               	return	
  2208  001386                     l2031:
  2209  001386  C023  F024         	movff	___ftdiv@f2+2,??___ftdiv
  2210  00138A  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  2211  00138C  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  2212  00138E  3422               	rlcf	___ftdiv@f2+1,w,c
  2213  001390  3624               	rlcf	??___ftdiv& (0+255),f,c
  2214  001392  E301               	bnc	u1321
  2215  001394  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  2216  001396                     u1321:
  2217  001396  5024               	movf	??___ftdiv,w,c
  2218  001398  6E2C               	movwf	___ftdiv@sign,c
  2219  00139A  502C               	movf	___ftdiv@sign,w,c
  2220  00139C  A4D8               	btfss	status,2,c
  2221  00139E  D007               	goto	l2037
  2222  0013A0  0E00               	movlw	0
  2223  0013A2  6E1E               	movwf	?___ftdiv,c
  2224  0013A4  0E00               	movlw	0
  2225  0013A6  6E1F               	movwf	?___ftdiv+1,c
  2226  0013A8  0E00               	movlw	0
  2227  0013AA  6E20               	movwf	?___ftdiv+2,c
  2228  0013AC  0012               	return	
  2229  0013AE                     l2037:
  2230  0013AE  0E00               	movlw	0
  2231  0013B0  6E28               	movwf	___ftdiv@f3,c
  2232  0013B2  0E00               	movlw	0
  2233  0013B4  6E29               	movwf	___ftdiv@f3+1,c
  2234  0013B6  0E00               	movlw	0
  2235  0013B8  6E2A               	movwf	___ftdiv@f3+2,c
  2236  0013BA  502C               	movf	___ftdiv@sign,w,c
  2237  0013BC  0F89               	addlw	137
  2238  0013BE  5E2B               	subwf	___ftdiv@exp,f,c
  2239  0013C0  C020  F02C         	movff	___ftdiv@f1+2,___ftdiv@sign
  2240  0013C4  5023               	movf	___ftdiv@f2+2,w,c
  2241  0013C6  1A2C               	xorwf	___ftdiv@sign,f,c
  2242  0013C8  0E80               	movlw	128
  2243  0013CA  162C               	andwf	___ftdiv@sign,f,c
  2244  0013CC  8E1F               	bsf	___ftdiv@f1+1,7,c
  2245  0013CE  0EFF               	movlw	255
  2246  0013D0  161E               	andwf	___ftdiv@f1,f,c
  2247  0013D2  0EFF               	movlw	255
  2248  0013D4  161F               	andwf	___ftdiv@f1+1,f,c
  2249  0013D6  0E00               	movlw	0
  2250  0013D8  1620               	andwf	___ftdiv@f1+2,f,c
  2251  0013DA  8E22               	bsf	___ftdiv@f2+1,7,c
  2252  0013DC  0EFF               	movlw	255
  2253  0013DE  1621               	andwf	___ftdiv@f2,f,c
  2254  0013E0  0EFF               	movlw	255
  2255  0013E2  1622               	andwf	___ftdiv@f2+1,f,c
  2256  0013E4  0E00               	movlw	0
  2257  0013E6  1623               	andwf	___ftdiv@f2+2,f,c
  2258  0013E8  0E18               	movlw	24
  2259  0013EA  6E27               	movwf	___ftdiv@cntr,c
  2260  0013EC                     l2057:
  2261  0013EC  90D8               	bcf	status,0,c
  2262  0013EE  3628               	rlcf	___ftdiv@f3,f,c
  2263  0013F0  3629               	rlcf	___ftdiv@f3+1,f,c
  2264  0013F2  362A               	rlcf	___ftdiv@f3+2,f,c
  2265  0013F4  5021               	movf	___ftdiv@f2,w,c
  2266  0013F6  5C1E               	subwf	___ftdiv@f1,w,c
  2267  0013F8  5022               	movf	___ftdiv@f2+1,w,c
  2268  0013FA  581F               	subwfb	___ftdiv@f1+1,w,c
  2269  0013FC  5023               	movf	___ftdiv@f2+2,w,c
  2270  0013FE  5820               	subwfb	___ftdiv@f1+2,w,c
  2271  001400  A0D8               	btfss	status,0,c
  2272  001402  D007               	goto	l582
  2273  001404  5021               	movf	___ftdiv@f2,w,c
  2274  001406  5E1E               	subwf	___ftdiv@f1,f,c
  2275  001408  5022               	movf	___ftdiv@f2+1,w,c
  2276  00140A  5A1F               	subwfb	___ftdiv@f1+1,f,c
  2277  00140C  5023               	movf	___ftdiv@f2+2,w,c
  2278  00140E  5A20               	subwfb	___ftdiv@f1+2,f,c
  2279  001410  8028               	bsf	___ftdiv@f3,0,c
  2280  001412                     l582:
  2281  001412  90D8               	bcf	status,0,c
  2282  001414  361E               	rlcf	___ftdiv@f1,f,c
  2283  001416  361F               	rlcf	___ftdiv@f1+1,f,c
  2284  001418  3620               	rlcf	___ftdiv@f1+2,f,c
  2285  00141A  2E27               	decfsz	___ftdiv@cntr,f,c
  2286  00141C  D7E7               	goto	l2057
  2287  00141E  C028  F012         	movff	___ftdiv@f3,___ftpack@arg
  2288  001422  C029  F013         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2289  001426  C02A  F014         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2290  00142A  C02B  F015         	movff	___ftdiv@exp,___ftpack@exp
  2291  00142E  C02C  F016         	movff	___ftdiv@sign,___ftpack@sign
  2292  001432  ECD2  F00A         	call	___ftpack	;wreg free
  2293  001436  C012  F01E         	movff	?___ftpack,?___ftdiv
  2294  00143A  C013  F01F         	movff	?___ftpack+1,?___ftdiv+1
  2295  00143E  C014  F020         	movff	?___ftpack+2,?___ftdiv+2
  2296  001442  0012               	return	
  2297  001444                     __end_of___ftdiv:
  2298                           	opt stack 0
  2299                           tblptru	equ	0xFF8
  2300                           tblptrh	equ	0xFF7
  2301                           tblptrl	equ	0xFF6
  2302                           tablat	equ	0xFF5
  2303                           prodh	equ	0xFF4
  2304                           prodl	equ	0xFF3
  2305                           postinc0	equ	0xFEE
  2306                           wreg	equ	0xFE8
  2307                           indf1	equ	0xFE7
  2308                           postdec1	equ	0xFE5
  2309                           fsr1h	equ	0xFE2
  2310                           fsr1l	equ	0xFE1
  2311                           indf2	equ	0xFDF
  2312                           fsr2h	equ	0xFDA
  2313                           fsr2l	equ	0xFD9
  2314                           status	equ	0xFD8
  2315                           
  2316 ;; *************** function ___awtoft *****************
  2317 ;; Defined at:
  2318 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  2319 ;; Parameters:    Size  Location     Type
  2320 ;;  c               2   25[COMRAM] int 
  2321 ;; Auto vars:     Size  Location     Type
  2322 ;;  sign            1   28[COMRAM] unsigned char 
  2323 ;; Return value:  Size  Location     Type
  2324 ;;                  3   25[COMRAM] float 
  2325 ;; Registers used:
  2326 ;;		wreg, status,2, status,0, cstack
  2327 ;; Tracked objects:
  2328 ;;		On entry : 0/0
  2329 ;;		On exit  : 0/0
  2330 ;;		Unchanged: 0/0
  2331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2332 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2336 ;;Total ram usage:        4 bytes
  2337 ;; Hardware stack levels used:    1
  2338 ;; Hardware stack levels required when called:    3
  2339 ;; This function calls:
  2340 ;;		___ftpack
  2341 ;; This function is called by:
  2342 ;;		_calculateTemp
  2343 ;; This function uses a non-reentrant model
  2344 ;;
  2345                           
  2346                           	psect	text9
  2347  0019EC                     __ptext9:
  2348                           	opt stack 0
  2349  0019EC                     ___awtoft:
  2350                           	opt stack 25
  2351                           
  2352                           ;incstack = 0
  2353  0019EC  0E00               	movlw	0
  2354  0019EE  6E1D               	movwf	___awtoft@sign,c
  2355  0019F0  AE1B               	btfss	___awtoft@c+1,7,c
  2356  0019F2  D006               	goto	l2207
  2357  0019F4  6C1A               	negf	___awtoft@c,c
  2358  0019F6  1E1B               	comf	___awtoft@c+1,f,c
  2359  0019F8  B0D8               	btfsc	status,0,c
  2360  0019FA  2A1B               	incf	___awtoft@c+1,f,c
  2361  0019FC  0E01               	movlw	1
  2362  0019FE  6E1D               	movwf	___awtoft@sign,c
  2363  001A00                     l2207:
  2364  001A00  C01A  F012         	movff	___awtoft@c,___ftpack@arg
  2365  001A04  C01B  F013         	movff	___awtoft@c+1,___ftpack@arg+1
  2366  001A08  6A14               	clrf	___ftpack@arg+2,c
  2367  001A0A  0E8E               	movlw	142
  2368  001A0C  6E15               	movwf	___ftpack@exp,c
  2369  001A0E  C01D  F016         	movff	___awtoft@sign,___ftpack@sign
  2370  001A12  ECD2  F00A         	call	___ftpack	;wreg free
  2371  001A16  C012  F01A         	movff	?___ftpack,?___awtoft
  2372  001A1A  C013  F01B         	movff	?___ftpack+1,?___awtoft+1
  2373  001A1E  C014  F01C         	movff	?___ftpack+2,?___awtoft+2
  2374  001A22  0012               	return	
  2375  001A24                     __end_of___awtoft:
  2376                           	opt stack 0
  2377                           tblptru	equ	0xFF8
  2378                           tblptrh	equ	0xFF7
  2379                           tblptrl	equ	0xFF6
  2380                           tablat	equ	0xFF5
  2381                           prodh	equ	0xFF4
  2382                           prodl	equ	0xFF3
  2383                           postinc0	equ	0xFEE
  2384                           wreg	equ	0xFE8
  2385                           indf1	equ	0xFE7
  2386                           postdec1	equ	0xFE5
  2387                           fsr1h	equ	0xFE2
  2388                           fsr1l	equ	0xFE1
  2389                           indf2	equ	0xFDF
  2390                           fsr2h	equ	0xFDA
  2391                           fsr2l	equ	0xFD9
  2392                           status	equ	0xFD8
  2393                           
  2394 ;; *************** function ___ftpack *****************
  2395 ;; Defined at:
  2396 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  2397 ;; Parameters:    Size  Location     Type
  2398 ;;  arg             3   17[COMRAM] unsigned um
  2399 ;;  exp             1   20[COMRAM] unsigned char 
  2400 ;;  sign            1   21[COMRAM] unsigned char 
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;		None
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  3   17[COMRAM] float 
  2405 ;; Registers used:
  2406 ;;		wreg, status,2, status,0
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2412 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2413 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2414 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2415 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2416 ;;Total ram usage:        8 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    2
  2419 ;; This function calls:
  2420 ;;		Nothing
  2421 ;; This function is called by:
  2422 ;;		___awtoft
  2423 ;;		___ftdiv
  2424 ;;		___ftmul
  2425 ;; This function uses a non-reentrant model
  2426 ;;
  2427                           
  2428                           	psect	text10
  2429  0015A4                     __ptext10:
  2430                           	opt stack 0
  2431  0015A4                     ___ftpack:
  2432                           	opt stack 25
  2433                           
  2434                           ;incstack = 0
  2435  0015A4  5015               	movf	___ftpack@exp,w,c
  2436  0015A6  B4D8               	btfsc	status,2,c
  2437  0015A8  D005               	goto	l1987
  2438  0015AA  5012               	movf	___ftpack@arg,w,c
  2439  0015AC  1013               	iorwf	___ftpack@arg+1,w,c
  2440  0015AE  1014               	iorwf	___ftpack@arg+2,w,c
  2441  0015B0  A4D8               	btfss	status,2,c
  2442  0015B2  D00C               	goto	l1993
  2443  0015B4                     l1987:
  2444  0015B4  0E00               	movlw	0
  2445  0015B6  6E12               	movwf	?___ftpack,c
  2446  0015B8  0E00               	movlw	0
  2447  0015BA  6E13               	movwf	?___ftpack+1,c
  2448  0015BC  0E00               	movlw	0
  2449  0015BE  6E14               	movwf	?___ftpack+2,c
  2450  0015C0  0012               	return	
  2451  0015C2                     l1991:
  2452  0015C2  2A15               	incf	___ftpack@exp,f,c
  2453  0015C4  90D8               	bcf	status,0,c
  2454  0015C6  3214               	rrcf	___ftpack@arg+2,f,c
  2455  0015C8  3213               	rrcf	___ftpack@arg+1,f,c
  2456  0015CA  3212               	rrcf	___ftpack@arg,f,c
  2457  0015CC                     l1993:
  2458  0015CC  0E00               	movlw	0
  2459  0015CE  1412               	andwf	___ftpack@arg,w,c
  2460  0015D0  6E17               	movwf	??___ftpack& (0+255),c
  2461  0015D2  0E00               	movlw	0
  2462  0015D4  1413               	andwf	___ftpack@arg+1,w,c
  2463  0015D6  6E18               	movwf	(??___ftpack+1)& (0+255),c
  2464  0015D8  0EFE               	movlw	254
  2465  0015DA  1414               	andwf	___ftpack@arg+2,w,c
  2466  0015DC  6E19               	movwf	(??___ftpack+2)& (0+255),c
  2467  0015DE  5017               	movf	??___ftpack,w,c
  2468  0015E0  1018               	iorwf	??___ftpack+1,w,c
  2469  0015E2  1019               	iorwf	??___ftpack+2,w,c
  2470  0015E4  B4D8               	btfsc	status,2,c
  2471  0015E6  D00C               	goto	l1999
  2472  0015E8  D7EC               	goto	l1991
  2473  0015EA                     l1995:
  2474  0015EA  2A15               	incf	___ftpack@exp,f,c
  2475  0015EC  0E01               	movlw	1
  2476  0015EE  2612               	addwf	___ftpack@arg,f,c
  2477  0015F0  0E00               	movlw	0
  2478  0015F2  2213               	addwfc	___ftpack@arg+1,f,c
  2479  0015F4  0E00               	movlw	0
  2480  0015F6  2214               	addwfc	___ftpack@arg+2,f,c
  2481  0015F8  90D8               	bcf	status,0,c
  2482  0015FA  3214               	rrcf	___ftpack@arg+2,f,c
  2483  0015FC  3213               	rrcf	___ftpack@arg+1,f,c
  2484  0015FE  3212               	rrcf	___ftpack@arg,f,c
  2485  001600                     l1999:
  2486  001600  0E00               	movlw	0
  2487  001602  1412               	andwf	___ftpack@arg,w,c
  2488  001604  6E17               	movwf	??___ftpack& (0+255),c
  2489  001606  0E00               	movlw	0
  2490  001608  1413               	andwf	___ftpack@arg+1,w,c
  2491  00160A  6E18               	movwf	(??___ftpack+1)& (0+255),c
  2492  00160C  0EFF               	movlw	255
  2493  00160E  1414               	andwf	___ftpack@arg+2,w,c
  2494  001610  6E19               	movwf	(??___ftpack+2)& (0+255),c
  2495  001612  5017               	movf	??___ftpack,w,c
  2496  001614  1018               	iorwf	??___ftpack+1,w,c
  2497  001616  1019               	iorwf	??___ftpack+2,w,c
  2498  001618  B4D8               	btfsc	status,2,c
  2499  00161A  D006               	goto	l2003
  2500  00161C  D7E6               	goto	l1995
  2501  00161E                     l2001:
  2502  00161E  0615               	decf	___ftpack@exp,f,c
  2503  001620  90D8               	bcf	status,0,c
  2504  001622  3612               	rlcf	___ftpack@arg,f,c
  2505  001624  3613               	rlcf	___ftpack@arg+1,f,c
  2506  001626  3614               	rlcf	___ftpack@arg+2,f,c
  2507  001628                     l2003:
  2508  001628  BE13               	btfsc	___ftpack@arg+1,7,c
  2509  00162A  D003               	goto	l524
  2510  00162C  0E02               	movlw	2
  2511  00162E  6015               	cpfslt	___ftpack@exp,c
  2512  001630  D7F6               	goto	l2001
  2513  001632                     l524:
  2514  001632  A015               	btfss	___ftpack@exp,0,c
  2515  001634  9E13               	bcf	___ftpack@arg+1,7,c
  2516  001636  90D8               	bcf	status,0,c
  2517  001638  3215               	rrcf	___ftpack@exp,f,c
  2518  00163A  5015               	movf	___ftpack@exp,w,c
  2519  00163C  1214               	iorwf	___ftpack@arg+2,f,c
  2520  00163E  5016               	movf	___ftpack@sign,w,c
  2521  001640  A4D8               	btfss	status,2,c
  2522  001642  8E14               	bsf	___ftpack@arg+2,7,c
  2523  001644  C012  F012         	movff	___ftpack@arg,?___ftpack
  2524  001648  C013  F013         	movff	___ftpack@arg+1,?___ftpack+1
  2525  00164C  C014  F014         	movff	___ftpack@arg+2,?___ftpack+2
  2526  001650  0012               	return	
  2527  001652                     __end_of___ftpack:
  2528                           	opt stack 0
  2529                           tblptru	equ	0xFF8
  2530                           tblptrh	equ	0xFF7
  2531                           tblptrl	equ	0xFF6
  2532                           tablat	equ	0xFF5
  2533                           prodh	equ	0xFF4
  2534                           prodl	equ	0xFF3
  2535                           postinc0	equ	0xFEE
  2536                           wreg	equ	0xFE8
  2537                           indf1	equ	0xFE7
  2538                           postdec1	equ	0xFE5
  2539                           fsr1h	equ	0xFE2
  2540                           fsr1l	equ	0xFE1
  2541                           indf2	equ	0xFDF
  2542                           fsr2h	equ	0xFDA
  2543                           fsr2l	equ	0xFD9
  2544                           status	equ	0xFD8
  2545                           
  2546 ;; *************** function _init_frequency *****************
  2547 ;; Defined at:
  2548 ;;		line 78 in file "frequency.c"
  2549 ;; Parameters:    Size  Location     Type
  2550 ;;		None
  2551 ;; Auto vars:     Size  Location     Type
  2552 ;;		None
  2553 ;; Return value:  Size  Location     Type
  2554 ;;                  1    wreg      void 
  2555 ;; Registers used:
  2556 ;;		wreg, status,2
  2557 ;; Tracked objects:
  2558 ;;		On entry : 0/0
  2559 ;;		On exit  : 0/0
  2560 ;;		Unchanged: 0/0
  2561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2562 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2563 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2566 ;;Total ram usage:        0 bytes
  2567 ;; Hardware stack levels used:    1
  2568 ;; Hardware stack levels required when called:    2
  2569 ;; This function calls:
  2570 ;;		Nothing
  2571 ;; This function is called by:
  2572 ;;		_main
  2573 ;; This function uses a non-reentrant model
  2574 ;;
  2575                           
  2576                           	psect	text11
  2577  0019B2                     __ptext11:
  2578                           	opt stack 0
  2579  0019B2                     _init_frequency:
  2580                           	opt stack 28
  2581                           
  2582                           ;frequency.c: 80: TRISCbits.TRISC1 = 1;
  2583                           
  2584                           ;incstack = 0
  2585  0019B2  8294               	bsf	3988,1,c	;volatile
  2586                           
  2587                           ;frequency.c: 82: CCPTMRS2bits.C8TSEL1=0;
  2588  0019B4  010F               	movlb	15	; () banked
  2589  0019B6  9350               	bcf	80,1,b	;volatile
  2590                           
  2591                           ;frequency.c: 83: CCPTMRS2bits.C8TSEL0=0;
  2592  0019B8  010F               	movlb	15	; () banked
  2593  0019BA  9150               	bcf	80,0,b	;volatile
  2594                           
  2595                           ;frequency.c: 85: PIE4bits.CCP8IE =1;
  2596  0019BC  8A8E               	bsf	3982,5,c	;volatile
  2597                           
  2598                           ;frequency.c: 86: PIR4bits.CCP8IF=0;
  2599  0019BE  9A8F               	bcf	3983,5,c	;volatile
  2600                           
  2601                           ; BSR set to: 15
  2602                           ;frequency.c: 92: CCP8CON=0x07;
  2603  0019C0  0E07               	movlw	7
  2604  0019C2  010F               	movlb	15	; () banked
  2605  0019C4  6F06               	movwf	6,b	;volatile
  2606                           
  2607                           ; BSR set to: 15
  2608                           ;frequency.c: 95: INTCONbits.GIE = 1;
  2609  0019C6  8EF2               	bsf	intcon,7,c	;volatile
  2610                           
  2611                           ; BSR set to: 15
  2612                           ;frequency.c: 97: T1CONbits.RD16=1;
  2613  0019C8  82CD               	bsf	4045,1,c	;volatile
  2614                           
  2615                           ; BSR set to: 15
  2616                           ;frequency.c: 98: T1CONbits.TMR1ON=1;
  2617  0019CA  80CD               	bsf	4045,0,c	;volatile
  2618                           
  2619                           ; BSR set to: 15
  2620                           ;frequency.c: 99: T1CONbits.TMR1CS0=1;
  2621  0019CC  8CCD               	bsf	4045,6,c	;volatile
  2622                           
  2623                           ; BSR set to: 15
  2624                           ;frequency.c: 100: T1CONbits.TMR1CS1=0;
  2625  0019CE  9ECD               	bcf	4045,7,c	;volatile
  2626                           
  2627                           ; BSR set to: 15
  2628                           ;frequency.c: 101: T1CONbits.T1CKPS1=0;
  2629  0019D0  9ACD               	bcf	4045,5,c	;volatile
  2630                           
  2631                           ; BSR set to: 15
  2632                           ;frequency.c: 102: T1CONbits.T1CKPS0=0;
  2633  0019D2  98CD               	bcf	4045,4,c	;volatile
  2634                           
  2635                           ; BSR set to: 15
  2636                           ;frequency.c: 103: T1CONbits.T1OSCEN=0;
  2637  0019D4  96CD               	bcf	4045,3,c	;volatile
  2638                           
  2639                           ;frequency.c: 104: TMR1L=0X00;
  2640  0019D6  0E00               	movlw	0
  2641  0019D8  6ECE               	movwf	4046,c	;volatile
  2642                           
  2643                           ;frequency.c: 105: TMR1H=0X00;
  2644  0019DA  0E00               	movlw	0
  2645  0019DC  6ECF               	movwf	4047,c	;volatile
  2646                           
  2647                           ;frequency.c: 106: CCPR8H=0x00;
  2648  0019DE  0E00               	movlw	0
  2649  0019E0  010F               	movlb	15	; () banked
  2650  0019E2  6F08               	movwf	8,b	;volatile
  2651                           
  2652                           ;frequency.c: 107: CCPR8L=0x00;
  2653  0019E4  0E00               	movlw	0
  2654  0019E6  010F               	movlb	15	; () banked
  2655  0019E8  6F07               	movwf	7,b	;volatile
  2656                           
  2657                           ; BSR set to: 15
  2658  0019EA  0012               	return		;funcret
  2659  0019EC                     __end_of_init_frequency:
  2660                           	opt stack 0
  2661                           tblptru	equ	0xFF8
  2662                           tblptrh	equ	0xFF7
  2663                           tblptrl	equ	0xFF6
  2664                           tablat	equ	0xFF5
  2665                           prodh	equ	0xFF4
  2666                           prodl	equ	0xFF3
  2667                           intcon	equ	0xFF2
  2668                           postinc0	equ	0xFEE
  2669                           wreg	equ	0xFE8
  2670                           indf1	equ	0xFE7
  2671                           postdec1	equ	0xFE5
  2672                           fsr1h	equ	0xFE2
  2673                           fsr1l	equ	0xFE1
  2674                           indf2	equ	0xFDF
  2675                           fsr2h	equ	0xFDA
  2676                           fsr2l	equ	0xFD9
  2677                           status	equ	0xFD8
  2678                           
  2679 ;; *************** function _initUART1 *****************
  2680 ;; Defined at:
  2681 ;;		line 20 in file "uart.c"
  2682 ;; Parameters:    Size  Location     Type
  2683 ;;		None
  2684 ;; Auto vars:     Size  Location     Type
  2685 ;;		None
  2686 ;; Return value:  Size  Location     Type
  2687 ;;                  1    wreg      void 
  2688 ;; Registers used:
  2689 ;;		wreg, status,2
  2690 ;; Tracked objects:
  2691 ;;		On entry : 0/0
  2692 ;;		On exit  : 0/0
  2693 ;;		Unchanged: 0/0
  2694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2695 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2696 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2697 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2698 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2699 ;;Total ram usage:        0 bytes
  2700 ;; Hardware stack levels used:    1
  2701 ;; Hardware stack levels required when called:    2
  2702 ;; This function calls:
  2703 ;;		Nothing
  2704 ;; This function is called by:
  2705 ;;		_main
  2706 ;; This function uses a non-reentrant model
  2707 ;;
  2708                           
  2709                           	psect	text12
  2710  001ADA                     __ptext12:
  2711                           	opt stack 0
  2712  001ADA                     _initUART1:
  2713                           	opt stack 28
  2714                           
  2715                           ;uart.c: 23: TRISCbits.TRISC7 = 1;
  2716                           
  2717                           ; BSR set to: 15
  2718                           ;incstack = 0
  2719  001ADA  8E94               	bsf	3988,7,c	;volatile
  2720                           
  2721                           ;uart.c: 24: TRISCbits.TRISC6 = 0;
  2722  001ADC  9C94               	bcf	3988,6,c	;volatile
  2723                           
  2724                           ;uart.c: 26: TXSTA1bits.BRGH = 1;
  2725  001ADE  84AD               	bsf	4013,2,c	;volatile
  2726                           
  2727                           ;uart.c: 27: BAUDCON1bits.BRG16 = 1;
  2728  001AE0  867E               	bsf	3966,3,c	;volatile
  2729                           
  2730                           ;uart.c: 35: SPBRGH1 = 0;
  2731  001AE2  0E00               	movlw	0
  2732  001AE4  6E7F               	movwf	3967,c	;volatile
  2733                           
  2734                           ;uart.c: 36: SPBRG1 = 34;
  2735  001AE6  0E22               	movlw	34
  2736  001AE8  6EB0               	movwf	4016,c	;volatile
  2737                           
  2738                           ;uart.c: 40: TXSTA1bits.SYNC = 0;
  2739  001AEA  98AD               	bcf	4013,4,c	;volatile
  2740                           
  2741                           ;uart.c: 41: RCSTA1bits.SPEN = 1;
  2742  001AEC  8EAC               	bsf	4012,7,c	;volatile
  2743                           
  2744                           ;uart.c: 45: PIE1bits.TXIE = 0;
  2745  001AEE  989D               	bcf	3997,4,c	;volatile
  2746                           
  2747                           ;uart.c: 46: PIE1bits.RC1IE = 1;
  2748  001AF0  8A9D               	bsf	3997,5,c	;volatile
  2749                           
  2750                           ;uart.c: 51: RCSTA1bits.CREN = 1;
  2751  001AF2  88AC               	bsf	4012,4,c	;volatile
  2752  001AF4  0012               	return		;funcret
  2753  001AF6                     __end_of_initUART1:
  2754                           	opt stack 0
  2755                           tblptru	equ	0xFF8
  2756                           tblptrh	equ	0xFF7
  2757                           tblptrl	equ	0xFF6
  2758                           tablat	equ	0xFF5
  2759                           prodh	equ	0xFF4
  2760                           prodl	equ	0xFF3
  2761                           intcon	equ	0xFF2
  2762                           postinc0	equ	0xFEE
  2763                           wreg	equ	0xFE8
  2764                           indf1	equ	0xFE7
  2765                           postdec1	equ	0xFE5
  2766                           fsr1h	equ	0xFE2
  2767                           fsr1l	equ	0xFE1
  2768                           indf2	equ	0xFDF
  2769                           fsr2h	equ	0xFDA
  2770                           fsr2l	equ	0xFD9
  2771                           status	equ	0xFD8
  2772                           
  2773 ;; *************** function _initLoRa *****************
  2774 ;; Defined at:
  2775 ;;		line 22 in file "lora.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2789 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2790 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2792 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2793 ;;Total ram usage:        0 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    4
  2796 ;; This function calls:
  2797 ;;		_delay_ms
  2798 ;;		_sendUARTMessage
  2799 ;; This function is called by:
  2800 ;;		_main
  2801 ;; This function uses a non-reentrant model
  2802 ;;
  2803                           
  2804                           	psect	text13
  2805  00185C                     __ptext13:
  2806                           	opt stack 0
  2807  00185C                     _initLoRa:
  2808                           	opt stack 26
  2809                           
  2810                           ;lora.c: 24: sendUARTMessage(set_dev_eui);
  2811                           
  2812                           ;incstack = 0
  2813  00185C  0E7C               	movlw	low _set_dev_eui
  2814  00185E  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  2815  001860  0E0F               	movlw	high _set_dev_eui
  2816  001862  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  2817  001864  ECBB  F00B         	call	_sendUARTMessage	;wreg free
  2818                           
  2819                           ;lora.c: 25: delay_ms(800);
  2820  001868  0E03               	movlw	3
  2821  00186A  6E13               	movwf	delay_ms@ms+1,c
  2822  00186C  0E20               	movlw	32
  2823  00186E  6E12               	movwf	delay_ms@ms,c
  2824  001870  EC12  F00D         	call	_delay_ms	;wreg free
  2825                           
  2826                           ;lora.c: 27: sendUARTMessage(set_app_eui);
  2827  001874  0E5A               	movlw	low _set_app_eui
  2828  001876  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  2829  001878  0E0F               	movlw	high _set_app_eui
  2830  00187A  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  2831  00187C  ECBB  F00B         	call	_sendUARTMessage	;wreg free
  2832                           
  2833                           ;lora.c: 28: delay_ms(800);
  2834  001880  0E03               	movlw	3
  2835  001882  6E13               	movwf	delay_ms@ms+1,c
  2836  001884  0E20               	movlw	32
  2837  001886  6E12               	movwf	delay_ms@ms,c
  2838  001888  EC12  F00D         	call	_delay_ms	;wreg free
  2839                           
  2840                           ;lora.c: 30: sendUARTMessage(set_app_key);
  2841  00188C  0E28               	movlw	low _set_app_key
  2842  00188E  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  2843  001890  0E0F               	movlw	high _set_app_key
  2844  001892  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  2845  001894  ECBB  F00B         	call	_sendUARTMessage	;wreg free
  2846                           
  2847                           ;lora.c: 31: delay_ms(3000);
  2848  001898  0E0B               	movlw	11
  2849  00189A  6E13               	movwf	delay_ms@ms+1,c
  2850  00189C  0EB8               	movlw	184
  2851  00189E  6E12               	movwf	delay_ms@ms,c
  2852  0018A0  EC12  F00D         	call	_delay_ms	;wreg free
  2853                           
  2854                           ;lora.c: 33: sendUARTMessage(join_network);
  2855  0018A4  0E9E               	movlw	low _join_network
  2856  0018A6  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  2857  0018A8  0E0F               	movlw	high _join_network
  2858  0018AA  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  2859  0018AC  ECBB  F00B         	call	_sendUARTMessage	;wreg free
  2860                           
  2861                           ;lora.c: 34: delay_ms(3000);
  2862  0018B0  0E0B               	movlw	11
  2863  0018B2  6E13               	movwf	delay_ms@ms+1,c
  2864  0018B4  0EB8               	movlw	184
  2865  0018B6  6E12               	movwf	delay_ms@ms,c
  2866  0018B8  EC12  F00D         	call	_delay_ms	;wreg free
  2867  0018BC  0012               	return		;funcret
  2868  0018BE                     __end_of_initLoRa:
  2869                           	opt stack 0
  2870                           tblptru	equ	0xFF8
  2871                           tblptrh	equ	0xFF7
  2872                           tblptrl	equ	0xFF6
  2873                           tablat	equ	0xFF5
  2874                           prodh	equ	0xFF4
  2875                           prodl	equ	0xFF3
  2876                           intcon	equ	0xFF2
  2877                           postinc0	equ	0xFEE
  2878                           wreg	equ	0xFE8
  2879                           indf1	equ	0xFE7
  2880                           postdec1	equ	0xFE5
  2881                           fsr1h	equ	0xFE2
  2882                           fsr1l	equ	0xFE1
  2883                           indf2	equ	0xFDF
  2884                           fsr2h	equ	0xFDA
  2885                           fsr2l	equ	0xFD9
  2886                           status	equ	0xFD8
  2887                           
  2888 ;; *************** function _sendUARTMessage *****************
  2889 ;; Defined at:
  2890 ;;		line 61 in file "uart.c"
  2891 ;; Parameters:    Size  Location     Type
  2892 ;;  newMessagePo    2   22[COMRAM] PTR unsigned char 
  2893 ;;		 -> join_network(16), set_app_key(50), set_app_eui(34), set_dev_eui(34), 
  2894 ;;		 -> temp_display_message(20), 
  2895 ;; Auto vars:     Size  Location     Type
  2896 ;;		None
  2897 ;; Return value:  Size  Location     Type
  2898 ;;                  1    wreg      void 
  2899 ;; Registers used:
  2900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2901 ;; Tracked objects:
  2902 ;;		On entry : 0/0
  2903 ;;		On exit  : 0/0
  2904 ;;		Unchanged: 0/0
  2905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2907 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2908 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2909 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2910 ;;Total ram usage:        2 bytes
  2911 ;; Hardware stack levels used:    1
  2912 ;; Hardware stack levels required when called:    3
  2913 ;; This function calls:
  2914 ;;		_delay_ms
  2915 ;; This function is called by:
  2916 ;;		_main
  2917 ;;		_initLoRa
  2918 ;; This function uses a non-reentrant model
  2919 ;;
  2920                           
  2921                           	psect	text14
  2922  001776                     __ptext14:
  2923                           	opt stack 0
  2924  001776                     _sendUARTMessage:
  2925                           	opt stack 27
  2926                           
  2927                           ;uart.c: 64: currentMessagePointer = newMessagePointer;
  2928                           
  2929                           ;incstack = 0
  2930  001776  C017  F03E         	movff	sendUARTMessage@newMessagePointer,_currentMessagePointer
  2931  00177A  C018  F03F         	movff	sendUARTMessage@newMessagePointer+1,_currentMessagePointer+1
  2932                           
  2933                           ;uart.c: 69: last_received_message_index = uart_receive_buffer_index;
  2934  00177E  C04C  F0C9         	movff	_uart_receive_buffer_index,_last_received_message_index
  2935  001782  C04D  F0CA         	movff	_uart_receive_buffer_index+1,_last_received_message_index+1
  2936                           
  2937                           ;uart.c: 70: TXSTA1bits.TXEN = 1;
  2938  001786  8AAD               	bsf	4013,5,c	;volatile
  2939                           
  2940                           ;uart.c: 72: while(*currentMessagePointer != '\0'){
  2941  001788  D01C               	goto	l2269
  2942  00178A                     l132:
  2943                           
  2944                           ;uart.c: 73: if(PIR1bits.TXIF == 1){
  2945  00178A  A89E               	btfss	3998,4,c	;volatile
  2946  00178C  D01A               	goto	l2269
  2947                           
  2948                           ;uart.c: 75: TXREG1 = *currentMessagePointer;
  2949  00178E  C03E  FFF6         	movff	_currentMessagePointer,tblptrl
  2950  001792  C03F  FFF7         	movff	_currentMessagePointer+1,tblptrh
  2951  001796  0E00               	movlw	low (__smallconst shr (0+16))
  2952  001798  6EF8               	movwf	tblptru,c
  2953  00179A  0E0E               	movlw	(high __ramtop+-1)
  2954  00179C  64F7               	cpfsgt	tblptrh,c
  2955  00179E  D003               	bra	u1637
  2956  0017A0  0008               	tblrd		*
  2957  0017A2  50F5               	movf	tablat,w,c
  2958  0017A4  D005               	bra	u1630
  2959  0017A6                     u1637:
  2960  0017A6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2961  0017AA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2962  0017AE  50EF               	movf	indf0,w,c
  2963  0017B0                     u1630:
  2964  0017B0  6EAE               	movwf	4014,c	;volatile
  2965                           
  2966                           ;uart.c: 77: currentMessagePointer += 1;
  2967  0017B2  4A3E               	infsnz	_currentMessagePointer,f,c
  2968  0017B4  2A3F               	incf	_currentMessagePointer+1,f,c
  2969                           
  2970                           ;uart.c: 78: delay_ms(1);
  2971  0017B6  0E00               	movlw	0
  2972  0017B8  6E13               	movwf	delay_ms@ms+1,c
  2973  0017BA  0E01               	movlw	1
  2974  0017BC  6E12               	movwf	delay_ms@ms,c
  2975  0017BE  EC12  F00D         	call	_delay_ms	;wreg free
  2976  0017C2                     l2269:
  2977  0017C2  C03E  FFF6         	movff	_currentMessagePointer,tblptrl
  2978  0017C6  C03F  FFF7         	movff	_currentMessagePointer+1,tblptrh
  2979  0017CA  0E00               	movlw	low (__smallconst shr (0+16))
  2980  0017CC  6EF8               	movwf	tblptru,c
  2981  0017CE  0E0E               	movlw	(high __ramtop+-1)
  2982  0017D0  64F7               	cpfsgt	tblptrh,c
  2983  0017D2  D003               	bra	u1647
  2984  0017D4  0008               	tblrd		*
  2985  0017D6  50F5               	movf	tablat,w,c
  2986  0017D8  D005               	bra	u1640
  2987  0017DA                     u1647:
  2988  0017DA  CFF6 FFE9          	movff	tblptrl,fsr0l
  2989  0017DE  CFF7 FFEA          	movff	tblptrh,fsr0h
  2990  0017E2  50EF               	movf	indf0,w,c
  2991  0017E4                     u1640:
  2992  0017E4  0900               	iorlw	0
  2993  0017E6  B4D8               	btfsc	status,2,c
  2994  0017E8  0012               	return	
  2995  0017EA  D7CF               	goto	l132
  2996  0017EC                     __end_of_sendUARTMessage:
  2997                           	opt stack 0
  2998                           tblptru	equ	0xFF8
  2999                           tblptrh	equ	0xFF7
  3000                           tblptrl	equ	0xFF6
  3001                           tablat	equ	0xFF5
  3002                           prodh	equ	0xFF4
  3003                           prodl	equ	0xFF3
  3004                           intcon	equ	0xFF2
  3005                           indf0	equ	0xFEF
  3006                           postinc0	equ	0xFEE
  3007                           fsr0h	equ	0xFEA
  3008                           fsr0l	equ	0xFE9
  3009                           wreg	equ	0xFE8
  3010                           indf1	equ	0xFE7
  3011                           postdec1	equ	0xFE5
  3012                           fsr1h	equ	0xFE2
  3013                           fsr1l	equ	0xFE1
  3014                           indf2	equ	0xFDF
  3015                           fsr2h	equ	0xFDA
  3016                           fsr2l	equ	0xFD9
  3017                           status	equ	0xFD8
  3018                           
  3019 ;; *************** function _delay_ms *****************
  3020 ;; Defined at:
  3021 ;;		line 11 in file "delay.c"
  3022 ;; Parameters:    Size  Location     Type
  3023 ;;  ms              2   17[COMRAM] int 
  3024 ;; Auto vars:     Size  Location     Type
  3025 ;;  i               2   20[COMRAM] int 
  3026 ;; Return value:  Size  Location     Type
  3027 ;;                  1    wreg      void 
  3028 ;; Registers used:
  3029 ;;		wreg, status,2, status,0
  3030 ;; Tracked objects:
  3031 ;;		On entry : 0/0
  3032 ;;		On exit  : 0/0
  3033 ;;		Unchanged: 0/0
  3034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3035 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3036 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3037 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3038 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3039 ;;Total ram usage:        5 bytes
  3040 ;; Hardware stack levels used:    1
  3041 ;; Hardware stack levels required when called:    2
  3042 ;; This function calls:
  3043 ;;		Nothing
  3044 ;; This function is called by:
  3045 ;;		_main
  3046 ;;		_sendUARTMessage
  3047 ;;		_initLoRa
  3048 ;; This function uses a non-reentrant model
  3049 ;;
  3050                           
  3051                           	psect	text15
  3052  001A24                     __ptext15:
  3053                           	opt stack 0
  3054  001A24                     _delay_ms:
  3055                           	opt stack 27
  3056                           
  3057                           ;delay.c: 12: for(int i = 0; i<ms; i++){
  3058                           
  3059                           ;incstack = 0
  3060  001A24  0E00               	movlw	0
  3061  001A26  6E16               	movwf	delay_ms@i+1,c
  3062  001A28  0E00               	movlw	0
  3063  001A2A  6E15               	movwf	delay_ms@i,c
  3064  001A2C  D009               	goto	l255
  3065  001A2E                     l2021:
  3066                           
  3067                           ;delay.c: 13: _delay((unsigned long)((1)*(8000000/4000.0)));
  3068  001A2E  0E03               	movlw	3
  3069  001A30  6E14               	movwf	??_delay_ms& (0+255),c
  3070  001A32  0E98               	movlw	152
  3071  001A34                     u1767:
  3072  001A34  2EE8               	decfsz	wreg,f,c
  3073  001A36  D7FE               	goto	u1767
  3074  001A38  2E14               	decfsz	??_delay_ms& (0+255),f,c
  3075  001A3A  D7FC               	goto	u1767
  3076  001A3C  4A15               	infsnz	delay_ms@i,f,c
  3077  001A3E  2A16               	incf	delay_ms@i+1,f,c
  3078  001A40                     l255:
  3079  001A40  5012               	movf	delay_ms@ms,w,c
  3080  001A42  5C15               	subwf	delay_ms@i,w,c
  3081  001A44  5016               	movf	delay_ms@i+1,w,c
  3082  001A46  0A80               	xorlw	128
  3083  001A48  6E14               	movwf	??_delay_ms& (0+255),c
  3084  001A4A  5013               	movf	delay_ms@ms+1,w,c
  3085  001A4C  0A80               	xorlw	128
  3086  001A4E  5814               	subwfb	??_delay_ms& (0+255),w,c
  3087  001A50  B0D8               	btfsc	status,0,c
  3088  001A52  0012               	return	
  3089  001A54  D7EC               	goto	l2021
  3090  001A56                     __end_of_delay_ms:
  3091                           	opt stack 0
  3092                           tblptru	equ	0xFF8
  3093                           tblptrh	equ	0xFF7
  3094                           tblptrl	equ	0xFF6
  3095                           tablat	equ	0xFF5
  3096                           prodh	equ	0xFF4
  3097                           prodl	equ	0xFF3
  3098                           intcon	equ	0xFF2
  3099                           indf0	equ	0xFEF
  3100                           postinc0	equ	0xFEE
  3101                           fsr0h	equ	0xFEA
  3102                           fsr0l	equ	0xFE9
  3103                           wreg	equ	0xFE8
  3104                           indf1	equ	0xFE7
  3105                           postdec1	equ	0xFE5
  3106                           fsr1h	equ	0xFE2
  3107                           fsr1l	equ	0xFE1
  3108                           indf2	equ	0xFDF
  3109                           fsr2h	equ	0xFDA
  3110                           fsr2l	equ	0xFD9
  3111                           status	equ	0xFD8
  3112                           
  3113 ;; *************** function _initInterrupts *****************
  3114 ;; Defined at:
  3115 ;;		line 20 in file "main.c"
  3116 ;; Parameters:    Size  Location     Type
  3117 ;;		None
  3118 ;; Auto vars:     Size  Location     Type
  3119 ;;		None
  3120 ;; Return value:  Size  Location     Type
  3121 ;;                  1    wreg      void 
  3122 ;; Registers used:
  3123 ;;		wreg, status,2
  3124 ;; Tracked objects:
  3125 ;;		On entry : 0/0
  3126 ;;		On exit  : 0/0
  3127 ;;		Unchanged: 0/0
  3128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3133 ;;Total ram usage:        0 bytes
  3134 ;; Hardware stack levels used:    1
  3135 ;; Hardware stack levels required when called:    2
  3136 ;; This function calls:
  3137 ;;		Nothing
  3138 ;; This function is called by:
  3139 ;;		_main
  3140 ;; This function uses a non-reentrant model
  3141 ;;
  3142                           
  3143                           	psect	text16
  3144  001B20                     __ptext16:
  3145                           	opt stack 0
  3146  001B20                     _initInterrupts:
  3147                           	opt stack 28
  3148                           
  3149                           ;main.c: 21: INTCON = 0b11000000;
  3150                           
  3151                           ;incstack = 0
  3152  001B20  0EC0               	movlw	192
  3153  001B22  6EF2               	movwf	intcon,c	;volatile
  3154                           
  3155                           ;main.c: 22: RCONbits.IPEN = 0;
  3156  001B24  9ED0               	bcf	4048,7,c	;volatile
  3157  001B26  0012               	return		;funcret
  3158  001B28                     __end_of_initInterrupts:
  3159                           	opt stack 0
  3160                           tblptru	equ	0xFF8
  3161                           tblptrh	equ	0xFF7
  3162                           tblptrl	equ	0xFF6
  3163                           tablat	equ	0xFF5
  3164                           prodh	equ	0xFF4
  3165                           prodl	equ	0xFF3
  3166                           intcon	equ	0xFF2
  3167                           indf0	equ	0xFEF
  3168                           postinc0	equ	0xFEE
  3169                           fsr0h	equ	0xFEA
  3170                           fsr0l	equ	0xFE9
  3171                           wreg	equ	0xFE8
  3172                           indf1	equ	0xFE7
  3173                           postdec1	equ	0xFE5
  3174                           fsr1h	equ	0xFE2
  3175                           fsr1l	equ	0xFE1
  3176                           indf2	equ	0xFDF
  3177                           fsr2h	equ	0xFDA
  3178                           fsr2l	equ	0xFD9
  3179                           status	equ	0xFD8
  3180                           
  3181 ;; *************** function _initADC *****************
  3182 ;; Defined at:
  3183 ;;		line 24 in file "temperature.c"
  3184 ;; Parameters:    Size  Location     Type
  3185 ;;		None
  3186 ;; Auto vars:     Size  Location     Type
  3187 ;;		None
  3188 ;; Return value:  Size  Location     Type
  3189 ;;                  1    wreg      void 
  3190 ;; Registers used:
  3191 ;;		wreg, status,2
  3192 ;; Tracked objects:
  3193 ;;		On entry : 0/0
  3194 ;;		On exit  : 0/0
  3195 ;;		Unchanged: 0/0
  3196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3201 ;;Total ram usage:        0 bytes
  3202 ;; Hardware stack levels used:    1
  3203 ;; Hardware stack levels required when called:    2
  3204 ;; This function calls:
  3205 ;;		Nothing
  3206 ;; This function is called by:
  3207 ;;		_main
  3208 ;; This function uses a non-reentrant model
  3209 ;;
  3210                           
  3211                           	psect	text17
  3212  001A86                     __ptext17:
  3213                           	opt stack 0
  3214  001A86                     _initADC:
  3215                           	opt stack 28
  3216                           
  3217                           ;temperature.c: 25: TRISAbits.TRISA0 = 1;
  3218                           
  3219                           ;incstack = 0
  3220  001A86  8092               	bsf	3986,0,c	;volatile
  3221                           
  3222                           ;temperature.c: 26: TRISAbits.TRISA1 = 1;
  3223  001A88  8292               	bsf	3986,1,c	;volatile
  3224                           
  3225                           ;temperature.c: 27: PORTAbits.RA0 = 0;
  3226  001A8A  9080               	bcf	3968,0,c	;volatile
  3227                           
  3228                           ;temperature.c: 28: PORTAbits.RA1 = 0;
  3229  001A8C  9280               	bcf	3968,1,c	;volatile
  3230                           
  3231                           ;temperature.c: 30: PORTBbits.RB0 = 0;
  3232  001A8E  9081               	bcf	3969,0,c	;volatile
  3233                           
  3234                           ;temperature.c: 31: TRISBbits.TRISB0 = 1;
  3235  001A90  8093               	bsf	3987,0,c	;volatile
  3236                           
  3237                           ;temperature.c: 32: PORTBbits.RB1 = 0;
  3238  001A92  9281               	bcf	3969,1,c	;volatile
  3239                           
  3240                           ;temperature.c: 33: TRISBbits.TRISB1 = 1;
  3241  001A94  8293               	bsf	3987,1,c	;volatile
  3242                           
  3243                           ;temperature.c: 36: ANCON0 = 0xFC;
  3244  001A96  0EFC               	movlw	252
  3245  001A98  010F               	movlb	15	; () banked
  3246  001A9A  6F48               	movwf	72,b	;volatile
  3247                           
  3248                           ;temperature.c: 37: ANCON1 = 0x1C;
  3249  001A9C  0E1C               	movlw	28
  3250  001A9E  010F               	movlb	15	; () banked
  3251  001AA0  6F49               	movwf	73,b	;volatile
  3252                           
  3253                           ;temperature.c: 38: ADCON0 = 0x00;
  3254  001AA2  0E00               	movlw	0
  3255  001AA4  6EC2               	movwf	4034,c	;volatile
  3256                           
  3257                           ;temperature.c: 39: ADCON1 = 0b10111110;
  3258  001AA6  0EBE               	movlw	190
  3259  001AA8  6EC1               	movwf	4033,c	;volatile
  3260                           
  3261                           ; BSR set to: 15
  3262                           ;temperature.c: 40: ADCON0bits.ADON = 0x01;
  3263  001AAA  80C2               	bsf	4034,0,c	;volatile
  3264                           
  3265                           ; BSR set to: 15
  3266                           ;temperature.c: 42: PIR1bits.ADIF = 0;
  3267  001AAC  9C9E               	bcf	3998,6,c	;volatile
  3268                           
  3269                           ; BSR set to: 15
  3270                           ;temperature.c: 43: PIE1bits.ADIE = 0;
  3271  001AAE  9C9D               	bcf	3997,6,c	;volatile
  3272                           
  3273                           ; BSR set to: 15
  3274                           ;temperature.c: 46: ADCON0bits.GO_DONE = 1;
  3275  001AB0  82C2               	bsf	4034,1,c	;volatile
  3276                           
  3277                           ; BSR set to: 15
  3278  001AB2  0012               	return		;funcret
  3279  001AB4                     __end_of_initADC:
  3280                           	opt stack 0
  3281                           tblptru	equ	0xFF8
  3282                           tblptrh	equ	0xFF7
  3283                           tblptrl	equ	0xFF6
  3284                           tablat	equ	0xFF5
  3285                           prodh	equ	0xFF4
  3286                           prodl	equ	0xFF3
  3287                           intcon	equ	0xFF2
  3288                           indf0	equ	0xFEF
  3289                           postinc0	equ	0xFEE
  3290                           fsr0h	equ	0xFEA
  3291                           fsr0l	equ	0xFE9
  3292                           wreg	equ	0xFE8
  3293                           indf1	equ	0xFE7
  3294                           postdec1	equ	0xFE5
  3295                           fsr1h	equ	0xFE2
  3296                           fsr1l	equ	0xFE1
  3297                           indf2	equ	0xFDF
  3298                           fsr2h	equ	0xFDA
  3299                           fsr2l	equ	0xFD9
  3300                           status	equ	0xFD8
  3301                           
  3302 ;; *************** function ___wmul *****************
  3303 ;; Defined at:
  3304 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  3305 ;; Parameters:    Size  Location     Type
  3306 ;;  multiplier      2   17[COMRAM] unsigned int 
  3307 ;;  multiplicand    2   19[COMRAM] unsigned int 
  3308 ;; Auto vars:     Size  Location     Type
  3309 ;;  product         2   21[COMRAM] unsigned int 
  3310 ;; Return value:  Size  Location     Type
  3311 ;;                  2   17[COMRAM] unsigned int 
  3312 ;; Registers used:
  3313 ;;		wreg, status,2, status,0, prodl, prodh
  3314 ;; Tracked objects:
  3315 ;;		On entry : 0/0
  3316 ;;		On exit  : 0/0
  3317 ;;		Unchanged: 0/0
  3318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3320 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3322 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3323 ;;Total ram usage:        6 bytes
  3324 ;; Hardware stack levels used:    1
  3325 ;; Hardware stack levels required when called:    2
  3326 ;; This function calls:
  3327 ;;		Nothing
  3328 ;; This function is called by:
  3329 ;;		_main
  3330 ;; This function uses a non-reentrant model
  3331 ;;
  3332                           
  3333                           	psect	text18
  3334  001AB4                     __ptext18:
  3335                           	opt stack 0
  3336  001AB4                     ___wmul:
  3337                           	opt stack 28
  3338                           
  3339                           ; BSR set to: 15
  3340                           ;incstack = 0
  3341  001AB4  5012               	movf	___wmul@multiplier,w,c
  3342  001AB6  0214               	mulwf	___wmul@multiplicand,c
  3343  001AB8  CFF3 F016          	movff	prodl,___wmul@product
  3344  001ABC  CFF4 F017          	movff	prodh,___wmul@product+1
  3345  001AC0  5012               	movf	___wmul@multiplier,w,c
  3346  001AC2  0215               	mulwf	___wmul@multiplicand+1,c
  3347  001AC4  50F3               	movf	prodl,w,c
  3348  001AC6  2617               	addwf	___wmul@product+1,f,c
  3349  001AC8  5013               	movf	___wmul@multiplier+1,w,c
  3350  001ACA  0214               	mulwf	___wmul@multiplicand,c
  3351  001ACC  50F3               	movf	prodl,w,c
  3352  001ACE  2617               	addwf	___wmul@product+1,f,c
  3353  001AD0  C016  F012         	movff	___wmul@product,?___wmul
  3354  001AD4  C017  F013         	movff	___wmul@product+1,?___wmul+1
  3355  001AD8  0012               	return	
  3356  001ADA                     __end_of___wmul:
  3357                           	opt stack 0
  3358                           tblptru	equ	0xFF8
  3359                           tblptrh	equ	0xFF7
  3360                           tblptrl	equ	0xFF6
  3361                           tablat	equ	0xFF5
  3362                           prodh	equ	0xFF4
  3363                           prodl	equ	0xFF3
  3364                           intcon	equ	0xFF2
  3365                           indf0	equ	0xFEF
  3366                           postinc0	equ	0xFEE
  3367                           fsr0h	equ	0xFEA
  3368                           fsr0l	equ	0xFE9
  3369                           wreg	equ	0xFE8
  3370                           indf1	equ	0xFE7
  3371                           postdec1	equ	0xFE5
  3372                           fsr1h	equ	0xFE2
  3373                           fsr1l	equ	0xFE1
  3374                           indf2	equ	0xFDF
  3375                           fsr2h	equ	0xFDA
  3376                           fsr2l	equ	0xFD9
  3377                           status	equ	0xFD8
  3378                           
  3379 ;; *************** function _UARTReceive *****************
  3380 ;; Defined at:
  3381 ;;		line 53 in file "uart.c"
  3382 ;; Parameters:    Size  Location     Type
  3383 ;;  on_or_off       1    wreg     unsigned char 
  3384 ;; Auto vars:     Size  Location     Type
  3385 ;;  on_or_off       1   17[COMRAM] unsigned char 
  3386 ;; Return value:  Size  Location     Type
  3387 ;;                  1    wreg      void 
  3388 ;; Registers used:
  3389 ;;		wreg, status,2, status,0
  3390 ;; Tracked objects:
  3391 ;;		On entry : 0/0
  3392 ;;		On exit  : 0/0
  3393 ;;		Unchanged: 0/0
  3394 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3395 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3396 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3397 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3398 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3399 ;;Total ram usage:        1 bytes
  3400 ;; Hardware stack levels used:    1
  3401 ;; Hardware stack levels required when called:    2
  3402 ;; This function calls:
  3403 ;;		Nothing
  3404 ;; This function is called by:
  3405 ;;		_main
  3406 ;; This function uses a non-reentrant model
  3407 ;;
  3408                           
  3409                           	psect	text19
  3410  001B10                     __ptext19:
  3411                           	opt stack 0
  3412  001B10                     _UARTReceive:
  3413                           	opt stack 28
  3414                           
  3415                           ;incstack = 0
  3416                           ;UARTReceive@on_or_off stored from wreg
  3417  001B10  6E12               	movwf	UARTReceive@on_or_off,c
  3418                           
  3419                           ;uart.c: 54: if(on_or_off == 1){
  3420  001B12  0412               	decf	UARTReceive@on_or_off,w,c
  3421  001B14  A4D8               	btfss	status,2,c
  3422  001B16  D002               	goto	l126
  3423                           
  3424                           ;uart.c: 55: RCSTA1bits.CREN = 1;
  3425  001B18  88AC               	bsf	4012,4,c	;volatile
  3426                           
  3427                           ;uart.c: 56: }
  3428  001B1A  0012               	return	
  3429  001B1C                     l126:
  3430                           
  3431                           ;uart.c: 57: else{
  3432                           ;uart.c: 58: RCSTA1bits.CREN = 0;
  3433  001B1C  98AC               	bcf	4012,4,c	;volatile
  3434  001B1E  0012               	return	
  3435  001B20                     __end_of_UARTReceive:
  3436                           	opt stack 0
  3437                           tblptru	equ	0xFF8
  3438                           tblptrh	equ	0xFF7
  3439                           tblptrl	equ	0xFF6
  3440                           tablat	equ	0xFF5
  3441                           prodh	equ	0xFF4
  3442                           prodl	equ	0xFF3
  3443                           intcon	equ	0xFF2
  3444                           indf0	equ	0xFEF
  3445                           postinc0	equ	0xFEE
  3446                           fsr0h	equ	0xFEA
  3447                           fsr0l	equ	0xFE9
  3448                           wreg	equ	0xFE8
  3449                           indf1	equ	0xFE7
  3450                           postdec1	equ	0xFE5
  3451                           fsr1h	equ	0xFE2
  3452                           fsr1l	equ	0xFE1
  3453                           indf2	equ	0xFDF
  3454                           fsr2h	equ	0xFDA
  3455                           fsr2l	equ	0xFD9
  3456                           status	equ	0xFD8
  3457                           
  3458 ;; *************** function _high_ISR *****************
  3459 ;; Defined at:
  3460 ;;		line 54 in file "main.c"
  3461 ;; Parameters:    Size  Location     Type
  3462 ;;		None
  3463 ;; Auto vars:     Size  Location     Type
  3464 ;;		None
  3465 ;; Return value:  Size  Location     Type
  3466 ;;                  1    wreg      void 
  3467 ;; Registers used:
  3468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3469 ;; Tracked objects:
  3470 ;;		On entry : 0/0
  3471 ;;		On exit  : 0/0
  3472 ;;		Unchanged: 0/0
  3473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3474 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3475 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3476 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3477 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3478 ;;Total ram usage:       14 bytes
  3479 ;; Hardware stack levels used:    1
  3480 ;; Hardware stack levels required when called:    1
  3481 ;; This function calls:
  3482 ;;		_frequency_interrupt
  3483 ;;		_temperature_interrupt
  3484 ;;		_uart_interrupt
  3485 ;; This function is called by:
  3486 ;;		Interrupt level 2
  3487 ;; This function uses a non-reentrant model
  3488 ;;
  3489                           
  3490                           	psect	intcode
  3491  000008                     __pintcode:
  3492                           	opt stack 0
  3493  000008                     _high_ISR:
  3494                           	opt stack 25
  3495                           
  3496                           ;incstack = 0
  3497  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3498  00000A  CFFA F004          	movff	pclath,??_high_ISR
  3499  00000E  CFFB F005          	movff	pclatu,??_high_ISR+1
  3500  000012  CFE9 F006          	movff	fsr0l,??_high_ISR+2
  3501  000016  CFEA F007          	movff	fsr0h,??_high_ISR+3
  3502  00001A  CFE1 F008          	movff	fsr1l,??_high_ISR+4
  3503  00001E  CFE2 F009          	movff	fsr1h,??_high_ISR+5
  3504  000022  CFD9 F00A          	movff	fsr2l,??_high_ISR+6
  3505  000026  CFDA F00B          	movff	fsr2h,??_high_ISR+7
  3506  00002A  CFF3 F00C          	movff	prodl,??_high_ISR+8
  3507  00002E  CFF4 F00D          	movff	prodh,??_high_ISR+9
  3508  000032  CFF6 F00E          	movff	tblptrl,??_high_ISR+10
  3509  000036  CFF7 F00F          	movff	tblptrh,??_high_ISR+11
  3510  00003A  CFF8 F010          	movff	tblptru,??_high_ISR+12
  3511  00003E  CFF5 F011          	movff	tablat,??_high_ISR+13
  3512                           
  3513                           ;main.c: 55: temperature_interrupt();
  3514  000042  EC29  F00B         	call	_temperature_interrupt	;wreg free
  3515                           
  3516                           ;main.c: 56: uart_interrupt();
  3517  000046  EC2B  F00D         	call	_uart_interrupt	;wreg free
  3518                           
  3519                           ;main.c: 57: frequency_interrupt();
  3520  00004A  EC5F  F00C         	call	_frequency_interrupt	;wreg free
  3521  00004E  C011  FFF5         	movff	??_high_ISR+13,tablat
  3522  000052  C010  FFF8         	movff	??_high_ISR+12,tblptru
  3523  000056  C00F  FFF7         	movff	??_high_ISR+11,tblptrh
  3524  00005A  C00E  FFF6         	movff	??_high_ISR+10,tblptrl
  3525  00005E  C00D  FFF4         	movff	??_high_ISR+9,prodh
  3526  000062  C00C  FFF3         	movff	??_high_ISR+8,prodl
  3527  000066  C00B  FFDA         	movff	??_high_ISR+7,fsr2h
  3528  00006A  C00A  FFD9         	movff	??_high_ISR+6,fsr2l
  3529  00006E  C009  FFE2         	movff	??_high_ISR+5,fsr1h
  3530  000072  C008  FFE1         	movff	??_high_ISR+4,fsr1l
  3531  000076  C007  FFEA         	movff	??_high_ISR+3,fsr0h
  3532  00007A  C006  FFE9         	movff	??_high_ISR+2,fsr0l
  3533  00007E  C005  FFFB         	movff	??_high_ISR+1,pclatu
  3534  000082  C004  FFFA         	movff	??_high_ISR,pclath
  3535  000086  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3536  000088  0011               	retfie		f
  3537  00008A                     __end_of_high_ISR:
  3538                           	opt stack 0
  3539                           pclatu	equ	0xFFB
  3540                           pclath	equ	0xFFA
  3541                           tblptru	equ	0xFF8
  3542                           tblptrh	equ	0xFF7
  3543                           tblptrl	equ	0xFF6
  3544                           tablat	equ	0xFF5
  3545                           prodh	equ	0xFF4
  3546                           prodl	equ	0xFF3
  3547                           intcon	equ	0xFF2
  3548                           indf0	equ	0xFEF
  3549                           postinc0	equ	0xFEE
  3550                           fsr0h	equ	0xFEA
  3551                           fsr0l	equ	0xFE9
  3552                           wreg	equ	0xFE8
  3553                           indf1	equ	0xFE7
  3554                           postdec1	equ	0xFE5
  3555                           fsr1h	equ	0xFE2
  3556                           fsr1l	equ	0xFE1
  3557                           indf2	equ	0xFDF
  3558                           fsr2h	equ	0xFDA
  3559                           fsr2l	equ	0xFD9
  3560                           status	equ	0xFD8
  3561                           
  3562 ;; *************** function _uart_interrupt *****************
  3563 ;; Defined at:
  3564 ;;		line 89 in file "uart.c"
  3565 ;; Parameters:    Size  Location     Type
  3566 ;;		None
  3567 ;; Auto vars:     Size  Location     Type
  3568 ;;		None
  3569 ;; Return value:  Size  Location     Type
  3570 ;;                  1    wreg      void 
  3571 ;; Registers used:
  3572 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3573 ;; Tracked objects:
  3574 ;;		On entry : 0/0
  3575 ;;		On exit  : 0/0
  3576 ;;		Unchanged: 0/0
  3577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3578 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3579 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3580 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3581 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3582 ;;Total ram usage:        0 bytes
  3583 ;; Hardware stack levels used:    1
  3584 ;; This function calls:
  3585 ;;		Nothing
  3586 ;; This function is called by:
  3587 ;;		_high_ISR
  3588 ;; This function uses a non-reentrant model
  3589 ;;
  3590                           
  3591                           	psect	text21
  3592  001A56                     __ptext21:
  3593                           	opt stack 0
  3594  001A56                     _uart_interrupt:
  3595                           	opt stack 25
  3596                           
  3597                           ;uart.c: 91: if(PIR1bits.RC1IF == 1){
  3598                           
  3599                           ;incstack = 0
  3600  001A56  AA9E               	btfss	3998,5,c	;volatile
  3601  001A58  0012               	return	
  3602                           
  3603                           ;uart.c: 92: PIR1bits.RC1IF = 0;
  3604  001A5A  9A9E               	bcf	3998,5,c	;volatile
  3605                           
  3606                           ;uart.c: 94: uart_receive_buffer[uart_receive_buffer_index] = RCREG1;
  3607  001A5C  0E60               	movlw	low _uart_receive_buffer
  3608  001A5E  244C               	addwf	_uart_receive_buffer_index,w,c
  3609  001A60  6ED9               	movwf	fsr2l,c
  3610  001A62  0E00               	movlw	high _uart_receive_buffer
  3611  001A64  204D               	addwfc	_uart_receive_buffer_index+1,w,c
  3612  001A66  6EDA               	movwf	fsr2h,c
  3613  001A68  CFAF FFDF          	movff	4015,indf2	;volatile
  3614                           
  3615                           ;uart.c: 95: uart_receive_buffer_index += 1;
  3616  001A6C  4A4C               	infsnz	_uart_receive_buffer_index,f,c
  3617  001A6E  2A4D               	incf	_uart_receive_buffer_index+1,f,c
  3618                           
  3619                           ;uart.c: 99: if(uart_receive_buffer_index > 100){
  3620  001A70  504D               	movf	_uart_receive_buffer_index+1,w,c
  3621  001A72  E104               	bnz	i2u58_40
  3622  001A74  0E65               	movlw	101
  3623  001A76  5C4C               	subwf	_uart_receive_buffer_index,w,c
  3624  001A78  A0D8               	btfss	status,0,c
  3625  001A7A  0012               	return	
  3626  001A7C                     i2u58_40:
  3627                           
  3628                           ;uart.c: 100: uart_receive_buffer_index = 0;
  3629  001A7C  0E00               	movlw	0
  3630  001A7E  6E4D               	movwf	_uart_receive_buffer_index+1,c
  3631  001A80  0E00               	movlw	0
  3632  001A82  6E4C               	movwf	_uart_receive_buffer_index,c
  3633  001A84  0012               	return	
  3634  001A86                     __end_of_uart_interrupt:
  3635                           	opt stack 0
  3636                           pclatu	equ	0xFFB
  3637                           pclath	equ	0xFFA
  3638                           tblptru	equ	0xFF8
  3639                           tblptrh	equ	0xFF7
  3640                           tblptrl	equ	0xFF6
  3641                           tablat	equ	0xFF5
  3642                           prodh	equ	0xFF4
  3643                           prodl	equ	0xFF3
  3644                           intcon	equ	0xFF2
  3645                           indf0	equ	0xFEF
  3646                           postinc0	equ	0xFEE
  3647                           fsr0h	equ	0xFEA
  3648                           fsr0l	equ	0xFE9
  3649                           wreg	equ	0xFE8
  3650                           indf1	equ	0xFE7
  3651                           postdec1	equ	0xFE5
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           indf2	equ	0xFDF
  3655                           fsr2h	equ	0xFDA
  3656                           fsr2l	equ	0xFD9
  3657                           status	equ	0xFD8
  3658                           
  3659 ;; *************** function _temperature_interrupt *****************
  3660 ;; Defined at:
  3661 ;;		line 113 in file "temperature.c"
  3662 ;; Parameters:    Size  Location     Type
  3663 ;;		None
  3664 ;; Auto vars:     Size  Location     Type
  3665 ;;		None
  3666 ;; Return value:  Size  Location     Type
  3667 ;;                  1    wreg      void 
  3668 ;; Registers used:
  3669 ;;		wreg, status,2, status,0
  3670 ;; Tracked objects:
  3671 ;;		On entry : 0/0
  3672 ;;		On exit  : 0/0
  3673 ;;		Unchanged: 0/0
  3674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3677 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3679 ;;Total ram usage:        2 bytes
  3680 ;; Hardware stack levels used:    1
  3681 ;; This function calls:
  3682 ;;		Nothing
  3683 ;; This function is called by:
  3684 ;;		_high_ISR
  3685 ;; This function uses a non-reentrant model
  3686 ;;
  3687                           
  3688                           	psect	text22
  3689  001652                     __ptext22:
  3690                           	opt stack 0
  3691  001652                     _temperature_interrupt:
  3692                           	opt stack 25
  3693                           
  3694                           ;temperature.c: 115: if(PIR1bits.ADIF == 1)
  3695                           
  3696                           ;incstack = 0
  3697  001652  AC9E               	btfss	3998,6,c	;volatile
  3698  001654  0012               	return	
  3699                           
  3700                           ;temperature.c: 116: {
  3701                           ;temperature.c: 117: PIR1bits.ADIF = 0;
  3702  001656  9C9E               	bcf	3998,6,c	;volatile
  3703                           
  3704                           ;temperature.c: 118: switch(currentChannel){
  3705  001658  D035               	goto	i2l1901
  3706  00165A                     i2l220:
  3707                           
  3708                           ;temperature.c: 120: plus_pipe = ADRES;
  3709  00165A  CFC3 F046          	movff	4035,_plus_pipe	;volatile
  3710  00165E  CFC4 F047          	movff	4036,_plus_pipe+1	;volatile
  3711                           
  3712                           ;temperature.c: 121: ADCON0bits.CHS = 0b1000;
  3713  001662  50C2               	movf	4034,w,c	;volatile
  3714  001664  0BC3               	andlw	-61
  3715  001666  0920               	iorlw	32
  3716  001668  6EC2               	movwf	4034,c	;volatile
  3717                           
  3718                           ;temperature.c: 122: currentChannel = 1;
  3719  00166A  0E00               	movlw	0
  3720  00166C  0100               	movlb	0	; () banked
  3721  00166E  6FC8               	movwf	(_currentChannel+1)& (0+255),b
  3722  001670  0E01               	movlw	1
  3723  001672  D026               	goto	L5
  3724  001674                     i2l222:
  3725                           
  3726                           ;temperature.c: 125: minus_pipe = ADRES;
  3727  001674  CFC3 F042          	movff	4035,_minus_pipe	;volatile
  3728  001678  CFC4 F043          	movff	4036,_minus_pipe+1	;volatile
  3729                           
  3730                           ;temperature.c: 126: ADCON0bits.CHS = 0b0001;
  3731  00167C  50C2               	movf	4034,w,c	;volatile
  3732  00167E  0BC3               	andlw	-61
  3733  001680  0904               	iorlw	4
  3734  001682  6EC2               	movwf	4034,c	;volatile
  3735                           
  3736                           ;temperature.c: 127: currentChannel = 2;
  3737  001684  0E00               	movlw	0
  3738  001686  0100               	movlb	0	; () banked
  3739  001688  6FC8               	movwf	(_currentChannel+1)& (0+255),b
  3740  00168A  0E02               	movlw	2
  3741  00168C  D019               	goto	L5
  3742  00168E                     i2l223:
  3743                           
  3744                           ;temperature.c: 130: plus_ambient = ADRES;
  3745  00168E  CFC3 F044          	movff	4035,_plus_ambient	;volatile
  3746  001692  CFC4 F045          	movff	4036,_plus_ambient+1	;volatile
  3747                           
  3748                           ;temperature.c: 131: ADCON0bits.CHS = 0b0000;
  3749  001696  94C2               	bcf	4034,2,c	;volatile
  3750  001698  96C2               	bcf	4034,3,c	;volatile
  3751  00169A  98C2               	bcf	4034,4,c	;volatile
  3752  00169C  9AC2               	bcf	4034,5,c	;volatile
  3753                           
  3754                           ;temperature.c: 132: currentChannel = 3;
  3755  00169E  0E00               	movlw	0
  3756  0016A0  0100               	movlb	0	; () banked
  3757  0016A2  6FC8               	movwf	(_currentChannel+1)& (0+255),b
  3758  0016A4  0E03               	movlw	3
  3759  0016A6  D00C               	goto	L5
  3760  0016A8                     i2l224:
  3761                           
  3762                           ;temperature.c: 135: minus_ambient = ADRES;
  3763  0016A8  CFC3 F040          	movff	4035,_minus_ambient	;volatile
  3764  0016AC  CFC4 F041          	movff	4036,_minus_ambient+1	;volatile
  3765                           
  3766                           ;temperature.c: 136: ADCON0bits.CHS = 0b1001;
  3767  0016B0  50C2               	movf	4034,w,c	;volatile
  3768  0016B2  0BC3               	andlw	-61
  3769  0016B4  0924               	iorlw	36
  3770  0016B6  6EC2               	movwf	4034,c	;volatile
  3771                           
  3772                           ;temperature.c: 137: currentChannel = 0;
  3773  0016B8  0E00               	movlw	0
  3774  0016BA  0100               	movlb	0	; () banked
  3775  0016BC  6FC8               	movwf	(_currentChannel+1)& (0+255),b
  3776  0016BE  0E00               	movlw	0
  3777  0016C0                     L5:
  3778  0016C0  6FC7               	movwf	_currentChannel& (0+255),b
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;temperature.c: 139: }
  3782                           
  3783                           ;temperature.c: 138: break;
  3784  0016C2  D015               	goto	i2l221
  3785  0016C4                     i2l1901:
  3786  0016C4  C0C7  F001         	movff	_currentChannel,??_temperature_interrupt
  3787  0016C8  C0C8  F002         	movff	_currentChannel+1,??_temperature_interrupt+1
  3788                           
  3789                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3790                           ; Switch size 1, requested type "space"
  3791                           ; Number of cases is 1, Range of values is 0 to 0
  3792                           ; switch strategies available:
  3793                           ; Name         Instructions Cycles
  3794                           ; simple_byte            4     3 (average)
  3795                           ;	Chosen strategy is simple_byte
  3796  0016CC  5002               	movf	??_temperature_interrupt+1,w,c
  3797  0016CE  0A00               	xorlw	0	; case 0
  3798  0016D0  A4D8               	btfss	status,2,c
  3799  0016D2  D00D               	goto	i2l221
  3800                           
  3801                           ; Switch size 1, requested type "space"
  3802                           ; Number of cases is 4, Range of values is 0 to 3
  3803                           ; switch strategies available:
  3804                           ; Name         Instructions Cycles
  3805                           ; simple_byte           13     7 (average)
  3806                           ;	Chosen strategy is simple_byte
  3807  0016D4  5001               	movf	??_temperature_interrupt,w,c
  3808  0016D6  0A00               	xorlw	0	; case 0
  3809  0016D8  B4D8               	btfsc	status,2,c
  3810  0016DA  D7BF               	goto	i2l220
  3811  0016DC  0A01               	xorlw	1	; case 1
  3812  0016DE  B4D8               	btfsc	status,2,c
  3813  0016E0  D7C9               	goto	i2l222
  3814  0016E2  0A03               	xorlw	3	; case 2
  3815  0016E4  B4D8               	btfsc	status,2,c
  3816  0016E6  D7D3               	goto	i2l223
  3817  0016E8  0A01               	xorlw	1	; case 3
  3818  0016EA  B4D8               	btfsc	status,2,c
  3819  0016EC  D7DD               	goto	i2l224
  3820  0016EE                     i2l221:
  3821                           
  3822                           ;temperature.c: 140: ADCON0bits.GO_DONE = 1;
  3823  0016EE  82C2               	bsf	4034,1,c	;volatile
  3824  0016F0  0012               	return	
  3825  0016F2                     __end_of_temperature_interrupt:
  3826                           	opt stack 0
  3827                           pclatu	equ	0xFFB
  3828                           pclath	equ	0xFFA
  3829                           tblptru	equ	0xFF8
  3830                           tblptrh	equ	0xFF7
  3831                           tblptrl	equ	0xFF6
  3832                           tablat	equ	0xFF5
  3833                           prodh	equ	0xFF4
  3834                           prodl	equ	0xFF3
  3835                           intcon	equ	0xFF2
  3836                           indf0	equ	0xFEF
  3837                           postinc0	equ	0xFEE
  3838                           fsr0h	equ	0xFEA
  3839                           fsr0l	equ	0xFE9
  3840                           wreg	equ	0xFE8
  3841                           indf1	equ	0xFE7
  3842                           postdec1	equ	0xFE5
  3843                           fsr1h	equ	0xFE2
  3844                           fsr1l	equ	0xFE1
  3845                           indf2	equ	0xFDF
  3846                           fsr2h	equ	0xFDA
  3847                           fsr2l	equ	0xFD9
  3848                           status	equ	0xFD8
  3849                           
  3850 ;; *************** function _frequency_interrupt *****************
  3851 ;; Defined at:
  3852 ;;		line 36 in file "frequency.c"
  3853 ;; Parameters:    Size  Location     Type
  3854 ;;		None
  3855 ;; Auto vars:     Size  Location     Type
  3856 ;;		None
  3857 ;; Return value:  Size  Location     Type
  3858 ;;                  1    wreg      void 
  3859 ;; Registers used:
  3860 ;;		wreg, status,2, status,0
  3861 ;; Tracked objects:
  3862 ;;		On entry : 0/0
  3863 ;;		On exit  : 0/0
  3864 ;;		Unchanged: 0/0
  3865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3866 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3867 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3868 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3869 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3870 ;;Total ram usage:        3 bytes
  3871 ;; Hardware stack levels used:    1
  3872 ;; This function calls:
  3873 ;;		Nothing
  3874 ;; This function is called by:
  3875 ;;		_high_ISR
  3876 ;; This function uses a non-reentrant model
  3877 ;;
  3878                           
  3879                           	psect	text23
  3880  0018BE                     __ptext23:
  3881                           	opt stack 0
  3882  0018BE                     _frequency_interrupt:
  3883                           	opt stack 25
  3884                           
  3885                           ;frequency.c: 38: if(PIR4bits.CCP8IF == 1)
  3886                           
  3887                           ;incstack = 0
  3888  0018BE  AA8F               	btfss	3983,5,c	;volatile
  3889  0018C0  0012               	return	
  3890                           
  3891                           ;frequency.c: 39: {
  3892                           ;frequency.c: 40: valueH = value;
  3893  0018C2  C0D1  F0CD         	movff	_value,_valueH
  3894  0018C6  C0D2  F0CE         	movff	_value+1,_valueH+1
  3895                           
  3896                           ;frequency.c: 41: value = CCPR8L + 256*CCPR8H;
  3897  0018CA  010F               	movlb	15	; () banked
  3898  0018CC  5108               	movf	8,w,b	;volatile
  3899  0018CE  6E02               	movwf	(??_frequency_interrupt+1)& (0+255),c
  3900  0018D0  6A01               	clrf	??_frequency_interrupt& (0+255),c
  3901  0018D2  010F               	movlb	15	; () banked
  3902  0018D4  5107               	movf	7,w,b	;volatile
  3903  0018D6  2401               	addwf	??_frequency_interrupt,w,c
  3904  0018D8  0100               	movlb	0	; () banked
  3905  0018DA  6FD1               	movwf	_value& (0+255),b
  3906  0018DC  0E00               	movlw	0
  3907  0018DE  2002               	addwfc	??_frequency_interrupt+1,w,c
  3908  0018E0  0100               	movlb	0	; () banked
  3909  0018E2  6FD2               	movwf	(_value+1)& (0+255),b
  3910                           
  3911                           ;frequency.c: 42: valueL = (value - valueH)/16;
  3912  0018E4  C0CD  F001         	movff	_valueH,??_frequency_interrupt
  3913  0018E8  C0CE  F002         	movff	_valueH+1,??_frequency_interrupt+1
  3914  0018EC  1E01               	comf	??_frequency_interrupt,f,c
  3915  0018EE  1E02               	comf	??_frequency_interrupt+1,f,c
  3916  0018F0  4A01               	infsnz	??_frequency_interrupt,f,c
  3917  0018F2  2A02               	incf	??_frequency_interrupt+1,f,c
  3918  0018F4  0100               	movlb	0	; () banked
  3919  0018F6  51D1               	movf	_value& (0+255),w,b
  3920  0018F8  2601               	addwf	??_frequency_interrupt,f,c
  3921  0018FA  0100               	movlb	0	; () banked
  3922  0018FC  51D2               	movf	(_value+1)& (0+255),w,b
  3923  0018FE  2202               	addwfc	??_frequency_interrupt+1,f,c
  3924  001900  0E04               	movlw	4
  3925  001902  6E03               	movwf	(??_frequency_interrupt+2)& (0+255),c
  3926  001904                     i2u120_45:
  3927  001904  90D8               	bcf	status,0,c
  3928  001906  3202               	rrcf	??_frequency_interrupt+1,f,c
  3929  001908  3201               	rrcf	??_frequency_interrupt,f,c
  3930  00190A  2E03               	decfsz	(??_frequency_interrupt+2)& (0+255),f,c
  3931  00190C  D7FB               	goto	i2u120_45
  3932  00190E  C001  F0CF         	movff	??_frequency_interrupt,_valueL
  3933  001912  C002  F0D0         	movff	??_frequency_interrupt+1,_valueL+1
  3934                           
  3935                           ; BSR set to: 0
  3936                           ;frequency.c: 47: PIR4bits.CCP8IF=0;
  3937  001916  9A8F               	bcf	3983,5,c	;volatile
  3938  001918  0012               	return	
  3939  00191A                     __end_of_frequency_interrupt:
  3940                           	opt stack 0
  3941                           pclatu	equ	0xFFB
  3942                           pclath	equ	0xFFA
  3943                           tblptru	equ	0xFF8
  3944                           tblptrh	equ	0xFF7
  3945                           tblptrl	equ	0xFF6
  3946                           tablat	equ	0xFF5
  3947                           prodh	equ	0xFF4
  3948                           prodl	equ	0xFF3
  3949                           intcon	equ	0xFF2
  3950                           indf0	equ	0xFEF
  3951                           postinc0	equ	0xFEE
  3952                           fsr0h	equ	0xFEA
  3953                           fsr0l	equ	0xFE9
  3954                           wreg	equ	0xFE8
  3955                           indf1	equ	0xFE7
  3956                           postdec1	equ	0xFE5
  3957                           fsr1h	equ	0xFE2
  3958                           fsr1l	equ	0xFE1
  3959                           indf2	equ	0xFDF
  3960                           fsr2h	equ	0xFDA
  3961                           fsr2l	equ	0xFD9
  3962                           status	equ	0xFD8
  3963                           pclatu	equ	0xFFB
  3964                           pclath	equ	0xFFA
  3965                           tblptru	equ	0xFF8
  3966                           tblptrh	equ	0xFF7
  3967                           tblptrl	equ	0xFF6
  3968                           tablat	equ	0xFF5
  3969                           prodh	equ	0xFF4
  3970                           prodl	equ	0xFF3
  3971                           intcon	equ	0xFF2
  3972                           indf0	equ	0xFEF
  3973                           postinc0	equ	0xFEE
  3974                           fsr0h	equ	0xFEA
  3975                           fsr0l	equ	0xFE9
  3976                           wreg	equ	0xFE8
  3977                           indf1	equ	0xFE7
  3978                           postdec1	equ	0xFE5
  3979                           fsr1h	equ	0xFE2
  3980                           fsr1l	equ	0xFE1
  3981                           indf2	equ	0xFDF
  3982                           fsr2h	equ	0xFDA
  3983                           fsr2l	equ	0xFD9
  3984                           status	equ	0xFD8
  3985                           
  3986                           	psect	rparam
  3987  0000                     pclatu	equ	0xFFB
  3988                           pclath	equ	0xFFA
  3989                           tblptru	equ	0xFF8
  3990                           tblptrh	equ	0xFF7
  3991                           tblptrl	equ	0xFF6
  3992                           tablat	equ	0xFF5
  3993                           prodh	equ	0xFF4
  3994                           prodl	equ	0xFF3
  3995                           intcon	equ	0xFF2
  3996                           indf0	equ	0xFEF
  3997                           postinc0	equ	0xFEE
  3998                           fsr0h	equ	0xFEA
  3999                           fsr0l	equ	0xFE9
  4000                           wreg	equ	0xFE8
  4001                           indf1	equ	0xFE7
  4002                           postdec1	equ	0xFE5
  4003                           fsr1h	equ	0xFE2
  4004                           fsr1l	equ	0xFE1
  4005                           indf2	equ	0xFDF
  4006                           fsr2h	equ	0xFDA
  4007                           fsr2l	equ	0xFD9
  4008                           status	equ	0xFD8
  4009                           
  4010                           	psect	temp
  4011  00004E                     btemp:
  4012                           	opt stack 0
  4013  00004E                     	ds	1
  4014  0000                     int$flags	set	btemp
  4015                           pclatu	equ	0xFFB
  4016                           pclath	equ	0xFFA
  4017                           tblptru	equ	0xFF8
  4018                           tblptrh	equ	0xFF7
  4019                           tblptrl	equ	0xFF6
  4020                           tablat	equ	0xFF5
  4021                           prodh	equ	0xFF4
  4022                           prodl	equ	0xFF3
  4023                           intcon	equ	0xFF2
  4024                           indf0	equ	0xFEF
  4025                           postinc0	equ	0xFEE
  4026                           fsr0h	equ	0xFEA
  4027                           fsr0l	equ	0xFE9
  4028                           wreg	equ	0xFE8
  4029                           indf1	equ	0xFE7
  4030                           postdec1	equ	0xFE5
  4031                           fsr1h	equ	0xFE2
  4032                           fsr1l	equ	0xFE1
  4033                           indf2	equ	0xFDF
  4034                           fsr2h	equ	0xFDA
  4035                           fsr2l	equ	0xFD9
  4036                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    173
    Data        26
    BSS         131
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      77
    BANK0           160     16     159
    BANK1           256     11      11
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sendUARTMessage@newMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), set_dev_eui(CODE[34]), 
		 -> temp_display_message(BANK0[20]), 

    currentMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), 
		 -> set_dev_eui(CODE[34]), temp_display_message(BANK0[20]), 


Critical Paths under _main in COMRAM

    _makeTempMessage->_calculateTemp
    _fillInTemp->___awdiv
    ___awdiv->___awmod
    _calculateTemp->___ftmul
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _initLoRa->_sendUARTMessage
    _sendUARTMessage->_delay_ms

Critical Paths under _high_ISR in COMRAM

    _high_ISR->_frequency_interrupt

Critical Paths under _main in BANK0

    _main->_makeTempMessage
    _calculateTemp->___fttol

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _makeTempMessage->_calculateTemp

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   16377
                                              9 BANK1      2     2      0
                        _UARTReceive
                             ___wmul
                           _delay_ms
                            _initADC
                     _initInterrupts
                           _initLoRa
                          _initUART1
                     _init_frequency
                    _makeTempMessage
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _makeTempMessage                                      1     1      0   12050
                                             15 BANK0      1     1      0
                      _calculateTemp
                         _fillInTemp
 ---------------------------------------------------------------------------------
 (2) _fillInTemp                                          12    12      0    2079
                                             31 COMRAM    12    12      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     741
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     753
                                             23 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                       11     7      4    9940
                                             59 COMRAM     2     2      0
                                              0 BANK1      9     5      4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     448
                                              0 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3160
                                             44 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3246
                                             29 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2614
                                             25 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             17 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _init_frequency                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLoRa                                             0     0      0    1861
                           _delay_ms
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _sendUARTMessage                                      2     0      2    1177
                                             22 COMRAM     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     684
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     540
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UARTReceive                                          1     1      0      31
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_ISR                                            14    14      0       0
                                              3 COMRAM    14    14      0
                _frequency_interrupt
              _temperature_interrupt
                     _uart_interrupt
 ---------------------------------------------------------------------------------
 (6) _uart_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _temperature_interrupt                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _frequency_interrupt                                  3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReceive
   ___wmul
   _delay_ms
   _initADC
   _initInterrupts
   _initLoRa
     _delay_ms
     _sendUARTMessage
       _delay_ms
   _initUART1
   _init_frequency
   _makeTempMessage
     _calculateTemp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
     _fillInTemp
       ___awdiv
         ___awmod (ARG)
       ___awmod
   _sendUARTMessage
     _delay_ms

 _high_ISR (ROOT)
   _frequency_interrupt
   _temperature_interrupt
   _uart_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      B       B       8        4.3%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     10      9F       5       99.4%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      4D       1       81.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      F7       6        0.0%
DATA                 0      0      F7       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 23 17:45:13 2017

                    ___awdiv@sign 001D               ___wmul@multiplicand 0014  
                             l202 1056                               l132 178A  
                             l126 1B1C                               l255 1A40  
                             l524 1632                               l199 1002  
                             l582 1412            ?_temperature_interrupt 0001  
                    ___awmod@sign 0017                               prod 000FF3  
                             wreg 000FE8                        _TXSTA1bits 000FAD  
           ??_frequency_interrupt 0001                      ___ftdiv@cntr 0027  
                    ___ftdiv@sign 002C                              l2001 161E  
                            l2003 1628                              l2021 1A2E  
                            l2101 12FC                              l2031 1386  
                            l2111 1324                              l2107 1314  
                            l2037 13AE                              l2141 1734  
                            l2133 1716                              l2207 1A00  
                            l2151 1754                              l2143 1738  
                            l2127 1706                              l2303 1072  
                            l2057 13EC                              l2217 1160  
                            l2313 10E4                              l2305 1078  
                            l2083 12BA                              l2235 11F2  
                            l2139 172C                              l2155 175E  
                            l2171 1800                              l2077 1292  
                            l2253 1258                              l2245 1222  
                            l2181 1822                              l2317 10EC  
                            l2405 194C                              l2247 1232  
                            l2239 1206                              l2159 176C  
                            l2183 1826                              l2191 1844  
                            l2175 180C                              l2097 12EC  
                            l2249 123C                              l2195 1852  
                            l2187 183A                              l2179 181A  
                            l2291 1024                              l2427 1512  
                            l2269 17C2                              l2285 100C  
                            l2279 0FD0                              l2297 105E  
                            l1991 15C2                              l1993 15CC  
                            l1995 15EA                              l1987 15B4  
                            l1999 1600                              u1301 136E  
                            u1321 1396                              u1351 127A  
                            u1371 12A2                              u1700 1056  
                            u1541 113C                              u1630 17B0  
                            u1640 17E4                              u1560 1186  
                            u1637 17A6                              u1565 117C  
                            u1647 17DA                              u1680 1002  
                            u1767 1A34                              _main 14F6  
                    ___ftpack@arg 0012                      ___ftpack@exp 0015  
                            fsr0h 000FEA                              fsr1h 000FE2  
                            indf0 000FEF                              fsr0l 000FE9  
                            fsr2h 000FDA                              indf1 000FE7  
                            fsr1l 000FE1                              indf2 000FDF  
                            fsr2l 000FD9                              btemp 004E  
                            pclat 000FFA                              prodh 000FF4  
                            prodl 000FF3                              start 008A  
                fillInTemp@i_1135 0027                  fillInTemp@i_1136 0029  
                ??_uart_interrupt 0001                      ___ftmul@cntr 003A  
         __end_of_makeTempMessage 1970                      ___param_bank 000010  
                    ___ftmul@sign 003B                      ___fttol@exp1 00FB  
                    ___fttol@lval 00F7                  ?_sendUARTMessage 0017  
                    _BAUDCON1bits 000F7E                             ?_main 0001  
                 __end_of___awdiv 1776                             _ADRES 000FC3  
           __end_of_ambient_ascii 0F23                   __end_of___awmod 185C  
                 __end_of___ftdiv 1444                   __end_of___ftmul 135E  
                 ___awdiv@divisor 001A                   __end_of___fttol 126A  
                           i2l220 165A                             i2l221 16EE  
                           i2l222 1674                             i2l223 168E  
                           i2l224 16A8                   ___awdiv@counter 001C  
                           _TMR1H 000FCF                             _TMR1L 000FCE  
                 __end_of_initADC 1AB4                     ___awtoft@sign 001D  
                   ___ftpack@sign 0016                             _value 00D1  
                           _timer 00CB                             tablat 000FF5  
                           status 000FD8                   __initialization 1970  
                    __end_of_main 15A4                            ??_main 003E  
                   ___fttol@sign1 00F6                     __activetblptr 000003  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _CCPR8H 000F08                            _CCPR8L 000F07  
                          _ANCON0 000F48                            _ANCON1 000F49  
                ___awdiv@dividend 0018                  __end_of___awtoft 1A24  
                __end_of___ftpack 1652                            i2l1901 16C4  
                  __CFG_WDTEN$OFF 000000                            _INTCON 000FF2  
                          _RCREG1 000FAF                            _SPBRG1 000FB0  
                          _TXREG1 000FAE                      ?_UARTReceive 0001  
                __end_of_delay_ms 1A56                    __CFG_XINST$OFF 000000  
                __end_of_high_ISR 008A              _temp_display_message 00D9  
                    _CCPTMRS2bits 000F50                  ?_makeTempMessage 0001  
                          ___wmul 1AB4                         ??___awdiv 001C  
                       ??___awmod 0016                         ??___ftdiv 0024  
                       ??___ftmul 0033                         ??___fttol 00F1  
                __end_of_initLoRa 18BE                            clear_0 1976  
                          clear_1 1982                  ___awdiv@quotient 001E  
                 ___awmod@divisor 0014                            _valueH 00CD  
                          _valueL 00CF                   ___awmod@counter 0016  
                       ??_initADC 0012             ___ftmul@f3_as_product 0037  
           __end_of_set_data_rate 0F10                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                        __accesstop 0060  
         __end_of__initialization 19A8                     ___rparam_used 000001  
                      ___ftdiv@f1 001E                        ___ftdiv@f2 0021  
                      ___ftdiv@f3 0028                        ___awtoft@c 001A  
                      ___ftmul@f1 002D                        ___ftmul@f2 0030  
                      ___fttol@f1 00ED                    __pcstackCOMRAM 0001  
                    __pidataBANK0 1AF6           __size_of_initInterrupts 0008  
         ??_temperature_interrupt 0001                        __pbssBANK0 0060  
              __size_of_initUART1 001C             __end_of_getVerCommand 0F1E  
                         ?___wmul 0012                           _CCP8CON 000F06  
                       ?___awtoft 001A                         ?___ftpack 0012  
                      _fillInTemp 0FB0       __end_of_frequency_interrupt 191A  
          __size_of_calculateTemp 00B2                __CFG_OSC$INTOSCPLL 000000  
                       ?_delay_ms 0012                           i2u58_40 1A7C  
                         _SPBRGH1 000F7F                         ?_high_ISR 0001  
                __CFG_CFGPLLEN$ON 000000                         ?_initLoRa 0001  
            UARTReceive@on_or_off 0012                           __Hparam 0000  
                         __Lparam 0000              __size_of_UARTReceive 0010  
                         ___awdiv 16F2                           ___awmod 17EC  
                         ___ftdiv 135E                   __size_of___wmul 0026  
                         ___ftmul 126A                           ___fttol 1126  
                    __psmallconst 0F00                           __pcinit 1970  
                      ??___awtoft 001D                        ??___ftpack 0017  
               __end_of_initUART1 1AF6                           __ramtop 0F00  
                         __ptext0 14F6                           __ptext1 191A  
                         __ptext2 0FB0                           __ptext3 17EC  
                         __ptext4 16F2                           __ptext5 1444  
                         __ptext6 1126                           __ptext7 126A  
                         __ptext8 135E                           __ptext9 19EC  
         __size_of_init_frequency 003A                           _initADC 1A86  
                       _T1CONbits 000FCD                  ___awmod@dividend 0012  
                         _percent 00C4          __size_of_sendUARTMessage 0076  
                      ??_delay_ms 0014                        ??_high_ISR 0004  
                      delay_ms@ms 0012              end_of_initialization 19A8  
                      _minus_pipe 0042                        _pipe_ascii 0F23  
                      ??_initLoRa 0019              __end_of_join_network 0FAE  
                   _calculateTemp 1444                           postdec1 000FE5  
                  _initInterrupts 1B20                           postinc0 000FEE  
                     ?_fillInTemp 0001         _uart_receive_buffer_index 004C  
         __size_of_uart_interrupt 0030                         _PORTAbits 000F80  
                       _PORTBbits 000F81                  __CFG_CPUDIV$OSC1 000000  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94                    ?_calculateTemp 0100  
                     ___ftdiv@exp 002B            __end_of_initInterrupts 1B28  
                     ___ftmul@exp 0036                    __end_of___wmul 1ADA  
  __size_of_temperature_interrupt 00A0     __end_of_temperature_interrupt 16F2  
                   _minus_ambient 0040          __size_of_makeTempMessage 0056  
                   _ambient_ascii 0F1E               start_initialization 1970  
sendUARTMessage@newMessagePointer 0017                 ??_sendUARTMessage 0019  
             __size_of_fillInTemp 0176                    _currentChannel 00C7  
                 ?_initInterrupts 0001                          ??___wmul 0016  
                     __pdataBANK0 00D3                _calculateTemp$1924 0104  
                  _init_frequency 19B2                 __size_of___awtoft 0038  
               __size_of___ftpack 00AE                       __pbssCOMRAM 003E  
                   __pcstackBANK0 00ED                     __pcstackBANK1 0100  
               __size_of_delay_ms 0032                   ??_calculateTemp 003C  
               __size_of_high_ISR 0082                         __pnvBANK0 00FD  
               __size_of_initLoRa 0062                         _main$1923 0109  
                       __pintcode 0008                         _asciiTemp 00D3  
                        ?___awdiv 0018                          ?___awmod 0012  
                        ?___ftdiv 001E                          ?___ftmul 002D  
                        ?___fttol 00ED            __end_of_init_frequency 19EC  
                  _uart_interrupt 1A56                      _join_network 0F9E  
                        ?_initADC 0001                       __smallconst 0F00  
                   _set_data_rate 0F01                         _initUART1 1ADA  
                       _inductive 00FD      __size_of_frequency_interrupt 005C  
               ??_makeTempMessage 003E                    ___wmul@product 0016  
                   ??_UARTReceive 0012                         delay_ms@i 0015  
                        _PIE1bits 000F9D                          _PIE4bits 000F8E  
                        i2u120_45 1904             _currentMessagePointer 003E  
                        _PIR1bits 000F9E                          _PIR4bits 000F8F  
                        _RCONbits 000FD0                         _temp_pipe 004A  
          __end_of_uart_interrupt 1A86                   ?_init_frequency 0001  
                       _plus_pipe 0046                      ??_fillInTemp 0020  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0012  
                      ?_initUART1 0001               _uart_receive_buffer 0060  
                  fillInTemp@temp 002A                         copy_data0 199C  
      fillInTemp@pipe_or_ambience 0024                __end_of_fillInTemp 1126  
                        __Hrparam 0000                          __Lrparam 0000  
                   _getVerCommand 0F10               __end_of_UARTReceive 1B20  
                 ?_uart_interrupt 0001               __end_of_set_dev_eui 0F9E  
             __end_of_set_app_eui 0F7C               __end_of_set_app_key 0F5A  
                __size_of___awdiv 0084                  __size_of___awmod 0070  
                __size_of___ftdiv 00E6                  __size_of___ftmul 00F4  
                __size_of___fttol 0144       _last_received_message_index 00C9  
                        ___awtoft 19EC                          ___ftpack 15A4  
                 _sendUARTMessage 1776                  __size_of_initADC 002E  
                        _delay_ms 1A24                          __ptext10 15A4  
                        __ptext11 19B2                          __ptext12 1ADA  
                        __ptext21 1A56                          __ptext13 185C  
                        __ptext22 1652                          __ptext14 1776  
                        __ptext23 18BE                          __ptext15 1A24  
                        __ptext16 1B20                          __ptext17 1A86  
                        __ptext18 1AB4                          __ptext19 1B10  
                        _high_ISR 0008                     _isCommandSent 00D8  
                ??_initInterrupts 0012                          _initLoRa 185C  
                   __size_of_main 00AE                          int$flags 004E  
  makeTempMessage@pipe_or_ambient 00FC                      _temp_ambient 0048  
              __end_of_pipe_ascii 0F28                        _INTCONbits 000FF2  
                     ??_initUART1 0012             _temperature_interrupt 1652  
                        intlevel2 0000                calculateTemp@minus 0102  
                     _UARTReceive 1B10                        _RCSTA1bits 000FAC  
                     _set_dev_eui 0F7C                       _set_app_eui 0F5A  
                     _set_app_key 0F28                        _OSCCONbits 000FD3  
             _frequency_interrupt 18BE           __end_of_sendUARTMessage 17EC  
                    _plus_ambient 0044                   _makeTempMessage 191A  
               calculateTemp@temp 0107                 calculateTemp@plus 0100  
            ?_frequency_interrupt 0001                       fillInTemp@i 0025  
           __end_of_calculateTemp 14F6                  ??_init_frequency 0012  
