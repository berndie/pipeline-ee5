

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Mar 17 00:32:15 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18LF27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    39                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    40                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    41  0000                     
    42                           	psect	idataCOMRAM
    43  001AD0                     __pidataCOMRAM:
    44                           	opt stack 0
    45                           
    46                           ;initializer for _isCommandSent
    47  001AD0  01                 	db	1
    48                           
    49                           	psect	idataBANK0
    50  001A8A                     __pidataBANK0:
    51                           	opt stack 0
    52                           
    53                           ;initializer for _asciiTemp
    54  001A8A  20                 	db	32
    55  001A8B  20                 	db	32
    56  001A8C  20                 	db	32
    57  001A8D  20                 	db	32
    58  001A8E  20                 	db	32
    59                           
    60                           ;initializer for _temp_display_message
    61  001A8F  50                 	db	80
    62  001A90  69                 	db	105
    63  001A91  70                 	db	112
    64  001A92  65                 	db	101
    65  001A93  20                 	db	32
    66  001A94  74                 	db	116
    67  001A95  65                 	db	101
    68  001A96  6D                 	db	109
    69  001A97  70                 	db	112
    70  001A98  20                 	db	32
    71  001A99  3D                 	db	61
    72  001A9A  20                 	db	32
    73  001A9B  20                 	db	32
    74  001A9C  20                 	db	32
    75  001A9D  20                 	db	32
    76  001A9E  20                 	db	32
    77  001A9F  20                 	db	32
    78  001AA0  0D                 	db	13
    79  001AA1  0A                 	db	10
    80  001AA2  00                 	db	0
    81                           
    82                           	psect	smallconst
    83  000F00                     __psmallconst:
    84                           	opt stack 0
    85  000F00  00                 	db	0
    86  000F01                     _set_data_rate:
    87                           	opt stack 0
    88  000F01  6D                 	db	109
    89  000F02  61                 	db	97
    90  000F03  63                 	db	99
    91  000F04  20                 	db	32
    92  000F05  73                 	db	115
    93  000F06  65                 	db	101
    94  000F07  74                 	db	116
    95  000F08  20                 	db	32
    96  000F09  64                 	db	100
    97  000F0A  72                 	db	114
    98  000F0B  20                 	db	32
    99  000F0C  78                 	db	120
   100  000F0D  0D                 	db	13
   101  000F0E  0A                 	db	10
   102  000F0F  00                 	db	0
   103  000F10                     __end_of_set_data_rate:
   104                           	opt stack 0
   105  000F10                     _getVerCommand:
   106                           	opt stack 0
   107  000F10  73                 	db	115
   108  000F11  79                 	db	121
   109  000F12  73                 	db	115
   110  000F13  20                 	db	32
   111  000F14  67                 	db	103
   112  000F15  65                 	db	101
   113  000F16  74                 	db	116
   114  000F17  20                 	db	32
   115  000F18  76                 	db	118
   116  000F19  65                 	db	101
   117  000F1A  72                 	db	114
   118  000F1B  0D                 	db	13
   119  000F1C  0A                 	db	10
   120  000F1D  00                 	db	0
   121  000F1E                     __end_of_getVerCommand:
   122                           	opt stack 0
   123  000F1E                     _ambient_ascii:
   124                           	opt stack 0
   125  000F1E  41                 	db	65
   126  000F1F  6D                 	db	109
   127  000F20  62                 	db	98
   128  000F21  2E                 	db	46
   129  000F22  00                 	db	0
   130  000F23                     __end_of_ambient_ascii:
   131                           	opt stack 0
   132  000F23                     _pipe_ascii:
   133                           	opt stack 0
   134  000F23  50                 	db	80
   135  000F24  69                 	db	105
   136  000F25  70                 	db	112
   137  000F26  65                 	db	101
   138  000F27  00                 	db	0
   139  000F28                     __end_of_pipe_ascii:
   140                           	opt stack 0
   141  000F28                     _DELAY:
   142                           	opt stack 0
   143  000F28  D4C0               	dw	54464
   144  000F2A  0001               	dw	1
   145  000F2C                     __end_of_DELAY:
   146                           	opt stack 0
   147  000F2C                     _set_app_key:
   148                           	opt stack 0
   149  000F2C  6D                 	db	109
   150  000F2D  61                 	db	97
   151  000F2E  63                 	db	99
   152  000F2F  20                 	db	32
   153  000F30  73                 	db	115
   154  000F31  65                 	db	101
   155  000F32  74                 	db	116
   156  000F33  20                 	db	32
   157  000F34  61                 	db	97
   158  000F35  70                 	db	112
   159  000F36  70                 	db	112
   160  000F37  6B                 	db	107
   161  000F38  65                 	db	101
   162  000F39  79                 	db	121
   163  000F3A  20                 	db	32
   164  000F3B  32                 	db	50
   165  000F3C  45                 	db	69
   166  000F3D  31                 	db	49
   167  000F3E  35                 	db	53
   168  000F3F  41                 	db	65
   169  000F40  46                 	db	70
   170  000F41  43                 	db	67
   171  000F42  39                 	db	57
   172  000F43  34                 	db	52
   173  000F44  41                 	db	65
   174  000F45  37                 	db	55
   175  000F46  45                 	db	69
   176  000F47  46                 	db	70
   177  000F48  36                 	db	54
   178  000F49  39                 	db	57
   179  000F4A  41                 	db	65
   180  000F4B  45                 	db	69
   181  000F4C  36                 	db	54
   182  000F4D  31                 	db	49
   183  000F4E  41                 	db	65
   184  000F4F  38                 	db	56
   185  000F50  31                 	db	49
   186  000F51  34                 	db	52
   187  000F52  37                 	db	55
   188  000F53  33                 	db	51
   189  000F54  37                 	db	55
   190  000F55  43                 	db	67
   191  000F56  33                 	db	51
   192  000F57  38                 	db	56
   193  000F58  36                 	db	54
   194  000F59  39                 	db	57
   195  000F5A  39                 	db	57
   196  000F5B  0D                 	db	13
   197  000F5C  0A                 	db	10
   198  000F5D  00                 	db	0
   199  000F5E                     __end_of_set_app_key:
   200                           	opt stack 0
   201  000F5E                     _set_app_eui:
   202                           	opt stack 0
   203  000F5E  6D                 	db	109
   204  000F5F  61                 	db	97
   205  000F60  63                 	db	99
   206  000F61  20                 	db	32
   207  000F62  73                 	db	115
   208  000F63  65                 	db	101
   209  000F64  74                 	db	116
   210  000F65  20                 	db	32
   211  000F66  61                 	db	97
   212  000F67  70                 	db	112
   213  000F68  70                 	db	112
   214  000F69  65                 	db	101
   215  000F6A  75                 	db	117
   216  000F6B  69                 	db	105
   217  000F6C  20                 	db	32
   218  000F6D  37                 	db	55
   219  000F6E  34                 	db	52
   220  000F6F  43                 	db	67
   221  000F70  35                 	db	53
   222  000F71  34                 	db	52
   223  000F72  32                 	db	50
   224  000F73  34                 	db	52
   225  000F74  35                 	db	53
   226  000F75  33                 	db	51
   227  000F76  38                 	db	56
   228  000F77  35                 	db	53
   229  000F78  37                 	db	55
   230  000F79  39                 	db	57
   231  000F7A  37                 	db	55
   232  000F7B  34                 	db	52
   233  000F7C  41                 	db	65
   234  000F7D  0D                 	db	13
   235  000F7E  0A                 	db	10
   236  000F7F  00                 	db	0
   237  000F80                     __end_of_set_app_eui:
   238                           	opt stack 0
   239  000F80                     _set_dev_eui:
   240                           	opt stack 0
   241  000F80  6D                 	db	109
   242  000F81  61                 	db	97
   243  000F82  63                 	db	99
   244  000F83  20                 	db	32
   245  000F84  73                 	db	115
   246  000F85  65                 	db	101
   247  000F86  74                 	db	116
   248  000F87  20                 	db	32
   249  000F88  64                 	db	100
   250  000F89  65                 	db	101
   251  000F8A  76                 	db	118
   252  000F8B  65                 	db	101
   253  000F8C  75                 	db	117
   254  000F8D  69                 	db	105
   255  000F8E  20                 	db	32
   256  000F8F  30                 	db	48
   257  000F90  30                 	db	48
   258  000F91  30                 	db	48
   259  000F92  34                 	db	52
   260  000F93  41                 	db	65
   261  000F94  33                 	db	51
   262  000F95  30                 	db	48
   263  000F96  42                 	db	66
   264  000F97  30                 	db	48
   265  000F98  30                 	db	48
   266  000F99  31                 	db	49
   267  000F9A  41                 	db	65
   268  000F9B  43                 	db	67
   269  000F9C  46                 	db	70
   270  000F9D  37                 	db	55
   271  000F9E  44                 	db	68
   272  000F9F  0D                 	db	13
   273  000FA0  0A                 	db	10
   274  000FA1  00                 	db	0
   275  000FA2                     __end_of_set_dev_eui:
   276                           	opt stack 0
   277  000FA2                     _join_network:
   278                           	opt stack 0
   279  000FA2  6D                 	db	109
   280  000FA3  61                 	db	97
   281  000FA4  63                 	db	99
   282  000FA5  20                 	db	32
   283  000FA6  6A                 	db	106
   284  000FA7  6F                 	db	111
   285  000FA8  69                 	db	105
   286  000FA9  6E                 	db	110
   287  000FAA  20                 	db	32
   288  000FAB  6F                 	db	111
   289  000FAC  74                 	db	116
   290  000FAD  61                 	db	97
   291  000FAE  61                 	db	97
   292  000FAF  0D                 	db	13
   293  000FB0  0A                 	db	10
   294  000FB1  00                 	db	0
   295  000FB2                     __end_of_join_network:
   296                           	opt stack 0
   297  0000                     _ANCON0	set	3912
   298  0000                     _ANCON1	set	3913
   299  0000                     _ADRES	set	4035
   300  0000                     _ADCON0	set	4034
   301  0000                     _ADCON0bits	set	4034
   302  0000                     _ADCON1	set	4033
   303  0000                     _BAUDCON1bits	set	3966
   304  0000                     _INTCON	set	4082
   305  0000                     _OSCCONbits	set	4051
   306  0000                     _PIE1bits	set	3997
   307  0000                     _PIR1bits	set	3998
   308  0000                     _PORTAbits	set	3968
   309  0000                     _PORTBbits	set	3969
   310  0000                     _RCONbits	set	4048
   311  0000                     _RCREG1	set	4015
   312  0000                     _RCSTA1bits	set	4012
   313  0000                     _SPBRG1	set	4016
   314  0000                     _SPBRGH1	set	3967
   315  0000                     _TRISAbits	set	3986
   316  0000                     _TRISBbits	set	3987
   317  0000                     _TRISCbits	set	3988
   318  0000                     _TXREG1	set	4014
   319  0000                     _TXSTA1bits	set	4013
   320                           
   321                           ; #config settings
   322  000FB2  00                 	db	0	; dummy byte at the end
   323  0000                     
   324                           	psect	cinit
   325  0018C2                     __pcinit:
   326                           	opt stack 0
   327  0018C2                     start_initialization:
   328                           	opt stack 0
   329  0018C2                     __initialization:
   330                           	opt stack 0
   331                           
   332                           ; Clear objects allocated to BANK0 (102 bytes)
   333  0018C2  EE00  F060         	lfsr	0,__pbssBANK0
   334  0018C6  0E66               	movlw	102
   335  0018C8                     clear_0:
   336  0018C8  6AEE               	clrf	postinc0,c
   337  0018CA  06E8               	decf	wreg,f,c
   338  0018CC  E1FD               	bnz	clear_0
   339                           
   340                           ; Clear objects allocated to COMRAM (16 bytes)
   341  0018CE  EE00  F03D         	lfsr	0,__pbssCOMRAM
   342  0018D2  0E10               	movlw	16
   343  0018D4                     clear_1:
   344  0018D4  6AEE               	clrf	postinc0,c
   345  0018D6  06E8               	decf	wreg,f,c
   346  0018D8  E1FD               	bnz	clear_1
   347                           
   348                           ; Initialize objects allocated to BANK0 (25 bytes)
   349                           ; load TBLPTR registers with __pidataBANK0
   350  0018DA  0E8A               	movlw	low __pidataBANK0
   351  0018DC  6EF6               	movwf	tblptrl,c
   352  0018DE  0E1A               	movlw	high __pidataBANK0
   353  0018E0  6EF7               	movwf	tblptrh,c
   354  0018E2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   355  0018E4  6EF8               	movwf	tblptru,c
   356  0018E6  EE00  F0E0         	lfsr	0,__pdataBANK0
   357  0018EA  EE10 F019          	lfsr	1,25
   358  0018EE                     copy_data0:
   359  0018EE  0009               	tblrd		*+
   360  0018F0  CFF5 FFEE          	movff	tablat,postinc0
   361  0018F4  50E5               	movf	postdec1,w,c
   362  0018F6  50E1               	movf	fsr1l,w,c
   363  0018F8  E1FA               	bnz	copy_data0
   364                           
   365                           ; Initialize objects allocated to COMRAM (1 bytes)
   366                           ; load TBLPTR registers with __pidataCOMRAM
   367  0018FA  0ED0               	movlw	low __pidataCOMRAM
   368  0018FC  6EF6               	movwf	tblptrl,c
   369  0018FE  0E1A               	movlw	high __pidataCOMRAM
   370  001900  6EF7               	movwf	tblptrh,c
   371  001902  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   372  001904  6EF8               	movwf	tblptru,c
   373  001906  0009               	tblrd		*+	;fetch initializer
   374  001908  CFF5 F04D          	movff	tablat,__pdataCOMRAM
   375  00190C                     end_of_initialization:
   376                           	opt stack 0
   377  00190C                     __end_of__initialization:
   378                           	opt stack 0
   379  00190C  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   380  00190E  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   381  001910  0100               	movlb	0
   382  001912  EF74  F00B         	goto	_main	;jump to C main() function
   383                           tblptru	equ	0xFF8
   384                           tblptrh	equ	0xFF7
   385                           tblptrl	equ	0xFF6
   386                           tablat	equ	0xFF5
   387                           postinc0	equ	0xFEE
   388                           wreg	equ	0xFE8
   389                           postdec1	equ	0xFE5
   390                           fsr1l	equ	0xFE1
   391                           
   392                           	psect	bssCOMRAM
   393  00003D                     __pbssCOMRAM:
   394                           	opt stack 0
   395  00003D                     _currentMessagePointer:
   396                           	opt stack 0
   397  00003D                     	ds	2
   398  00003F                     _minus_ambient:
   399                           	opt stack 0
   400  00003F                     	ds	2
   401  000041                     _minus_pipe:
   402                           	opt stack 0
   403  000041                     	ds	2
   404  000043                     _plus_ambient:
   405                           	opt stack 0
   406  000043                     	ds	2
   407  000045                     _plus_pipe:
   408                           	opt stack 0
   409  000045                     	ds	2
   410  000047                     _temp_ambient:
   411                           	opt stack 0
   412  000047                     	ds	2
   413  000049                     _temp_pipe:
   414                           	opt stack 0
   415  000049                     	ds	2
   416  00004B                     _uart_receive_buffer_index:
   417                           	opt stack 0
   418  00004B                     	ds	2
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	dataCOMRAM
   429  00004D                     __pdataCOMRAM:
   430                           	opt stack 0
   431  00004D                     _isCommandSent:
   432                           	opt stack 0
   433  00004D                     	ds	1
   434                           tblptru	equ	0xFF8
   435                           tblptrh	equ	0xFF7
   436                           tblptrl	equ	0xFF6
   437                           tablat	equ	0xFF5
   438                           postinc0	equ	0xFEE
   439                           wreg	equ	0xFE8
   440                           postdec1	equ	0xFE5
   441                           fsr1l	equ	0xFE1
   442                           
   443                           	psect	bssBANK0
   444  000060                     __pbssBANK0:
   445                           	opt stack 0
   446  000060                     _uart_receive_buffer:
   447                           	opt stack 0
   448  000060                     	ds	100
   449  0000C4                     _currentChannel:
   450                           	opt stack 0
   451  0000C4                     	ds	2
   452                           tblptru	equ	0xFF8
   453                           tblptrh	equ	0xFF7
   454                           tblptrl	equ	0xFF6
   455                           tablat	equ	0xFF5
   456                           postinc0	equ	0xFEE
   457                           wreg	equ	0xFE8
   458                           postdec1	equ	0xFE5
   459                           fsr1l	equ	0xFE1
   460                           
   461                           	psect	dataBANK0
   462  0000E0                     __pdataBANK0:
   463                           	opt stack 0
   464  0000E0                     _asciiTemp:
   465                           	opt stack 0
   466  0000E0                     	ds	5
   467  0000E5                     _temp_display_message:
   468                           	opt stack 0
   469  0000E5                     	ds	20
   470                           tblptru	equ	0xFF8
   471                           tblptrh	equ	0xFF7
   472                           tblptrl	equ	0xFF6
   473                           tablat	equ	0xFF5
   474                           postinc0	equ	0xFEE
   475                           wreg	equ	0xFE8
   476                           postdec1	equ	0xFE5
   477                           fsr1l	equ	0xFE1
   478                           
   479                           	psect	cstackBANK0
   480  0000C6                     __pcstackBANK0:
   481                           	opt stack 0
   482  0000C6                     ?___fttol:
   483                           	opt stack 0
   484  0000C6                     ___fttol@f1:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x0
   488  0000C6                     	ds	4
   489  0000CA                     ??___fttol:
   490                           
   491                           ; 1 bytes @ 0x4
   492  0000CA                     	ds	5
   493  0000CF                     ___fttol@sign1:
   494                           	opt stack 0
   495                           
   496                           ; 1 bytes @ 0x9
   497  0000CF                     	ds	1
   498  0000D0                     ___fttol@lval:
   499                           	opt stack 0
   500                           
   501                           ; 4 bytes @ 0xA
   502  0000D0                     	ds	4
   503  0000D4                     ___fttol@exp1:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0xE
   507  0000D4                     	ds	1
   508  0000D5                     ?_calculateTemp:
   509                           	opt stack 0
   510  0000D5                     calculateTemp@plus:
   511                           	opt stack 0
   512                           
   513                           ; 2 bytes @ 0xF
   514  0000D5                     	ds	2
   515  0000D7                     calculateTemp@minus:
   516                           	opt stack 0
   517                           
   518                           ; 2 bytes @ 0x11
   519  0000D7                     	ds	2
   520  0000D9                     ??_calculateTemp:
   521                           
   522                           ; 1 bytes @ 0x13
   523  0000D9                     	ds	2
   524  0000DB                     _calculateTemp$1682:
   525                           	opt stack 0
   526                           
   527                           ; 3 bytes @ 0x15
   528  0000DB                     	ds	3
   529  0000DE                     calculateTemp@temp:
   530                           	opt stack 0
   531                           
   532                           ; 2 bytes @ 0x18
   533  0000DE                     	ds	2
   534                           tblptru	equ	0xFF8
   535                           tblptrh	equ	0xFF7
   536                           tblptrl	equ	0xFF6
   537                           tablat	equ	0xFF5
   538                           postinc0	equ	0xFEE
   539                           wreg	equ	0xFE8
   540                           postdec1	equ	0xFE5
   541                           fsr1l	equ	0xFE1
   542                           
   543                           	psect	cstackCOMRAM
   544  000001                     __pcstackCOMRAM:
   545                           	opt stack 0
   546  000001                     ??_temperature_interrupt:
   547  000001                     i2clearUARTReceiveBuffer@i:
   548                           	opt stack 0
   549                           
   550                           ; 2 bytes @ 0x0
   551  000001                     	ds	2
   552  000003                     
   553                           ; 1 bytes @ 0x2
   554  000003                     	ds	1
   555  000004                     ??_high_ISR:
   556                           
   557                           ; 1 bytes @ 0x3
   558  000004                     	ds	14
   559  000012                     ?___awmod:
   560                           	opt stack 0
   561  000012                     ?___ftpack:
   562                           	opt stack 0
   563  000012                     UARTReceive@on_or_off:
   564                           	opt stack 0
   565  000012                     sendUARTMessage@newMessagePointer:
   566                           	opt stack 0
   567  000012                     clearUARTReceiveBuffer@i:
   568                           	opt stack 0
   569  000012                     delay_ms@ms:
   570                           	opt stack 0
   571  000012                     ___awmod@dividend:
   572                           	opt stack 0
   573  000012                     ___ftpack@arg:
   574                           	opt stack 0
   575                           
   576                           ; 3 bytes @ 0x11
   577  000012                     	ds	2
   578  000014                     ??_delay_ms:
   579  000014                     ___awmod@divisor:
   580                           	opt stack 0
   581                           
   582                           ; 2 bytes @ 0x13
   583  000014                     	ds	1
   584  000015                     ___ftpack@exp:
   585                           	opt stack 0
   586  000015                     delay_ms@i:
   587                           	opt stack 0
   588                           
   589                           ; 2 bytes @ 0x14
   590  000015                     	ds	1
   591  000016                     ___awmod@counter:
   592                           	opt stack 0
   593  000016                     ___ftpack@sign:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x15
   597  000016                     	ds	1
   598  000017                     ??___ftpack:
   599  000017                     ___awmod@sign:
   600                           	opt stack 0
   601                           
   602                           ; 1 bytes @ 0x16
   603  000017                     	ds	1
   604  000018                     ?___awdiv:
   605                           	opt stack 0
   606  000018                     ___awdiv@dividend:
   607                           	opt stack 0
   608                           
   609                           ; 2 bytes @ 0x17
   610  000018                     	ds	2
   611  00001A                     ?___awtoft:
   612                           	opt stack 0
   613  00001A                     ___awdiv@divisor:
   614                           	opt stack 0
   615  00001A                     ___awtoft@c:
   616                           	opt stack 0
   617                           
   618                           ; 2 bytes @ 0x19
   619  00001A                     	ds	2
   620  00001C                     ___awdiv@counter:
   621                           	opt stack 0
   622                           
   623                           ; 1 bytes @ 0x1B
   624  00001C                     	ds	1
   625  00001D                     ___awdiv@sign:
   626                           	opt stack 0
   627  00001D                     ___awtoft@sign:
   628                           	opt stack 0
   629                           
   630                           ; 1 bytes @ 0x1C
   631  00001D                     	ds	1
   632  00001E                     ?___ftdiv:
   633                           	opt stack 0
   634  00001E                     ___awdiv@quotient:
   635                           	opt stack 0
   636  00001E                     ___ftdiv@f1:
   637                           	opt stack 0
   638                           
   639                           ; 3 bytes @ 0x1D
   640  00001E                     	ds	2
   641  000020                     ??_fillInTemp:
   642                           
   643                           ; 1 bytes @ 0x1F
   644  000020                     	ds	1
   645  000021                     ___ftdiv@f2:
   646                           	opt stack 0
   647                           
   648                           ; 3 bytes @ 0x20
   649  000021                     	ds	3
   650  000024                     ??___ftdiv:
   651  000024                     fillInTemp@pipe_or_ambience:
   652                           	opt stack 0
   653                           
   654                           ; 1 bytes @ 0x23
   655  000024                     	ds	1
   656  000025                     fillInTemp@i:
   657                           	opt stack 0
   658                           
   659                           ; 2 bytes @ 0x24
   660  000025                     	ds	2
   661  000027                     ___ftdiv@cntr:
   662                           	opt stack 0
   663  000027                     fillInTemp@i_1120:
   664                           	opt stack 0
   665                           
   666                           ; 2 bytes @ 0x26
   667  000027                     	ds	1
   668  000028                     ___ftdiv@f3:
   669                           	opt stack 0
   670                           
   671                           ; 3 bytes @ 0x27
   672  000028                     	ds	1
   673  000029                     fillInTemp@i_1121:
   674                           	opt stack 0
   675                           
   676                           ; 1 bytes @ 0x28
   677  000029                     	ds	1
   678  00002A                     fillInTemp@temp:
   679                           	opt stack 0
   680                           
   681                           ; 2 bytes @ 0x29
   682  00002A                     	ds	1
   683  00002B                     ___ftdiv@exp:
   684                           	opt stack 0
   685                           
   686                           ; 1 bytes @ 0x2A
   687  00002B                     	ds	1
   688  00002C                     ___ftdiv@sign:
   689                           	opt stack 0
   690                           
   691                           ; 1 bytes @ 0x2B
   692  00002C                     	ds	1
   693  00002D                     ?___ftmul:
   694                           	opt stack 0
   695  00002D                     ___ftmul@f1:
   696                           	opt stack 0
   697                           
   698                           ; 3 bytes @ 0x2C
   699  00002D                     	ds	3
   700  000030                     ___ftmul@f2:
   701                           	opt stack 0
   702                           
   703                           ; 3 bytes @ 0x2F
   704  000030                     	ds	3
   705  000033                     ??___ftmul:
   706                           
   707                           ; 1 bytes @ 0x32
   708  000033                     	ds	3
   709  000036                     ___ftmul@exp:
   710                           	opt stack 0
   711                           
   712                           ; 1 bytes @ 0x35
   713  000036                     	ds	1
   714  000037                     ___ftmul@f3_as_product:
   715                           	opt stack 0
   716                           
   717                           ; 3 bytes @ 0x36
   718  000037                     	ds	3
   719  00003A                     ___ftmul@cntr:
   720                           	opt stack 0
   721                           
   722                           ; 1 bytes @ 0x39
   723  00003A                     	ds	1
   724  00003B                     ___ftmul@sign:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x3A
   728  00003B                     	ds	1
   729  00003C                     makeTempMessage@pipe_or_ambient:
   730                           	opt stack 0
   731                           
   732                           ; 1 bytes @ 0x3B
   733  00003C                     	ds	1
   734  00003D                     tblptru	equ	0xFF8
   735                           tblptrh	equ	0xFF7
   736                           tblptrl	equ	0xFF6
   737                           tablat	equ	0xFF5
   738                           postinc0	equ	0xFEE
   739                           wreg	equ	0xFE8
   740                           postdec1	equ	0xFE5
   741                           fsr1l	equ	0xFE1
   742                           
   743                           ; 1 bytes @ 0x3C
   744 ;;
   745 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   746 ;;
   747 ;; *************** function _main *****************
   748 ;; Defined at:
   749 ;;		line 36 in file "main.c"
   750 ;; Parameters:    Size  Location     Type
   751 ;;		None
   752 ;; Auto vars:     Size  Location     Type
   753 ;;		None
   754 ;; Return value:  Size  Location     Type
   755 ;;                  1    wreg      void 
   756 ;; Registers used:
   757 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   758 ;; Tracked objects:
   759 ;;		On entry : 0/0
   760 ;;		On exit  : 0/0
   761 ;;		Unchanged: 0/0
   762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   764 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   766 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   767 ;;Total ram usage:        0 bytes
   768 ;; Hardware stack levels required when called:    7
   769 ;; This function calls:
   770 ;;		_UARTReceive
   771 ;;		_clearUARTReceiveBuffer
   772 ;;		_delay_ms
   773 ;;		_initADC
   774 ;;		_initInterrupts
   775 ;;		_initLoRa
   776 ;;		_initUART1
   777 ;;		_makeTempMessage
   778 ;;		_sendUARTMessage
   779 ;; This function is called by:
   780 ;;		Startup code after reset
   781 ;; This function uses a non-reentrant model
   782 ;;
   783                           
   784                           	psect	text0
   785  0016E8                     __ptext0:
   786                           	opt stack 0
   787  0016E8                     _main:
   788                           	opt stack 24
   789                           
   790                           ;main.c: 38: OSCCONbits.IRCF0 = 1;
   791                           
   792                           ;incstack = 0
   793  0016E8  88D3               	bsf	4051,4,c	;volatile
   794                           
   795                           ;main.c: 39: OSCCONbits.SCS0 = 1;
   796  0016EA  80D3               	bsf	4051,0,c	;volatile
   797                           
   798                           ;main.c: 40: OSCCONbits.SCS1 = 1;
   799  0016EC  82D3               	bsf	4051,1,c	;volatile
   800                           
   801                           ;main.c: 42: isCommandSent = 1;
   802  0016EE  0E01               	movlw	1
   803  0016F0  6E4D               	movwf	_isCommandSent,c
   804                           
   805                           ;main.c: 43: initUART1();
   806  0016F2  EC37  F00D         	call	_initUART1	;wreg free
   807                           
   808                           ;main.c: 44: initADC();
   809  0016F6  EC20  F00D         	call	_initADC	;wreg free
   810                           
   811                           ;main.c: 45: initInterrupts();
   812  0016FA  EC64  F00D         	call	_initInterrupts	;wreg free
   813                           
   814                           ;main.c: 46: clearUARTReceiveBuffer();
   815  0016FE  ECCF  F00C         	call	_clearUARTReceiveBuffer	;wreg free
   816  001702                     l1985:
   817                           
   818                           ;main.c: 48: UARTReceive(1);
   819  001702  0E01               	movlw	1
   820  001704  EC5C  F00D         	call	_UARTReceive
   821                           
   822                           ;main.c: 49: initLoRa();
   823  001708  EC30  F00C         	call	_initLoRa	;wreg free
   824                           
   825                           ;main.c: 50: UARTReceive(0);
   826  00170C  0E00               	movlw	0
   827  00170E  EC5C  F00D         	call	_UARTReceive
   828                           
   829                           ;main.c: 52: delay_ms(800);
   830  001712  0E03               	movlw	3
   831  001714  6E13               	movwf	delay_ms@ms+1,c
   832  001716  0E20               	movlw	32
   833  001718  6E12               	movwf	delay_ms@ms,c
   834  00171A  EC07  F00D         	call	_delay_ms	;wreg free
   835                           
   836                           ;main.c: 53: clearUARTReceiveBuffer();
   837  00171E  ECCF  F00C         	call	_clearUARTReceiveBuffer	;wreg free
   838                           
   839                           ;main.c: 54: delay_ms(800);
   840  001722  0E03               	movlw	3
   841  001724  6E13               	movwf	delay_ms@ms+1,c
   842  001726  0E20               	movlw	32
   843  001728  6E12               	movwf	delay_ms@ms,c
   844  00172A  EC07  F00D         	call	_delay_ms	;wreg free
   845                           
   846                           ;main.c: 56: makeTempMessage(0);
   847  00172E  0E00               	movlw	0
   848  001730  EC8B  F00C         	call	_makeTempMessage
   849                           
   850                           ;main.c: 57: sendUARTMessage(temp_display_message);
   851  001734  0EE5               	movlw	low _temp_display_message
   852  001736  6E12               	movwf	sendUARTMessage@newMessagePointer,c
   853  001738  0E00               	movlw	high _temp_display_message
   854  00173A  6E13               	movwf	sendUARTMessage@newMessagePointer+1,c
   855  00173C  EC52  F00D         	call	_sendUARTMessage	;wreg free
   856                           
   857                           ;main.c: 58: delay_ms(800);
   858  001740  0E03               	movlw	3
   859  001742  6E13               	movwf	delay_ms@ms+1,c
   860  001744  0E20               	movlw	32
   861  001746  6E12               	movwf	delay_ms@ms,c
   862  001748  EC07  F00D         	call	_delay_ms	;wreg free
   863                           
   864                           ;main.c: 60: makeTempMessage(1);
   865  00174C  0E01               	movlw	1
   866  00174E  EC8B  F00C         	call	_makeTempMessage
   867                           
   868                           ;main.c: 61: sendUARTMessage(temp_display_message);
   869  001752  0EE5               	movlw	low _temp_display_message
   870  001754  6E12               	movwf	sendUARTMessage@newMessagePointer,c
   871  001756  0E00               	movlw	high _temp_display_message
   872  001758  6E13               	movwf	sendUARTMessage@newMessagePointer+1,c
   873  00175A  EC52  F00D         	call	_sendUARTMessage	;wreg free
   874                           
   875                           ;main.c: 62: delay_ms(800);
   876  00175E  0E03               	movlw	3
   877  001760  6E13               	movwf	delay_ms@ms+1,c
   878  001762  0E20               	movlw	32
   879  001764  6E12               	movwf	delay_ms@ms,c
   880  001766  EC07  F00D         	call	_delay_ms	;wreg free
   881  00176A  D7CB               	goto	l1985
   882  00176C                     __end_of_main:
   883                           	opt stack 0
   884                           tblptru	equ	0xFF8
   885                           tblptrh	equ	0xFF7
   886                           tblptrl	equ	0xFF6
   887                           tablat	equ	0xFF5
   888                           postinc0	equ	0xFEE
   889                           wreg	equ	0xFE8
   890                           postdec1	equ	0xFE5
   891                           fsr1l	equ	0xFE1
   892                           
   893 ;; *************** function _makeTempMessage *****************
   894 ;; Defined at:
   895 ;;		line 92 in file "temperature.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;  pipe_or_ambi    1    wreg     unsigned char 
   898 ;; Auto vars:     Size  Location     Type
   899 ;;  pipe_or_ambi    1   59[COMRAM] unsigned char 
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      void 
   902 ;; Registers used:
   903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   909 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   910 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   912 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   913 ;;Total ram usage:        1 bytes
   914 ;; Hardware stack levels used:    1
   915 ;; Hardware stack levels required when called:    6
   916 ;; This function calls:
   917 ;;		_calculateTemp
   918 ;;		_fillInTemp
   919 ;; This function is called by:
   920 ;;		_main
   921 ;; This function uses a non-reentrant model
   922 ;;
   923                           
   924                           	psect	text1
   925  001916                     __ptext1:
   926                           	opt stack 0
   927  001916                     _makeTempMessage:
   928                           	opt stack 24
   929                           
   930                           ;incstack = 0
   931                           ;makeTempMessage@pipe_or_ambient stored from wreg
   932  001916  6E3C               	movwf	makeTempMessage@pipe_or_ambient,c
   933                           
   934                           ;temperature.c: 93: if(pipe_or_ambient == 0){
   935  001918  503C               	movf	makeTempMessage@pipe_or_ambient,w,c
   936  00191A  A4D8               	btfss	status,2,c
   937  00191C  D012               	goto	l1969
   938                           
   939                           ;temperature.c: 94: temp_pipe = calculateTemp(plus_pipe, minus_pipe);
   940  00191E  C045  F0D5         	movff	_plus_pipe,calculateTemp@plus
   941  001922  C046  F0D6         	movff	_plus_pipe+1,calculateTemp@plus+1
   942  001926  C041  F0D7         	movff	_minus_pipe,calculateTemp@minus
   943  00192A  C042  F0D8         	movff	_minus_pipe+1,calculateTemp@minus+1
   944  00192E  EC24  F00A         	call	_calculateTemp	;wreg free
   945  001932  C0D5  F049         	movff	?_calculateTemp,_temp_pipe
   946  001936  C0D6  F04A         	movff	?_calculateTemp+1,_temp_pipe+1
   947                           
   948                           ;temperature.c: 95: fillInTemp(0);
   949  00193A  0E00               	movlw	0
   950  00193C  ECDA  F007         	call	_fillInTemp
   951                           
   952                           ;temperature.c: 96: }
   953  001940  0012               	return	
   954  001942                     l1969:
   955                           
   956                           ;temperature.c: 97: else{
   957                           ;temperature.c: 98: temp_ambient = calculateTemp(plus_ambient, minus_ambient);
   958  001942  C043  F0D5         	movff	_plus_ambient,calculateTemp@plus
   959  001946  C044  F0D6         	movff	_plus_ambient+1,calculateTemp@plus+1
   960  00194A  C03F  F0D7         	movff	_minus_ambient,calculateTemp@minus
   961  00194E  C040  F0D8         	movff	_minus_ambient+1,calculateTemp@minus+1
   962  001952  EC24  F00A         	call	_calculateTemp	;wreg free
   963  001956  C0D5  F047         	movff	?_calculateTemp,_temp_ambient
   964  00195A  C0D6  F048         	movff	?_calculateTemp+1,_temp_ambient+1
   965                           
   966                           ;temperature.c: 99: fillInTemp(1);
   967  00195E  0E01               	movlw	1
   968  001960  ECDA  F007         	call	_fillInTemp
   969  001964  0012               	return	
   970  001966                     __end_of_makeTempMessage:
   971                           	opt stack 0
   972                           tblptru	equ	0xFF8
   973                           tblptrh	equ	0xFF7
   974                           tblptrl	equ	0xFF6
   975                           tablat	equ	0xFF5
   976                           postinc0	equ	0xFEE
   977                           wreg	equ	0xFE8
   978                           postdec1	equ	0xFE5
   979                           fsr1l	equ	0xFE1
   980                           status	equ	0xFD8
   981                           
   982 ;; *************** function _fillInTemp *****************
   983 ;; Defined at:
   984 ;;		line 50 in file "temperature.c"
   985 ;; Parameters:    Size  Location     Type
   986 ;;  pipe_or_ambi    1    wreg     unsigned char 
   987 ;; Auto vars:     Size  Location     Type
   988 ;;  pipe_or_ambi    1   35[COMRAM] unsigned char 
   989 ;;  i               2   38[COMRAM] int 
   990 ;;  i               2   36[COMRAM] int 
   991 ;;  i               1   40[COMRAM] unsigned char 
   992 ;;  temp            2   41[COMRAM] int 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1002 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1003 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1004 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1005 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1006 ;;Total ram usage:       12 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    4
  1009 ;; This function calls:
  1010 ;;		___awdiv
  1011 ;;		___awmod
  1012 ;; This function is called by:
  1013 ;;		_makeTempMessage
  1014 ;; This function uses a non-reentrant model
  1015 ;;
  1016                           
  1017                           	psect	text2
  1018  000FB4                     __ptext2:
  1019                           	opt stack 0
  1020  000FB4                     _fillInTemp:
  1021                           	opt stack 25
  1022                           
  1023                           ;incstack = 0
  1024                           ;fillInTemp@pipe_or_ambience stored from wreg
  1025  000FB4  6E24               	movwf	fillInTemp@pipe_or_ambience,c
  1026                           
  1027                           ;temperature.c: 51: signed int temp;
  1028                           ;temperature.c: 52: if(pipe_or_ambience == 0){
  1029  000FB6  5024               	movf	fillInTemp@pipe_or_ambience,w,c
  1030  000FB8  A4D8               	btfss	status,2,c
  1031  000FBA  D02A               	goto	l1677
  1032                           
  1033                           ;temperature.c: 53: for(int i = 0; i<4; i++){
  1034  000FBC  0E00               	movlw	0
  1035  000FBE  6E26               	movwf	fillInTemp@i+1,c
  1036  000FC0  0E00               	movlw	0
  1037  000FC2  6E25               	movwf	fillInTemp@i,c
  1038  000FC4  BE26               	btfsc	fillInTemp@i+1,7,c
  1039  000FC6  D006               	goto	l1671
  1040  000FC8  5026               	movf	fillInTemp@i+1,w,c
  1041  000FCA  E11D               	bnz	l184
  1042  000FCC  0E04               	movlw	4
  1043  000FCE  5C25               	subwf	fillInTemp@i,w,c
  1044  000FD0  B0D8               	btfsc	status,0,c
  1045  000FD2  D019               	goto	l184
  1046  000FD4                     l1671:
  1047                           
  1048                           ;temperature.c: 54: temp_display_message[i] = pipe_ascii[i];
  1049  000FD4  0E23               	movlw	low _pipe_ascii
  1050  000FD6  2425               	addwf	fillInTemp@i,w,c
  1051  000FD8  6EF6               	movwf	tblptrl,c
  1052  000FDA  0E0F               	movlw	high _pipe_ascii
  1053  000FDC  2026               	addwfc	fillInTemp@i+1,w,c
  1054  000FDE  6EF7               	movwf	tblptrh,c
  1055  000FE0                     	if	1	;There are 3 active tblptr bytes
  1056  000FE0  6AF8               	clrf	tblptru,c
  1057  000FE2  0E00               	movlw	low (__mediumconst shr (0+16))
  1058  000FE4  22F8               	addwfc	tblptru,f,c
  1059  000FE6                     	endif
  1060  000FE6  0EE5               	movlw	low _temp_display_message
  1061  000FE8  2425               	addwf	fillInTemp@i,w,c
  1062  000FEA  6ED9               	movwf	fsr2l,c
  1063  000FEC  0E00               	movlw	high _temp_display_message
  1064  000FEE  2026               	addwfc	fillInTemp@i+1,w,c
  1065  000FF0  6EDA               	movwf	fsr2h,c
  1066  000FF2  0008               	tblrd		*
  1067  000FF4  CFF5 FFDF          	movff	tablat,indf2
  1068  000FF8  4A25               	infsnz	fillInTemp@i,f,c
  1069  000FFA  2A26               	incf	fillInTemp@i+1,f,c
  1070  000FFC  BE26               	btfsc	fillInTemp@i+1,7,c
  1071  000FFE  D7EA               	goto	l1671
  1072  001000  5026               	movf	fillInTemp@i+1,w,c
  1073  001002  E101               	bnz	u1090
  1074  001004  D7E3               	goto	L1
  1075  001006                     u1090:
  1076  001006                     l184:
  1077                           
  1078                           ;temperature.c: 55: }
  1079                           ;temperature.c: 56: temp = temp_pipe;
  1080  001006  C049  F02A         	movff	_temp_pipe,fillInTemp@temp
  1081  00100A  C04A  F02B         	movff	_temp_pipe+1,fillInTemp@temp+1
  1082                           
  1083                           ;temperature.c: 57: }
  1084  00100E  D029               	goto	l1689
  1085  001010                     l1677:
  1086                           
  1087                           ;temperature.c: 58: else{
  1088                           ;temperature.c: 59: for(int i = 0; i<4; i++){
  1089  001010  0E00               	movlw	0
  1090  001012  6E28               	movwf	fillInTemp@i_1120+1,c
  1091  001014  0E00               	movlw	0
  1092  001016  6E27               	movwf	fillInTemp@i_1120,c
  1093  001018  BE28               	btfsc	fillInTemp@i_1120+1,7,c
  1094  00101A  D006               	goto	l1683
  1095  00101C  5028               	movf	fillInTemp@i_1120+1,w,c
  1096  00101E  E11D               	bnz	l187
  1097  001020  0E04               	movlw	4
  1098  001022  5C27               	subwf	fillInTemp@i_1120,w,c
  1099  001024  B0D8               	btfsc	status,0,c
  1100  001026  D019               	goto	l187
  1101  001028                     l1683:
  1102                           
  1103                           ;temperature.c: 60: temp_display_message[i] = ambient_ascii[i];
  1104  001028  0E1E               	movlw	low _ambient_ascii
  1105  00102A  2427               	addwf	fillInTemp@i_1120,w,c
  1106  00102C  6EF6               	movwf	tblptrl,c
  1107  00102E  0E0F               	movlw	high _ambient_ascii
  1108  001030  2028               	addwfc	fillInTemp@i_1120+1,w,c
  1109  001032  6EF7               	movwf	tblptrh,c
  1110  001034                     	if	1	;There are 3 active tblptr bytes
  1111  001034  6AF8               	clrf	tblptru,c
  1112  001036  0E00               	movlw	low (__mediumconst shr (0+16))
  1113  001038  22F8               	addwfc	tblptru,f,c
  1114  00103A                     	endif
  1115  00103A  0EE5               	movlw	low _temp_display_message
  1116  00103C  2427               	addwf	fillInTemp@i_1120,w,c
  1117  00103E  6ED9               	movwf	fsr2l,c
  1118  001040  0E00               	movlw	high _temp_display_message
  1119  001042  2028               	addwfc	fillInTemp@i_1120+1,w,c
  1120  001044  6EDA               	movwf	fsr2h,c
  1121  001046  0008               	tblrd		*
  1122  001048  CFF5 FFDF          	movff	tablat,indf2
  1123  00104C  4A27               	infsnz	fillInTemp@i_1120,f,c
  1124  00104E  2A28               	incf	fillInTemp@i_1120+1,f,c
  1125  001050  BE28               	btfsc	fillInTemp@i_1120+1,7,c
  1126  001052  D7EA               	goto	l1683
  1127  001054  5028               	movf	fillInTemp@i_1120+1,w,c
  1128  001056  E101               	bnz	u1110
  1129  001058  D7E3               	goto	L2
  1130  00105A                     u1110:
  1131  00105A                     l187:
  1132                           
  1133                           ;temperature.c: 61: }
  1134                           ;temperature.c: 62: temp = temp_ambient;
  1135  00105A  C047  F02A         	movff	_temp_ambient,fillInTemp@temp
  1136  00105E  C048  F02B         	movff	_temp_ambient+1,fillInTemp@temp+1
  1137  001062                     l1689:
  1138                           
  1139                           ;temperature.c: 63: }
  1140                           ;temperature.c: 66: if(temp < 0){
  1141  001062  AE2B               	btfss	fillInTemp@temp+1,7,c
  1142  001064  D008               	goto	l1695
  1143                           
  1144                           ;temperature.c: 67: asciiTemp[0] = '-';
  1145  001066  0E2D               	movlw	45
  1146  001068  0100               	movlb	0	; () banked
  1147  00106A  6FE0               	movwf	_asciiTemp& (0+255),b
  1148                           
  1149                           ; BSR set to: 0
  1150                           ;temperature.c: 68: temp = - temp;
  1151  00106C  6C2A               	negf	fillInTemp@temp,c
  1152  00106E  1E2B               	comf	fillInTemp@temp+1,f,c
  1153  001070  B0D8               	btfsc	status,0,c
  1154  001072  2A2B               	incf	fillInTemp@temp+1,f,c
  1155                           
  1156                           ;temperature.c: 69: }
  1157  001074  D003               	goto	l1697
  1158  001076                     l1695:
  1159                           
  1160                           ;temperature.c: 70: else{
  1161                           ;temperature.c: 71: asciiTemp[0] = ' ';
  1162  001076  0E20               	movlw	32
  1163  001078  0100               	movlb	0	; () banked
  1164  00107A  6FE0               	movwf	_asciiTemp& (0+255),b
  1165  00107C                     l1697:
  1166                           
  1167                           ; BSR set to: 0
  1168                           ;temperature.c: 72: }
  1169                           ;temperature.c: 73: asciiTemp[1] =(char) (temp/100 + 48);
  1170  00107C  C02A  F018         	movff	fillInTemp@temp,___awdiv@dividend
  1171  001080  C02B  F019         	movff	fillInTemp@temp+1,___awdiv@dividend+1
  1172  001084  0E00               	movlw	0
  1173  001086  6E1B               	movwf	___awdiv@divisor+1,c
  1174  001088  0E64               	movlw	100
  1175  00108A  6E1A               	movwf	___awdiv@divisor,c
  1176  00108C  ECB6  F00B         	call	___awdiv	;wreg free
  1177  001090  5018               	movf	?___awdiv,w,c
  1178  001092  0F30               	addlw	48
  1179  001094  0100               	movlb	0	; () banked
  1180  001096  6FE1               	movwf	(_asciiTemp+1)& (0+255),b
  1181                           
  1182                           ; BSR set to: 0
  1183                           ;temperature.c: 74: asciiTemp[2] =(char) (temp % 100 / 10 + 48);
  1184  001098  0E00               	movlw	0
  1185  00109A  6E15               	movwf	___awmod@divisor+1,c
  1186  00109C  0E64               	movlw	100
  1187  00109E  6E14               	movwf	___awmod@divisor,c
  1188  0010A0  C02A  F012         	movff	fillInTemp@temp,___awmod@dividend
  1189  0010A4  C02B  F013         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1190  0010A8  ECF8  F00B         	call	___awmod	;wreg free
  1191  0010AC  C012  F018         	movff	?___awmod,___awdiv@dividend
  1192  0010B0  C013  F019         	movff	?___awmod+1,___awdiv@dividend+1
  1193  0010B4  0E00               	movlw	0
  1194  0010B6  6E1B               	movwf	___awdiv@divisor+1,c
  1195  0010B8  0E0A               	movlw	10
  1196  0010BA  6E1A               	movwf	___awdiv@divisor,c
  1197  0010BC  ECB6  F00B         	call	___awdiv	;wreg free
  1198  0010C0  5018               	movf	?___awdiv,w,c
  1199  0010C2  0F30               	addlw	48
  1200  0010C4  0100               	movlb	0	; () banked
  1201  0010C6  6FE2               	movwf	(_asciiTemp+2)& (0+255),b
  1202                           
  1203                           ; BSR set to: 0
  1204                           ;temperature.c: 75: asciiTemp[3] = (char) (temp % 10 + 48);
  1205  0010C8  C02A  F012         	movff	fillInTemp@temp,___awmod@dividend
  1206  0010CC  C02B  F013         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1207  0010D0  0E00               	movlw	0
  1208  0010D2  6E15               	movwf	___awmod@divisor+1,c
  1209  0010D4  0E0A               	movlw	10
  1210  0010D6  6E14               	movwf	___awmod@divisor,c
  1211  0010D8  ECF8  F00B         	call	___awmod	;wreg free
  1212  0010DC  5012               	movf	?___awmod,w,c
  1213  0010DE  0F30               	addlw	48
  1214  0010E0  0100               	movlb	0	; () banked
  1215  0010E2  6FE3               	movwf	(_asciiTemp+3)& (0+255),b
  1216                           
  1217                           ; BSR set to: 0
  1218                           ;temperature.c: 79: for(char i = 12; i<17; i++){
  1219  0010E4  0E0C               	movlw	12
  1220  0010E6  6E29               	movwf	fillInTemp@i_1121,c
  1221  0010E8                     l1705:
  1222                           
  1223                           ; BSR set to: 0
  1224  0010E8  0E10               	movlw	16
  1225  0010EA  6429               	cpfsgt	fillInTemp@i_1121,c
  1226  0010EC  D001               	goto	l1709
  1227  0010EE  0012               	return	
  1228  0010F0                     l1709:
  1229                           
  1230                           ;temperature.c: 80: temp_display_message[i] = asciiTemp[i-12];
  1231  0010F0  0EF4               	movlw	244
  1232  0010F2  6E20               	movwf	??_fillInTemp& (0+255),c
  1233  0010F4  0EFF               	movlw	255
  1234  0010F6  6E21               	movwf	(??_fillInTemp+1)& (0+255),c
  1235  0010F8  5029               	movf	fillInTemp@i_1121,w,c
  1236  0010FA  6E22               	movwf	(??_fillInTemp+2)& (0+255),c
  1237  0010FC  6A23               	clrf	(??_fillInTemp+3)& (0+255),c
  1238  0010FE  5020               	movf	??_fillInTemp,w,c
  1239  001100  2622               	addwf	??_fillInTemp+2,f,c
  1240  001102  5021               	movf	??_fillInTemp+1,w,c
  1241  001104  2223               	addwfc	??_fillInTemp+3,f,c
  1242  001106  0EE0               	movlw	low _asciiTemp
  1243  001108  2422               	addwf	??_fillInTemp+2,w,c
  1244  00110A  6ED9               	movwf	fsr2l,c
  1245  00110C  0E00               	movlw	high _asciiTemp
  1246  00110E  2023               	addwfc	??_fillInTemp+3,w,c
  1247  001110  6EDA               	movwf	fsr2h,c
  1248  001112  5029               	movf	fillInTemp@i_1121,w,c
  1249  001114  0D01               	mullw	1
  1250  001116  0EE5               	movlw	low _temp_display_message
  1251  001118  24F3               	addwf	prodl,w,c
  1252  00111A  6EE1               	movwf	fsr1l,c
  1253  00111C  0E00               	movlw	high _temp_display_message
  1254  00111E  20F4               	addwfc	prodh,w,c
  1255  001120  6EE2               	movwf	fsr1h,c
  1256  001122  CFDF FFE7          	movff	indf2,indf1
  1257  001126  2A29               	incf	fillInTemp@i_1121,f,c
  1258  001128  D7DF               	goto	l1705
  1259  00112A                     __end_of_fillInTemp:
  1260                           	opt stack 0
  1261                           tblptru	equ	0xFF8
  1262                           tblptrh	equ	0xFF7
  1263                           tblptrl	equ	0xFF6
  1264                           tablat	equ	0xFF5
  1265                           prodh	equ	0xFF4
  1266                           prodl	equ	0xFF3
  1267                           postinc0	equ	0xFEE
  1268                           wreg	equ	0xFE8
  1269                           indf1	equ	0xFE7
  1270                           postdec1	equ	0xFE5
  1271                           fsr1h	equ	0xFE2
  1272                           fsr1l	equ	0xFE1
  1273                           indf2	equ	0xFDF
  1274                           fsr2h	equ	0xFDA
  1275                           fsr2l	equ	0xFD9
  1276                           status	equ	0xFD8
  1277                           
  1278 ;; *************** function ___awmod *****************
  1279 ;; Defined at:
  1280 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  dividend        2   17[COMRAM] int 
  1283 ;;  divisor         2   19[COMRAM] int 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  sign            1   22[COMRAM] unsigned char 
  1286 ;;  counter         1   21[COMRAM] unsigned char 
  1287 ;; Return value:  Size  Location     Type
  1288 ;;                  2   17[COMRAM] int 
  1289 ;; Registers used:
  1290 ;;		wreg, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1297 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1298 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1299 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1300 ;;Total ram usage:        6 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; Hardware stack levels required when called:    3
  1303 ;; This function calls:
  1304 ;;		Nothing
  1305 ;; This function is called by:
  1306 ;;		_fillInTemp
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           	psect	text3
  1311  0017F0                     __ptext3:
  1312                           	opt stack 0
  1313  0017F0                     ___awmod:
  1314                           	opt stack 25
  1315                           
  1316                           ;incstack = 0
  1317  0017F0  0E00               	movlw	0
  1318  0017F2  6E17               	movwf	___awmod@sign,c
  1319  0017F4  AE13               	btfss	___awmod@dividend+1,7,c
  1320  0017F6  D006               	goto	l1563
  1321  0017F8  6C12               	negf	___awmod@dividend,c
  1322  0017FA  1E13               	comf	___awmod@dividend+1,f,c
  1323  0017FC  B0D8               	btfsc	status,0,c
  1324  0017FE  2A13               	incf	___awmod@dividend+1,f,c
  1325  001800  0E01               	movlw	1
  1326  001802  6E17               	movwf	___awmod@sign,c
  1327  001804                     l1563:
  1328  001804  AE15               	btfss	___awmod@divisor+1,7,c
  1329  001806  D004               	goto	l1567
  1330  001808  6C14               	negf	___awmod@divisor,c
  1331  00180A  1E15               	comf	___awmod@divisor+1,f,c
  1332  00180C  B0D8               	btfsc	status,0,c
  1333  00180E  2A15               	incf	___awmod@divisor+1,f,c
  1334  001810                     l1567:
  1335  001810  5014               	movf	___awmod@divisor,w,c
  1336  001812  1015               	iorwf	___awmod@divisor+1,w,c
  1337  001814  B4D8               	btfsc	status,2,c
  1338  001816  D018               	goto	l1583
  1339  001818  0E01               	movlw	1
  1340  00181A  6E16               	movwf	___awmod@counter,c
  1341  00181C  D004               	goto	l1573
  1342  00181E                     l1571:
  1343  00181E  90D8               	bcf	status,0,c
  1344  001820  3614               	rlcf	___awmod@divisor,f,c
  1345  001822  3615               	rlcf	___awmod@divisor+1,f,c
  1346  001824  2A16               	incf	___awmod@counter,f,c
  1347  001826                     l1573:
  1348  001826  AE15               	btfss	___awmod@divisor+1,7,c
  1349  001828  D7FA               	goto	l1571
  1350  00182A                     l1575:
  1351  00182A  5014               	movf	___awmod@divisor,w,c
  1352  00182C  5C12               	subwf	___awmod@dividend,w,c
  1353  00182E  5015               	movf	___awmod@divisor+1,w,c
  1354  001830  5813               	subwfb	___awmod@dividend+1,w,c
  1355  001832  A0D8               	btfss	status,0,c
  1356  001834  D004               	goto	l1579
  1357  001836  5014               	movf	___awmod@divisor,w,c
  1358  001838  5E12               	subwf	___awmod@dividend,f,c
  1359  00183A  5015               	movf	___awmod@divisor+1,w,c
  1360  00183C  5A13               	subwfb	___awmod@dividend+1,f,c
  1361  00183E                     l1579:
  1362  00183E  90D8               	bcf	status,0,c
  1363  001840  3215               	rrcf	___awmod@divisor+1,f,c
  1364  001842  3214               	rrcf	___awmod@divisor,f,c
  1365  001844  2E16               	decfsz	___awmod@counter,f,c
  1366  001846  D7F1               	goto	l1575
  1367  001848                     l1583:
  1368  001848  5017               	movf	___awmod@sign,w,c
  1369  00184A  B4D8               	btfsc	status,2,c
  1370  00184C  D004               	goto	l1587
  1371  00184E  6C12               	negf	___awmod@dividend,c
  1372  001850  1E13               	comf	___awmod@dividend+1,f,c
  1373  001852  B0D8               	btfsc	status,0,c
  1374  001854  2A13               	incf	___awmod@dividend+1,f,c
  1375  001856                     l1587:
  1376  001856  C012  F012         	movff	___awmod@dividend,?___awmod
  1377  00185A  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
  1378  00185E  0012               	return	
  1379  001860                     __end_of___awmod:
  1380                           	opt stack 0
  1381                           tblptru	equ	0xFF8
  1382                           tblptrh	equ	0xFF7
  1383                           tblptrl	equ	0xFF6
  1384                           tablat	equ	0xFF5
  1385                           prodh	equ	0xFF4
  1386                           prodl	equ	0xFF3
  1387                           postinc0	equ	0xFEE
  1388                           wreg	equ	0xFE8
  1389                           indf1	equ	0xFE7
  1390                           postdec1	equ	0xFE5
  1391                           fsr1h	equ	0xFE2
  1392                           fsr1l	equ	0xFE1
  1393                           indf2	equ	0xFDF
  1394                           fsr2h	equ	0xFDA
  1395                           fsr2l	equ	0xFD9
  1396                           status	equ	0xFD8
  1397                           
  1398 ;; *************** function ___awdiv *****************
  1399 ;; Defined at:
  1400 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  1401 ;; Parameters:    Size  Location     Type
  1402 ;;  dividend        2   23[COMRAM] int 
  1403 ;;  divisor         2   25[COMRAM] int 
  1404 ;; Auto vars:     Size  Location     Type
  1405 ;;  quotient        2   29[COMRAM] int 
  1406 ;;  sign            1   28[COMRAM] unsigned char 
  1407 ;;  counter         1   27[COMRAM] unsigned char 
  1408 ;; Return value:  Size  Location     Type
  1409 ;;                  2   23[COMRAM] int 
  1410 ;; Registers used:
  1411 ;;		wreg, status,2, status,0
  1412 ;; Tracked objects:
  1413 ;;		On entry : 0/0
  1414 ;;		On exit  : 0/0
  1415 ;;		Unchanged: 0/0
  1416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1417 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1418 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1419 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1420 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1421 ;;Total ram usage:        8 bytes
  1422 ;; Hardware stack levels used:    1
  1423 ;; Hardware stack levels required when called:    3
  1424 ;; This function calls:
  1425 ;;		Nothing
  1426 ;; This function is called by:
  1427 ;;		_fillInTemp
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text4
  1432  00176C                     __ptext4:
  1433                           	opt stack 0
  1434  00176C                     ___awdiv:
  1435                           	opt stack 25
  1436                           
  1437                           ;incstack = 0
  1438  00176C  0E00               	movlw	0
  1439  00176E  6E1D               	movwf	___awdiv@sign,c
  1440  001770  AE1B               	btfss	___awdiv@divisor+1,7,c
  1441  001772  D006               	goto	l1519
  1442  001774  6C1A               	negf	___awdiv@divisor,c
  1443  001776  1E1B               	comf	___awdiv@divisor+1,f,c
  1444  001778  B0D8               	btfsc	status,0,c
  1445  00177A  2A1B               	incf	___awdiv@divisor+1,f,c
  1446  00177C  0E01               	movlw	1
  1447  00177E  6E1D               	movwf	___awdiv@sign,c
  1448  001780                     l1519:
  1449  001780  AE19               	btfss	___awdiv@dividend+1,7,c
  1450  001782  D006               	goto	l1525
  1451  001784  6C18               	negf	___awdiv@dividend,c
  1452  001786  1E19               	comf	___awdiv@dividend+1,f,c
  1453  001788  B0D8               	btfsc	status,0,c
  1454  00178A  2A19               	incf	___awdiv@dividend+1,f,c
  1455  00178C  0E01               	movlw	1
  1456  00178E  1A1D               	xorwf	___awdiv@sign,f,c
  1457  001790                     l1525:
  1458  001790  0E00               	movlw	0
  1459  001792  6E1F               	movwf	___awdiv@quotient+1,c
  1460  001794  0E00               	movlw	0
  1461  001796  6E1E               	movwf	___awdiv@quotient,c
  1462  001798  501A               	movf	___awdiv@divisor,w,c
  1463  00179A  101B               	iorwf	___awdiv@divisor+1,w,c
  1464  00179C  B4D8               	btfsc	status,2,c
  1465  00179E  D01C               	goto	l1547
  1466  0017A0  0E01               	movlw	1
  1467  0017A2  6E1C               	movwf	___awdiv@counter,c
  1468  0017A4  D004               	goto	l1533
  1469  0017A6                     l1531:
  1470  0017A6  90D8               	bcf	status,0,c
  1471  0017A8  361A               	rlcf	___awdiv@divisor,f,c
  1472  0017AA  361B               	rlcf	___awdiv@divisor+1,f,c
  1473  0017AC  2A1C               	incf	___awdiv@counter,f,c
  1474  0017AE                     l1533:
  1475  0017AE  AE1B               	btfss	___awdiv@divisor+1,7,c
  1476  0017B0  D7FA               	goto	l1531
  1477  0017B2                     l1535:
  1478  0017B2  90D8               	bcf	status,0,c
  1479  0017B4  361E               	rlcf	___awdiv@quotient,f,c
  1480  0017B6  361F               	rlcf	___awdiv@quotient+1,f,c
  1481  0017B8  501A               	movf	___awdiv@divisor,w,c
  1482  0017BA  5C18               	subwf	___awdiv@dividend,w,c
  1483  0017BC  501B               	movf	___awdiv@divisor+1,w,c
  1484  0017BE  5819               	subwfb	___awdiv@dividend+1,w,c
  1485  0017C0  A0D8               	btfss	status,0,c
  1486  0017C2  D005               	goto	l1543
  1487  0017C4  501A               	movf	___awdiv@divisor,w,c
  1488  0017C6  5E18               	subwf	___awdiv@dividend,f,c
  1489  0017C8  501B               	movf	___awdiv@divisor+1,w,c
  1490  0017CA  5A19               	subwfb	___awdiv@dividend+1,f,c
  1491  0017CC  801E               	bsf	___awdiv@quotient,0,c
  1492  0017CE                     l1543:
  1493  0017CE  90D8               	bcf	status,0,c
  1494  0017D0  321B               	rrcf	___awdiv@divisor+1,f,c
  1495  0017D2  321A               	rrcf	___awdiv@divisor,f,c
  1496  0017D4  2E1C               	decfsz	___awdiv@counter,f,c
  1497  0017D6  D7ED               	goto	l1535
  1498  0017D8                     l1547:
  1499  0017D8  501D               	movf	___awdiv@sign,w,c
  1500  0017DA  B4D8               	btfsc	status,2,c
  1501  0017DC  D004               	goto	l1551
  1502  0017DE  6C1E               	negf	___awdiv@quotient,c
  1503  0017E0  1E1F               	comf	___awdiv@quotient+1,f,c
  1504  0017E2  B0D8               	btfsc	status,0,c
  1505  0017E4  2A1F               	incf	___awdiv@quotient+1,f,c
  1506  0017E6                     l1551:
  1507  0017E6  C01E  F018         	movff	___awdiv@quotient,?___awdiv
  1508  0017EA  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
  1509  0017EE  0012               	return	
  1510  0017F0                     __end_of___awdiv:
  1511                           	opt stack 0
  1512                           tblptru	equ	0xFF8
  1513                           tblptrh	equ	0xFF7
  1514                           tblptrl	equ	0xFF6
  1515                           tablat	equ	0xFF5
  1516                           prodh	equ	0xFF4
  1517                           prodl	equ	0xFF3
  1518                           postinc0	equ	0xFEE
  1519                           wreg	equ	0xFE8
  1520                           indf1	equ	0xFE7
  1521                           postdec1	equ	0xFE5
  1522                           fsr1h	equ	0xFE2
  1523                           fsr1l	equ	0xFE1
  1524                           indf2	equ	0xFDF
  1525                           fsr2h	equ	0xFDA
  1526                           fsr2l	equ	0xFD9
  1527                           status	equ	0xFD8
  1528                           
  1529 ;; *************** function _calculateTemp *****************
  1530 ;; Defined at:
  1531 ;;		line 84 in file "temperature.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  plus            2   15[BANK0 ] int 
  1534 ;;  minus           2   17[BANK0 ] int 
  1535 ;; Auto vars:     Size  Location     Type
  1536 ;;  temp            2   24[BANK0 ] int 
  1537 ;; Return value:  Size  Location     Type
  1538 ;;                  2   15[BANK0 ] int 
  1539 ;; Registers used:
  1540 ;;		wreg, status,2, status,0, cstack
  1541 ;; Tracked objects:
  1542 ;;		On entry : 0/0
  1543 ;;		On exit  : 0/0
  1544 ;;		Unchanged: 0/0
  1545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1546 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1547 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1548 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1549 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1550 ;;Total ram usage:       11 bytes
  1551 ;; Hardware stack levels used:    1
  1552 ;; Hardware stack levels required when called:    5
  1553 ;; This function calls:
  1554 ;;		___awtoft
  1555 ;;		___ftdiv
  1556 ;;		___ftmul
  1557 ;;		___fttol
  1558 ;; This function is called by:
  1559 ;;		_makeTempMessage
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           	psect	text5
  1564  001448                     __ptext5:
  1565                           	opt stack 0
  1566  001448                     _calculateTemp:
  1567                           	opt stack 24
  1568                           
  1569                           ;temperature.c: 85: signed int temp;
  1570                           ;temperature.c: 86: temp = plus - minus;
  1571                           
  1572                           ;incstack = 0
  1573  001448  C0D7  F0D9         	movff	calculateTemp@minus,??_calculateTemp
  1574  00144C  C0D8  F0DA         	movff	calculateTemp@minus+1,??_calculateTemp+1
  1575  001450  0100               	movlb	0	; () banked
  1576  001452  1FD9               	comf	??_calculateTemp& (0+255),f,b
  1577  001454  1FDA               	comf	(??_calculateTemp+1)& (0+255),f,b
  1578  001456  4BD9               	infsnz	??_calculateTemp& (0+255),f,b
  1579  001458  2BDA               	incf	(??_calculateTemp+1)& (0+255),f,b
  1580  00145A  0100               	movlb	0	; () banked
  1581  00145C  51D5               	movf	calculateTemp@plus& (0+255),w,b
  1582  00145E  0100               	movlb	0	; () banked
  1583  001460  25D9               	addwf	??_calculateTemp& (0+255),w,b
  1584  001462  0100               	movlb	0	; () banked
  1585  001464  6FDE               	movwf	calculateTemp@temp& (0+255),b
  1586  001466  0100               	movlb	0	; () banked
  1587  001468  51D6               	movf	(calculateTemp@plus+1)& (0+255),w,b
  1588  00146A  0100               	movlb	0	; () banked
  1589  00146C  21DA               	addwfc	(??_calculateTemp+1)& (0+255),w,b
  1590  00146E  0100               	movlb	0	; () banked
  1591  001470  6FDF               	movwf	(calculateTemp@temp+1)& (0+255),b
  1592                           
  1593                           ; BSR set to: 0
  1594                           ;temperature.c: 87: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1595  001472  0EE0               	movlw	224
  1596  001474  6E30               	movwf	___ftmul@f2,c
  1597  001476  0E2B               	movlw	43
  1598  001478  6E31               	movwf	___ftmul@f2+1,c
  1599  00147A  0E45               	movlw	69
  1600  00147C  6E32               	movwf	___ftmul@f2+2,c
  1601  00147E  0E00               	movlw	0
  1602  001480  6E21               	movwf	___ftdiv@f2,c
  1603  001482  0E80               	movlw	128
  1604  001484  6E22               	movwf	___ftdiv@f2+1,c
  1605  001486  0E44               	movlw	68
  1606  001488  6E23               	movwf	___ftdiv@f2+2,c
  1607  00148A  C0DE  F01A         	movff	calculateTemp@temp,___awtoft@c
  1608  00148E  C0DF  F01B         	movff	calculateTemp@temp+1,___awtoft@c+1
  1609  001492  ECB3  F00C         	call	___awtoft	;wreg free
  1610  001496  C01A  F01E         	movff	?___awtoft,___ftdiv@f1
  1611  00149A  C01B  F01F         	movff	?___awtoft+1,___ftdiv@f1+1
  1612  00149E  C01C  F020         	movff	?___awtoft+2,___ftdiv@f1+2
  1613  0014A2  ECB1  F009         	call	___ftdiv	;wreg free
  1614  0014A6  C01E  F02D         	movff	?___ftdiv,___ftmul@f1
  1615  0014AA  C01F  F02E         	movff	?___ftdiv+1,___ftmul@f1+1
  1616  0014AE  C020  F02F         	movff	?___ftdiv+2,___ftmul@f1+2
  1617  0014B2  EC37  F009         	call	___ftmul	;wreg free
  1618  0014B6  C02D  F0DB         	movff	?___ftmul,_calculateTemp$1682
  1619  0014BA  C02E  F0DC         	movff	?___ftmul+1,_calculateTemp$1682+1
  1620  0014BE  C02F  F0DD         	movff	?___ftmul+2,_calculateTemp$1682+2
  1621                           
  1622                           ;temperature.c: 87: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1623  0014C2  0E00               	movlw	0
  1624  0014C4  6E21               	movwf	___ftdiv@f2,c
  1625  0014C6  0E20               	movlw	32
  1626  0014C8  6E22               	movwf	___ftdiv@f2+1,c
  1627  0014CA  0E41               	movlw	65
  1628  0014CC  6E23               	movwf	___ftdiv@f2+2,c
  1629  0014CE  C0DB  F01E         	movff	_calculateTemp$1682,___ftdiv@f1
  1630  0014D2  C0DC  F01F         	movff	_calculateTemp$1682+1,___ftdiv@f1+1
  1631  0014D6  C0DD  F020         	movff	_calculateTemp$1682+2,___ftdiv@f1+2
  1632  0014DA  ECB1  F009         	call	___ftdiv	;wreg free
  1633  0014DE  C01E  F0C6         	movff	?___ftdiv,___fttol@f1
  1634  0014E2  C01F  F0C7         	movff	?___ftdiv+1,___fttol@f1+1
  1635  0014E6  C020  F0C8         	movff	?___ftdiv+2,___fttol@f1+2
  1636  0014EA  EC95  F008         	call	___fttol	;wreg free
  1637  0014EE  C0C6  F0DE         	movff	?___fttol,calculateTemp@temp
  1638  0014F2  C0C7  F0DF         	movff	?___fttol+1,calculateTemp@temp+1
  1639                           
  1640                           ;temperature.c: 89: return temp;
  1641  0014F6  C0DE  F0D5         	movff	calculateTemp@temp,?_calculateTemp
  1642  0014FA  C0DF  F0D6         	movff	calculateTemp@temp+1,?_calculateTemp+1
  1643  0014FE  0012               	return	
  1644  001500                     __end_of_calculateTemp:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           prodh	equ	0xFF4
  1651                           prodl	equ	0xFF3
  1652                           postinc0	equ	0xFEE
  1653                           wreg	equ	0xFE8
  1654                           indf1	equ	0xFE7
  1655                           postdec1	equ	0xFE5
  1656                           fsr1h	equ	0xFE2
  1657                           fsr1l	equ	0xFE1
  1658                           indf2	equ	0xFDF
  1659                           fsr2h	equ	0xFDA
  1660                           fsr2l	equ	0xFD9
  1661                           status	equ	0xFD8
  1662                           
  1663 ;; *************** function ___fttol *****************
  1664 ;; Defined at:
  1665 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  f1              3    0[BANK0 ] float 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  lval            4   10[BANK0 ] unsigned long 
  1670 ;;  exp1            1   14[BANK0 ] unsigned char 
  1671 ;;  sign1           1    9[BANK0 ] unsigned char 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;                  4    0[BANK0 ] long 
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1681 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1682 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1683 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1684 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1685 ;;Total ram usage:       15 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    3
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_calculateTemp
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text6
  1696  00112A                     __ptext6:
  1697                           	opt stack 0
  1698  00112A                     ___fttol:
  1699                           	opt stack 25
  1700                           
  1701                           ;incstack = 0
  1702  00112A  C0C8  F0CA         	movff	___fttol@f1+2,??___fttol
  1703  00112E  0100               	movlb	0	; () banked
  1704  001130  6BCB               	clrf	(??___fttol+1)& (0+255),b
  1705  001132  6BCC               	clrf	(??___fttol+2)& (0+255),b
  1706  001134  0100               	movlb	0	; () banked
  1707  001136  35C7               	rlcf	(___fttol@f1+1)& (0+255),w,b
  1708  001138  0100               	movlb	0	; () banked
  1709  00113A  37CA               	rlcf	??___fttol& (0+255),f,b
  1710  00113C  E301               	bnc	u1291
  1711  00113E  81CB               	bsf	(??___fttol+1)& (0+255),0,b
  1712  001140                     u1291:
  1713  001140  0100               	movlb	0	; () banked
  1714  001142  51CA               	movf	??___fttol& (0+255),w,b
  1715  001144  0100               	movlb	0	; () banked
  1716  001146  6FD4               	movwf	___fttol@exp1& (0+255),b
  1717  001148  0100               	movlb	0	; () banked
  1718  00114A  51D4               	movf	___fttol@exp1& (0+255),w,b
  1719  00114C  A4D8               	btfss	status,2,c
  1720  00114E  D00A               	goto	l1913
  1721                           
  1722                           ; BSR set to: 0
  1723  001150  0E00               	movlw	0
  1724  001152  0100               	movlb	0	; () banked
  1725  001154  6FC6               	movwf	?___fttol& (0+255),b
  1726  001156  0E00               	movlw	0
  1727  001158  6FC7               	movwf	(?___fttol+1)& (0+255),b
  1728  00115A  0E00               	movlw	0
  1729  00115C  6FC8               	movwf	(?___fttol+2)& (0+255),b
  1730  00115E  0E00               	movlw	0
  1731  001160  6FC9               	movwf	(?___fttol+3)& (0+255),b
  1732                           
  1733                           ; BSR set to: 0
  1734  001162  0012               	return	
  1735  001164                     l1913:
  1736                           
  1737                           ; BSR set to: 0
  1738  001164  0E17               	movlw	23
  1739  001166  0100               	movlb	0	; () banked
  1740  001168  6FCA               	movwf	??___fttol& (0+255),b
  1741  00116A  C0C6  F0CB         	movff	___fttol@f1,??___fttol+1
  1742  00116E  C0C7  F0CC         	movff	___fttol@f1+1,??___fttol+2
  1743  001172  C0C8  F0CD         	movff	___fttol@f1+2,??___fttol+3
  1744  001176  0100               	movlb	0	; () banked
  1745  001178  29CA               	incf	??___fttol& (0+255),w,b
  1746  00117A  0100               	movlb	0	; () banked
  1747  00117C  6FCE               	movwf	(??___fttol+4)& (0+255),b
  1748  00117E  D005               	goto	u1310
  1749  001180                     u1315:
  1750  001180  0100               	movlb	0	; () banked
  1751  001182  90D8               	bcf	status,0,c
  1752  001184  33CD               	rrcf	(??___fttol+3)& (0+255),f,b
  1753  001186  33CC               	rrcf	(??___fttol+2)& (0+255),f,b
  1754  001188  33CB               	rrcf	(??___fttol+1)& (0+255),f,b
  1755  00118A                     u1310:
  1756  00118A  0100               	movlb	0	; () banked
  1757  00118C  2FCE               	decfsz	(??___fttol+4)& (0+255),f,b
  1758  00118E  D7F8               	goto	u1315
  1759  001190  0100               	movlb	0	; () banked
  1760  001192  51CB               	movf	(??___fttol+1)& (0+255),w,b
  1761  001194  0100               	movlb	0	; () banked
  1762  001196  6FCF               	movwf	___fttol@sign1& (0+255),b
  1763                           
  1764                           ; BSR set to: 0
  1765  001198  0100               	movlb	0	; () banked
  1766  00119A  8FC7               	bsf	(___fttol@f1+1)& (0+255),7,b
  1767                           
  1768                           ; BSR set to: 0
  1769  00119C  0EFF               	movlw	255
  1770  00119E  0100               	movlb	0	; () banked
  1771  0011A0  17C6               	andwf	___fttol@f1& (0+255),f,b
  1772  0011A2  0EFF               	movlw	255
  1773  0011A4  0100               	movlb	0	; () banked
  1774  0011A6  17C7               	andwf	(___fttol@f1+1)& (0+255),f,b
  1775  0011A8  0E00               	movlw	0
  1776  0011AA  0100               	movlb	0	; () banked
  1777  0011AC  17C8               	andwf	(___fttol@f1+2)& (0+255),f,b
  1778                           
  1779                           ; BSR set to: 0
  1780  0011AE  0100               	movlb	0	; () banked
  1781  0011B0  51C6               	movf	___fttol@f1& (0+255),w,b
  1782  0011B2  0100               	movlb	0	; () banked
  1783  0011B4  6FD0               	movwf	___fttol@lval& (0+255),b
  1784  0011B6  0100               	movlb	0	; () banked
  1785  0011B8  51C7               	movf	(___fttol@f1+1)& (0+255),w,b
  1786  0011BA  0100               	movlb	0	; () banked
  1787  0011BC  6FD1               	movwf	(___fttol@lval+1)& (0+255),b
  1788  0011BE  0100               	movlb	0	; () banked
  1789  0011C0  51C8               	movf	(___fttol@f1+2)& (0+255),w,b
  1790  0011C2  0100               	movlb	0	; () banked
  1791  0011C4  6FD2               	movwf	(___fttol@lval+2)& (0+255),b
  1792  0011C6  0100               	movlb	0	; () banked
  1793  0011C8  6BD3               	clrf	(___fttol@lval+3)& (0+255),b
  1794                           
  1795                           ; BSR set to: 0
  1796  0011CA  0E8E               	movlw	142
  1797  0011CC  0100               	movlb	0	; () banked
  1798  0011CE  5FD4               	subwf	___fttol@exp1& (0+255),f,b
  1799                           
  1800                           ; BSR set to: 0
  1801  0011D0  0100               	movlb	0	; () banked
  1802  0011D2  AFD4               	btfss	___fttol@exp1& (0+255),7,b
  1803  0011D4  D01A               	goto	l1935
  1804                           
  1805                           ; BSR set to: 0
  1806  0011D6  0100               	movlb	0	; () banked
  1807  0011D8  51D4               	movf	___fttol@exp1& (0+255),w,b
  1808  0011DA  0A80               	xorlw	128
  1809  0011DC  0F8F               	addlw	143
  1810  0011DE  B0D8               	btfsc	status,0,c
  1811  0011E0  D00A               	goto	l1931
  1812                           
  1813                           ; BSR set to: 0
  1814  0011E2  0E00               	movlw	0
  1815  0011E4  0100               	movlb	0	; () banked
  1816  0011E6  6FC6               	movwf	?___fttol& (0+255),b
  1817  0011E8  0E00               	movlw	0
  1818  0011EA  6FC7               	movwf	(?___fttol+1)& (0+255),b
  1819  0011EC  0E00               	movlw	0
  1820  0011EE  6FC8               	movwf	(?___fttol+2)& (0+255),b
  1821  0011F0  0E00               	movlw	0
  1822  0011F2  6FC9               	movwf	(?___fttol+3)& (0+255),b
  1823                           
  1824                           ; BSR set to: 0
  1825  0011F4  0012               	return	
  1826  0011F6                     l1931:
  1827                           
  1828                           ; BSR set to: 0
  1829  0011F6  0100               	movlb	0	; () banked
  1830  0011F8  90D8               	bcf	status,0,c
  1831  0011FA  33D3               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1832  0011FC  33D2               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1833  0011FE  33D1               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1834  001200  33D0               	rrcf	___fttol@lval& (0+255),f,b
  1835                           
  1836                           ; BSR set to: 0
  1837  001202  0100               	movlb	0	; () banked
  1838  001204  3FD4               	incfsz	___fttol@exp1& (0+255),f,b
  1839  001206  D7F7               	goto	l1931
  1840                           
  1841                           ; BSR set to: 0
  1842  001208  D01B               	goto	l1945
  1843  00120A                     l1935:
  1844                           
  1845                           ; BSR set to: 0
  1846  00120A  0E17               	movlw	23
  1847  00120C  0100               	movlb	0	; () banked
  1848  00120E  65D4               	cpfsgt	___fttol@exp1& (0+255),b
  1849  001210  D012               	goto	l1943
  1850                           
  1851                           ; BSR set to: 0
  1852  001212  0E00               	movlw	0
  1853  001214  0100               	movlb	0	; () banked
  1854  001216  6FC6               	movwf	?___fttol& (0+255),b
  1855  001218  0E00               	movlw	0
  1856  00121A  6FC7               	movwf	(?___fttol+1)& (0+255),b
  1857  00121C  0E00               	movlw	0
  1858  00121E  6FC8               	movwf	(?___fttol+2)& (0+255),b
  1859  001220  0E00               	movlw	0
  1860  001222  6FC9               	movwf	(?___fttol+3)& (0+255),b
  1861                           
  1862                           ; BSR set to: 0
  1863  001224  0012               	return	
  1864  001226                     l1941:
  1865                           
  1866                           ; BSR set to: 0
  1867  001226  0100               	movlb	0	; () banked
  1868  001228  90D8               	bcf	status,0,c
  1869  00122A  37D0               	rlcf	___fttol@lval& (0+255),f,b
  1870  00122C  37D1               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1871  00122E  37D2               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1872  001230  37D3               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1873  001232  0100               	movlb	0	; () banked
  1874  001234  07D4               	decf	___fttol@exp1& (0+255),f,b
  1875  001236                     l1943:
  1876                           
  1877                           ; BSR set to: 0
  1878  001236  0100               	movlb	0	; () banked
  1879  001238  51D4               	movf	___fttol@exp1& (0+255),w,b
  1880  00123A  0100               	movlb	0	; () banked
  1881  00123C  A4D8               	btfss	status,2,c
  1882  00123E  D7F3               	goto	l1941
  1883  001240                     l1945:
  1884                           
  1885                           ; BSR set to: 0
  1886  001240  0100               	movlb	0	; () banked
  1887  001242  51CF               	movf	___fttol@sign1& (0+255),w,b
  1888  001244  0100               	movlb	0	; () banked
  1889  001246  B4D8               	btfsc	status,2,c
  1890  001248  D009               	goto	l1949
  1891                           
  1892                           ; BSR set to: 0
  1893  00124A  0100               	movlb	0	; () banked
  1894  00124C  1FD3               	comf	(___fttol@lval+3)& (0+255),f,b
  1895  00124E  1FD2               	comf	(___fttol@lval+2)& (0+255),f,b
  1896  001250  1FD1               	comf	(___fttol@lval+1)& (0+255),f,b
  1897  001252  6DD0               	negf	___fttol@lval& (0+255),b
  1898  001254  0E00               	movlw	0
  1899  001256  23D1               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1900  001258  23D2               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1901  00125A  23D3               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1902  00125C                     l1949:
  1903                           
  1904                           ; BSR set to: 0
  1905  00125C  C0D0  F0C6         	movff	___fttol@lval,?___fttol
  1906  001260  C0D1  F0C7         	movff	___fttol@lval+1,?___fttol+1
  1907  001264  C0D2  F0C8         	movff	___fttol@lval+2,?___fttol+2
  1908  001268  C0D3  F0C9         	movff	___fttol@lval+3,?___fttol+3
  1909  00126C  0012               	return	
  1910  00126E                     __end_of___fttol:
  1911                           	opt stack 0
  1912                           tblptru	equ	0xFF8
  1913                           tblptrh	equ	0xFF7
  1914                           tblptrl	equ	0xFF6
  1915                           tablat	equ	0xFF5
  1916                           prodh	equ	0xFF4
  1917                           prodl	equ	0xFF3
  1918                           postinc0	equ	0xFEE
  1919                           wreg	equ	0xFE8
  1920                           indf1	equ	0xFE7
  1921                           postdec1	equ	0xFE5
  1922                           fsr1h	equ	0xFE2
  1923                           fsr1l	equ	0xFE1
  1924                           indf2	equ	0xFDF
  1925                           fsr2h	equ	0xFDA
  1926                           fsr2l	equ	0xFD9
  1927                           status	equ	0xFD8
  1928                           
  1929 ;; *************** function ___ftmul *****************
  1930 ;; Defined at:
  1931 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;  f1              3   44[COMRAM] float 
  1934 ;;  f2              3   47[COMRAM] float 
  1935 ;; Auto vars:     Size  Location     Type
  1936 ;;  f3_as_produc    3   54[COMRAM] unsigned um
  1937 ;;  sign            1   58[COMRAM] unsigned char 
  1938 ;;  cntr            1   57[COMRAM] unsigned char 
  1939 ;;  exp             1   53[COMRAM] unsigned char 
  1940 ;; Return value:  Size  Location     Type
  1941 ;;                  3   44[COMRAM] float 
  1942 ;; Registers used:
  1943 ;;		wreg, status,2, status,0, cstack
  1944 ;; Tracked objects:
  1945 ;;		On entry : 0/0
  1946 ;;		On exit  : 0/0
  1947 ;;		Unchanged: 0/0
  1948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1949 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1950 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1951 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1952 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1953 ;;Total ram usage:       15 bytes
  1954 ;; Hardware stack levels used:    1
  1955 ;; Hardware stack levels required when called:    4
  1956 ;; This function calls:
  1957 ;;		___ftpack
  1958 ;; This function is called by:
  1959 ;;		_calculateTemp
  1960 ;; This function uses a non-reentrant model
  1961 ;;
  1962                           
  1963                           	psect	text7
  1964  00126E                     __ptext7:
  1965                           	opt stack 0
  1966  00126E                     ___ftmul:
  1967                           	opt stack 24
  1968                           
  1969                           ; BSR set to: 0
  1970                           ;incstack = 0
  1971  00126E  C02F  F033         	movff	___ftmul@f1+2,??___ftmul
  1972  001272  6A34               	clrf	(??___ftmul+1)& (0+255),c
  1973  001274  6A35               	clrf	(??___ftmul+2)& (0+255),c
  1974  001276  342E               	rlcf	___ftmul@f1+1,w,c
  1975  001278  3633               	rlcf	??___ftmul& (0+255),f,c
  1976  00127A  E301               	bnc	u781
  1977  00127C  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  1978  00127E                     u781:
  1979  00127E  5033               	movf	??___ftmul,w,c
  1980  001280  6E36               	movwf	___ftmul@exp,c
  1981  001282  5036               	movf	___ftmul@exp,w,c
  1982  001284  A4D8               	btfss	status,2,c
  1983  001286  D007               	goto	l1469
  1984  001288  0E00               	movlw	0
  1985  00128A  6E2D               	movwf	?___ftmul,c
  1986  00128C  0E00               	movlw	0
  1987  00128E  6E2E               	movwf	?___ftmul+1,c
  1988  001290  0E00               	movlw	0
  1989  001292  6E2F               	movwf	?___ftmul+2,c
  1990  001294  0012               	return	
  1991  001296                     l1469:
  1992  001296  C032  F033         	movff	___ftmul@f2+2,??___ftmul
  1993  00129A  6A34               	clrf	(??___ftmul+1)& (0+255),c
  1994  00129C  6A35               	clrf	(??___ftmul+2)& (0+255),c
  1995  00129E  3431               	rlcf	___ftmul@f2+1,w,c
  1996  0012A0  3633               	rlcf	??___ftmul& (0+255),f,c
  1997  0012A2  E301               	bnc	u801
  1998  0012A4  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  1999  0012A6                     u801:
  2000  0012A6  5033               	movf	??___ftmul,w,c
  2001  0012A8  6E3B               	movwf	___ftmul@sign,c
  2002  0012AA  503B               	movf	___ftmul@sign,w,c
  2003  0012AC  A4D8               	btfss	status,2,c
  2004  0012AE  D007               	goto	l1475
  2005  0012B0  0E00               	movlw	0
  2006  0012B2  6E2D               	movwf	?___ftmul,c
  2007  0012B4  0E00               	movlw	0
  2008  0012B6  6E2E               	movwf	?___ftmul+1,c
  2009  0012B8  0E00               	movlw	0
  2010  0012BA  6E2F               	movwf	?___ftmul+2,c
  2011  0012BC  0012               	return	
  2012  0012BE                     l1475:
  2013  0012BE  503B               	movf	___ftmul@sign,w,c
  2014  0012C0  0F7B               	addlw	123
  2015  0012C2  2636               	addwf	___ftmul@exp,f,c
  2016  0012C4  C02F  F03B         	movff	___ftmul@f1+2,___ftmul@sign
  2017  0012C8  5032               	movf	___ftmul@f2+2,w,c
  2018  0012CA  1A3B               	xorwf	___ftmul@sign,f,c
  2019  0012CC  0E80               	movlw	128
  2020  0012CE  163B               	andwf	___ftmul@sign,f,c
  2021  0012D0  8E2E               	bsf	___ftmul@f1+1,7,c
  2022  0012D2  8E31               	bsf	___ftmul@f2+1,7,c
  2023  0012D4  0EFF               	movlw	255
  2024  0012D6  1630               	andwf	___ftmul@f2,f,c
  2025  0012D8  0EFF               	movlw	255
  2026  0012DA  1631               	andwf	___ftmul@f2+1,f,c
  2027  0012DC  0E00               	movlw	0
  2028  0012DE  1632               	andwf	___ftmul@f2+2,f,c
  2029  0012E0  0E00               	movlw	0
  2030  0012E2  6E37               	movwf	___ftmul@f3_as_product,c
  2031  0012E4  0E00               	movlw	0
  2032  0012E6  6E38               	movwf	___ftmul@f3_as_product+1,c
  2033  0012E8  0E00               	movlw	0
  2034  0012EA  6E39               	movwf	___ftmul@f3_as_product+2,c
  2035  0012EC  0E07               	movlw	7
  2036  0012EE  6E3A               	movwf	___ftmul@cntr,c
  2037  0012F0                     l1489:
  2038  0012F0  A02D               	btfss	___ftmul@f1,0,c
  2039  0012F2  D006               	goto	l1493
  2040  0012F4  5030               	movf	___ftmul@f2,w,c
  2041  0012F6  2637               	addwf	___ftmul@f3_as_product,f,c
  2042  0012F8  5031               	movf	___ftmul@f2+1,w,c
  2043  0012FA  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  2044  0012FC  5032               	movf	___ftmul@f2+2,w,c
  2045  0012FE  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  2046  001300                     l1493:
  2047  001300  90D8               	bcf	status,0,c
  2048  001302  322F               	rrcf	___ftmul@f1+2,f,c
  2049  001304  322E               	rrcf	___ftmul@f1+1,f,c
  2050  001306  322D               	rrcf	___ftmul@f1,f,c
  2051  001308  90D8               	bcf	status,0,c
  2052  00130A  3630               	rlcf	___ftmul@f2,f,c
  2053  00130C  3631               	rlcf	___ftmul@f2+1,f,c
  2054  00130E  3632               	rlcf	___ftmul@f2+2,f,c
  2055  001310  2E3A               	decfsz	___ftmul@cntr,f,c
  2056  001312  D7EE               	goto	l1489
  2057  001314  0E09               	movlw	9
  2058  001316  6E3A               	movwf	___ftmul@cntr,c
  2059  001318                     l1499:
  2060  001318  A02D               	btfss	___ftmul@f1,0,c
  2061  00131A  D006               	goto	l1503
  2062  00131C  5030               	movf	___ftmul@f2,w,c
  2063  00131E  2637               	addwf	___ftmul@f3_as_product,f,c
  2064  001320  5031               	movf	___ftmul@f2+1,w,c
  2065  001322  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  2066  001324  5032               	movf	___ftmul@f2+2,w,c
  2067  001326  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  2068  001328                     l1503:
  2069  001328  90D8               	bcf	status,0,c
  2070  00132A  322F               	rrcf	___ftmul@f1+2,f,c
  2071  00132C  322E               	rrcf	___ftmul@f1+1,f,c
  2072  00132E  322D               	rrcf	___ftmul@f1,f,c
  2073  001330  90D8               	bcf	status,0,c
  2074  001332  3239               	rrcf	___ftmul@f3_as_product+2,f,c
  2075  001334  3238               	rrcf	___ftmul@f3_as_product+1,f,c
  2076  001336  3237               	rrcf	___ftmul@f3_as_product,f,c
  2077  001338  2E3A               	decfsz	___ftmul@cntr,f,c
  2078  00133A  D7EE               	goto	l1499
  2079  00133C  C037  F012         	movff	___ftmul@f3_as_product,___ftpack@arg
  2080  001340  C038  F013         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2081  001344  C039  F014         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2082  001348  C036  F015         	movff	___ftmul@exp,___ftpack@exp
  2083  00134C  C03B  F016         	movff	___ftmul@sign,___ftpack@sign
  2084  001350  EC80  F00A         	call	___ftpack	;wreg free
  2085  001354  C012  F02D         	movff	?___ftpack,?___ftmul
  2086  001358  C013  F02E         	movff	?___ftpack+1,?___ftmul+1
  2087  00135C  C014  F02F         	movff	?___ftpack+2,?___ftmul+2
  2088  001360  0012               	return	
  2089  001362                     __end_of___ftmul:
  2090                           	opt stack 0
  2091                           tblptru	equ	0xFF8
  2092                           tblptrh	equ	0xFF7
  2093                           tblptrl	equ	0xFF6
  2094                           tablat	equ	0xFF5
  2095                           prodh	equ	0xFF4
  2096                           prodl	equ	0xFF3
  2097                           postinc0	equ	0xFEE
  2098                           wreg	equ	0xFE8
  2099                           indf1	equ	0xFE7
  2100                           postdec1	equ	0xFE5
  2101                           fsr1h	equ	0xFE2
  2102                           fsr1l	equ	0xFE1
  2103                           indf2	equ	0xFDF
  2104                           fsr2h	equ	0xFDA
  2105                           fsr2l	equ	0xFD9
  2106                           status	equ	0xFD8
  2107                           
  2108 ;; *************** function ___ftdiv *****************
  2109 ;; Defined at:
  2110 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  2111 ;; Parameters:    Size  Location     Type
  2112 ;;  f1              3   29[COMRAM] float 
  2113 ;;  f2              3   32[COMRAM] float 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  f3              3   39[COMRAM] float 
  2116 ;;  sign            1   43[COMRAM] unsigned char 
  2117 ;;  exp             1   42[COMRAM] unsigned char 
  2118 ;;  cntr            1   38[COMRAM] unsigned char 
  2119 ;; Return value:  Size  Location     Type
  2120 ;;                  3   29[COMRAM] float 
  2121 ;; Registers used:
  2122 ;;		wreg, status,2, status,0, cstack
  2123 ;; Tracked objects:
  2124 ;;		On entry : 0/0
  2125 ;;		On exit  : 0/0
  2126 ;;		Unchanged: 0/0
  2127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2128 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2129 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2130 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2131 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2132 ;;Total ram usage:       15 bytes
  2133 ;; Hardware stack levels used:    1
  2134 ;; Hardware stack levels required when called:    4
  2135 ;; This function calls:
  2136 ;;		___ftpack
  2137 ;; This function is called by:
  2138 ;;		_calculateTemp
  2139 ;; This function uses a non-reentrant model
  2140 ;;
  2141                           
  2142                           	psect	text8
  2143  001362                     __ptext8:
  2144                           	opt stack 0
  2145  001362                     ___ftdiv:
  2146                           	opt stack 24
  2147                           
  2148                           ;incstack = 0
  2149  001362  C020  F024         	movff	___ftdiv@f1+2,??___ftdiv
  2150  001366  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  2151  001368  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  2152  00136A  341F               	rlcf	___ftdiv@f1+1,w,c
  2153  00136C  3624               	rlcf	??___ftdiv& (0+255),f,c
  2154  00136E  E301               	bnc	u731
  2155  001370  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  2156  001372                     u731:
  2157  001372  5024               	movf	??___ftdiv,w,c
  2158  001374  6E2B               	movwf	___ftdiv@exp,c
  2159  001376  502B               	movf	___ftdiv@exp,w,c
  2160  001378  A4D8               	btfss	status,2,c
  2161  00137A  D007               	goto	l1423
  2162  00137C  0E00               	movlw	0
  2163  00137E  6E1E               	movwf	?___ftdiv,c
  2164  001380  0E00               	movlw	0
  2165  001382  6E1F               	movwf	?___ftdiv+1,c
  2166  001384  0E00               	movlw	0
  2167  001386  6E20               	movwf	?___ftdiv+2,c
  2168  001388  0012               	return	
  2169  00138A                     l1423:
  2170  00138A  C023  F024         	movff	___ftdiv@f2+2,??___ftdiv
  2171  00138E  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  2172  001390  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  2173  001392  3422               	rlcf	___ftdiv@f2+1,w,c
  2174  001394  3624               	rlcf	??___ftdiv& (0+255),f,c
  2175  001396  E301               	bnc	u751
  2176  001398  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  2177  00139A                     u751:
  2178  00139A  5024               	movf	??___ftdiv,w,c
  2179  00139C  6E2C               	movwf	___ftdiv@sign,c
  2180  00139E  502C               	movf	___ftdiv@sign,w,c
  2181  0013A0  A4D8               	btfss	status,2,c
  2182  0013A2  D007               	goto	l1429
  2183  0013A4  0E00               	movlw	0
  2184  0013A6  6E1E               	movwf	?___ftdiv,c
  2185  0013A8  0E00               	movlw	0
  2186  0013AA  6E1F               	movwf	?___ftdiv+1,c
  2187  0013AC  0E00               	movlw	0
  2188  0013AE  6E20               	movwf	?___ftdiv+2,c
  2189  0013B0  0012               	return	
  2190  0013B2                     l1429:
  2191  0013B2  0E00               	movlw	0
  2192  0013B4  6E28               	movwf	___ftdiv@f3,c
  2193  0013B6  0E00               	movlw	0
  2194  0013B8  6E29               	movwf	___ftdiv@f3+1,c
  2195  0013BA  0E00               	movlw	0
  2196  0013BC  6E2A               	movwf	___ftdiv@f3+2,c
  2197  0013BE  502C               	movf	___ftdiv@sign,w,c
  2198  0013C0  0F89               	addlw	137
  2199  0013C2  5E2B               	subwf	___ftdiv@exp,f,c
  2200  0013C4  C020  F02C         	movff	___ftdiv@f1+2,___ftdiv@sign
  2201  0013C8  5023               	movf	___ftdiv@f2+2,w,c
  2202  0013CA  1A2C               	xorwf	___ftdiv@sign,f,c
  2203  0013CC  0E80               	movlw	128
  2204  0013CE  162C               	andwf	___ftdiv@sign,f,c
  2205  0013D0  8E1F               	bsf	___ftdiv@f1+1,7,c
  2206  0013D2  0EFF               	movlw	255
  2207  0013D4  161E               	andwf	___ftdiv@f1,f,c
  2208  0013D6  0EFF               	movlw	255
  2209  0013D8  161F               	andwf	___ftdiv@f1+1,f,c
  2210  0013DA  0E00               	movlw	0
  2211  0013DC  1620               	andwf	___ftdiv@f1+2,f,c
  2212  0013DE  8E22               	bsf	___ftdiv@f2+1,7,c
  2213  0013E0  0EFF               	movlw	255
  2214  0013E2  1621               	andwf	___ftdiv@f2,f,c
  2215  0013E4  0EFF               	movlw	255
  2216  0013E6  1622               	andwf	___ftdiv@f2+1,f,c
  2217  0013E8  0E00               	movlw	0
  2218  0013EA  1623               	andwf	___ftdiv@f2+2,f,c
  2219  0013EC  0E18               	movlw	24
  2220  0013EE  6E27               	movwf	___ftdiv@cntr,c
  2221  0013F0                     l1449:
  2222  0013F0  90D8               	bcf	status,0,c
  2223  0013F2  3628               	rlcf	___ftdiv@f3,f,c
  2224  0013F4  3629               	rlcf	___ftdiv@f3+1,f,c
  2225  0013F6  362A               	rlcf	___ftdiv@f3+2,f,c
  2226  0013F8  5021               	movf	___ftdiv@f2,w,c
  2227  0013FA  5C1E               	subwf	___ftdiv@f1,w,c
  2228  0013FC  5022               	movf	___ftdiv@f2+1,w,c
  2229  0013FE  581F               	subwfb	___ftdiv@f1+1,w,c
  2230  001400  5023               	movf	___ftdiv@f2+2,w,c
  2231  001402  5820               	subwfb	___ftdiv@f1+2,w,c
  2232  001404  A0D8               	btfss	status,0,c
  2233  001406  D007               	goto	l524
  2234  001408  5021               	movf	___ftdiv@f2,w,c
  2235  00140A  5E1E               	subwf	___ftdiv@f1,f,c
  2236  00140C  5022               	movf	___ftdiv@f2+1,w,c
  2237  00140E  5A1F               	subwfb	___ftdiv@f1+1,f,c
  2238  001410  5023               	movf	___ftdiv@f2+2,w,c
  2239  001412  5A20               	subwfb	___ftdiv@f1+2,f,c
  2240  001414  8028               	bsf	___ftdiv@f3,0,c
  2241  001416                     l524:
  2242  001416  90D8               	bcf	status,0,c
  2243  001418  361E               	rlcf	___ftdiv@f1,f,c
  2244  00141A  361F               	rlcf	___ftdiv@f1+1,f,c
  2245  00141C  3620               	rlcf	___ftdiv@f1+2,f,c
  2246  00141E  2E27               	decfsz	___ftdiv@cntr,f,c
  2247  001420  D7E7               	goto	l1449
  2248  001422  C028  F012         	movff	___ftdiv@f3,___ftpack@arg
  2249  001426  C029  F013         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2250  00142A  C02A  F014         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2251  00142E  C02B  F015         	movff	___ftdiv@exp,___ftpack@exp
  2252  001432  C02C  F016         	movff	___ftdiv@sign,___ftpack@sign
  2253  001436  EC80  F00A         	call	___ftpack	;wreg free
  2254  00143A  C012  F01E         	movff	?___ftpack,?___ftdiv
  2255  00143E  C013  F01F         	movff	?___ftpack+1,?___ftdiv+1
  2256  001442  C014  F020         	movff	?___ftpack+2,?___ftdiv+2
  2257  001446  0012               	return	
  2258  001448                     __end_of___ftdiv:
  2259                           	opt stack 0
  2260                           tblptru	equ	0xFF8
  2261                           tblptrh	equ	0xFF7
  2262                           tblptrl	equ	0xFF6
  2263                           tablat	equ	0xFF5
  2264                           prodh	equ	0xFF4
  2265                           prodl	equ	0xFF3
  2266                           postinc0	equ	0xFEE
  2267                           wreg	equ	0xFE8
  2268                           indf1	equ	0xFE7
  2269                           postdec1	equ	0xFE5
  2270                           fsr1h	equ	0xFE2
  2271                           fsr1l	equ	0xFE1
  2272                           indf2	equ	0xFDF
  2273                           fsr2h	equ	0xFDA
  2274                           fsr2l	equ	0xFD9
  2275                           status	equ	0xFD8
  2276                           
  2277 ;; *************** function ___awtoft *****************
  2278 ;; Defined at:
  2279 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  2280 ;; Parameters:    Size  Location     Type
  2281 ;;  c               2   25[COMRAM] int 
  2282 ;; Auto vars:     Size  Location     Type
  2283 ;;  sign            1   28[COMRAM] unsigned char 
  2284 ;; Return value:  Size  Location     Type
  2285 ;;                  3   25[COMRAM] float 
  2286 ;; Registers used:
  2287 ;;		wreg, status,2, status,0, cstack
  2288 ;; Tracked objects:
  2289 ;;		On entry : 0/0
  2290 ;;		On exit  : 0/0
  2291 ;;		Unchanged: 0/0
  2292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2293 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2296 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2297 ;;Total ram usage:        4 bytes
  2298 ;; Hardware stack levels used:    1
  2299 ;; Hardware stack levels required when called:    4
  2300 ;; This function calls:
  2301 ;;		___ftpack
  2302 ;; This function is called by:
  2303 ;;		_calculateTemp
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text9
  2308  001966                     __ptext9:
  2309                           	opt stack 0
  2310  001966                     ___awtoft:
  2311                           	opt stack 24
  2312                           
  2313                           ;incstack = 0
  2314  001966  0E00               	movlw	0
  2315  001968  6E1D               	movwf	___awtoft@sign,c
  2316  00196A  AE1B               	btfss	___awtoft@c+1,7,c
  2317  00196C  D006               	goto	l1599
  2318  00196E  6C1A               	negf	___awtoft@c,c
  2319  001970  1E1B               	comf	___awtoft@c+1,f,c
  2320  001972  B0D8               	btfsc	status,0,c
  2321  001974  2A1B               	incf	___awtoft@c+1,f,c
  2322  001976  0E01               	movlw	1
  2323  001978  6E1D               	movwf	___awtoft@sign,c
  2324  00197A                     l1599:
  2325  00197A  C01A  F012         	movff	___awtoft@c,___ftpack@arg
  2326  00197E  C01B  F013         	movff	___awtoft@c+1,___ftpack@arg+1
  2327  001982  6A14               	clrf	___ftpack@arg+2,c
  2328  001984  0E8E               	movlw	142
  2329  001986  6E15               	movwf	___ftpack@exp,c
  2330  001988  C01D  F016         	movff	___awtoft@sign,___ftpack@sign
  2331  00198C  EC80  F00A         	call	___ftpack	;wreg free
  2332  001990  C012  F01A         	movff	?___ftpack,?___awtoft
  2333  001994  C013  F01B         	movff	?___ftpack+1,?___awtoft+1
  2334  001998  C014  F01C         	movff	?___ftpack+2,?___awtoft+2
  2335  00199C  0012               	return	
  2336  00199E                     __end_of___awtoft:
  2337                           	opt stack 0
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           prodh	equ	0xFF4
  2343                           prodl	equ	0xFF3
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           indf1	equ	0xFE7
  2347                           postdec1	equ	0xFE5
  2348                           fsr1h	equ	0xFE2
  2349                           fsr1l	equ	0xFE1
  2350                           indf2	equ	0xFDF
  2351                           fsr2h	equ	0xFDA
  2352                           fsr2l	equ	0xFD9
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function ___ftpack *****************
  2356 ;; Defined at:
  2357 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  arg             3   17[COMRAM] unsigned um
  2360 ;;  exp             1   20[COMRAM] unsigned char 
  2361 ;;  sign            1   21[COMRAM] unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;		None
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  3   17[COMRAM] float 
  2366 ;; Registers used:
  2367 ;;		wreg, status,2, status,0
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2373 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2375 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;Total ram usage:        8 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    3
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		___awtoft
  2384 ;;		___ftdiv
  2385 ;;		___ftmul
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text10
  2390  001500                     __ptext10:
  2391                           	opt stack 0
  2392  001500                     ___ftpack:
  2393                           	opt stack 24
  2394                           
  2395                           ;incstack = 0
  2396  001500  5015               	movf	___ftpack@exp,w,c
  2397  001502  B4D8               	btfsc	status,2,c
  2398  001504  D005               	goto	l1385
  2399  001506  5012               	movf	___ftpack@arg,w,c
  2400  001508  1013               	iorwf	___ftpack@arg+1,w,c
  2401  00150A  1014               	iorwf	___ftpack@arg+2,w,c
  2402  00150C  A4D8               	btfss	status,2,c
  2403  00150E  D00C               	goto	l1391
  2404  001510                     l1385:
  2405  001510  0E00               	movlw	0
  2406  001512  6E12               	movwf	?___ftpack,c
  2407  001514  0E00               	movlw	0
  2408  001516  6E13               	movwf	?___ftpack+1,c
  2409  001518  0E00               	movlw	0
  2410  00151A  6E14               	movwf	?___ftpack+2,c
  2411  00151C  0012               	return	
  2412  00151E                     l1389:
  2413  00151E  2A15               	incf	___ftpack@exp,f,c
  2414  001520  90D8               	bcf	status,0,c
  2415  001522  3214               	rrcf	___ftpack@arg+2,f,c
  2416  001524  3213               	rrcf	___ftpack@arg+1,f,c
  2417  001526  3212               	rrcf	___ftpack@arg,f,c
  2418  001528                     l1391:
  2419  001528  0E00               	movlw	0
  2420  00152A  1412               	andwf	___ftpack@arg,w,c
  2421  00152C  6E17               	movwf	??___ftpack& (0+255),c
  2422  00152E  0E00               	movlw	0
  2423  001530  1413               	andwf	___ftpack@arg+1,w,c
  2424  001532  6E18               	movwf	(??___ftpack+1)& (0+255),c
  2425  001534  0EFE               	movlw	254
  2426  001536  1414               	andwf	___ftpack@arg+2,w,c
  2427  001538  6E19               	movwf	(??___ftpack+2)& (0+255),c
  2428  00153A  5017               	movf	??___ftpack,w,c
  2429  00153C  1018               	iorwf	??___ftpack+1,w,c
  2430  00153E  1019               	iorwf	??___ftpack+2,w,c
  2431  001540  B4D8               	btfsc	status,2,c
  2432  001542  D00C               	goto	l1397
  2433  001544  D7EC               	goto	l1389
  2434  001546                     l1393:
  2435  001546  2A15               	incf	___ftpack@exp,f,c
  2436  001548  0E01               	movlw	1
  2437  00154A  2612               	addwf	___ftpack@arg,f,c
  2438  00154C  0E00               	movlw	0
  2439  00154E  2213               	addwfc	___ftpack@arg+1,f,c
  2440  001550  0E00               	movlw	0
  2441  001552  2214               	addwfc	___ftpack@arg+2,f,c
  2442  001554  90D8               	bcf	status,0,c
  2443  001556  3214               	rrcf	___ftpack@arg+2,f,c
  2444  001558  3213               	rrcf	___ftpack@arg+1,f,c
  2445  00155A  3212               	rrcf	___ftpack@arg,f,c
  2446  00155C                     l1397:
  2447  00155C  0E00               	movlw	0
  2448  00155E  1412               	andwf	___ftpack@arg,w,c
  2449  001560  6E17               	movwf	??___ftpack& (0+255),c
  2450  001562  0E00               	movlw	0
  2451  001564  1413               	andwf	___ftpack@arg+1,w,c
  2452  001566  6E18               	movwf	(??___ftpack+1)& (0+255),c
  2453  001568  0EFF               	movlw	255
  2454  00156A  1414               	andwf	___ftpack@arg+2,w,c
  2455  00156C  6E19               	movwf	(??___ftpack+2)& (0+255),c
  2456  00156E  5017               	movf	??___ftpack,w,c
  2457  001570  1018               	iorwf	??___ftpack+1,w,c
  2458  001572  1019               	iorwf	??___ftpack+2,w,c
  2459  001574  B4D8               	btfsc	status,2,c
  2460  001576  D006               	goto	l1401
  2461  001578  D7E6               	goto	l1393
  2462  00157A                     l1399:
  2463  00157A  0615               	decf	___ftpack@exp,f,c
  2464  00157C  90D8               	bcf	status,0,c
  2465  00157E  3612               	rlcf	___ftpack@arg,f,c
  2466  001580  3613               	rlcf	___ftpack@arg+1,f,c
  2467  001582  3614               	rlcf	___ftpack@arg+2,f,c
  2468  001584                     l1401:
  2469  001584  BE13               	btfsc	___ftpack@arg+1,7,c
  2470  001586  D003               	goto	l466
  2471  001588  0E02               	movlw	2
  2472  00158A  6015               	cpfslt	___ftpack@exp,c
  2473  00158C  D7F6               	goto	l1399
  2474  00158E                     l466:
  2475  00158E  A015               	btfss	___ftpack@exp,0,c
  2476  001590  9E13               	bcf	___ftpack@arg+1,7,c
  2477  001592  90D8               	bcf	status,0,c
  2478  001594  3215               	rrcf	___ftpack@exp,f,c
  2479  001596  5015               	movf	___ftpack@exp,w,c
  2480  001598  1214               	iorwf	___ftpack@arg+2,f,c
  2481  00159A  5016               	movf	___ftpack@sign,w,c
  2482  00159C  A4D8               	btfss	status,2,c
  2483  00159E  8E14               	bsf	___ftpack@arg+2,7,c
  2484  0015A0  C012  F012         	movff	___ftpack@arg,?___ftpack
  2485  0015A4  C013  F013         	movff	___ftpack@arg+1,?___ftpack+1
  2486  0015A8  C014  F014         	movff	___ftpack@arg+2,?___ftpack+2
  2487  0015AC  0012               	return	
  2488  0015AE                     __end_of___ftpack:
  2489                           	opt stack 0
  2490                           tblptru	equ	0xFF8
  2491                           tblptrh	equ	0xFF7
  2492                           tblptrl	equ	0xFF6
  2493                           tablat	equ	0xFF5
  2494                           prodh	equ	0xFF4
  2495                           prodl	equ	0xFF3
  2496                           postinc0	equ	0xFEE
  2497                           wreg	equ	0xFE8
  2498                           indf1	equ	0xFE7
  2499                           postdec1	equ	0xFE5
  2500                           fsr1h	equ	0xFE2
  2501                           fsr1l	equ	0xFE1
  2502                           indf2	equ	0xFDF
  2503                           fsr2h	equ	0xFDA
  2504                           fsr2l	equ	0xFD9
  2505                           status	equ	0xFD8
  2506                           
  2507 ;; *************** function _initUART1 *****************
  2508 ;; Defined at:
  2509 ;;		line 19 in file "uart.c"
  2510 ;; Parameters:    Size  Location     Type
  2511 ;;		None
  2512 ;; Auto vars:     Size  Location     Type
  2513 ;;		None
  2514 ;; Return value:  Size  Location     Type
  2515 ;;                  1    wreg      void 
  2516 ;; Registers used:
  2517 ;;		wreg, status,2
  2518 ;; Tracked objects:
  2519 ;;		On entry : 0/0
  2520 ;;		On exit  : 0/0
  2521 ;;		Unchanged: 0/0
  2522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2523 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2526 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2527 ;;Total ram usage:        0 bytes
  2528 ;; Hardware stack levels used:    1
  2529 ;; Hardware stack levels required when called:    3
  2530 ;; This function calls:
  2531 ;;		Nothing
  2532 ;; This function is called by:
  2533 ;;		_main
  2534 ;; This function uses a non-reentrant model
  2535 ;;
  2536                           
  2537                           	psect	text11
  2538  001A6E                     __ptext11:
  2539                           	opt stack 0
  2540  001A6E                     _initUART1:
  2541                           	opt stack 27
  2542                           
  2543                           ;uart.c: 22: TRISCbits.TRISC7 = 1;
  2544                           
  2545                           ;incstack = 0
  2546  001A6E  8E94               	bsf	3988,7,c	;volatile
  2547                           
  2548                           ;uart.c: 23: TRISCbits.TRISC6 = 0;
  2549  001A70  9C94               	bcf	3988,6,c	;volatile
  2550                           
  2551                           ;uart.c: 25: TXSTA1bits.BRGH = 1;
  2552  001A72  84AD               	bsf	4013,2,c	;volatile
  2553                           
  2554                           ;uart.c: 26: BAUDCON1bits.BRG16 = 1;
  2555  001A74  867E               	bsf	3966,3,c	;volatile
  2556                           
  2557                           ;uart.c: 33: SPBRGH1 = 0;
  2558  001A76  0E00               	movlw	0
  2559  001A78  6E7F               	movwf	3967,c	;volatile
  2560                           
  2561                           ;uart.c: 34: SPBRG1 = 34;
  2562  001A7A  0E22               	movlw	34
  2563  001A7C  6EB0               	movwf	4016,c	;volatile
  2564                           
  2565                           ;uart.c: 38: TXSTA1bits.SYNC = 0;
  2566  001A7E  98AD               	bcf	4013,4,c	;volatile
  2567                           
  2568                           ;uart.c: 39: RCSTA1bits.SPEN = 1;
  2569  001A80  8EAC               	bsf	4012,7,c	;volatile
  2570                           
  2571                           ;uart.c: 43: PIE1bits.TXIE = 1;
  2572  001A82  889D               	bsf	3997,4,c	;volatile
  2573                           
  2574                           ;uart.c: 44: PIE1bits.RC1IE = 1;
  2575  001A84  8A9D               	bsf	3997,5,c	;volatile
  2576                           
  2577                           ;uart.c: 49: RCSTA1bits.CREN = 1;
  2578  001A86  88AC               	bsf	4012,4,c	;volatile
  2579  001A88  0012               	return		;funcret
  2580  001A8A                     __end_of_initUART1:
  2581                           	opt stack 0
  2582                           tblptru	equ	0xFF8
  2583                           tblptrh	equ	0xFF7
  2584                           tblptrl	equ	0xFF6
  2585                           tablat	equ	0xFF5
  2586                           prodh	equ	0xFF4
  2587                           prodl	equ	0xFF3
  2588                           postinc0	equ	0xFEE
  2589                           wreg	equ	0xFE8
  2590                           indf1	equ	0xFE7
  2591                           postdec1	equ	0xFE5
  2592                           fsr1h	equ	0xFE2
  2593                           fsr1l	equ	0xFE1
  2594                           indf2	equ	0xFDF
  2595                           fsr2h	equ	0xFDA
  2596                           fsr2l	equ	0xFD9
  2597                           status	equ	0xFD8
  2598                           
  2599 ;; *************** function _initLoRa *****************
  2600 ;; Defined at:
  2601 ;;		line 21 in file "lora.c"
  2602 ;; Parameters:    Size  Location     Type
  2603 ;;		None
  2604 ;; Auto vars:     Size  Location     Type
  2605 ;;		None
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  1    wreg      void 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0, cstack
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2615 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2616 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2618 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2619 ;;Total ram usage:        0 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; Hardware stack levels required when called:    4
  2622 ;; This function calls:
  2623 ;;		_delay_ms
  2624 ;;		_sendUARTMessage
  2625 ;; This function is called by:
  2626 ;;		_main
  2627 ;; This function uses a non-reentrant model
  2628 ;;
  2629                           
  2630                           	psect	text12
  2631  001860                     __ptext12:
  2632                           	opt stack 0
  2633  001860                     _initLoRa:
  2634                           	opt stack 26
  2635                           
  2636                           ;lora.c: 22: sendUARTMessage(set_dev_eui);
  2637                           
  2638                           ;incstack = 0
  2639  001860  0E80               	movlw	low _set_dev_eui
  2640  001862  6E12               	movwf	sendUARTMessage@newMessagePointer,c
  2641  001864  0E0F               	movlw	high _set_dev_eui
  2642  001866  6E13               	movwf	sendUARTMessage@newMessagePointer+1,c
  2643  001868  EC52  F00D         	call	_sendUARTMessage	;wreg free
  2644                           
  2645                           ;lora.c: 23: delay_ms(800);
  2646  00186C  0E03               	movlw	3
  2647  00186E  6E13               	movwf	delay_ms@ms+1,c
  2648  001870  0E20               	movlw	32
  2649  001872  6E12               	movwf	delay_ms@ms,c
  2650  001874  EC07  F00D         	call	_delay_ms	;wreg free
  2651                           
  2652                           ;lora.c: 24: sendUARTMessage(set_app_eui);
  2653  001878  0E5E               	movlw	low _set_app_eui
  2654  00187A  6E12               	movwf	sendUARTMessage@newMessagePointer,c
  2655  00187C  0E0F               	movlw	high _set_app_eui
  2656  00187E  6E13               	movwf	sendUARTMessage@newMessagePointer+1,c
  2657  001880  EC52  F00D         	call	_sendUARTMessage	;wreg free
  2658                           
  2659                           ;lora.c: 25: delay_ms(800);
  2660  001884  0E03               	movlw	3
  2661  001886  6E13               	movwf	delay_ms@ms+1,c
  2662  001888  0E20               	movlw	32
  2663  00188A  6E12               	movwf	delay_ms@ms,c
  2664  00188C  EC07  F00D         	call	_delay_ms	;wreg free
  2665                           
  2666                           ;lora.c: 26: sendUARTMessage(set_app_key);
  2667  001890  0E2C               	movlw	low _set_app_key
  2668  001892  6E12               	movwf	sendUARTMessage@newMessagePointer,c
  2669  001894  0E0F               	movlw	high _set_app_key
  2670  001896  6E13               	movwf	sendUARTMessage@newMessagePointer+1,c
  2671  001898  EC52  F00D         	call	_sendUARTMessage	;wreg free
  2672                           
  2673                           ;lora.c: 27: delay_ms(800);
  2674  00189C  0E03               	movlw	3
  2675  00189E  6E13               	movwf	delay_ms@ms+1,c
  2676  0018A0  0E20               	movlw	32
  2677  0018A2  6E12               	movwf	delay_ms@ms,c
  2678  0018A4  EC07  F00D         	call	_delay_ms	;wreg free
  2679                           
  2680                           ;lora.c: 28: sendUARTMessage(join_network);
  2681  0018A8  0EA2               	movlw	low _join_network
  2682  0018AA  6E12               	movwf	sendUARTMessage@newMessagePointer,c
  2683  0018AC  0E0F               	movlw	high _join_network
  2684  0018AE  6E13               	movwf	sendUARTMessage@newMessagePointer+1,c
  2685  0018B0  EC52  F00D         	call	_sendUARTMessage	;wreg free
  2686                           
  2687                           ;lora.c: 29: delay_ms(800);
  2688  0018B4  0E03               	movlw	3
  2689  0018B6  6E13               	movwf	delay_ms@ms+1,c
  2690  0018B8  0E20               	movlw	32
  2691  0018BA  6E12               	movwf	delay_ms@ms,c
  2692  0018BC  EC07  F00D         	call	_delay_ms	;wreg free
  2693  0018C0  0012               	return		;funcret
  2694  0018C2                     __end_of_initLoRa:
  2695                           	opt stack 0
  2696                           tblptru	equ	0xFF8
  2697                           tblptrh	equ	0xFF7
  2698                           tblptrl	equ	0xFF6
  2699                           tablat	equ	0xFF5
  2700                           prodh	equ	0xFF4
  2701                           prodl	equ	0xFF3
  2702                           postinc0	equ	0xFEE
  2703                           wreg	equ	0xFE8
  2704                           indf1	equ	0xFE7
  2705                           postdec1	equ	0xFE5
  2706                           fsr1h	equ	0xFE2
  2707                           fsr1l	equ	0xFE1
  2708                           indf2	equ	0xFDF
  2709                           fsr2h	equ	0xFDA
  2710                           fsr2l	equ	0xFD9
  2711                           status	equ	0xFD8
  2712                           
  2713 ;; *************** function _sendUARTMessage *****************
  2714 ;; Defined at:
  2715 ;;		line 59 in file "uart.c"
  2716 ;; Parameters:    Size  Location     Type
  2717 ;;  newMessagePo    2   17[COMRAM] PTR unsigned char 
  2718 ;;		 -> join_network(16), set_app_key(50), set_app_eui(34), set_dev_eui(34), 
  2719 ;;		 -> temp_display_message(20), 
  2720 ;; Auto vars:     Size  Location     Type
  2721 ;;		None
  2722 ;; Return value:  Size  Location     Type
  2723 ;;                  1    wreg      void 
  2724 ;; Registers used:
  2725 ;;		wreg, status,2, status,0
  2726 ;; Tracked objects:
  2727 ;;		On entry : 0/0
  2728 ;;		On exit  : 0/0
  2729 ;;		Unchanged: 0/0
  2730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2731 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2732 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2733 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2734 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2735 ;;Total ram usage:        2 bytes
  2736 ;; Hardware stack levels used:    1
  2737 ;; Hardware stack levels required when called:    3
  2738 ;; This function calls:
  2739 ;;		Nothing
  2740 ;; This function is called by:
  2741 ;;		_main
  2742 ;;		_initLoRa
  2743 ;; This function uses a non-reentrant model
  2744 ;;
  2745                           
  2746                           	psect	text13
  2747  001AA4                     __ptext13:
  2748                           	opt stack 0
  2749  001AA4                     _sendUARTMessage:
  2750                           	opt stack 27
  2751                           
  2752                           ;uart.c: 61: if(isCommandSent == 1){
  2753                           
  2754                           ;incstack = 0
  2755  001AA4  044D               	decf	_isCommandSent,w,c
  2756  001AA6  A4D8               	btfss	status,2,c
  2757  001AA8  0012               	return	
  2758                           
  2759                           ;uart.c: 63: currentMessagePointer = newMessagePointer;
  2760  001AAA  C012  F03D         	movff	sendUARTMessage@newMessagePointer,_currentMessagePointer
  2761  001AAE  C013  F03E         	movff	sendUARTMessage@newMessagePointer+1,_currentMessagePointer+1
  2762                           
  2763                           ;uart.c: 68: PIE1bits.TXIE = 1;
  2764  001AB2  889D               	bsf	3997,4,c	;volatile
  2765                           
  2766                           ;uart.c: 69: TXSTA1bits.TXEN = 1;
  2767  001AB4  8AAD               	bsf	4013,5,c	;volatile
  2768  001AB6  0012               	return	
  2769  001AB8                     __end_of_sendUARTMessage:
  2770                           	opt stack 0
  2771                           tblptru	equ	0xFF8
  2772                           tblptrh	equ	0xFF7
  2773                           tblptrl	equ	0xFF6
  2774                           tablat	equ	0xFF5
  2775                           prodh	equ	0xFF4
  2776                           prodl	equ	0xFF3
  2777                           postinc0	equ	0xFEE
  2778                           wreg	equ	0xFE8
  2779                           indf1	equ	0xFE7
  2780                           postdec1	equ	0xFE5
  2781                           fsr1h	equ	0xFE2
  2782                           fsr1l	equ	0xFE1
  2783                           indf2	equ	0xFDF
  2784                           fsr2h	equ	0xFDA
  2785                           fsr2l	equ	0xFD9
  2786                           status	equ	0xFD8
  2787                           
  2788 ;; *************** function _delay_ms *****************
  2789 ;; Defined at:
  2790 ;;		line 11 in file "delay.c"
  2791 ;; Parameters:    Size  Location     Type
  2792 ;;  ms              2   17[COMRAM] int 
  2793 ;; Auto vars:     Size  Location     Type
  2794 ;;  i               2   20[COMRAM] int 
  2795 ;; Return value:  Size  Location     Type
  2796 ;;                  1    wreg      void 
  2797 ;; Registers used:
  2798 ;;		wreg, status,2, status,0
  2799 ;; Tracked objects:
  2800 ;;		On entry : 0/0
  2801 ;;		On exit  : 0/0
  2802 ;;		Unchanged: 0/0
  2803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2804 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2805 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2806 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2807 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2808 ;;Total ram usage:        5 bytes
  2809 ;; Hardware stack levels used:    1
  2810 ;; Hardware stack levels required when called:    3
  2811 ;; This function calls:
  2812 ;;		Nothing
  2813 ;; This function is called by:
  2814 ;;		_main
  2815 ;;		_initLoRa
  2816 ;; This function uses a non-reentrant model
  2817 ;;
  2818                           
  2819                           	psect	text14
  2820  001A0E                     __ptext14:
  2821                           	opt stack 0
  2822  001A0E                     _delay_ms:
  2823                           	opt stack 26
  2824                           
  2825                           ;delay.c: 12: for(int i = 0; i<ms; i++){
  2826                           
  2827                           ;incstack = 0
  2828  001A0E  0E00               	movlw	0
  2829  001A10  6E16               	movwf	delay_ms@i+1,c
  2830  001A12  0E00               	movlw	0
  2831  001A14  6E15               	movwf	delay_ms@i,c
  2832  001A16  D009               	goto	l238
  2833  001A18                     l1651:
  2834                           
  2835                           ;delay.c: 13: _delay((unsigned long)((1)*(8000000/4000.0)));
  2836  001A18  0E03               	movlw	3
  2837  001A1A  6E14               	movwf	??_delay_ms& (0+255),c
  2838  001A1C  0E98               	movlw	152
  2839  001A1E                     u1387:
  2840  001A1E  2EE8               	decfsz	wreg,f,c
  2841  001A20  D7FE               	goto	u1387
  2842  001A22  2E14               	decfsz	??_delay_ms& (0+255),f,c
  2843  001A24  D7FC               	goto	u1387
  2844  001A26  4A15               	infsnz	delay_ms@i,f,c
  2845  001A28  2A16               	incf	delay_ms@i+1,f,c
  2846  001A2A                     l238:
  2847  001A2A  5012               	movf	delay_ms@ms,w,c
  2848  001A2C  5C15               	subwf	delay_ms@i,w,c
  2849  001A2E  5016               	movf	delay_ms@i+1,w,c
  2850  001A30  0A80               	xorlw	128
  2851  001A32  6E14               	movwf	??_delay_ms& (0+255),c
  2852  001A34  5013               	movf	delay_ms@ms+1,w,c
  2853  001A36  0A80               	xorlw	128
  2854  001A38  5814               	subwfb	??_delay_ms& (0+255),w,c
  2855  001A3A  B0D8               	btfsc	status,0,c
  2856  001A3C  0012               	return	
  2857  001A3E  D7EC               	goto	l1651
  2858  001A40                     __end_of_delay_ms:
  2859                           	opt stack 0
  2860                           tblptru	equ	0xFF8
  2861                           tblptrh	equ	0xFF7
  2862                           tblptrl	equ	0xFF6
  2863                           tablat	equ	0xFF5
  2864                           prodh	equ	0xFF4
  2865                           prodl	equ	0xFF3
  2866                           postinc0	equ	0xFEE
  2867                           wreg	equ	0xFE8
  2868                           indf1	equ	0xFE7
  2869                           postdec1	equ	0xFE5
  2870                           fsr1h	equ	0xFE2
  2871                           fsr1l	equ	0xFE1
  2872                           indf2	equ	0xFDF
  2873                           fsr2h	equ	0xFDA
  2874                           fsr2l	equ	0xFD9
  2875                           status	equ	0xFD8
  2876                           
  2877 ;; *************** function _initInterrupts *****************
  2878 ;; Defined at:
  2879 ;;		line 31 in file "main.c"
  2880 ;; Parameters:    Size  Location     Type
  2881 ;;		None
  2882 ;; Auto vars:     Size  Location     Type
  2883 ;;		None
  2884 ;; Return value:  Size  Location     Type
  2885 ;;                  1    wreg      void 
  2886 ;; Registers used:
  2887 ;;		wreg, status,2
  2888 ;; Tracked objects:
  2889 ;;		On entry : 0/0
  2890 ;;		On exit  : 0/0
  2891 ;;		Unchanged: 0/0
  2892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2893 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2894 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2895 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2896 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2897 ;;Total ram usage:        0 bytes
  2898 ;; Hardware stack levels used:    1
  2899 ;; Hardware stack levels required when called:    3
  2900 ;; This function calls:
  2901 ;;		Nothing
  2902 ;; This function is called by:
  2903 ;;		_main
  2904 ;; This function uses a non-reentrant model
  2905 ;;
  2906                           
  2907                           	psect	text15
  2908  001AC8                     __ptext15:
  2909                           	opt stack 0
  2910  001AC8                     _initInterrupts:
  2911                           	opt stack 27
  2912                           
  2913                           ;main.c: 32: INTCON = 0b11000000;
  2914                           
  2915                           ;incstack = 0
  2916  001AC8  0EC0               	movlw	192
  2917  001ACA  6EF2               	movwf	intcon,c	;volatile
  2918                           
  2919                           ;main.c: 33: RCONbits.IPEN = 0;
  2920  001ACC  9ED0               	bcf	4048,7,c	;volatile
  2921  001ACE  0012               	return		;funcret
  2922  001AD0                     __end_of_initInterrupts:
  2923                           	opt stack 0
  2924                           tblptru	equ	0xFF8
  2925                           tblptrh	equ	0xFF7
  2926                           tblptrl	equ	0xFF6
  2927                           tablat	equ	0xFF5
  2928                           prodh	equ	0xFF4
  2929                           prodl	equ	0xFF3
  2930                           intcon	equ	0xFF2
  2931                           postinc0	equ	0xFEE
  2932                           wreg	equ	0xFE8
  2933                           indf1	equ	0xFE7
  2934                           postdec1	equ	0xFE5
  2935                           fsr1h	equ	0xFE2
  2936                           fsr1l	equ	0xFE1
  2937                           indf2	equ	0xFDF
  2938                           fsr2h	equ	0xFDA
  2939                           fsr2l	equ	0xFD9
  2940                           status	equ	0xFD8
  2941                           
  2942 ;; *************** function _initADC *****************
  2943 ;; Defined at:
  2944 ;;		line 24 in file "temperature.c"
  2945 ;; Parameters:    Size  Location     Type
  2946 ;;		None
  2947 ;; Auto vars:     Size  Location     Type
  2948 ;;		None
  2949 ;; Return value:  Size  Location     Type
  2950 ;;                  1    wreg      void 
  2951 ;; Registers used:
  2952 ;;		wreg, status,2
  2953 ;; Tracked objects:
  2954 ;;		On entry : 0/0
  2955 ;;		On exit  : 0/0
  2956 ;;		Unchanged: 0/0
  2957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2958 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2960 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2961 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2962 ;;Total ram usage:        0 bytes
  2963 ;; Hardware stack levels used:    1
  2964 ;; Hardware stack levels required when called:    3
  2965 ;; This function calls:
  2966 ;;		Nothing
  2967 ;; This function is called by:
  2968 ;;		_main
  2969 ;; This function uses a non-reentrant model
  2970 ;;
  2971                           
  2972                           	psect	text16
  2973  001A40                     __ptext16:
  2974                           	opt stack 0
  2975  001A40                     _initADC:
  2976                           	opt stack 27
  2977                           
  2978                           ;temperature.c: 25: TRISAbits.TRISA0 = 1;
  2979                           
  2980                           ;incstack = 0
  2981  001A40  8092               	bsf	3986,0,c	;volatile
  2982                           
  2983                           ;temperature.c: 26: TRISAbits.TRISA1 = 1;
  2984  001A42  8292               	bsf	3986,1,c	;volatile
  2985                           
  2986                           ;temperature.c: 27: PORTAbits.RA0 = 0;
  2987  001A44  9080               	bcf	3968,0,c	;volatile
  2988                           
  2989                           ;temperature.c: 28: PORTAbits.RA1 = 0;
  2990  001A46  9280               	bcf	3968,1,c	;volatile
  2991                           
  2992                           ;temperature.c: 30: PORTBbits.RB0 = 0;
  2993  001A48  9081               	bcf	3969,0,c	;volatile
  2994                           
  2995                           ;temperature.c: 31: TRISBbits.TRISB0 = 1;
  2996  001A4A  8093               	bsf	3987,0,c	;volatile
  2997                           
  2998                           ;temperature.c: 32: PORTBbits.RB1 = 0;
  2999  001A4C  9281               	bcf	3969,1,c	;volatile
  3000                           
  3001                           ;temperature.c: 33: TRISBbits.TRISB1 = 1;
  3002  001A4E  8293               	bsf	3987,1,c	;volatile
  3003                           
  3004                           ;temperature.c: 36: ANCON0 = 0xFC;
  3005  001A50  0EFC               	movlw	252
  3006  001A52  010F               	movlb	15	; () banked
  3007  001A54  6F48               	movwf	72,b	;volatile
  3008                           
  3009                           ;temperature.c: 37: ANCON1 = 0x1C;
  3010  001A56  0E1C               	movlw	28
  3011  001A58  010F               	movlb	15	; () banked
  3012  001A5A  6F49               	movwf	73,b	;volatile
  3013                           
  3014                           ;temperature.c: 38: ADCON0 = 0x00;
  3015  001A5C  0E00               	movlw	0
  3016  001A5E  6EC2               	movwf	4034,c	;volatile
  3017                           
  3018                           ;temperature.c: 39: ADCON1 = 0b10111110;
  3019  001A60  0EBE               	movlw	190
  3020  001A62  6EC1               	movwf	4033,c	;volatile
  3021                           
  3022                           ; BSR set to: 15
  3023                           ;temperature.c: 40: ADCON0bits.ADON = 0x01;
  3024  001A64  80C2               	bsf	4034,0,c	;volatile
  3025                           
  3026                           ; BSR set to: 15
  3027                           ;temperature.c: 42: PIR1bits.ADIF = 0;
  3028  001A66  9C9E               	bcf	3998,6,c	;volatile
  3029                           
  3030                           ; BSR set to: 15
  3031                           ;temperature.c: 43: PIE1bits.ADIE = 1;
  3032  001A68  8C9D               	bsf	3997,6,c	;volatile
  3033                           
  3034                           ; BSR set to: 15
  3035                           ;temperature.c: 46: ADCON0bits.GO_DONE = 1;
  3036  001A6A  82C2               	bsf	4034,1,c	;volatile
  3037                           
  3038                           ; BSR set to: 15
  3039  001A6C  0012               	return		;funcret
  3040  001A6E                     __end_of_initADC:
  3041                           	opt stack 0
  3042                           tblptru	equ	0xFF8
  3043                           tblptrh	equ	0xFF7
  3044                           tblptrl	equ	0xFF6
  3045                           tablat	equ	0xFF5
  3046                           prodh	equ	0xFF4
  3047                           prodl	equ	0xFF3
  3048                           intcon	equ	0xFF2
  3049                           postinc0	equ	0xFEE
  3050                           wreg	equ	0xFE8
  3051                           indf1	equ	0xFE7
  3052                           postdec1	equ	0xFE5
  3053                           fsr1h	equ	0xFE2
  3054                           fsr1l	equ	0xFE1
  3055                           indf2	equ	0xFDF
  3056                           fsr2h	equ	0xFDA
  3057                           fsr2l	equ	0xFD9
  3058                           status	equ	0xFD8
  3059                           
  3060 ;; *************** function _clearUARTReceiveBuffer *****************
  3061 ;; Defined at:
  3062 ;;		line 73 in file "uart.c"
  3063 ;; Parameters:    Size  Location     Type
  3064 ;;		None
  3065 ;; Auto vars:     Size  Location     Type
  3066 ;;  i               2   17[COMRAM] int 
  3067 ;; Return value:  Size  Location     Type
  3068 ;;                  1    wreg      void 
  3069 ;; Registers used:
  3070 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3071 ;; Tracked objects:
  3072 ;;		On entry : 0/0
  3073 ;;		On exit  : 0/0
  3074 ;;		Unchanged: 0/0
  3075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3077 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3080 ;;Total ram usage:        2 bytes
  3081 ;; Hardware stack levels used:    1
  3082 ;; Hardware stack levels required when called:    3
  3083 ;; This function calls:
  3084 ;;		Nothing
  3085 ;; This function is called by:
  3086 ;;		_main
  3087 ;; This function uses a non-reentrant model
  3088 ;;
  3089                           
  3090                           	psect	text17
  3091  00199E                     __ptext17:
  3092                           	opt stack 0
  3093  00199E                     _clearUARTReceiveBuffer:
  3094                           	opt stack 27
  3095                           
  3096                           ;uart.c: 74: for(int i = 0; i<100; i++){
  3097                           
  3098                           ; BSR set to: 15
  3099                           ;incstack = 0
  3100  00199E  0E00               	movlw	0
  3101  0019A0  6E13               	movwf	clearUARTReceiveBuffer@i+1,c
  3102  0019A2  0E00               	movlw	0
  3103  0019A4  6E12               	movwf	clearUARTReceiveBuffer@i,c
  3104  0019A6                     l1771:
  3105  0019A6  BE13               	btfsc	clearUARTReceiveBuffer@i+1,7,c
  3106  0019A8  D006               	goto	l1775
  3107  0019AA  5013               	movf	clearUARTReceiveBuffer@i+1,w,c
  3108  0019AC  E10F               	bnz	l1781
  3109  0019AE  0E64               	movlw	100
  3110  0019B0  5C12               	subwf	clearUARTReceiveBuffer@i,w,c
  3111  0019B2  B0D8               	btfsc	status,0,c
  3112  0019B4  D00B               	goto	l1781
  3113  0019B6                     l1775:
  3114                           
  3115                           ;uart.c: 75: uart_receive_buffer[i] = '\0';
  3116  0019B6  0E60               	movlw	low _uart_receive_buffer
  3117  0019B8  2412               	addwf	clearUARTReceiveBuffer@i,w,c
  3118  0019BA  6ED9               	movwf	fsr2l,c
  3119  0019BC  0E00               	movlw	high _uart_receive_buffer
  3120  0019BE  2013               	addwfc	clearUARTReceiveBuffer@i+1,w,c
  3121  0019C0  6EDA               	movwf	fsr2h,c
  3122  0019C2  0E00               	movlw	0
  3123  0019C4  6EDF               	movwf	indf2,c
  3124  0019C6  4A12               	infsnz	clearUARTReceiveBuffer@i,f,c
  3125  0019C8  2A13               	incf	clearUARTReceiveBuffer@i+1,f,c
  3126  0019CA  D7ED               	goto	l1771
  3127  0019CC                     l1781:
  3128                           
  3129                           ;uart.c: 76: }
  3130                           ;uart.c: 77: uart_receive_buffer_index= 0 ;
  3131  0019CC  0E00               	movlw	0
  3132  0019CE  6E4C               	movwf	_uart_receive_buffer_index+1,c
  3133  0019D0  0E00               	movlw	0
  3134  0019D2  6E4B               	movwf	_uart_receive_buffer_index,c
  3135  0019D4  0012               	return		;funcret
  3136  0019D6                     __end_of_clearUARTReceiveBuffer:
  3137                           	opt stack 0
  3138                           tblptru	equ	0xFF8
  3139                           tblptrh	equ	0xFF7
  3140                           tblptrl	equ	0xFF6
  3141                           tablat	equ	0xFF5
  3142                           prodh	equ	0xFF4
  3143                           prodl	equ	0xFF3
  3144                           intcon	equ	0xFF2
  3145                           postinc0	equ	0xFEE
  3146                           wreg	equ	0xFE8
  3147                           indf1	equ	0xFE7
  3148                           postdec1	equ	0xFE5
  3149                           fsr1h	equ	0xFE2
  3150                           fsr1l	equ	0xFE1
  3151                           indf2	equ	0xFDF
  3152                           fsr2h	equ	0xFDA
  3153                           fsr2l	equ	0xFD9
  3154                           status	equ	0xFD8
  3155                           
  3156 ;; *************** function _UARTReceive *****************
  3157 ;; Defined at:
  3158 ;;		line 51 in file "uart.c"
  3159 ;; Parameters:    Size  Location     Type
  3160 ;;  on_or_off       1    wreg     unsigned char 
  3161 ;; Auto vars:     Size  Location     Type
  3162 ;;  on_or_off       1   17[COMRAM] unsigned char 
  3163 ;; Return value:  Size  Location     Type
  3164 ;;                  1    wreg      void 
  3165 ;; Registers used:
  3166 ;;		wreg, status,2, status,0
  3167 ;; Tracked objects:
  3168 ;;		On entry : 0/0
  3169 ;;		On exit  : 0/0
  3170 ;;		Unchanged: 0/0
  3171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3173 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3175 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3176 ;;Total ram usage:        1 bytes
  3177 ;; Hardware stack levels used:    1
  3178 ;; Hardware stack levels required when called:    3
  3179 ;; This function calls:
  3180 ;;		Nothing
  3181 ;; This function is called by:
  3182 ;;		_main
  3183 ;; This function uses a non-reentrant model
  3184 ;;
  3185                           
  3186                           	psect	text18
  3187  001AB8                     __ptext18:
  3188                           	opt stack 0
  3189  001AB8                     _UARTReceive:
  3190                           	opt stack 27
  3191                           
  3192                           ;incstack = 0
  3193                           ;UARTReceive@on_or_off stored from wreg
  3194  001AB8  6E12               	movwf	UARTReceive@on_or_off,c
  3195                           
  3196                           ;uart.c: 52: if(on_or_off == 1){
  3197  001ABA  0412               	decf	UARTReceive@on_or_off,w,c
  3198  001ABC  A4D8               	btfss	status,2,c
  3199  001ABE  D002               	goto	l110
  3200                           
  3201                           ;uart.c: 53: RCSTA1bits.CREN = 1;
  3202  001AC0  88AC               	bsf	4012,4,c	;volatile
  3203                           
  3204                           ;uart.c: 54: }
  3205  001AC2  0012               	return	
  3206  001AC4                     l110:
  3207                           
  3208                           ;uart.c: 55: else{
  3209                           ;uart.c: 56: RCSTA1bits.CREN = 0;
  3210  001AC4  98AC               	bcf	4012,4,c	;volatile
  3211  001AC6  0012               	return	
  3212  001AC8                     __end_of_UARTReceive:
  3213                           	opt stack 0
  3214                           tblptru	equ	0xFF8
  3215                           tblptrh	equ	0xFF7
  3216                           tblptrl	equ	0xFF6
  3217                           tablat	equ	0xFF5
  3218                           prodh	equ	0xFF4
  3219                           prodl	equ	0xFF3
  3220                           intcon	equ	0xFF2
  3221                           postinc0	equ	0xFEE
  3222                           wreg	equ	0xFE8
  3223                           indf1	equ	0xFE7
  3224                           postdec1	equ	0xFE5
  3225                           fsr1h	equ	0xFE2
  3226                           fsr1l	equ	0xFE1
  3227                           indf2	equ	0xFDF
  3228                           fsr2h	equ	0xFDA
  3229                           fsr2l	equ	0xFD9
  3230                           status	equ	0xFD8
  3231                           
  3232 ;; *************** function _high_ISR *****************
  3233 ;; Defined at:
  3234 ;;		line 66 in file "main.c"
  3235 ;; Parameters:    Size  Location     Type
  3236 ;;		None
  3237 ;; Auto vars:     Size  Location     Type
  3238 ;;		None
  3239 ;; Return value:  Size  Location     Type
  3240 ;;                  1    wreg      void 
  3241 ;; Registers used:
  3242 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3243 ;; Tracked objects:
  3244 ;;		On entry : 0/0
  3245 ;;		On exit  : 0/0
  3246 ;;		Unchanged: 0/0
  3247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3248 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3250 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3251 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3252 ;;Total ram usage:       14 bytes
  3253 ;; Hardware stack levels used:    1
  3254 ;; Hardware stack levels required when called:    2
  3255 ;; This function calls:
  3256 ;;		_temperature_interrupt
  3257 ;;		_uart_interrupt
  3258 ;; This function is called by:
  3259 ;;		Interrupt level 2
  3260 ;; This function uses a non-reentrant model
  3261 ;;
  3262                           
  3263                           	psect	intcode
  3264  000008                     __pintcode:
  3265                           	opt stack 0
  3266  000008                     _high_ISR:
  3267                           	opt stack 24
  3268                           
  3269                           ;incstack = 0
  3270  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3271  00000A  CFFA F004          	movff	pclath,??_high_ISR
  3272  00000E  CFFB F005          	movff	pclatu,??_high_ISR+1
  3273  000012  CFE9 F006          	movff	fsr0l,??_high_ISR+2
  3274  000016  CFEA F007          	movff	fsr0h,??_high_ISR+3
  3275  00001A  CFE1 F008          	movff	fsr1l,??_high_ISR+4
  3276  00001E  CFE2 F009          	movff	fsr1h,??_high_ISR+5
  3277  000022  CFD9 F00A          	movff	fsr2l,??_high_ISR+6
  3278  000026  CFDA F00B          	movff	fsr2h,??_high_ISR+7
  3279  00002A  CFF3 F00C          	movff	prodl,??_high_ISR+8
  3280  00002E  CFF4 F00D          	movff	prodh,??_high_ISR+9
  3281  000032  CFF6 F00E          	movff	tblptrl,??_high_ISR+10
  3282  000036  CFF7 F00F          	movff	tblptrh,??_high_ISR+11
  3283  00003A  CFF8 F010          	movff	tblptru,??_high_ISR+12
  3284  00003E  CFF5 F011          	movff	tablat,??_high_ISR+13
  3285                           
  3286                           ;main.c: 67: uart_interrupt();
  3287  000042  EC27  F00B         	call	_uart_interrupt	;wreg free
  3288                           
  3289                           ;main.c: 68: temperature_interrupt();
  3290  000046  ECD7  F00A         	call	_temperature_interrupt	;wreg free
  3291  00004A  C011  FFF5         	movff	??_high_ISR+13,tablat
  3292  00004E  C010  FFF8         	movff	??_high_ISR+12,tblptru
  3293  000052  C00F  FFF7         	movff	??_high_ISR+11,tblptrh
  3294  000056  C00E  FFF6         	movff	??_high_ISR+10,tblptrl
  3295  00005A  C00D  FFF4         	movff	??_high_ISR+9,prodh
  3296  00005E  C00C  FFF3         	movff	??_high_ISR+8,prodl
  3297  000062  C00B  FFDA         	movff	??_high_ISR+7,fsr2h
  3298  000066  C00A  FFD9         	movff	??_high_ISR+6,fsr2l
  3299  00006A  C009  FFE2         	movff	??_high_ISR+5,fsr1h
  3300  00006E  C008  FFE1         	movff	??_high_ISR+4,fsr1l
  3301  000072  C007  FFEA         	movff	??_high_ISR+3,fsr0h
  3302  000076  C006  FFE9         	movff	??_high_ISR+2,fsr0l
  3303  00007A  C005  FFFB         	movff	??_high_ISR+1,pclatu
  3304  00007E  C004  FFFA         	movff	??_high_ISR,pclath
  3305  000082  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3306  000084  0011               	retfie		f
  3307  000086                     __end_of_high_ISR:
  3308                           	opt stack 0
  3309                           pclatu	equ	0xFFB
  3310                           pclath	equ	0xFFA
  3311                           tblptru	equ	0xFF8
  3312                           tblptrh	equ	0xFF7
  3313                           tblptrl	equ	0xFF6
  3314                           tablat	equ	0xFF5
  3315                           prodh	equ	0xFF4
  3316                           prodl	equ	0xFF3
  3317                           intcon	equ	0xFF2
  3318                           postinc0	equ	0xFEE
  3319                           fsr0h	equ	0xFEA
  3320                           fsr0l	equ	0xFE9
  3321                           wreg	equ	0xFE8
  3322                           indf1	equ	0xFE7
  3323                           postdec1	equ	0xFE5
  3324                           fsr1h	equ	0xFE2
  3325                           fsr1l	equ	0xFE1
  3326                           indf2	equ	0xFDF
  3327                           fsr2h	equ	0xFDA
  3328                           fsr2l	equ	0xFD9
  3329                           status	equ	0xFD8
  3330                           
  3331 ;; *************** function _uart_interrupt *****************
  3332 ;; Defined at:
  3333 ;;		line 80 in file "uart.c"
  3334 ;; Parameters:    Size  Location     Type
  3335 ;;		None
  3336 ;; Auto vars:     Size  Location     Type
  3337 ;;		None
  3338 ;; Return value:  Size  Location     Type
  3339 ;;                  1    wreg      void 
  3340 ;; Registers used:
  3341 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3342 ;; Tracked objects:
  3343 ;;		On entry : 0/0
  3344 ;;		On exit  : 0/0
  3345 ;;		Unchanged: 0/0
  3346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3347 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3348 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3349 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3350 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3351 ;;Total ram usage:        1 bytes
  3352 ;; Hardware stack levels used:    1
  3353 ;; Hardware stack levels required when called:    1
  3354 ;; This function calls:
  3355 ;;		i2_clearUARTReceiveBuffer
  3356 ;; This function is called by:
  3357 ;;		_high_ISR
  3358 ;; This function uses a non-reentrant model
  3359 ;;
  3360                           
  3361                           	psect	text20
  3362  00164E                     __ptext20:
  3363                           	opt stack 0
  3364  00164E                     _uart_interrupt:
  3365                           	opt stack 24
  3366                           
  3367                           ;uart.c: 82: if(PIR1bits.RC1IF == 1){
  3368                           
  3369                           ;incstack = 0
  3370  00164E  AA9E               	btfss	3998,5,c	;volatile
  3371  001650  D01C               	goto	i2l1815
  3372                           
  3373                           ;uart.c: 83: PIR1bits.RC1IF = 0;
  3374  001652  9A9E               	bcf	3998,5,c	;volatile
  3375                           
  3376                           ;uart.c: 84: uart_receive_buffer[uart_receive_buffer_index] = RCREG1;
  3377  001654  0E60               	movlw	low _uart_receive_buffer
  3378  001656  244B               	addwf	_uart_receive_buffer_index,w,c
  3379  001658  6ED9               	movwf	fsr2l,c
  3380  00165A  0E00               	movlw	high _uart_receive_buffer
  3381  00165C  204C               	addwfc	_uart_receive_buffer_index+1,w,c
  3382  00165E  6EDA               	movwf	fsr2h,c
  3383  001660  CFAF FFDF          	movff	4015,indf2	;volatile
  3384                           
  3385                           ;uart.c: 85: uart_receive_buffer_index += 1;
  3386  001664  4A4B               	infsnz	_uart_receive_buffer_index,f,c
  3387  001666  2A4C               	incf	_uart_receive_buffer_index+1,f,c
  3388                           
  3389                           ;uart.c: 86: if(uart_receive_buffer[uart_receive_buffer_index] == '\n'){
  3390  001668  0E60               	movlw	low _uart_receive_buffer
  3391  00166A  244B               	addwf	_uart_receive_buffer_index,w,c
  3392  00166C  6ED9               	movwf	fsr2l,c
  3393  00166E  0E00               	movlw	high _uart_receive_buffer
  3394  001670  204C               	addwfc	_uart_receive_buffer_index+1,w,c
  3395  001672  6EDA               	movwf	fsr2h,c
  3396  001674  0E0A               	movlw	10
  3397  001676  18DE               	xorwf	postinc2,w,c
  3398  001678  B4D8               	btfsc	status,2,c
  3399                           
  3400                           ;uart.c: 87: RCSTA1bits.CREN = 0;
  3401  00167A  98AC               	bcf	4012,4,c	;volatile
  3402                           
  3403                           ;uart.c: 88: }
  3404                           ;uart.c: 89: if(uart_receive_buffer_index > 100){
  3405  00167C  504C               	movf	_uart_receive_buffer_index+1,w,c
  3406  00167E  E103               	bnz	i2u123_40
  3407  001680  0E65               	movlw	101
  3408  001682  5C4B               	subwf	_uart_receive_buffer_index,w,c
  3409  001684  B0D8               	btfsc	status,0,c
  3410  001686                     i2u123_40:
  3411                           
  3412                           ;uart.c: 90: clearUARTReceiveBuffer();
  3413  001686  ECEB  F00C         	call	i2_clearUARTReceiveBuffer	;wreg free
  3414  00168A                     i2l1815:
  3415                           
  3416                           ;uart.c: 91: }
  3417                           ;uart.c: 92: }
  3418                           ;uart.c: 95: if(PIR1bits.TX1IF == 1){
  3419  00168A  A89E               	btfss	3998,4,c	;volatile
  3420  00168C  0012               	return	
  3421                           
  3422                           ;uart.c: 97: if(*currentMessagePointer == '\0'){
  3423  00168E  C03D  FFF6         	movff	_currentMessagePointer,tblptrl
  3424  001692  C03E  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3425  001696  0E00               	movlw	low (__smallconst shr (0+16))
  3426  001698  6EF8               	movwf	tblptru,c
  3427  00169A  0E0E               	movlw	(high __ramtop+-1)
  3428  00169C  64F7               	cpfsgt	tblptrh,c
  3429  00169E  D003               	bra	i2u125_47
  3430  0016A0  0008               	tblrd		*
  3431  0016A2  50F5               	movf	tablat,w,c
  3432  0016A4  D005               	bra	i2u125_40
  3433  0016A6                     i2u125_47:
  3434  0016A6  CFF6 FFE1          	movff	tblptrl,fsr1l
  3435  0016AA  CFF7 FFE2          	movff	tblptrh,fsr1h
  3436  0016AE  50E7               	movf	indf1,w,c
  3437  0016B0                     i2u125_40:
  3438  0016B0  0900               	iorlw	0
  3439  0016B2  A4D8               	btfss	status,2,c
  3440  0016B4  D004               	goto	i2l1823
  3441                           
  3442                           ;uart.c: 98: PIE1bits.TXIE = 0;
  3443  0016B6  989D               	bcf	3997,4,c	;volatile
  3444                           
  3445                           ;uart.c: 99: isCommandSent = 1;
  3446  0016B8  0E01               	movlw	1
  3447  0016BA  6E4D               	movwf	_isCommandSent,c
  3448                           
  3449                           ;uart.c: 100: }
  3450  0016BC  0012               	return	
  3451  0016BE                     i2l1823:
  3452                           
  3453                           ;uart.c: 101: else{
  3454                           ;uart.c: 103: TXREG1 = *currentMessagePointer;
  3455  0016BE  C03D  FFF6         	movff	_currentMessagePointer,tblptrl
  3456  0016C2  C03E  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3457  0016C6  0E00               	movlw	low (__smallconst shr (0+16))
  3458  0016C8  6EF8               	movwf	tblptru,c
  3459  0016CA  0E0E               	movlw	(high __ramtop+-1)
  3460  0016CC  64F7               	cpfsgt	tblptrh,c
  3461  0016CE  D003               	bra	i2u127_47
  3462  0016D0  0008               	tblrd		*
  3463  0016D2  50F5               	movf	tablat,w,c
  3464  0016D4  D005               	bra	i2u127_40
  3465  0016D6                     i2u127_47:
  3466  0016D6  CFF6 FFE1          	movff	tblptrl,fsr1l
  3467  0016DA  CFF7 FFE2          	movff	tblptrh,fsr1h
  3468  0016DE  50E7               	movf	indf1,w,c
  3469  0016E0                     i2u127_40:
  3470  0016E0  6EAE               	movwf	4014,c	;volatile
  3471                           
  3472                           ;uart.c: 105: currentMessagePointer += 1;
  3473  0016E2  4A3D               	infsnz	_currentMessagePointer,f,c
  3474  0016E4  2A3E               	incf	_currentMessagePointer+1,f,c
  3475  0016E6  0012               	return	
  3476  0016E8                     __end_of_uart_interrupt:
  3477                           	opt stack 0
  3478                           pclatu	equ	0xFFB
  3479                           pclath	equ	0xFFA
  3480                           tblptru	equ	0xFF8
  3481                           tblptrh	equ	0xFF7
  3482                           tblptrl	equ	0xFF6
  3483                           tablat	equ	0xFF5
  3484                           prodh	equ	0xFF4
  3485                           prodl	equ	0xFF3
  3486                           intcon	equ	0xFF2
  3487                           postinc0	equ	0xFEE
  3488                           fsr0h	equ	0xFEA
  3489                           fsr0l	equ	0xFE9
  3490                           wreg	equ	0xFE8
  3491                           indf1	equ	0xFE7
  3492                           postdec1	equ	0xFE5
  3493                           fsr1h	equ	0xFE2
  3494                           fsr1l	equ	0xFE1
  3495                           indf2	equ	0xFDF
  3496                           postinc2	equ	0xFDE
  3497                           fsr2h	equ	0xFDA
  3498                           fsr2l	equ	0xFD9
  3499                           status	equ	0xFD8
  3500                           
  3501 ;; *************** function i2_clearUARTReceiveBuffer *****************
  3502 ;; Defined at:
  3503 ;;		line 73 in file "uart.c"
  3504 ;; Parameters:    Size  Location     Type
  3505 ;;		None
  3506 ;; Auto vars:     Size  Location     Type
  3507 ;;  clearUARTRec    2    0[COMRAM] int 
  3508 ;; Return value:  Size  Location     Type
  3509 ;;                  1    wreg      void 
  3510 ;; Registers used:
  3511 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3512 ;; Tracked objects:
  3513 ;;		On entry : 0/0
  3514 ;;		On exit  : 0/0
  3515 ;;		Unchanged: 0/0
  3516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3517 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3518 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3520 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3521 ;;Total ram usage:        2 bytes
  3522 ;; Hardware stack levels used:    1
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_uart_interrupt
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text21
  3531  0019D6                     __ptext21:
  3532                           	opt stack 0
  3533  0019D6                     i2_clearUARTReceiveBuffer:
  3534                           	opt stack 24
  3535                           
  3536                           ;uart.c: 74: for(int i = 0; i<100; i++){
  3537                           
  3538                           ;incstack = 0
  3539  0019D6  0E00               	movlw	0
  3540  0019D8  6E02               	movwf	i2clearUARTReceiveBuffer@i+1,c
  3541  0019DA  0E00               	movlw	0
  3542  0019DC  6E01               	movwf	i2clearUARTReceiveBuffer@i,c
  3543  0019DE                     i2l1727:
  3544  0019DE  BE02               	btfsc	i2clearUARTReceiveBuffer@i+1,7,c
  3545  0019E0  D006               	goto	i2l1731
  3546  0019E2  5002               	movf	i2clearUARTReceiveBuffer@i+1,w,c
  3547  0019E4  E10F               	bnz	i2l1737
  3548  0019E6  0E64               	movlw	100
  3549  0019E8  5C01               	subwf	i2clearUARTReceiveBuffer@i,w,c
  3550  0019EA  B0D8               	btfsc	status,0,c
  3551  0019EC  D00B               	goto	i2l1737
  3552  0019EE                     i2l1731:
  3553                           
  3554                           ;uart.c: 75: uart_receive_buffer[i] = '\0';
  3555  0019EE  0E60               	movlw	low _uart_receive_buffer
  3556  0019F0  2401               	addwf	i2clearUARTReceiveBuffer@i,w,c
  3557  0019F2  6ED9               	movwf	fsr2l,c
  3558  0019F4  0E00               	movlw	high _uart_receive_buffer
  3559  0019F6  2002               	addwfc	i2clearUARTReceiveBuffer@i+1,w,c
  3560  0019F8  6EDA               	movwf	fsr2h,c
  3561  0019FA  0E00               	movlw	0
  3562  0019FC  6EDF               	movwf	indf2,c
  3563  0019FE  4A01               	infsnz	i2clearUARTReceiveBuffer@i,f,c
  3564  001A00  2A02               	incf	i2clearUARTReceiveBuffer@i+1,f,c
  3565  001A02  D7ED               	goto	i2l1727
  3566  001A04                     i2l1737:
  3567                           
  3568                           ;uart.c: 76: }
  3569                           ;uart.c: 77: uart_receive_buffer_index= 0 ;
  3570  001A04  0E00               	movlw	0
  3571  001A06  6E4C               	movwf	_uart_receive_buffer_index+1,c
  3572  001A08  0E00               	movlw	0
  3573  001A0A  6E4B               	movwf	_uart_receive_buffer_index,c
  3574  001A0C  0012               	return		;funcret
  3575  001A0E                     __end_ofi2_clearUARTReceiveBuffer:
  3576                           	opt stack 0
  3577                           pclatu	equ	0xFFB
  3578                           pclath	equ	0xFFA
  3579                           tblptru	equ	0xFF8
  3580                           tblptrh	equ	0xFF7
  3581                           tblptrl	equ	0xFF6
  3582                           tablat	equ	0xFF5
  3583                           prodh	equ	0xFF4
  3584                           prodl	equ	0xFF3
  3585                           intcon	equ	0xFF2
  3586                           postinc0	equ	0xFEE
  3587                           fsr0h	equ	0xFEA
  3588                           fsr0l	equ	0xFE9
  3589                           wreg	equ	0xFE8
  3590                           indf1	equ	0xFE7
  3591                           postdec1	equ	0xFE5
  3592                           fsr1h	equ	0xFE2
  3593                           fsr1l	equ	0xFE1
  3594                           indf2	equ	0xFDF
  3595                           postinc2	equ	0xFDE
  3596                           fsr2h	equ	0xFDA
  3597                           fsr2l	equ	0xFD9
  3598                           status	equ	0xFD8
  3599                           
  3600 ;; *************** function _temperature_interrupt *****************
  3601 ;; Defined at:
  3602 ;;		line 103 in file "temperature.c"
  3603 ;; Parameters:    Size  Location     Type
  3604 ;;		None
  3605 ;; Auto vars:     Size  Location     Type
  3606 ;;		None
  3607 ;; Return value:  Size  Location     Type
  3608 ;;                  1    wreg      void 
  3609 ;; Registers used:
  3610 ;;		wreg, status,2, status,0
  3611 ;; Tracked objects:
  3612 ;;		On entry : 0/0
  3613 ;;		On exit  : 0/0
  3614 ;;		Unchanged: 0/0
  3615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3618 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3619 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3620 ;;Total ram usage:        2 bytes
  3621 ;; Hardware stack levels used:    1
  3622 ;; This function calls:
  3623 ;;		Nothing
  3624 ;; This function is called by:
  3625 ;;		_high_ISR
  3626 ;; This function uses a non-reentrant model
  3627 ;;
  3628                           
  3629                           	psect	text22
  3630  0015AE                     __ptext22:
  3631                           	opt stack 0
  3632  0015AE                     _temperature_interrupt:
  3633                           	opt stack 25
  3634                           
  3635                           ;temperature.c: 105: if(PIR1bits.ADIF == 1)
  3636                           
  3637                           ;incstack = 0
  3638  0015AE  AC9E               	btfss	3998,6,c	;volatile
  3639  0015B0  0012               	return	
  3640                           
  3641                           ;temperature.c: 106: {
  3642                           ;temperature.c: 107: PIR1bits.ADIF = 0;
  3643  0015B2  9C9E               	bcf	3998,6,c	;volatile
  3644                           
  3645                           ;temperature.c: 108: switch(currentChannel){
  3646  0015B4  D035               	goto	i2l1841
  3647  0015B6                     i2l205:
  3648                           
  3649                           ;temperature.c: 110: plus_pipe = ADRES;
  3650  0015B6  CFC3 F045          	movff	4035,_plus_pipe	;volatile
  3651  0015BA  CFC4 F046          	movff	4036,_plus_pipe+1	;volatile
  3652                           
  3653                           ;temperature.c: 111: ADCON0bits.CHS = 0b1000;
  3654  0015BE  50C2               	movf	4034,w,c	;volatile
  3655  0015C0  0BC3               	andlw	-61
  3656  0015C2  0920               	iorlw	32
  3657  0015C4  6EC2               	movwf	4034,c	;volatile
  3658                           
  3659                           ;temperature.c: 112: currentChannel = 1;
  3660  0015C6  0E00               	movlw	0
  3661  0015C8  0100               	movlb	0	; () banked
  3662  0015CA  6FC5               	movwf	(_currentChannel+1)& (0+255),b
  3663  0015CC  0E01               	movlw	1
  3664  0015CE  D026               	goto	L5
  3665  0015D0                     i2l207:
  3666                           
  3667                           ;temperature.c: 115: minus_pipe = ADRES;
  3668  0015D0  CFC3 F041          	movff	4035,_minus_pipe	;volatile
  3669  0015D4  CFC4 F042          	movff	4036,_minus_pipe+1	;volatile
  3670                           
  3671                           ;temperature.c: 116: ADCON0bits.CHS = 0b0001;
  3672  0015D8  50C2               	movf	4034,w,c	;volatile
  3673  0015DA  0BC3               	andlw	-61
  3674  0015DC  0904               	iorlw	4
  3675  0015DE  6EC2               	movwf	4034,c	;volatile
  3676                           
  3677                           ;temperature.c: 117: currentChannel = 2;
  3678  0015E0  0E00               	movlw	0
  3679  0015E2  0100               	movlb	0	; () banked
  3680  0015E4  6FC5               	movwf	(_currentChannel+1)& (0+255),b
  3681  0015E6  0E02               	movlw	2
  3682  0015E8  D019               	goto	L5
  3683  0015EA                     i2l208:
  3684                           
  3685                           ;temperature.c: 120: plus_ambient = ADRES;
  3686  0015EA  CFC3 F043          	movff	4035,_plus_ambient	;volatile
  3687  0015EE  CFC4 F044          	movff	4036,_plus_ambient+1	;volatile
  3688                           
  3689                           ;temperature.c: 121: ADCON0bits.CHS = 0b0000;
  3690  0015F2  94C2               	bcf	4034,2,c	;volatile
  3691  0015F4  96C2               	bcf	4034,3,c	;volatile
  3692  0015F6  98C2               	bcf	4034,4,c	;volatile
  3693  0015F8  9AC2               	bcf	4034,5,c	;volatile
  3694                           
  3695                           ;temperature.c: 122: currentChannel = 3;
  3696  0015FA  0E00               	movlw	0
  3697  0015FC  0100               	movlb	0	; () banked
  3698  0015FE  6FC5               	movwf	(_currentChannel+1)& (0+255),b
  3699  001600  0E03               	movlw	3
  3700  001602  D00C               	goto	L5
  3701  001604                     i2l209:
  3702                           
  3703                           ;temperature.c: 125: minus_ambient = ADRES;
  3704  001604  CFC3 F03F          	movff	4035,_minus_ambient	;volatile
  3705  001608  CFC4 F040          	movff	4036,_minus_ambient+1	;volatile
  3706                           
  3707                           ;temperature.c: 126: ADCON0bits.CHS = 0b1001;
  3708  00160C  50C2               	movf	4034,w,c	;volatile
  3709  00160E  0BC3               	andlw	-61
  3710  001610  0924               	iorlw	36
  3711  001612  6EC2               	movwf	4034,c	;volatile
  3712                           
  3713                           ;temperature.c: 127: currentChannel = 0;
  3714  001614  0E00               	movlw	0
  3715  001616  0100               	movlb	0	; () banked
  3716  001618  6FC5               	movwf	(_currentChannel+1)& (0+255),b
  3717  00161A  0E00               	movlw	0
  3718  00161C                     L5:
  3719  00161C  6FC4               	movwf	_currentChannel& (0+255),b
  3720                           
  3721                           ; BSR set to: 0
  3722                           ;temperature.c: 129: }
  3723                           
  3724                           ;temperature.c: 128: break;
  3725  00161E  D015               	goto	i2l206
  3726  001620                     i2l1841:
  3727  001620  C0C4  F001         	movff	_currentChannel,??_temperature_interrupt
  3728  001624  C0C5  F002         	movff	_currentChannel+1,??_temperature_interrupt+1
  3729                           
  3730                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3731                           ; Switch size 1, requested type "space"
  3732                           ; Number of cases is 1, Range of values is 0 to 0
  3733                           ; switch strategies available:
  3734                           ; Name         Instructions Cycles
  3735                           ; simple_byte            4     3 (average)
  3736                           ;	Chosen strategy is simple_byte
  3737  001628  5002               	movf	??_temperature_interrupt+1,w,c
  3738  00162A  0A00               	xorlw	0	; case 0
  3739  00162C  A4D8               	btfss	status,2,c
  3740  00162E  D00D               	goto	i2l206
  3741                           
  3742                           ; Switch size 1, requested type "space"
  3743                           ; Number of cases is 4, Range of values is 0 to 3
  3744                           ; switch strategies available:
  3745                           ; Name         Instructions Cycles
  3746                           ; simple_byte           13     7 (average)
  3747                           ;	Chosen strategy is simple_byte
  3748  001630  5001               	movf	??_temperature_interrupt,w,c
  3749  001632  0A00               	xorlw	0	; case 0
  3750  001634  B4D8               	btfsc	status,2,c
  3751  001636  D7BF               	goto	i2l205
  3752  001638  0A01               	xorlw	1	; case 1
  3753  00163A  B4D8               	btfsc	status,2,c
  3754  00163C  D7C9               	goto	i2l207
  3755  00163E  0A03               	xorlw	3	; case 2
  3756  001640  B4D8               	btfsc	status,2,c
  3757  001642  D7D3               	goto	i2l208
  3758  001644  0A01               	xorlw	1	; case 3
  3759  001646  B4D8               	btfsc	status,2,c
  3760  001648  D7DD               	goto	i2l209
  3761  00164A                     i2l206:
  3762                           
  3763                           ;temperature.c: 130: ADCON0bits.GO_DONE = 1;
  3764  00164A  82C2               	bsf	4034,1,c	;volatile
  3765  00164C  0012               	return	
  3766  00164E                     __end_of_temperature_interrupt:
  3767                           	opt stack 0
  3768                           pclatu	equ	0xFFB
  3769                           pclath	equ	0xFFA
  3770                           tblptru	equ	0xFF8
  3771                           tblptrh	equ	0xFF7
  3772                           tblptrl	equ	0xFF6
  3773                           tablat	equ	0xFF5
  3774                           prodh	equ	0xFF4
  3775                           prodl	equ	0xFF3
  3776                           intcon	equ	0xFF2
  3777                           postinc0	equ	0xFEE
  3778                           fsr0h	equ	0xFEA
  3779                           fsr0l	equ	0xFE9
  3780                           wreg	equ	0xFE8
  3781                           indf1	equ	0xFE7
  3782                           postdec1	equ	0xFE5
  3783                           fsr1h	equ	0xFE2
  3784                           fsr1l	equ	0xFE1
  3785                           indf2	equ	0xFDF
  3786                           postinc2	equ	0xFDE
  3787                           fsr2h	equ	0xFDA
  3788                           fsr2l	equ	0xFD9
  3789                           status	equ	0xFD8
  3790                           pclatu	equ	0xFFB
  3791                           pclath	equ	0xFFA
  3792                           tblptru	equ	0xFF8
  3793                           tblptrh	equ	0xFF7
  3794                           tblptrl	equ	0xFF6
  3795                           tablat	equ	0xFF5
  3796                           prodh	equ	0xFF4
  3797                           prodl	equ	0xFF3
  3798                           intcon	equ	0xFF2
  3799                           postinc0	equ	0xFEE
  3800                           fsr0h	equ	0xFEA
  3801                           fsr0l	equ	0xFE9
  3802                           wreg	equ	0xFE8
  3803                           indf1	equ	0xFE7
  3804                           postdec1	equ	0xFE5
  3805                           fsr1h	equ	0xFE2
  3806                           fsr1l	equ	0xFE1
  3807                           indf2	equ	0xFDF
  3808                           postinc2	equ	0xFDE
  3809                           fsr2h	equ	0xFDA
  3810                           fsr2l	equ	0xFD9
  3811                           status	equ	0xFD8
  3812                           
  3813                           	psect	rparam
  3814  0000                     pclatu	equ	0xFFB
  3815                           pclath	equ	0xFFA
  3816                           tblptru	equ	0xFF8
  3817                           tblptrh	equ	0xFF7
  3818                           tblptrl	equ	0xFF6
  3819                           tablat	equ	0xFF5
  3820                           prodh	equ	0xFF4
  3821                           prodl	equ	0xFF3
  3822                           intcon	equ	0xFF2
  3823                           postinc0	equ	0xFEE
  3824                           fsr0h	equ	0xFEA
  3825                           fsr0l	equ	0xFE9
  3826                           wreg	equ	0xFE8
  3827                           indf1	equ	0xFE7
  3828                           postdec1	equ	0xFE5
  3829                           fsr1h	equ	0xFE2
  3830                           fsr1l	equ	0xFE1
  3831                           indf2	equ	0xFDF
  3832                           postinc2	equ	0xFDE
  3833                           fsr2h	equ	0xFDA
  3834                           fsr2l	equ	0xFD9
  3835                           status	equ	0xFD8
  3836                           
  3837                           	psect	temp
  3838  00004E                     btemp:
  3839                           	opt stack 0
  3840  00004E                     	ds	1
  3841  0000                     int$flags	set	btemp
  3842                           pclatu	equ	0xFFB
  3843                           pclath	equ	0xFFA
  3844                           tblptru	equ	0xFF8
  3845                           tblptrh	equ	0xFF7
  3846                           tblptrl	equ	0xFF6
  3847                           tablat	equ	0xFF5
  3848                           prodh	equ	0xFF4
  3849                           prodl	equ	0xFF3
  3850                           intcon	equ	0xFF2
  3851                           postinc0	equ	0xFEE
  3852                           fsr0h	equ	0xFEA
  3853                           fsr0l	equ	0xFE9
  3854                           wreg	equ	0xFE8
  3855                           indf1	equ	0xFE7
  3856                           postdec1	equ	0xFE5
  3857                           fsr1h	equ	0xFE2
  3858                           fsr1l	equ	0xFE1
  3859                           indf2	equ	0xFDF
  3860                           postinc2	equ	0xFDE
  3861                           fsr2h	equ	0xFDA
  3862                           fsr2l	equ	0xFD9
  3863                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    177
    Data        26
    BSS         118
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     60      77
    BANK0           160     26     153
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sendUARTMessage@newMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), set_dev_eui(CODE[34]), 
		 -> temp_display_message(BANK0[20]), 

    currentMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), 
		 -> set_dev_eui(CODE[34]), temp_display_message(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_makeTempMessage
    _fillInTemp->___awdiv
    ___awdiv->___awmod
    _calculateTemp->___ftmul
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _initLoRa->_delay_ms

Critical Paths under _high_ISR in COMRAM

    _high_ISR->_uart_interrupt
    _uart_interrupt->i2_clearUARTReceiveBuffer

Critical Paths under _main in BANK0

    _makeTempMessage->_calculateTemp
    _calculateTemp->___fttol

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   11924
                        _UARTReceive
             _clearUARTReceiveBuffer
                           _delay_ms
                            _initADC
                     _initInterrupts
                           _initLoRa
                          _initUART1
                    _makeTempMessage
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _makeTempMessage                                      1     1      0    9906
                                             59 COMRAM     1     1      0
                      _calculateTemp
                         _fillInTemp
 ---------------------------------------------------------------------------------
 (2) _fillInTemp                                          12    12      0    1513
                                             31 COMRAM    12    12      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     552
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     556
                                             23 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                       11     7      4    8362
                                             15 BANK0     11     7      4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     448
                                              0 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    2587
                                             44 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    2669
                                             29 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2186
                                             25 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2031
                                             17 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _initUART1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLoRa                                             0     0      0     964
                           _delay_ms
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _sendUARTMessage                                      2     0      2     406
                                             17 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     558
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearUARTReceiveBuffer                               2     2      0      68
                                             17 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UARTReceive                                          1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_ISR                                            14    14      0      68
                                              3 COMRAM    14    14      0
              _temperature_interrupt
                     _uart_interrupt
 ---------------------------------------------------------------------------------
 (6) _uart_interrupt                                       1     1      0      68
                                              2 COMRAM     1     1      0
           i2_clearUARTReceiveBuffer
 ---------------------------------------------------------------------------------
 (7) i2_clearUARTReceiveBuffer                             2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _temperature_interrupt                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReceive
   _clearUARTReceiveBuffer
   _delay_ms
   _initADC
   _initInterrupts
   _initLoRa
     _delay_ms
     _sendUARTMessage
   _initUART1
   _makeTempMessage
     _calculateTemp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
     _fillInTemp
       ___awdiv
         ___awmod (ARG)
       ___awmod
   _sendUARTMessage

 _high_ISR (ROOT)
   _temperature_interrupt
   _uart_interrupt
     i2_clearUARTReceiveBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1A      99       5       95.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3C      4D       1       81.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      E6       6        0.0%
DATA                 0      0      E6       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Mar 17 00:32:15 2017

        ?i2_clearUARTReceiveBuffer 0001             _clearUARTReceiveBuffer 199E  
                     ___awdiv@sign 001D                                l110 1AC4  
                              l238 1A2A                                l184 1006  
                              l187 105A                                l524 1416  
                              l466 158E                                u801 12A6  
                              u731 1372                                u751 139A  
                              u781 127E             ?_temperature_interrupt 0001  
                     ___awmod@sign 0017                                prod 000FF3  
                              wreg 000FE8                         _TXSTA1bits 000FAD  
                     ___ftdiv@cntr 0027                       ___ftdiv@sign 002C  
                             l1401 1584                               l1423 138A  
                             l1503 1328                               l1531 17A6  
                             l1429 13B2                               l1533 17AE  
                             l1525 1790                               l1391 1528  
                             l1551 17E6                               l1543 17CE  
                             l1535 17B2                               l1519 1780  
                             l1393 1546                               l1385 1510  
                             l1449 13F0                               l1705 10E8  
                             l1651 1A18                               l1475 12BE  
                             l1547 17D8                               l1571 181E  
                             l1563 1804                               l1397 155C  
                             l1389 151E                               l1493 1300  
                             l1469 1296                               l1573 1826  
                             l1709 10F0                               l1399 157A  
                             l1575 182A                               l1583 1848  
                             l1567 1810                               l1671 0FD4  
                             l1489 12F0                               l1913 1164  
                             l1771 19A6                               l1499 1318  
                             l1931 11F6                               l1587 1856  
                             l1579 183E                               l1683 1028  
                             l1781 19CC                               l1941 1226  
                             l1677 1010                               l1775 19B6  
                             l1599 197A                               l1943 1236  
                             l1935 120A                               l1695 1076  
                             l1945 1240                               l1697 107C  
                             l1689 1062                               l1949 125C  
                             l1969 1942                               l1985 1702  
                             u1110 105A                               u1310 118A  
                             u1090 1006                               u1315 1180  
                             u1291 1140                               u1387 1A1E  
                             _main 16E8                       ___ftpack@arg 0012  
                     ___ftpack@exp 0015                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004E  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 0086  
                 fillInTemp@i_1120 0027                   fillInTemp@i_1121 0029  
                 ??_uart_interrupt 0003                       ___ftmul@cntr 003A  
          __end_of_makeTempMessage 1966                       ___param_bank 000010  
                     ___ftmul@sign 003B                       ___fttol@exp1 00D4  
                     ___fttol@lval 00D0                   ?_sendUARTMessage 0012  
                     _BAUDCON1bits 000F7E                              ?_main 0001  
                  __end_of___awdiv 17F0                              _ADRES 000FC3  
            __end_of_ambient_ascii 0F23                    __end_of___awmod 1860  
                            _DELAY 0F28                    __end_of___ftdiv 1448  
                  __end_of___ftmul 1362                    ___awdiv@divisor 001A  
                  __end_of___fttol 126E                              i2l205 15B6  
                            i2l206 164A                              i2l207 15D0  
                            i2l208 15EA                              i2l209 1604  
                  ___awdiv@counter 001C                    __end_of_initADC 1A6E  
                    ___awtoft@sign 001D                      ___ftpack@sign 0016  
                            tablat 000FF5                              status 000FD8  
                  __initialization 18C2                       __end_of_main 176C  
                           ??_main 003D                      ___fttol@sign1 00CF  
                    __activetblptr 000003                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ANCON0 000F48  
                           _ANCON1 000F49                   ___awdiv@dividend 0018  
                 __end_of___awtoft 199E                   __end_of___ftpack 15AE  
                           i2l1731 19EE                     __CFG_WDTEN$OFF 000000  
                           i2l1727 19DE                             i2l1823 16BE  
                           i2l1815 168A                             i2l1841 1620  
                           i2l1737 1A04                             _INTCON 000FF2  
                           _RCREG1 000FAF                             _SPBRG1 000FB0  
                           _TXREG1 000FAE                       ?_UARTReceive 0001  
                 __end_of_delay_ms 1A40                     __CFG_XINST$OFF 000000  
                 __end_of_high_ISR 0086               _temp_display_message 00E5  
                 ?_makeTempMessage 0001                          ??___awdiv 001C  
                        ??___awmod 0016                          ??___ftdiv 0024  
                        ??___ftmul 0033                          ??___fttol 00CA  
                 __end_of_initLoRa 18C2                             clear_0 18C8  
                           clear_1 18D4                   ___awdiv@quotient 001E  
                  ___awmod@divisor 0014                    ___awmod@counter 0016  
                        ??_initADC 0012              ___ftmul@f3_as_product 0037  
            __end_of_set_data_rate 0F10                       __pdataCOMRAM 004D  
                     __mediumconst 0000                             tblptrh 000FF7  
                           tblptrl 000FF6                             tblptru 000FF8  
 __end_ofi2_clearUARTReceiveBuffer 1A0E                         __accesstop 0060  
          __end_of__initialization 190C            ?_clearUARTReceiveBuffer 0001  
                    __end_of_DELAY 0F2C                      ___rparam_used 000001  
                       ___ftdiv@f1 001E                         ___ftdiv@f2 0021  
                       ___ftdiv@f3 0028                         ___awtoft@c 001A  
                       ___ftmul@f1 002D                         ___ftmul@f2 0030  
                       ___fttol@f1 00C6                     __pcstackCOMRAM 0001  
                     __pidataBANK0 1A8A            __size_of_initInterrupts 0008  
          ??_temperature_interrupt 0001                         __pbssBANK0 0060  
               __size_of_initUART1 001C     __end_of_clearUARTReceiveBuffer 19D6  
            __end_of_getVerCommand 0F1E                          ?___awtoft 001A  
                        ?___ftpack 0012                         _fillInTemp 0FB4  
           __size_of_calculateTemp 00B8                 __CFG_OSC$INTOSCPLL 000000  
                        ?_delay_ms 0012                            _SPBRGH1 000F7F  
                        ?_high_ISR 0001                   __CFG_CFGPLLEN$ON 000000  
                        ?_initLoRa 0001               UARTReceive@on_or_off 0012  
         i2_clearUARTReceiveBuffer 19D6                            __Hparam 0000  
                          __Lparam 0000               __size_of_UARTReceive 0010  
                          ___awdiv 176C                            ___awmod 17F0  
                          ___ftdiv 1362                            ___ftmul 126E  
                          ___fttol 112A                       __psmallconst 0F00  
                          __pcinit 18C2                         ??___awtoft 001D  
                       ??___ftpack 0017                  __end_of_initUART1 1A8A  
                          __ramtop 0F00                            __ptext0 16E8  
                          __ptext1 1916                            __ptext2 0FB4  
                          __ptext3 17F0                            __ptext4 176C  
                          __ptext5 1448                            __ptext6 112A  
                          __ptext7 126E                            __ptext8 1362  
                          __ptext9 1966                            _initADC 1A40  
                 ___awmod@dividend 0012           __size_of_sendUARTMessage 0014  
                       ??_delay_ms 0014                         ??_high_ISR 0004  
                       delay_ms@ms 0012               end_of_initialization 190C  
                       _minus_pipe 0041                         _pipe_ascii 0F23  
                       ??_initLoRa 0017               __end_of_join_network 0FB2  
                    _calculateTemp 1448                            postdec1 000FE5  
                   _initInterrupts 1AC8                            postinc0 000FEE  
                          postinc2 000FDE                        ?_fillInTemp 0001  
        _uart_receive_buffer_index 004B            __size_of_uart_interrupt 009A  
                        _PORTAbits 000F80                          _PORTBbits 000F81  
                 __CFG_CPUDIV$OSC1 000000                          _TRISAbits 000F92  
                        _TRISBbits 000F93                          _TRISCbits 000F94  
                   ?_calculateTemp 00D5                        ___ftdiv@exp 002B  
           __end_of_initInterrupts 1AD0                        ___ftmul@exp 0036  
                    __pidataCOMRAM 1AD0     __size_of_temperature_interrupt 00A0  
    __end_of_temperature_interrupt 164E                      _minus_ambient 003F  
         __size_of_makeTempMessage 0050                      _ambient_ascii 0F1E  
              start_initialization 18C2            clearUARTReceiveBuffer@i 0012  
 sendUARTMessage@newMessagePointer 0012                  ??_sendUARTMessage 0014  
              __size_of_fillInTemp 0176                     _currentChannel 00C4  
                  ?_initInterrupts 0001                        __pdataBANK0 00E0  
               _calculateTemp$1682 00DB                  __size_of___awtoft 0038  
                __size_of___ftpack 00AE                        __pbssCOMRAM 003D  
                    __pcstackBANK0 00C6         ??i2_clearUARTReceiveBuffer 0001  
                __size_of_delay_ms 0032                    ??_calculateTemp 00D9  
                __size_of_high_ISR 007E                  __size_of_initLoRa 0062  
                        __pintcode 0008                          _asciiTemp 00E0  
                         ?___awdiv 0018                           ?___awmod 0012  
                         ?___ftdiv 001E                           ?___ftmul 002D  
                         ?___fttol 00C6                     _uart_interrupt 164E  
                     _join_network 0FA2                           ?_initADC 0001  
                      __smallconst 0F00                      _set_data_rate 0F01  
                        _initUART1 1A6E                  ??_makeTempMessage 003C  
                    ??_UARTReceive 0012                          delay_ms@i 0015  
                         _PIE1bits 000F9D                           i2u123_40 1686  
                         i2u125_40 16B0                           i2u125_47 16A6  
            _currentMessagePointer 003D                           i2u127_40 16E0  
                         i2u127_47 16D6                           _PIR1bits 000F9E  
                         _RCONbits 000FD0                          _temp_pipe 0049  
           __end_of_uart_interrupt 16E8                          _plus_pipe 0045  
                     ??_fillInTemp 0020                         _ADCON0bits 000FC2  
                       ?_initUART1 0001                _uart_receive_buffer 0060  
         ??_clearUARTReceiveBuffer 0012                     fillInTemp@temp 002A  
                        copy_data0 18EE         fillInTemp@pipe_or_ambience 0024  
               __end_of_fillInTemp 112A                           __Hrparam 0000  
                         __Lrparam 0000                      _getVerCommand 0F10  
              __end_of_UARTReceive 1AC8                    ?_uart_interrupt 0001  
              __end_of_set_dev_eui 0FA2                __end_of_set_app_eui 0F80  
              __end_of_set_app_key 0F5E                   __size_of___awdiv 0084  
                 __size_of___awmod 0070                   __size_of___ftdiv 00E6  
                 __size_of___ftmul 00F4                   __size_of___fttol 0144  
                         ___awtoft 1966                           ___ftpack 1500  
                  _sendUARTMessage 1AA4                   __size_of_initADC 002E  
                         _delay_ms 1A0E                           __ptext10 1500  
                         __ptext11 1A6E                           __ptext20 164E  
                         __ptext12 1860                           __ptext21 19D6  
                         __ptext13 1AA4                           __ptext22 15AE  
                         __ptext14 1A0E                           __ptext15 1AC8  
                         __ptext16 1A40                           __ptext17 199E  
                         __ptext18 1AB8                           _high_ISR 0008  
                    _isCommandSent 004D                   ??_initInterrupts 0012  
                         _initLoRa 1860                      __size_of_main 0084  
                         int$flags 004E     makeTempMessage@pipe_or_ambient 003C  
                     _temp_ambient 0047                 __end_of_pipe_ascii 0F28  
                      ??_initUART1 0012              _temperature_interrupt 15AE  
  __size_of_clearUARTReceiveBuffer 0038                           intlevel2 0000  
               calculateTemp@minus 00D7                        _UARTReceive 1AB8  
                       _RCSTA1bits 000FAC                        _set_dev_eui 0F80  
                      _set_app_eui 0F5E                        _set_app_key 0F2C  
                       _OSCCONbits 000FD3          i2clearUARTReceiveBuffer@i 0001  
          __end_of_sendUARTMessage 1AB8                       _plus_ambient 0043  
                  _makeTempMessage 1916                  calculateTemp@temp 00DE  
                calculateTemp@plus 00D5                        fillInTemp@i 0025  
            __end_of_calculateTemp 1500  __size_ofi2_clearUARTReceiveBuffer 0038  
