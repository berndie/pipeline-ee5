

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Thu Mar 16 15:26:13 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18LF27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	bitnvCOMRAM,global,bit,class=COMRAM,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    37                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    38                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    39  0000                     
    40                           	psect	idataBANK0
    41  00193E                     __pidataBANK0:
    42                           	opt stack 0
    43                           
    44                           ;initializer for _asciiTemp
    45  00193E  20                 	db	32
    46  00193F  20                 	db	32
    47  001940  20                 	db	32
    48  001941  20                 	db	32
    49  001942  20                 	db	32
    50                           
    51                           ;initializer for _temp_display_message
    52  001943  50                 	db	80
    53  001944  69                 	db	105
    54  001945  70                 	db	112
    55  001946  65                 	db	101
    56  001947  20                 	db	32
    57  001948  74                 	db	116
    58  001949  65                 	db	101
    59  00194A  6D                 	db	109
    60  00194B  70                 	db	112
    61  00194C  20                 	db	32
    62  00194D  3D                 	db	61
    63  00194E  20                 	db	32
    64  00194F  20                 	db	32
    65  001950  20                 	db	32
    66  001951  20                 	db	32
    67  001952  20                 	db	32
    68  001953  20                 	db	32
    69  001954  0D                 	db	13
    70  001955  0A                 	db	10
    71  001956  00                 	db	0
    72                           
    73                           	psect	smallconst
    74  000F00                     __psmallconst:
    75                           	opt stack 0
    76  000F00  00                 	db	0
    77  000F01                     _set_data_rate:
    78                           	opt stack 0
    79  000F01  6D                 	db	109
    80  000F02  61                 	db	97
    81  000F03  63                 	db	99
    82  000F04  20                 	db	32
    83  000F05  73                 	db	115
    84  000F06  65                 	db	101
    85  000F07  74                 	db	116
    86  000F08  20                 	db	32
    87  000F09  64                 	db	100
    88  000F0A  72                 	db	114
    89  000F0B  20                 	db	32
    90  000F0C  78                 	db	120
    91  000F0D  0D                 	db	13
    92  000F0E  0A                 	db	10
    93  000F0F  00                 	db	0
    94  000F10                     __end_of_set_data_rate:
    95                           	opt stack 0
    96  000F10                     _getVerCommand:
    97                           	opt stack 0
    98  000F10  73                 	db	115
    99  000F11  79                 	db	121
   100  000F12  73                 	db	115
   101  000F13  20                 	db	32
   102  000F14  67                 	db	103
   103  000F15  65                 	db	101
   104  000F16  74                 	db	116
   105  000F17  20                 	db	32
   106  000F18  76                 	db	118
   107  000F19  65                 	db	101
   108  000F1A  72                 	db	114
   109  000F1B  0D                 	db	13
   110  000F1C  0A                 	db	10
   111  000F1D  00                 	db	0
   112  000F1E                     __end_of_getVerCommand:
   113                           	opt stack 0
   114  000F1E                     _ambient_ascii:
   115                           	opt stack 0
   116  000F1E  41                 	db	65
   117  000F1F  6D                 	db	109
   118  000F20  62                 	db	98
   119  000F21  2E                 	db	46
   120  000F22  00                 	db	0
   121  000F23                     __end_of_ambient_ascii:
   122                           	opt stack 0
   123  000F23                     _pipe_ascii:
   124                           	opt stack 0
   125  000F23  50                 	db	80
   126  000F24  69                 	db	105
   127  000F25  70                 	db	112
   128  000F26  65                 	db	101
   129  000F27  00                 	db	0
   130  000F28                     __end_of_pipe_ascii:
   131                           	opt stack 0
   132  000F28                     _DELAY:
   133                           	opt stack 0
   134  000F28  D4C0               	dw	54464
   135  000F2A  0001               	dw	1
   136  000F2C                     __end_of_DELAY:
   137                           	opt stack 0
   138  000F2C                     _set_app_key:
   139                           	opt stack 0
   140  000F2C  6D                 	db	109
   141  000F2D  61                 	db	97
   142  000F2E  63                 	db	99
   143  000F2F  20                 	db	32
   144  000F30  73                 	db	115
   145  000F31  65                 	db	101
   146  000F32  74                 	db	116
   147  000F33  20                 	db	32
   148  000F34  61                 	db	97
   149  000F35  70                 	db	112
   150  000F36  70                 	db	112
   151  000F37  6B                 	db	107
   152  000F38  65                 	db	101
   153  000F39  79                 	db	121
   154  000F3A  20                 	db	32
   155  000F3B  32                 	db	50
   156  000F3C  45                 	db	69
   157  000F3D  31                 	db	49
   158  000F3E  35                 	db	53
   159  000F3F  41                 	db	65
   160  000F40  46                 	db	70
   161  000F41  43                 	db	67
   162  000F42  39                 	db	57
   163  000F43  34                 	db	52
   164  000F44  41                 	db	65
   165  000F45  37                 	db	55
   166  000F46  45                 	db	69
   167  000F47  46                 	db	70
   168  000F48  36                 	db	54
   169  000F49  39                 	db	57
   170  000F4A  41                 	db	65
   171  000F4B  45                 	db	69
   172  000F4C  36                 	db	54
   173  000F4D  31                 	db	49
   174  000F4E  41                 	db	65
   175  000F4F  38                 	db	56
   176  000F50  31                 	db	49
   177  000F51  34                 	db	52
   178  000F52  37                 	db	55
   179  000F53  33                 	db	51
   180  000F54  37                 	db	55
   181  000F55  43                 	db	67
   182  000F56  33                 	db	51
   183  000F57  38                 	db	56
   184  000F58  36                 	db	54
   185  000F59  39                 	db	57
   186  000F5A  39                 	db	57
   187  000F5B  0D                 	db	13
   188  000F5C  0A                 	db	10
   189  000F5D  00                 	db	0
   190  000F5E                     __end_of_set_app_key:
   191                           	opt stack 0
   192  000F5E                     _set_app_eui:
   193                           	opt stack 0
   194  000F5E  6D                 	db	109
   195  000F5F  61                 	db	97
   196  000F60  63                 	db	99
   197  000F61  20                 	db	32
   198  000F62  73                 	db	115
   199  000F63  65                 	db	101
   200  000F64  74                 	db	116
   201  000F65  20                 	db	32
   202  000F66  61                 	db	97
   203  000F67  70                 	db	112
   204  000F68  70                 	db	112
   205  000F69  65                 	db	101
   206  000F6A  75                 	db	117
   207  000F6B  69                 	db	105
   208  000F6C  20                 	db	32
   209  000F6D  37                 	db	55
   210  000F6E  34                 	db	52
   211  000F6F  43                 	db	67
   212  000F70  35                 	db	53
   213  000F71  34                 	db	52
   214  000F72  32                 	db	50
   215  000F73  34                 	db	52
   216  000F74  35                 	db	53
   217  000F75  33                 	db	51
   218  000F76  38                 	db	56
   219  000F77  35                 	db	53
   220  000F78  37                 	db	55
   221  000F79  39                 	db	57
   222  000F7A  37                 	db	55
   223  000F7B  34                 	db	52
   224  000F7C  41                 	db	65
   225  000F7D  0D                 	db	13
   226  000F7E  0A                 	db	10
   227  000F7F  00                 	db	0
   228  000F80                     __end_of_set_app_eui:
   229                           	opt stack 0
   230  000F80                     _set_dev_eui:
   231                           	opt stack 0
   232  000F80  6D                 	db	109
   233  000F81  61                 	db	97
   234  000F82  63                 	db	99
   235  000F83  20                 	db	32
   236  000F84  73                 	db	115
   237  000F85  65                 	db	101
   238  000F86  74                 	db	116
   239  000F87  20                 	db	32
   240  000F88  64                 	db	100
   241  000F89  65                 	db	101
   242  000F8A  76                 	db	118
   243  000F8B  65                 	db	101
   244  000F8C  75                 	db	117
   245  000F8D  69                 	db	105
   246  000F8E  20                 	db	32
   247  000F8F  30                 	db	48
   248  000F90  30                 	db	48
   249  000F91  30                 	db	48
   250  000F92  34                 	db	52
   251  000F93  41                 	db	65
   252  000F94  33                 	db	51
   253  000F95  30                 	db	48
   254  000F96  42                 	db	66
   255  000F97  30                 	db	48
   256  000F98  30                 	db	48
   257  000F99  31                 	db	49
   258  000F9A  41                 	db	65
   259  000F9B  43                 	db	67
   260  000F9C  46                 	db	70
   261  000F9D  37                 	db	55
   262  000F9E  44                 	db	68
   263  000F9F  0D                 	db	13
   264  000FA0  0A                 	db	10
   265  000FA1  00                 	db	0
   266  000FA2                     __end_of_set_dev_eui:
   267                           	opt stack 0
   268  000FA2                     _join_network:
   269                           	opt stack 0
   270  000FA2  6D                 	db	109
   271  000FA3  61                 	db	97
   272  000FA4  63                 	db	99
   273  000FA5  20                 	db	32
   274  000FA6  6A                 	db	106
   275  000FA7  6F                 	db	111
   276  000FA8  69                 	db	105
   277  000FA9  6E                 	db	110
   278  000FAA  20                 	db	32
   279  000FAB  6F                 	db	111
   280  000FAC  74                 	db	116
   281  000FAD  61                 	db	97
   282  000FAE  61                 	db	97
   283  000FAF  0D                 	db	13
   284  000FB0  0A                 	db	10
   285  000FB1  00                 	db	0
   286  000FB2                     __end_of_join_network:
   287                           	opt stack 0
   288  000FB2  00                 	db	0	; dummy byte at the end
   289  0000                     
   290                           	psect	bitnvCOMRAM
   291  000260                     __pbitnvCOMRAM:
   292                           	opt stack 0
   293  000260                     _isCommandSent:
   294                           	opt stack 0
   295  000260                     	ds	1
   296  0000                     _ANCON0	set	3912
   297  0000                     _ANCON1	set	3913
   298  0000                     _ADRES	set	4035
   299  0000                     _ADCON0	set	4034
   300  0000                     _ADCON0bits	set	4034
   301  0000                     _ADCON1	set	4033
   302  0000                     _BAUDCON1bits	set	3966
   303  0000                     _INTCON	set	4082
   304  0000                     _OSCCONbits	set	4051
   305  0000                     _PIE1bits	set	3997
   306  0000                     _PIR1bits	set	3998
   307  0000                     _PORTAbits	set	3968
   308  0000                     _PORTBbits	set	3969
   309  0000                     _RCONbits	set	4048
   310  0000                     _RCREG1	set	4015
   311  0000                     _RCSTA1bits	set	4012
   312  0000                     _SPBRG1	set	4016
   313  0000                     _SPBRGH1	set	3967
   314  0000                     _TRISAbits	set	3986
   315  0000                     _TRISBbits	set	3987
   316  0000                     _TRISCbits	set	3988
   317  0000                     _TXREG1	set	4014
   318  0000                     _TXSTA1bits	set	4013
   319                           
   320                           ; #config settings
   321  0000                     
   322                           	psect	cinit
   323  00171A                     __pcinit:
   324                           	opt stack 0
   325  00171A                     start_initialization:
   326                           	opt stack 0
   327  00171A                     __initialization:
   328                           	opt stack 0
   329                           
   330                           ; Clear objects allocated to BIGRAM (1000 bytes)
   331  00171A  EE00  F097         	lfsr	0,__pbssBIGRAM
   332  00171E  EE13 F0E8          	lfsr	1,1000
   333  001722                     clear_0:
   334  001722  6AEE               	clrf	postinc0,c
   335  001724  50E5               	movf	postdec1,w,c
   336  001726  50E1               	movf	fsr1l,w,c
   337  001728  E1FC               	bnz	clear_0
   338  00172A  50E2               	movf	fsr1h,w,c
   339  00172C  E1FA               	bnz	clear_0
   340                           
   341                           ; Clear objects allocated to BANK0 (2 bytes)
   342  00172E  0100               	movlb	0
   343  001730  6B96               	clrf	(__pbssBANK0+1)& (0+255),b
   344  001732  6B95               	clrf	__pbssBANK0& (0+255),b
   345                           
   346                           ; Clear objects allocated to COMRAM (16 bytes)
   347  001734  EE00  F03C         	lfsr	0,__pbssCOMRAM
   348  001738  0E10               	movlw	16
   349  00173A                     clear_1:
   350  00173A  6AEE               	clrf	postinc0,c
   351  00173C  06E8               	decf	wreg,f,c
   352  00173E  E1FD               	bnz	clear_1
   353                           
   354                           ; Initialize objects allocated to BANK0 (25 bytes)
   355                           ; load TBLPTR registers with __pidataBANK0
   356  001740  0E3E               	movlw	low __pidataBANK0
   357  001742  6EF6               	movwf	tblptrl,c
   358  001744  0E19               	movlw	high __pidataBANK0
   359  001746  6EF7               	movwf	tblptrh,c
   360  001748  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   361  00174A  6EF8               	movwf	tblptru,c
   362  00174C  EE00  F07C         	lfsr	0,__pdataBANK0
   363  001750  EE10 F019          	lfsr	1,25
   364  001754                     copy_data0:
   365  001754  0009               	tblrd		*+
   366  001756  CFF5 FFEE          	movff	tablat,postinc0
   367  00175A  50E5               	movf	postdec1,w,c
   368  00175C  50E1               	movf	fsr1l,w,c
   369  00175E  E1FA               	bnz	copy_data0
   370  001760                     end_of_initialization:
   371                           	opt stack 0
   372  001760                     __end_of__initialization:
   373                           	opt stack 0
   374  001760  904D               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   375  001762  924D               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   376  001764  0100               	movlb	0
   377  001766  EF5C  F00B         	goto	_main	;jump to C main() function
   378                           tblptru	equ	0xFF8
   379                           tblptrh	equ	0xFF7
   380                           tblptrl	equ	0xFF6
   381                           tablat	equ	0xFF5
   382                           postinc0	equ	0xFEE
   383                           wreg	equ	0xFE8
   384                           postdec1	equ	0xFE5
   385                           fsr1h	equ	0xFE2
   386                           fsr1l	equ	0xFE1
   387                           
   388                           	psect	bssCOMRAM
   389  00003C                     __pbssCOMRAM:
   390                           	opt stack 0
   391  00003C                     _currentMessagePointer:
   392                           	opt stack 0
   393  00003C                     	ds	2
   394  00003E                     _minus_ambient:
   395                           	opt stack 0
   396  00003E                     	ds	2
   397  000040                     _minus_pipe:
   398                           	opt stack 0
   399  000040                     	ds	2
   400  000042                     _plus_ambient:
   401                           	opt stack 0
   402  000042                     	ds	2
   403  000044                     _plus_pipe:
   404                           	opt stack 0
   405  000044                     	ds	2
   406  000046                     _temp_ambient:
   407                           	opt stack 0
   408  000046                     	ds	2
   409  000048                     _temp_pipe:
   410                           	opt stack 0
   411  000048                     	ds	2
   412  00004A                     _uart_receive_buffer_index:
   413                           	opt stack 0
   414  00004A                     	ds	2
   415                           tblptru	equ	0xFF8
   416                           tblptrh	equ	0xFF7
   417                           tblptrl	equ	0xFF6
   418                           tablat	equ	0xFF5
   419                           postinc0	equ	0xFEE
   420                           wreg	equ	0xFE8
   421                           postdec1	equ	0xFE5
   422                           fsr1h	equ	0xFE2
   423                           fsr1l	equ	0xFE1
   424                           
   425                           	psect	bssBANK0
   426  000095                     __pbssBANK0:
   427                           	opt stack 0
   428  000095                     _currentChannel:
   429                           	opt stack 0
   430  000095                     	ds	2
   431                           tblptru	equ	0xFF8
   432                           tblptrh	equ	0xFF7
   433                           tblptrl	equ	0xFF6
   434                           tablat	equ	0xFF5
   435                           postinc0	equ	0xFEE
   436                           wreg	equ	0xFE8
   437                           postdec1	equ	0xFE5
   438                           fsr1h	equ	0xFE2
   439                           fsr1l	equ	0xFE1
   440                           
   441                           	psect	dataBANK0
   442  00007C                     __pdataBANK0:
   443                           	opt stack 0
   444  00007C                     _asciiTemp:
   445                           	opt stack 0
   446  00007C                     	ds	5
   447  000081                     _temp_display_message:
   448                           	opt stack 0
   449  000081                     	ds	20
   450                           tblptru	equ	0xFF8
   451                           tblptrh	equ	0xFF7
   452                           tblptrl	equ	0xFF6
   453                           tablat	equ	0xFF5
   454                           postinc0	equ	0xFEE
   455                           wreg	equ	0xFE8
   456                           postdec1	equ	0xFE5
   457                           fsr1h	equ	0xFE2
   458                           fsr1l	equ	0xFE1
   459                           
   460                           	psect	bssBIGRAM
   461  000097                     __pbssBIGRAM:
   462                           	opt stack 0
   463  000097                     _uart_receive_buffer:
   464                           	opt stack 0
   465  000097                     	ds	1000
   466                           tblptru	equ	0xFF8
   467                           tblptrh	equ	0xFF7
   468                           tblptrl	equ	0xFF6
   469                           tablat	equ	0xFF5
   470                           postinc0	equ	0xFEE
   471                           wreg	equ	0xFE8
   472                           postdec1	equ	0xFE5
   473                           fsr1h	equ	0xFE2
   474                           fsr1l	equ	0xFE1
   475                           
   476                           	psect	cstackBANK0
   477  000060                     __pcstackBANK0:
   478                           	opt stack 0
   479  000060                     ___ftmul@exp:
   480                           	opt stack 0
   481                           
   482                           ; 1 bytes @ 0x0
   483  000060                     	ds	1
   484  000061                     ___ftmul@f3_as_product:
   485                           	opt stack 0
   486                           
   487                           ; 3 bytes @ 0x1
   488  000061                     	ds	3
   489  000064                     ___ftmul@cntr:
   490                           	opt stack 0
   491                           
   492                           ; 1 bytes @ 0x4
   493  000064                     	ds	1
   494  000065                     ___ftmul@sign:
   495                           	opt stack 0
   496                           
   497                           ; 1 bytes @ 0x5
   498  000065                     	ds	1
   499  000066                     ??___fttol:
   500                           
   501                           ; 1 bytes @ 0x6
   502  000066                     	ds	5
   503  00006B                     ___fttol@sign1:
   504                           	opt stack 0
   505                           
   506                           ; 1 bytes @ 0xB
   507  00006B                     	ds	1
   508  00006C                     ___fttol@lval:
   509                           	opt stack 0
   510                           
   511                           ; 4 bytes @ 0xC
   512  00006C                     	ds	4
   513  000070                     ___fttol@exp1:
   514                           	opt stack 0
   515                           
   516                           ; 1 bytes @ 0x10
   517  000070                     	ds	1
   518  000071                     ?_calculateTemp:
   519                           	opt stack 0
   520  000071                     calculateTemp@plus:
   521                           	opt stack 0
   522                           
   523                           ; 2 bytes @ 0x11
   524  000071                     	ds	2
   525  000073                     calculateTemp@minus:
   526                           	opt stack 0
   527                           
   528                           ; 2 bytes @ 0x13
   529  000073                     	ds	2
   530  000075                     ??_calculateTemp:
   531                           
   532                           ; 1 bytes @ 0x15
   533  000075                     	ds	2
   534  000077                     _calculateTemp$1598:
   535                           	opt stack 0
   536                           
   537                           ; 3 bytes @ 0x17
   538  000077                     	ds	3
   539  00007A                     calculateTemp@temp:
   540                           	opt stack 0
   541                           
   542                           ; 2 bytes @ 0x1A
   543  00007A                     	ds	2
   544                           tblptru	equ	0xFF8
   545                           tblptrh	equ	0xFF7
   546                           tblptrl	equ	0xFF6
   547                           tablat	equ	0xFF5
   548                           postinc0	equ	0xFEE
   549                           wreg	equ	0xFE8
   550                           postdec1	equ	0xFE5
   551                           fsr1h	equ	0xFE2
   552                           fsr1l	equ	0xFE1
   553                           
   554                           	psect	cstackCOMRAM
   555  000001                     __pcstackCOMRAM:
   556                           	opt stack 0
   557  000001                     i2clearUARTReceiveBuffer@i:
   558                           	opt stack 0
   559                           
   560                           ; 2 bytes @ 0x0
   561  000001                     	ds	2
   562  000003                     ??_high_ISR:
   563                           
   564                           ; 1 bytes @ 0x2
   565  000003                     	ds	16
   566  000013                     ??_delay:
   567  000013                     ?___awmod:
   568                           	opt stack 0
   569  000013                     ?___ftpack:
   570                           	opt stack 0
   571  000013                     UARTReceive@on_or_off:
   572                           	opt stack 0
   573  000013                     clearUARTReceiveBuffer@i:
   574                           	opt stack 0
   575  000013                     sendUARTMessage@newMessagePointer:
   576                           	opt stack 0
   577  000013                     ___awmod@dividend:
   578                           	opt stack 0
   579  000013                     ___ftpack@arg:
   580                           	opt stack 0
   581                           
   582                           ; 3 bytes @ 0x12
   583  000013                     	ds	1
   584  000014                     delay@time:
   585                           	opt stack 0
   586                           
   587                           ; 4 bytes @ 0x13
   588  000014                     	ds	1
   589  000015                     ___awmod@divisor:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0x14
   593  000015                     	ds	1
   594  000016                     ___ftpack@exp:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0x15
   598  000016                     	ds	1
   599  000017                     ___awmod@counter:
   600                           	opt stack 0
   601  000017                     ___ftpack@sign:
   602                           	opt stack 0
   603                           
   604                           ; 1 bytes @ 0x16
   605  000017                     	ds	1
   606  000018                     ??___ftpack:
   607  000018                     ___awmod@sign:
   608                           	opt stack 0
   609                           
   610                           ; 1 bytes @ 0x17
   611  000018                     	ds	1
   612  000019                     ?___awdiv:
   613                           	opt stack 0
   614  000019                     ___awdiv@dividend:
   615                           	opt stack 0
   616                           
   617                           ; 2 bytes @ 0x18
   618  000019                     	ds	2
   619  00001B                     ?___awtoft:
   620                           	opt stack 0
   621  00001B                     ___awdiv@divisor:
   622                           	opt stack 0
   623  00001B                     ___awtoft@c:
   624                           	opt stack 0
   625                           
   626                           ; 2 bytes @ 0x1A
   627  00001B                     	ds	2
   628  00001D                     ___awdiv@counter:
   629                           	opt stack 0
   630                           
   631                           ; 1 bytes @ 0x1C
   632  00001D                     	ds	1
   633  00001E                     ___awdiv@sign:
   634                           	opt stack 0
   635  00001E                     ___awtoft@sign:
   636                           	opt stack 0
   637                           
   638                           ; 1 bytes @ 0x1D
   639  00001E                     	ds	1
   640  00001F                     ?___ftdiv:
   641                           	opt stack 0
   642  00001F                     ___awdiv@quotient:
   643                           	opt stack 0
   644  00001F                     ___ftdiv@f1:
   645                           	opt stack 0
   646                           
   647                           ; 3 bytes @ 0x1E
   648  00001F                     	ds	2
   649  000021                     ??_fillInTemp:
   650                           
   651                           ; 1 bytes @ 0x20
   652  000021                     	ds	1
   653  000022                     ___ftdiv@f2:
   654                           	opt stack 0
   655                           
   656                           ; 3 bytes @ 0x21
   657  000022                     	ds	3
   658  000025                     ??___ftdiv:
   659  000025                     fillInTemp@pipe_or_ambience:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x24
   663  000025                     	ds	1
   664  000026                     fillInTemp@i:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x25
   668  000026                     	ds	2
   669  000028                     ___ftdiv@cntr:
   670                           	opt stack 0
   671  000028                     fillInTemp@i_1008:
   672                           	opt stack 0
   673                           
   674                           ; 2 bytes @ 0x27
   675  000028                     	ds	1
   676  000029                     ___ftdiv@f3:
   677                           	opt stack 0
   678                           
   679                           ; 3 bytes @ 0x28
   680  000029                     	ds	1
   681  00002A                     fillInTemp@i_1009:
   682                           	opt stack 0
   683                           
   684                           ; 1 bytes @ 0x29
   685  00002A                     	ds	1
   686  00002B                     fillInTemp@temp:
   687                           	opt stack 0
   688                           
   689                           ; 2 bytes @ 0x2A
   690  00002B                     	ds	1
   691  00002C                     ___ftdiv@exp:
   692                           	opt stack 0
   693                           
   694                           ; 1 bytes @ 0x2B
   695  00002C                     	ds	1
   696  00002D                     ___ftdiv@sign:
   697                           	opt stack 0
   698                           
   699                           ; 1 bytes @ 0x2C
   700  00002D                     	ds	1
   701  00002E                     ?___ftmul:
   702                           	opt stack 0
   703  00002E                     ___ftmul@f1:
   704                           	opt stack 0
   705                           
   706                           ; 3 bytes @ 0x2D
   707  00002E                     	ds	3
   708  000031                     ___ftmul@f2:
   709                           	opt stack 0
   710                           
   711                           ; 3 bytes @ 0x30
   712  000031                     	ds	3
   713  000034                     ??___ftmul:
   714                           
   715                           ; 1 bytes @ 0x33
   716  000034                     	ds	3
   717  000037                     ?___fttol:
   718                           	opt stack 0
   719  000037                     ___fttol@f1:
   720                           	opt stack 0
   721                           
   722                           ; 3 bytes @ 0x36
   723  000037                     	ds	4
   724  00003B                     makeTempMessage@pipe_or_ambient:
   725                           	opt stack 0
   726                           
   727                           ; 1 bytes @ 0x3A
   728  00003B                     	ds	1
   729  00003C                     tblptru	equ	0xFF8
   730                           tblptrh	equ	0xFF7
   731                           tblptrl	equ	0xFF6
   732                           tablat	equ	0xFF5
   733                           postinc0	equ	0xFEE
   734                           wreg	equ	0xFE8
   735                           postdec1	equ	0xFE5
   736                           fsr1h	equ	0xFE2
   737                           fsr1l	equ	0xFE1
   738                           
   739                           ; 1 bytes @ 0x3B
   740 ;;
   741 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   742 ;;
   743 ;; *************** function _main *****************
   744 ;; Defined at:
   745 ;;		line 237 in file "main.c"
   746 ;; Parameters:    Size  Location     Type
   747 ;;		None
   748 ;; Auto vars:     Size  Location     Type
   749 ;;		None
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   759 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   760 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   761 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   762 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   763 ;;Total ram usage:        0 bytes
   764 ;; Hardware stack levels required when called:    6
   765 ;; This function calls:
   766 ;;		_UARTReceive
   767 ;;		_clearUARTReceiveBuffer
   768 ;;		_delay
   769 ;;		_initADC
   770 ;;		_initInterrupts
   771 ;;		_initLoRa
   772 ;;		_initUART1
   773 ;;		_makeTempMessage
   774 ;;		_sendUARTMessage
   775 ;; This function is called by:
   776 ;;		Startup code after reset
   777 ;; This function uses a non-reentrant model
   778 ;;
   779                           
   780                           	psect	text0
   781  0016B8                     __ptext0:
   782                           	opt stack 0
   783  0016B8                     _main:
   784                           	opt stack 25
   785                           
   786                           ;main.c: 239: OSCCONbits.IRCF0 = 1;
   787                           
   788                           ;incstack = 0
   789  0016B8  88D3               	bsf	4051,4,c	;volatile
   790                           
   791                           ;main.c: 240: OSCCONbits.SCS0 = 1;
   792  0016BA  80D3               	bsf	4051,0,c	;volatile
   793                           
   794                           ;main.c: 241: OSCCONbits.SCS1 = 1;
   795  0016BC  82D3               	bsf	4051,1,c	;volatile
   796                           
   797                           ;main.c: 243: isCommandSent = 1;
   798  0016BE  804C               	bsf	_isCommandSent/(0+8),_isCommandSent& (0+7),c
   799                           
   800                           ;main.c: 244: initUART1();
   801  0016C0  EC91  F00C         	call	_initUART1	;wreg free
   802                           
   803                           ;main.c: 245: initADC();
   804  0016C4  EC7A  F00C         	call	_initADC	;wreg free
   805                           
   806                           ;main.c: 246: initInterrupts();
   807  0016C8  ECBD  F00C         	call	_initInterrupts	;wreg free
   808                           
   809                           ;main.c: 247: clearUARTReceiveBuffer();
   810  0016CC  EC42  F00C         	call	_clearUARTReceiveBuffer	;wreg free
   811  0016D0                     l2043:
   812                           
   813                           ;main.c: 249: UARTReceive(1);
   814  0016D0  0E01               	movlw	1
   815  0016D2  ECB5  F00C         	call	_UARTReceive
   816                           
   817                           ;main.c: 250: initLoRa();
   818  0016D6  EC05  F00C         	call	_initLoRa	;wreg free
   819                           
   820                           ;main.c: 251: UARTReceive(0);
   821  0016DA  0E00               	movlw	0
   822  0016DC  ECB5  F00C         	call	_UARTReceive
   823                           
   824                           ;main.c: 253: delay();
   825  0016E0  ECDD  F00B         	call	_delay	;wreg free
   826                           
   827                           ;main.c: 254: clearUARTReceiveBuffer();
   828  0016E4  EC42  F00C         	call	_clearUARTReceiveBuffer	;wreg free
   829                           
   830                           ;main.c: 255: delay();
   831  0016E8  ECDD  F00B         	call	_delay	;wreg free
   832                           
   833                           ;main.c: 257: makeTempMessage(0);
   834  0016EC  0E00               	movlw	0
   835  0016EE  ECB5  F00B         	call	_makeTempMessage
   836                           
   837                           ;main.c: 258: sendUARTMessage(temp_display_message);
   838  0016F2  0E81               	movlw	low _temp_display_message
   839  0016F4  6E13               	movwf	sendUARTMessage@newMessagePointer,c
   840  0016F6  0E00               	movlw	high _temp_display_message
   841  0016F8  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
   842  0016FA  ECAC  F00C         	call	_sendUARTMessage	;wreg free
   843                           
   844                           ;main.c: 259: delay();
   845  0016FE  ECDD  F00B         	call	_delay	;wreg free
   846                           
   847                           ;main.c: 261: makeTempMessage(1);
   848  001702  0E01               	movlw	1
   849  001704  ECB5  F00B         	call	_makeTempMessage
   850                           
   851                           ;main.c: 262: sendUARTMessage(temp_display_message);
   852  001708  0E81               	movlw	low _temp_display_message
   853  00170A  6E13               	movwf	sendUARTMessage@newMessagePointer,c
   854  00170C  0E00               	movlw	high _temp_display_message
   855  00170E  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
   856  001710  ECAC  F00C         	call	_sendUARTMessage	;wreg free
   857                           
   858                           ;main.c: 263: delay();
   859  001714  ECDD  F00B         	call	_delay	;wreg free
   860  001718  D7DB               	goto	l2043
   861  00171A                     __end_of_main:
   862                           	opt stack 0
   863                           tblptru	equ	0xFF8
   864                           tblptrh	equ	0xFF7
   865                           tblptrl	equ	0xFF6
   866                           tablat	equ	0xFF5
   867                           postinc0	equ	0xFEE
   868                           wreg	equ	0xFE8
   869                           postdec1	equ	0xFE5
   870                           fsr1h	equ	0xFE2
   871                           fsr1l	equ	0xFE1
   872                           
   873 ;; *************** function _makeTempMessage *****************
   874 ;; Defined at:
   875 ;;		line 224 in file "main.c"
   876 ;; Parameters:    Size  Location     Type
   877 ;;  pipe_or_ambi    1    wreg     unsigned char 
   878 ;; Auto vars:     Size  Location     Type
   879 ;;  pipe_or_ambi    1   58[COMRAM] unsigned char 
   880 ;; Return value:  Size  Location     Type
   881 ;;                  1    wreg      void 
   882 ;; Registers used:
   883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   884 ;; Tracked objects:
   885 ;;		On entry : 0/0
   886 ;;		On exit  : 0/0
   887 ;;		Unchanged: 0/0
   888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   890 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   892 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   893 ;;Total ram usage:        1 bytes
   894 ;; Hardware stack levels used:    1
   895 ;; Hardware stack levels required when called:    5
   896 ;; This function calls:
   897 ;;		_calculateTemp
   898 ;;		_fillInTemp
   899 ;; This function is called by:
   900 ;;		_main
   901 ;; This function uses a non-reentrant model
   902 ;;
   903                           
   904                           	psect	text1
   905  00176A                     __ptext1:
   906                           	opt stack 0
   907  00176A                     _makeTempMessage:
   908                           	opt stack 25
   909                           
   910                           ;incstack = 0
   911                           ;makeTempMessage@pipe_or_ambient stored from wreg
   912  00176A  6E3B               	movwf	makeTempMessage@pipe_or_ambient,c
   913                           
   914                           ;main.c: 225: if(pipe_or_ambient == 0){
   915  00176C  503B               	movf	makeTempMessage@pipe_or_ambient,w,c
   916  00176E  A4D8               	btfss	status,2,c
   917  001770  D012               	goto	l2033
   918                           
   919                           ;main.c: 226: temp_pipe = calculateTemp(plus_pipe, minus_pipe);
   920  001772  C044  F071         	movff	_plus_pipe,calculateTemp@plus
   921  001776  C045  F072         	movff	_plus_pipe+1,calculateTemp@plus+1
   922  00177A  C040  F073         	movff	_minus_pipe,calculateTemp@minus
   923  00177E  C041  F074         	movff	_minus_pipe+1,calculateTemp@minus+1
   924  001782  EC2F  F00A         	call	_calculateTemp	;wreg free
   925  001786  C071  F048         	movff	?_calculateTemp,_temp_pipe
   926  00178A  C072  F049         	movff	?_calculateTemp+1,_temp_pipe+1
   927                           
   928                           ;main.c: 227: fillInTemp(0);
   929  00178E  0E00               	movlw	0
   930  001790  ECDA  F007         	call	_fillInTemp
   931                           
   932                           ;main.c: 228: }
   933  001794  0012               	return	
   934  001796                     l2033:
   935                           
   936                           ;main.c: 229: else{
   937                           ;main.c: 230: temp_ambient = calculateTemp(plus_ambient, minus_ambient);
   938  001796  C042  F071         	movff	_plus_ambient,calculateTemp@plus
   939  00179A  C043  F072         	movff	_plus_ambient+1,calculateTemp@plus+1
   940  00179E  C03E  F073         	movff	_minus_ambient,calculateTemp@minus
   941  0017A2  C03F  F074         	movff	_minus_ambient+1,calculateTemp@minus+1
   942  0017A6  EC2F  F00A         	call	_calculateTemp	;wreg free
   943  0017AA  C071  F046         	movff	?_calculateTemp,_temp_ambient
   944  0017AE  C072  F047         	movff	?_calculateTemp+1,_temp_ambient+1
   945                           
   946                           ;main.c: 231: fillInTemp(1);
   947  0017B2  0E01               	movlw	1
   948  0017B4  ECDA  F007         	call	_fillInTemp
   949  0017B8  0012               	return	
   950  0017BA                     __end_of_makeTempMessage:
   951                           	opt stack 0
   952                           tblptru	equ	0xFF8
   953                           tblptrh	equ	0xFF7
   954                           tblptrl	equ	0xFF6
   955                           tablat	equ	0xFF5
   956                           postinc0	equ	0xFEE
   957                           wreg	equ	0xFE8
   958                           postdec1	equ	0xFE5
   959                           fsr1h	equ	0xFE2
   960                           fsr1l	equ	0xFE1
   961                           status	equ	0xFD8
   962                           
   963 ;; *************** function _fillInTemp *****************
   964 ;; Defined at:
   965 ;;		line 129 in file "main.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  pipe_or_ambi    1    wreg     unsigned char 
   968 ;; Auto vars:     Size  Location     Type
   969 ;;  pipe_or_ambi    1   36[COMRAM] unsigned char 
   970 ;;  i               2   39[COMRAM] int 
   971 ;;  i               2   37[COMRAM] int 
   972 ;;  i               1   41[COMRAM] unsigned char 
   973 ;;  temp            2   42[COMRAM] int 
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   983 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   984 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   985 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   986 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   987 ;;Total ram usage:       12 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; Hardware stack levels required when called:    3
   990 ;; This function calls:
   991 ;;		___awdiv
   992 ;;		___awmod
   993 ;; This function is called by:
   994 ;;		_makeTempMessage
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           	psect	text2
   999  000FB4                     __ptext2:
  1000                           	opt stack 0
  1001  000FB4                     _fillInTemp:
  1002                           	opt stack 26
  1003                           
  1004                           ;incstack = 0
  1005                           ;fillInTemp@pipe_or_ambience stored from wreg
  1006  000FB4  6E25               	movwf	fillInTemp@pipe_or_ambience,c
  1007                           
  1008                           ;main.c: 130: signed int temp;
  1009                           ;main.c: 131: if(pipe_or_ambience == 0){
  1010  000FB6  5025               	movf	fillInTemp@pipe_or_ambience,w,c
  1011  000FB8  A4D8               	btfss	status,2,c
  1012  000FBA  D02A               	goto	l1587
  1013                           
  1014                           ;main.c: 132: for(int i = 0; i<4; i++){
  1015  000FBC  0E00               	movlw	0
  1016  000FBE  6E27               	movwf	fillInTemp@i+1,c
  1017  000FC0  0E00               	movlw	0
  1018  000FC2  6E26               	movwf	fillInTemp@i,c
  1019  000FC4  BE27               	btfsc	fillInTemp@i+1,7,c
  1020  000FC6  D006               	goto	l1581
  1021  000FC8  5027               	movf	fillInTemp@i+1,w,c
  1022  000FCA  E11D               	bnz	l103
  1023  000FCC  0E04               	movlw	4
  1024  000FCE  5C26               	subwf	fillInTemp@i,w,c
  1025  000FD0  B0D8               	btfsc	status,0,c
  1026  000FD2  D019               	goto	l103
  1027  000FD4                     l1581:
  1028                           
  1029                           ;main.c: 133: temp_display_message[i] = pipe_ascii[i];
  1030  000FD4  0E23               	movlw	low _pipe_ascii
  1031  000FD6  2426               	addwf	fillInTemp@i,w,c
  1032  000FD8  6EF6               	movwf	tblptrl,c
  1033  000FDA  0E0F               	movlw	high _pipe_ascii
  1034  000FDC  2027               	addwfc	fillInTemp@i+1,w,c
  1035  000FDE  6EF7               	movwf	tblptrh,c
  1036  000FE0                     	if	1	;There are 3 active tblptr bytes
  1037  000FE0  6AF8               	clrf	tblptru,c
  1038  000FE2  0E00               	movlw	low (__mediumconst shr (0+16))
  1039  000FE4  22F8               	addwfc	tblptru,f,c
  1040  000FE6                     	endif
  1041  000FE6  0E81               	movlw	low _temp_display_message
  1042  000FE8  2426               	addwf	fillInTemp@i,w,c
  1043  000FEA  6ED9               	movwf	fsr2l,c
  1044  000FEC  0E00               	movlw	high _temp_display_message
  1045  000FEE  2027               	addwfc	fillInTemp@i+1,w,c
  1046  000FF0  6EDA               	movwf	fsr2h,c
  1047  000FF2  0008               	tblrd		*
  1048  000FF4  CFF5 FFDF          	movff	tablat,indf2
  1049  000FF8  4A26               	infsnz	fillInTemp@i,f,c
  1050  000FFA  2A27               	incf	fillInTemp@i+1,f,c
  1051  000FFC  BE27               	btfsc	fillInTemp@i+1,7,c
  1052  000FFE  D7EA               	goto	l1581
  1053  001000  5027               	movf	fillInTemp@i+1,w,c
  1054  001002  E101               	bnz	u1070
  1055  001004  D7E3               	goto	L1
  1056  001006                     u1070:
  1057  001006                     l103:
  1058                           
  1059                           ;main.c: 134: }
  1060                           ;main.c: 135: temp = temp_pipe;
  1061  001006  C048  F02B         	movff	_temp_pipe,fillInTemp@temp
  1062  00100A  C049  F02C         	movff	_temp_pipe+1,fillInTemp@temp+1
  1063                           
  1064                           ;main.c: 136: }
  1065  00100E  D029               	goto	l1599
  1066  001010                     l1587:
  1067                           
  1068                           ;main.c: 137: else{
  1069                           ;main.c: 138: for(int i = 0; i<4; i++){
  1070  001010  0E00               	movlw	0
  1071  001012  6E29               	movwf	fillInTemp@i_1008+1,c
  1072  001014  0E00               	movlw	0
  1073  001016  6E28               	movwf	fillInTemp@i_1008,c
  1074  001018  BE29               	btfsc	fillInTemp@i_1008+1,7,c
  1075  00101A  D006               	goto	l1593
  1076  00101C  5029               	movf	fillInTemp@i_1008+1,w,c
  1077  00101E  E11D               	bnz	l106
  1078  001020  0E04               	movlw	4
  1079  001022  5C28               	subwf	fillInTemp@i_1008,w,c
  1080  001024  B0D8               	btfsc	status,0,c
  1081  001026  D019               	goto	l106
  1082  001028                     l1593:
  1083                           
  1084                           ;main.c: 139: temp_display_message[i] = ambient_ascii[i];
  1085  001028  0E1E               	movlw	low _ambient_ascii
  1086  00102A  2428               	addwf	fillInTemp@i_1008,w,c
  1087  00102C  6EF6               	movwf	tblptrl,c
  1088  00102E  0E0F               	movlw	high _ambient_ascii
  1089  001030  2029               	addwfc	fillInTemp@i_1008+1,w,c
  1090  001032  6EF7               	movwf	tblptrh,c
  1091  001034                     	if	1	;There are 3 active tblptr bytes
  1092  001034  6AF8               	clrf	tblptru,c
  1093  001036  0E00               	movlw	low (__mediumconst shr (0+16))
  1094  001038  22F8               	addwfc	tblptru,f,c
  1095  00103A                     	endif
  1096  00103A  0E81               	movlw	low _temp_display_message
  1097  00103C  2428               	addwf	fillInTemp@i_1008,w,c
  1098  00103E  6ED9               	movwf	fsr2l,c
  1099  001040  0E00               	movlw	high _temp_display_message
  1100  001042  2029               	addwfc	fillInTemp@i_1008+1,w,c
  1101  001044  6EDA               	movwf	fsr2h,c
  1102  001046  0008               	tblrd		*
  1103  001048  CFF5 FFDF          	movff	tablat,indf2
  1104  00104C  4A28               	infsnz	fillInTemp@i_1008,f,c
  1105  00104E  2A29               	incf	fillInTemp@i_1008+1,f,c
  1106  001050  BE29               	btfsc	fillInTemp@i_1008+1,7,c
  1107  001052  D7EA               	goto	l1593
  1108  001054  5029               	movf	fillInTemp@i_1008+1,w,c
  1109  001056  E101               	bnz	u1090
  1110  001058  D7E3               	goto	L2
  1111  00105A                     u1090:
  1112  00105A                     l106:
  1113                           
  1114                           ;main.c: 140: }
  1115                           ;main.c: 141: temp = temp_ambient;
  1116  00105A  C046  F02B         	movff	_temp_ambient,fillInTemp@temp
  1117  00105E  C047  F02C         	movff	_temp_ambient+1,fillInTemp@temp+1
  1118  001062                     l1599:
  1119                           
  1120                           ;main.c: 142: }
  1121                           ;main.c: 145: if(temp < 0){
  1122  001062  AE2C               	btfss	fillInTemp@temp+1,7,c
  1123  001064  D008               	goto	l1605
  1124                           
  1125                           ;main.c: 146: asciiTemp[0] = '-';
  1126  001066  0E2D               	movlw	45
  1127  001068  0100               	movlb	0	; () banked
  1128  00106A  6F7C               	movwf	_asciiTemp& (0+255),b
  1129                           
  1130                           ; BSR set to: 0
  1131                           ;main.c: 147: temp = - temp;
  1132  00106C  6C2B               	negf	fillInTemp@temp,c
  1133  00106E  1E2C               	comf	fillInTemp@temp+1,f,c
  1134  001070  B0D8               	btfsc	status,0,c
  1135  001072  2A2C               	incf	fillInTemp@temp+1,f,c
  1136                           
  1137                           ;main.c: 148: }
  1138  001074  D003               	goto	l1607
  1139  001076                     l1605:
  1140                           
  1141                           ;main.c: 149: else{
  1142                           ;main.c: 150: asciiTemp[0] = ' ';
  1143  001076  0E20               	movlw	32
  1144  001078  0100               	movlb	0	; () banked
  1145  00107A  6F7C               	movwf	_asciiTemp& (0+255),b
  1146  00107C                     l1607:
  1147                           
  1148                           ; BSR set to: 0
  1149                           ;main.c: 151: }
  1150                           ;main.c: 152: asciiTemp[1] = temp/100 + 48;
  1151  00107C  C02B  F019         	movff	fillInTemp@temp,___awdiv@dividend
  1152  001080  C02C  F01A         	movff	fillInTemp@temp+1,___awdiv@dividend+1
  1153  001084  0E00               	movlw	0
  1154  001086  6E1C               	movwf	___awdiv@divisor+1,c
  1155  001088  0E64               	movlw	100
  1156  00108A  6E1B               	movwf	___awdiv@divisor,c
  1157  00108C  ECE2  F00A         	call	___awdiv	;wreg free
  1158  001090  5019               	movf	?___awdiv,w,c
  1159  001092  0F30               	addlw	48
  1160  001094  0100               	movlb	0	; () banked
  1161  001096  6F7D               	movwf	(_asciiTemp+1)& (0+255),b
  1162                           
  1163                           ; BSR set to: 0
  1164                           ;main.c: 153: asciiTemp[2] = temp % 100 / 10 + 48;
  1165  001098  0E00               	movlw	0
  1166  00109A  6E16               	movwf	___awmod@divisor+1,c
  1167  00109C  0E64               	movlw	100
  1168  00109E  6E15               	movwf	___awmod@divisor,c
  1169  0010A0  C02B  F013         	movff	fillInTemp@temp,___awmod@dividend
  1170  0010A4  C02C  F014         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1171  0010A8  EC24  F00B         	call	___awmod	;wreg free
  1172  0010AC  C013  F019         	movff	?___awmod,___awdiv@dividend
  1173  0010B0  C014  F01A         	movff	?___awmod+1,___awdiv@dividend+1
  1174  0010B4  0E00               	movlw	0
  1175  0010B6  6E1C               	movwf	___awdiv@divisor+1,c
  1176  0010B8  0E0A               	movlw	10
  1177  0010BA  6E1B               	movwf	___awdiv@divisor,c
  1178  0010BC  ECE2  F00A         	call	___awdiv	;wreg free
  1179  0010C0  5019               	movf	?___awdiv,w,c
  1180  0010C2  0F30               	addlw	48
  1181  0010C4  0100               	movlb	0	; () banked
  1182  0010C6  6F7E               	movwf	(_asciiTemp+2)& (0+255),b
  1183                           
  1184                           ; BSR set to: 0
  1185                           ;main.c: 154: asciiTemp[3] = temp % 10 + 48;
  1186  0010C8  C02B  F013         	movff	fillInTemp@temp,___awmod@dividend
  1187  0010CC  C02C  F014         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1188  0010D0  0E00               	movlw	0
  1189  0010D2  6E16               	movwf	___awmod@divisor+1,c
  1190  0010D4  0E0A               	movlw	10
  1191  0010D6  6E15               	movwf	___awmod@divisor,c
  1192  0010D8  EC24  F00B         	call	___awmod	;wreg free
  1193  0010DC  5013               	movf	?___awmod,w,c
  1194  0010DE  0F30               	addlw	48
  1195  0010E0  0100               	movlb	0	; () banked
  1196  0010E2  6F7F               	movwf	(_asciiTemp+3)& (0+255),b
  1197                           
  1198                           ; BSR set to: 0
  1199                           ;main.c: 158: for(char i = 12; i<17; i++){
  1200  0010E4  0E0C               	movlw	12
  1201  0010E6  6E2A               	movwf	fillInTemp@i_1009,c
  1202  0010E8                     l1615:
  1203                           
  1204                           ; BSR set to: 0
  1205  0010E8  0E10               	movlw	16
  1206  0010EA  642A               	cpfsgt	fillInTemp@i_1009,c
  1207  0010EC  D001               	goto	l1619
  1208  0010EE  0012               	return	
  1209  0010F0                     l1619:
  1210                           
  1211                           ;main.c: 159: temp_display_message[i] = asciiTemp[i-12];
  1212  0010F0  0EF4               	movlw	244
  1213  0010F2  6E21               	movwf	??_fillInTemp& (0+255),c
  1214  0010F4  0EFF               	movlw	255
  1215  0010F6  6E22               	movwf	(??_fillInTemp+1)& (0+255),c
  1216  0010F8  502A               	movf	fillInTemp@i_1009,w,c
  1217  0010FA  6E23               	movwf	(??_fillInTemp+2)& (0+255),c
  1218  0010FC  6A24               	clrf	(??_fillInTemp+3)& (0+255),c
  1219  0010FE  5021               	movf	??_fillInTemp,w,c
  1220  001100  2623               	addwf	??_fillInTemp+2,f,c
  1221  001102  5022               	movf	??_fillInTemp+1,w,c
  1222  001104  2224               	addwfc	??_fillInTemp+3,f,c
  1223  001106  0E7C               	movlw	low _asciiTemp
  1224  001108  2423               	addwf	??_fillInTemp+2,w,c
  1225  00110A  6ED9               	movwf	fsr2l,c
  1226  00110C  0E00               	movlw	high _asciiTemp
  1227  00110E  2024               	addwfc	??_fillInTemp+3,w,c
  1228  001110  6EDA               	movwf	fsr2h,c
  1229  001112  502A               	movf	fillInTemp@i_1009,w,c
  1230  001114  0D01               	mullw	1
  1231  001116  0E81               	movlw	low _temp_display_message
  1232  001118  24F3               	addwf	prodl,w,c
  1233  00111A  6EE1               	movwf	fsr1l,c
  1234  00111C  0E00               	movlw	high _temp_display_message
  1235  00111E  20F4               	addwfc	prodh,w,c
  1236  001120  6EE2               	movwf	fsr1h,c
  1237  001122  CFDF FFE7          	movff	indf2,indf1
  1238  001126  2A2A               	incf	fillInTemp@i_1009,f,c
  1239  001128  D7DF               	goto	l1615
  1240  00112A                     __end_of_fillInTemp:
  1241                           	opt stack 0
  1242                           tblptru	equ	0xFF8
  1243                           tblptrh	equ	0xFF7
  1244                           tblptrl	equ	0xFF6
  1245                           tablat	equ	0xFF5
  1246                           prodh	equ	0xFF4
  1247                           prodl	equ	0xFF3
  1248                           postinc0	equ	0xFEE
  1249                           wreg	equ	0xFE8
  1250                           indf1	equ	0xFE7
  1251                           postdec1	equ	0xFE5
  1252                           fsr1h	equ	0xFE2
  1253                           fsr1l	equ	0xFE1
  1254                           indf2	equ	0xFDF
  1255                           fsr2h	equ	0xFDA
  1256                           fsr2l	equ	0xFD9
  1257                           status	equ	0xFD8
  1258                           
  1259 ;; *************** function ___awmod *****************
  1260 ;; Defined at:
  1261 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  dividend        2   18[COMRAM] int 
  1264 ;;  divisor         2   20[COMRAM] int 
  1265 ;; Auto vars:     Size  Location     Type
  1266 ;;  sign            1   23[COMRAM] unsigned char 
  1267 ;;  counter         1   22[COMRAM] unsigned char 
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  2   18[COMRAM] int 
  1270 ;; Registers used:
  1271 ;;		wreg, status,2, status,0
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1277 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1278 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1280 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1281 ;;Total ram usage:        6 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    2
  1284 ;; This function calls:
  1285 ;;		Nothing
  1286 ;; This function is called by:
  1287 ;;		_fillInTemp
  1288 ;; This function uses a non-reentrant model
  1289 ;;
  1290                           
  1291                           	psect	text3
  1292  001648                     __ptext3:
  1293                           	opt stack 0
  1294  001648                     ___awmod:
  1295                           	opt stack 26
  1296                           
  1297                           ;incstack = 0
  1298  001648  0E00               	movlw	0
  1299  00164A  6E18               	movwf	___awmod@sign,c
  1300  00164C  AE14               	btfss	___awmod@dividend+1,7,c
  1301  00164E  D006               	goto	l1487
  1302  001650  6C13               	negf	___awmod@dividend,c
  1303  001652  1E14               	comf	___awmod@dividend+1,f,c
  1304  001654  B0D8               	btfsc	status,0,c
  1305  001656  2A14               	incf	___awmod@dividend+1,f,c
  1306  001658  0E01               	movlw	1
  1307  00165A  6E18               	movwf	___awmod@sign,c
  1308  00165C                     l1487:
  1309  00165C  AE16               	btfss	___awmod@divisor+1,7,c
  1310  00165E  D004               	goto	l1491
  1311  001660  6C15               	negf	___awmod@divisor,c
  1312  001662  1E16               	comf	___awmod@divisor+1,f,c
  1313  001664  B0D8               	btfsc	status,0,c
  1314  001666  2A16               	incf	___awmod@divisor+1,f,c
  1315  001668                     l1491:
  1316  001668  5015               	movf	___awmod@divisor,w,c
  1317  00166A  1016               	iorwf	___awmod@divisor+1,w,c
  1318  00166C  B4D8               	btfsc	status,2,c
  1319  00166E  D018               	goto	l1507
  1320  001670  0E01               	movlw	1
  1321  001672  6E17               	movwf	___awmod@counter,c
  1322  001674  D004               	goto	l1497
  1323  001676                     l1495:
  1324  001676  90D8               	bcf	status,0,c
  1325  001678  3615               	rlcf	___awmod@divisor,f,c
  1326  00167A  3616               	rlcf	___awmod@divisor+1,f,c
  1327  00167C  2A17               	incf	___awmod@counter,f,c
  1328  00167E                     l1497:
  1329  00167E  AE16               	btfss	___awmod@divisor+1,7,c
  1330  001680  D7FA               	goto	l1495
  1331  001682                     l1499:
  1332  001682  5015               	movf	___awmod@divisor,w,c
  1333  001684  5C13               	subwf	___awmod@dividend,w,c
  1334  001686  5016               	movf	___awmod@divisor+1,w,c
  1335  001688  5814               	subwfb	___awmod@dividend+1,w,c
  1336  00168A  A0D8               	btfss	status,0,c
  1337  00168C  D004               	goto	l1503
  1338  00168E  5015               	movf	___awmod@divisor,w,c
  1339  001690  5E13               	subwf	___awmod@dividend,f,c
  1340  001692  5016               	movf	___awmod@divisor+1,w,c
  1341  001694  5A14               	subwfb	___awmod@dividend+1,f,c
  1342  001696                     l1503:
  1343  001696  90D8               	bcf	status,0,c
  1344  001698  3216               	rrcf	___awmod@divisor+1,f,c
  1345  00169A  3215               	rrcf	___awmod@divisor,f,c
  1346  00169C  2E17               	decfsz	___awmod@counter,f,c
  1347  00169E  D7F1               	goto	l1499
  1348  0016A0                     l1507:
  1349  0016A0  5018               	movf	___awmod@sign,w,c
  1350  0016A2  B4D8               	btfsc	status,2,c
  1351  0016A4  D004               	goto	l1511
  1352  0016A6  6C13               	negf	___awmod@dividend,c
  1353  0016A8  1E14               	comf	___awmod@dividend+1,f,c
  1354  0016AA  B0D8               	btfsc	status,0,c
  1355  0016AC  2A14               	incf	___awmod@dividend+1,f,c
  1356  0016AE                     l1511:
  1357  0016AE  C013  F013         	movff	___awmod@dividend,?___awmod
  1358  0016B2  C014  F014         	movff	___awmod@dividend+1,?___awmod+1
  1359  0016B6  0012               	return	
  1360  0016B8                     __end_of___awmod:
  1361                           	opt stack 0
  1362                           tblptru	equ	0xFF8
  1363                           tblptrh	equ	0xFF7
  1364                           tblptrl	equ	0xFF6
  1365                           tablat	equ	0xFF5
  1366                           prodh	equ	0xFF4
  1367                           prodl	equ	0xFF3
  1368                           postinc0	equ	0xFEE
  1369                           wreg	equ	0xFE8
  1370                           indf1	equ	0xFE7
  1371                           postdec1	equ	0xFE5
  1372                           fsr1h	equ	0xFE2
  1373                           fsr1l	equ	0xFE1
  1374                           indf2	equ	0xFDF
  1375                           fsr2h	equ	0xFDA
  1376                           fsr2l	equ	0xFD9
  1377                           status	equ	0xFD8
  1378                           
  1379 ;; *************** function ___awdiv *****************
  1380 ;; Defined at:
  1381 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  1382 ;; Parameters:    Size  Location     Type
  1383 ;;  dividend        2   24[COMRAM] int 
  1384 ;;  divisor         2   26[COMRAM] int 
  1385 ;; Auto vars:     Size  Location     Type
  1386 ;;  quotient        2   30[COMRAM] int 
  1387 ;;  sign            1   29[COMRAM] unsigned char 
  1388 ;;  counter         1   28[COMRAM] unsigned char 
  1389 ;; Return value:  Size  Location     Type
  1390 ;;                  2   24[COMRAM] int 
  1391 ;; Registers used:
  1392 ;;		wreg, status,2, status,0
  1393 ;; Tracked objects:
  1394 ;;		On entry : 0/0
  1395 ;;		On exit  : 0/0
  1396 ;;		Unchanged: 0/0
  1397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1398 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1399 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1401 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1402 ;;Total ram usage:        8 bytes
  1403 ;; Hardware stack levels used:    1
  1404 ;; Hardware stack levels required when called:    2
  1405 ;; This function calls:
  1406 ;;		Nothing
  1407 ;; This function is called by:
  1408 ;;		_fillInTemp
  1409 ;; This function uses a non-reentrant model
  1410 ;;
  1411                           
  1412                           	psect	text4
  1413  0015C4                     __ptext4:
  1414                           	opt stack 0
  1415  0015C4                     ___awdiv:
  1416                           	opt stack 26
  1417                           
  1418                           ;incstack = 0
  1419  0015C4  0E00               	movlw	0
  1420  0015C6  6E1E               	movwf	___awdiv@sign,c
  1421  0015C8  AE1C               	btfss	___awdiv@divisor+1,7,c
  1422  0015CA  D006               	goto	l1443
  1423  0015CC  6C1B               	negf	___awdiv@divisor,c
  1424  0015CE  1E1C               	comf	___awdiv@divisor+1,f,c
  1425  0015D0  B0D8               	btfsc	status,0,c
  1426  0015D2  2A1C               	incf	___awdiv@divisor+1,f,c
  1427  0015D4  0E01               	movlw	1
  1428  0015D6  6E1E               	movwf	___awdiv@sign,c
  1429  0015D8                     l1443:
  1430  0015D8  AE1A               	btfss	___awdiv@dividend+1,7,c
  1431  0015DA  D006               	goto	l1449
  1432  0015DC  6C19               	negf	___awdiv@dividend,c
  1433  0015DE  1E1A               	comf	___awdiv@dividend+1,f,c
  1434  0015E0  B0D8               	btfsc	status,0,c
  1435  0015E2  2A1A               	incf	___awdiv@dividend+1,f,c
  1436  0015E4  0E01               	movlw	1
  1437  0015E6  1A1E               	xorwf	___awdiv@sign,f,c
  1438  0015E8                     l1449:
  1439  0015E8  0E00               	movlw	0
  1440  0015EA  6E20               	movwf	___awdiv@quotient+1,c
  1441  0015EC  0E00               	movlw	0
  1442  0015EE  6E1F               	movwf	___awdiv@quotient,c
  1443  0015F0  501B               	movf	___awdiv@divisor,w,c
  1444  0015F2  101C               	iorwf	___awdiv@divisor+1,w,c
  1445  0015F4  B4D8               	btfsc	status,2,c
  1446  0015F6  D01C               	goto	l1471
  1447  0015F8  0E01               	movlw	1
  1448  0015FA  6E1D               	movwf	___awdiv@counter,c
  1449  0015FC  D004               	goto	l1457
  1450  0015FE                     l1455:
  1451  0015FE  90D8               	bcf	status,0,c
  1452  001600  361B               	rlcf	___awdiv@divisor,f,c
  1453  001602  361C               	rlcf	___awdiv@divisor+1,f,c
  1454  001604  2A1D               	incf	___awdiv@counter,f,c
  1455  001606                     l1457:
  1456  001606  AE1C               	btfss	___awdiv@divisor+1,7,c
  1457  001608  D7FA               	goto	l1455
  1458  00160A                     l1459:
  1459  00160A  90D8               	bcf	status,0,c
  1460  00160C  361F               	rlcf	___awdiv@quotient,f,c
  1461  00160E  3620               	rlcf	___awdiv@quotient+1,f,c
  1462  001610  501B               	movf	___awdiv@divisor,w,c
  1463  001612  5C19               	subwf	___awdiv@dividend,w,c
  1464  001614  501C               	movf	___awdiv@divisor+1,w,c
  1465  001616  581A               	subwfb	___awdiv@dividend+1,w,c
  1466  001618  A0D8               	btfss	status,0,c
  1467  00161A  D005               	goto	l1467
  1468  00161C  501B               	movf	___awdiv@divisor,w,c
  1469  00161E  5E19               	subwf	___awdiv@dividend,f,c
  1470  001620  501C               	movf	___awdiv@divisor+1,w,c
  1471  001622  5A1A               	subwfb	___awdiv@dividend+1,f,c
  1472  001624  801F               	bsf	___awdiv@quotient,0,c
  1473  001626                     l1467:
  1474  001626  90D8               	bcf	status,0,c
  1475  001628  321C               	rrcf	___awdiv@divisor+1,f,c
  1476  00162A  321B               	rrcf	___awdiv@divisor,f,c
  1477  00162C  2E1D               	decfsz	___awdiv@counter,f,c
  1478  00162E  D7ED               	goto	l1459
  1479  001630                     l1471:
  1480  001630  501E               	movf	___awdiv@sign,w,c
  1481  001632  B4D8               	btfsc	status,2,c
  1482  001634  D004               	goto	l1475
  1483  001636  6C1F               	negf	___awdiv@quotient,c
  1484  001638  1E20               	comf	___awdiv@quotient+1,f,c
  1485  00163A  B0D8               	btfsc	status,0,c
  1486  00163C  2A20               	incf	___awdiv@quotient+1,f,c
  1487  00163E                     l1475:
  1488  00163E  C01F  F019         	movff	___awdiv@quotient,?___awdiv
  1489  001642  C020  F01A         	movff	___awdiv@quotient+1,?___awdiv+1
  1490  001646  0012               	return	
  1491  001648                     __end_of___awdiv:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           prodh	equ	0xFF4
  1498                           prodl	equ	0xFF3
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           indf1	equ	0xFE7
  1502                           postdec1	equ	0xFE5
  1503                           fsr1h	equ	0xFE2
  1504                           fsr1l	equ	0xFE1
  1505                           indf2	equ	0xFDF
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _calculateTemp *****************
  1511 ;; Defined at:
  1512 ;;		line 216 in file "main.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  plus            2   17[BANK0 ] int 
  1515 ;;  minus           2   19[BANK0 ] int 
  1516 ;; Auto vars:     Size  Location     Type
  1517 ;;  temp            2   26[BANK0 ] int 
  1518 ;; Return value:  Size  Location     Type
  1519 ;;                  2   17[BANK0 ] int 
  1520 ;; Registers used:
  1521 ;;		wreg, status,2, status,0, cstack
  1522 ;; Tracked objects:
  1523 ;;		On entry : 0/0
  1524 ;;		On exit  : 0/0
  1525 ;;		Unchanged: 0/0
  1526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1527 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1528 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1529 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1530 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1531 ;;Total ram usage:       11 bytes
  1532 ;; Hardware stack levels used:    1
  1533 ;; Hardware stack levels required when called:    4
  1534 ;; This function calls:
  1535 ;;		___awtoft
  1536 ;;		___ftdiv
  1537 ;;		___ftmul
  1538 ;;		___fttol
  1539 ;; This function is called by:
  1540 ;;		_makeTempMessage
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text5
  1545  00145E                     __ptext5:
  1546                           	opt stack 0
  1547  00145E                     _calculateTemp:
  1548                           	opt stack 25
  1549                           
  1550                           ;main.c: 217: signed int temp;
  1551                           ;main.c: 218: temp = plus - minus;
  1552                           
  1553                           ;incstack = 0
  1554  00145E  C073  F075         	movff	calculateTemp@minus,??_calculateTemp
  1555  001462  C074  F076         	movff	calculateTemp@minus+1,??_calculateTemp+1
  1556  001466  0100               	movlb	0	; () banked
  1557  001468  1F75               	comf	??_calculateTemp& (0+255),f,b
  1558  00146A  1F76               	comf	(??_calculateTemp+1)& (0+255),f,b
  1559  00146C  4B75               	infsnz	??_calculateTemp& (0+255),f,b
  1560  00146E  2B76               	incf	(??_calculateTemp+1)& (0+255),f,b
  1561  001470  0100               	movlb	0	; () banked
  1562  001472  5171               	movf	calculateTemp@plus& (0+255),w,b
  1563  001474  0100               	movlb	0	; () banked
  1564  001476  2575               	addwf	??_calculateTemp& (0+255),w,b
  1565  001478  0100               	movlb	0	; () banked
  1566  00147A  6F7A               	movwf	calculateTemp@temp& (0+255),b
  1567  00147C  0100               	movlb	0	; () banked
  1568  00147E  5172               	movf	(calculateTemp@plus+1)& (0+255),w,b
  1569  001480  0100               	movlb	0	; () banked
  1570  001482  2176               	addwfc	(??_calculateTemp+1)& (0+255),w,b
  1571  001484  0100               	movlb	0	; () banked
  1572  001486  6F7B               	movwf	(calculateTemp@temp+1)& (0+255),b
  1573                           
  1574                           ; BSR set to: 0
  1575                           ;main.c: 219: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1576  001488  0EE0               	movlw	224
  1577  00148A  6E31               	movwf	___ftmul@f2,c
  1578  00148C  0E2B               	movlw	43
  1579  00148E  6E32               	movwf	___ftmul@f2+1,c
  1580  001490  0E45               	movlw	69
  1581  001492  6E33               	movwf	___ftmul@f2+2,c
  1582  001494  0E00               	movlw	0
  1583  001496  6E22               	movwf	___ftdiv@f2,c
  1584  001498  0E80               	movlw	128
  1585  00149A  6E23               	movwf	___ftdiv@f2+1,c
  1586  00149C  0E44               	movlw	68
  1587  00149E  6E24               	movwf	___ftdiv@f2+2,c
  1588  0014A0  C07A  F01B         	movff	calculateTemp@temp,___awtoft@c
  1589  0014A4  C07B  F01C         	movff	calculateTemp@temp+1,___awtoft@c+1
  1590  0014A8  EC26  F00C         	call	___awtoft	;wreg free
  1591  0014AC  C01B  F01F         	movff	?___awtoft,___ftdiv@f1
  1592  0014B0  C01C  F020         	movff	?___awtoft+1,___ftdiv@f1+1
  1593  0014B4  C01D  F021         	movff	?___awtoft+2,___ftdiv@f1+2
  1594  0014B8  ECBC  F009         	call	___ftdiv	;wreg free
  1595  0014BC  C01F  F02E         	movff	?___ftdiv,___ftmul@f1
  1596  0014C0  C020  F02F         	movff	?___ftdiv+1,___ftmul@f1+1
  1597  0014C4  C021  F030         	movff	?___ftdiv+2,___ftmul@f1+2
  1598  0014C8  EC2C  F009         	call	___ftmul	;wreg free
  1599  0014CC  C02E  F077         	movff	?___ftmul,_calculateTemp$1598
  1600  0014D0  C02F  F078         	movff	?___ftmul+1,_calculateTemp$1598+1
  1601  0014D4  C030  F079         	movff	?___ftmul+2,_calculateTemp$1598+2
  1602                           
  1603                           ;main.c: 219: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  1604  0014D8  0E00               	movlw	0
  1605  0014DA  6E22               	movwf	___ftdiv@f2,c
  1606  0014DC  0E20               	movlw	32
  1607  0014DE  6E23               	movwf	___ftdiv@f2+1,c
  1608  0014E0  0E41               	movlw	65
  1609  0014E2  6E24               	movwf	___ftdiv@f2+2,c
  1610  0014E4  C077  F01F         	movff	_calculateTemp$1598,___ftdiv@f1
  1611  0014E8  C078  F020         	movff	_calculateTemp$1598+1,___ftdiv@f1+1
  1612  0014EC  C079  F021         	movff	_calculateTemp$1598+2,___ftdiv@f1+2
  1613  0014F0  ECBC  F009         	call	___ftdiv	;wreg free
  1614  0014F4  C01F  F037         	movff	?___ftdiv,___fttol@f1
  1615  0014F8  C020  F038         	movff	?___ftdiv+1,___fttol@f1+1
  1616  0014FC  C021  F039         	movff	?___ftdiv+2,___fttol@f1+2
  1617  001500  EC95  F008         	call	___fttol	;wreg free
  1618  001504  C037  F07A         	movff	?___fttol,calculateTemp@temp
  1619  001508  C038  F07B         	movff	?___fttol+1,calculateTemp@temp+1
  1620                           
  1621                           ;main.c: 221: return temp;
  1622  00150C  C07A  F071         	movff	calculateTemp@temp,?_calculateTemp
  1623  001510  C07B  F072         	movff	calculateTemp@temp+1,?_calculateTemp+1
  1624  001514  0012               	return	
  1625  001516                     __end_of_calculateTemp:
  1626                           	opt stack 0
  1627                           tblptru	equ	0xFF8
  1628                           tblptrh	equ	0xFF7
  1629                           tblptrl	equ	0xFF6
  1630                           tablat	equ	0xFF5
  1631                           prodh	equ	0xFF4
  1632                           prodl	equ	0xFF3
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           indf1	equ	0xFE7
  1636                           postdec1	equ	0xFE5
  1637                           fsr1h	equ	0xFE2
  1638                           fsr1l	equ	0xFE1
  1639                           indf2	equ	0xFDF
  1640                           fsr2h	equ	0xFDA
  1641                           fsr2l	equ	0xFD9
  1642                           status	equ	0xFD8
  1643                           
  1644 ;; *************** function ___fttol *****************
  1645 ;; Defined at:
  1646 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  1647 ;; Parameters:    Size  Location     Type
  1648 ;;  f1              3   54[COMRAM] float 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  lval            4   12[BANK0 ] unsigned long 
  1651 ;;  exp1            1   16[BANK0 ] unsigned char 
  1652 ;;  sign1           1   11[BANK0 ] unsigned char 
  1653 ;; Return value:  Size  Location     Type
  1654 ;;                  4   54[COMRAM] long 
  1655 ;; Registers used:
  1656 ;;		wreg, status,2, status,0
  1657 ;; Tracked objects:
  1658 ;;		On entry : 0/0
  1659 ;;		On exit  : 0/0
  1660 ;;		Unchanged: 0/0
  1661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1662 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1663 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1664 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1665 ;;      Totals:         4      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1666 ;;Total ram usage:       15 bytes
  1667 ;; Hardware stack levels used:    1
  1668 ;; Hardware stack levels required when called:    2
  1669 ;; This function calls:
  1670 ;;		Nothing
  1671 ;; This function is called by:
  1672 ;;		_calculateTemp
  1673 ;; This function uses a non-reentrant model
  1674 ;;
  1675                           
  1676                           	psect	text6
  1677  00112A                     __ptext6:
  1678                           	opt stack 0
  1679  00112A                     ___fttol:
  1680                           	opt stack 26
  1681                           
  1682                           ;incstack = 0
  1683  00112A  C039  F066         	movff	___fttol@f1+2,??___fttol
  1684  00112E  0100               	movlb	0	; () banked
  1685  001130  6B67               	clrf	(??___fttol+1)& (0+255),b
  1686  001132  6B68               	clrf	(??___fttol+2)& (0+255),b
  1687  001134  3438               	rlcf	___fttol@f1+1,w,c
  1688  001136  0100               	movlb	0	; () banked
  1689  001138  3766               	rlcf	??___fttol& (0+255),f,b
  1690  00113A  E301               	bnc	u1491
  1691  00113C  8167               	bsf	(??___fttol+1)& (0+255),0,b
  1692  00113E                     u1491:
  1693  00113E  0100               	movlb	0	; () banked
  1694  001140  5166               	movf	??___fttol& (0+255),w,b
  1695  001142  0100               	movlb	0	; () banked
  1696  001144  6F70               	movwf	___fttol@exp1& (0+255),b
  1697  001146  0100               	movlb	0	; () banked
  1698  001148  5170               	movf	___fttol@exp1& (0+255),w,b
  1699  00114A  A4D8               	btfss	status,2,c
  1700  00114C  D009               	goto	l1977
  1701                           
  1702                           ; BSR set to: 0
  1703  00114E  0E00               	movlw	0
  1704  001150  6E37               	movwf	?___fttol,c
  1705  001152  0E00               	movlw	0
  1706  001154  6E38               	movwf	?___fttol+1,c
  1707  001156  0E00               	movlw	0
  1708  001158  6E39               	movwf	?___fttol+2,c
  1709  00115A  0E00               	movlw	0
  1710  00115C  6E3A               	movwf	?___fttol+3,c
  1711                           
  1712                           ; BSR set to: 0
  1713  00115E  0012               	return	
  1714  001160                     l1977:
  1715                           
  1716                           ; BSR set to: 0
  1717  001160  0E17               	movlw	23
  1718  001162  0100               	movlb	0	; () banked
  1719  001164  6F66               	movwf	??___fttol& (0+255),b
  1720  001166  C037  F067         	movff	___fttol@f1,??___fttol+1
  1721  00116A  C038  F068         	movff	___fttol@f1+1,??___fttol+2
  1722  00116E  C039  F069         	movff	___fttol@f1+2,??___fttol+3
  1723  001172  0100               	movlb	0	; () banked
  1724  001174  2966               	incf	??___fttol& (0+255),w,b
  1725  001176  0100               	movlb	0	; () banked
  1726  001178  6F6A               	movwf	(??___fttol+4)& (0+255),b
  1727  00117A  D005               	goto	u1510
  1728  00117C                     u1515:
  1729  00117C  0100               	movlb	0	; () banked
  1730  00117E  90D8               	bcf	status,0,c
  1731  001180  3369               	rrcf	(??___fttol+3)& (0+255),f,b
  1732  001182  3368               	rrcf	(??___fttol+2)& (0+255),f,b
  1733  001184  3367               	rrcf	(??___fttol+1)& (0+255),f,b
  1734  001186                     u1510:
  1735  001186  0100               	movlb	0	; () banked
  1736  001188  2F6A               	decfsz	(??___fttol+4)& (0+255),f,b
  1737  00118A  D7F8               	goto	u1515
  1738  00118C  0100               	movlb	0	; () banked
  1739  00118E  5167               	movf	(??___fttol+1)& (0+255),w,b
  1740  001190  0100               	movlb	0	; () banked
  1741  001192  6F6B               	movwf	___fttol@sign1& (0+255),b
  1742                           
  1743                           ; BSR set to: 0
  1744  001194  8E38               	bsf	___fttol@f1+1,7,c
  1745                           
  1746                           ; BSR set to: 0
  1747  001196  0EFF               	movlw	255
  1748  001198  1637               	andwf	___fttol@f1,f,c
  1749  00119A  0EFF               	movlw	255
  1750  00119C  1638               	andwf	___fttol@f1+1,f,c
  1751  00119E  0E00               	movlw	0
  1752  0011A0  1639               	andwf	___fttol@f1+2,f,c
  1753                           
  1754                           ; BSR set to: 0
  1755  0011A2  5037               	movf	___fttol@f1,w,c
  1756  0011A4  0100               	movlb	0	; () banked
  1757  0011A6  6F6C               	movwf	___fttol@lval& (0+255),b
  1758  0011A8  5038               	movf	___fttol@f1+1,w,c
  1759  0011AA  0100               	movlb	0	; () banked
  1760  0011AC  6F6D               	movwf	(___fttol@lval+1)& (0+255),b
  1761  0011AE  5039               	movf	___fttol@f1+2,w,c
  1762  0011B0  0100               	movlb	0	; () banked
  1763  0011B2  6F6E               	movwf	(___fttol@lval+2)& (0+255),b
  1764  0011B4  0100               	movlb	0	; () banked
  1765  0011B6  6B6F               	clrf	(___fttol@lval+3)& (0+255),b
  1766                           
  1767                           ; BSR set to: 0
  1768  0011B8  0E8E               	movlw	142
  1769  0011BA  0100               	movlb	0	; () banked
  1770  0011BC  5F70               	subwf	___fttol@exp1& (0+255),f,b
  1771                           
  1772                           ; BSR set to: 0
  1773  0011BE  0100               	movlb	0	; () banked
  1774  0011C0  AF70               	btfss	___fttol@exp1& (0+255),7,b
  1775  0011C2  D019               	goto	l1999
  1776                           
  1777                           ; BSR set to: 0
  1778  0011C4  0100               	movlb	0	; () banked
  1779  0011C6  5170               	movf	___fttol@exp1& (0+255),w,b
  1780  0011C8  0A80               	xorlw	128
  1781  0011CA  0F8F               	addlw	143
  1782  0011CC  B0D8               	btfsc	status,0,c
  1783  0011CE  D009               	goto	l1995
  1784                           
  1785                           ; BSR set to: 0
  1786  0011D0  0E00               	movlw	0
  1787  0011D2  6E37               	movwf	?___fttol,c
  1788  0011D4  0E00               	movlw	0
  1789  0011D6  6E38               	movwf	?___fttol+1,c
  1790  0011D8  0E00               	movlw	0
  1791  0011DA  6E39               	movwf	?___fttol+2,c
  1792  0011DC  0E00               	movlw	0
  1793  0011DE  6E3A               	movwf	?___fttol+3,c
  1794                           
  1795                           ; BSR set to: 0
  1796  0011E0  0012               	return	
  1797  0011E2                     l1995:
  1798                           
  1799                           ; BSR set to: 0
  1800  0011E2  0100               	movlb	0	; () banked
  1801  0011E4  90D8               	bcf	status,0,c
  1802  0011E6  336F               	rrcf	(___fttol@lval+3)& (0+255),f,b
  1803  0011E8  336E               	rrcf	(___fttol@lval+2)& (0+255),f,b
  1804  0011EA  336D               	rrcf	(___fttol@lval+1)& (0+255),f,b
  1805  0011EC  336C               	rrcf	___fttol@lval& (0+255),f,b
  1806                           
  1807                           ; BSR set to: 0
  1808  0011EE  0100               	movlb	0	; () banked
  1809  0011F0  3F70               	incfsz	___fttol@exp1& (0+255),f,b
  1810  0011F2  D7F7               	goto	l1995
  1811                           
  1812                           ; BSR set to: 0
  1813  0011F4  D01A               	goto	l2009
  1814  0011F6                     l1999:
  1815                           
  1816                           ; BSR set to: 0
  1817  0011F6  0E17               	movlw	23
  1818  0011F8  0100               	movlb	0	; () banked
  1819  0011FA  6570               	cpfsgt	___fttol@exp1& (0+255),b
  1820  0011FC  D011               	goto	l2007
  1821                           
  1822                           ; BSR set to: 0
  1823  0011FE  0E00               	movlw	0
  1824  001200  6E37               	movwf	?___fttol,c
  1825  001202  0E00               	movlw	0
  1826  001204  6E38               	movwf	?___fttol+1,c
  1827  001206  0E00               	movlw	0
  1828  001208  6E39               	movwf	?___fttol+2,c
  1829  00120A  0E00               	movlw	0
  1830  00120C  6E3A               	movwf	?___fttol+3,c
  1831                           
  1832                           ; BSR set to: 0
  1833  00120E  0012               	return	
  1834  001210                     l2005:
  1835                           
  1836                           ; BSR set to: 0
  1837  001210  0100               	movlb	0	; () banked
  1838  001212  90D8               	bcf	status,0,c
  1839  001214  376C               	rlcf	___fttol@lval& (0+255),f,b
  1840  001216  376D               	rlcf	(___fttol@lval+1)& (0+255),f,b
  1841  001218  376E               	rlcf	(___fttol@lval+2)& (0+255),f,b
  1842  00121A  376F               	rlcf	(___fttol@lval+3)& (0+255),f,b
  1843  00121C  0100               	movlb	0	; () banked
  1844  00121E  0770               	decf	___fttol@exp1& (0+255),f,b
  1845  001220                     l2007:
  1846                           
  1847                           ; BSR set to: 0
  1848  001220  0100               	movlb	0	; () banked
  1849  001222  5170               	movf	___fttol@exp1& (0+255),w,b
  1850  001224  0100               	movlb	0	; () banked
  1851  001226  A4D8               	btfss	status,2,c
  1852  001228  D7F3               	goto	l2005
  1853  00122A                     l2009:
  1854                           
  1855                           ; BSR set to: 0
  1856  00122A  0100               	movlb	0	; () banked
  1857  00122C  516B               	movf	___fttol@sign1& (0+255),w,b
  1858  00122E  0100               	movlb	0	; () banked
  1859  001230  B4D8               	btfsc	status,2,c
  1860  001232  D009               	goto	l2013
  1861                           
  1862                           ; BSR set to: 0
  1863  001234  0100               	movlb	0	; () banked
  1864  001236  1F6F               	comf	(___fttol@lval+3)& (0+255),f,b
  1865  001238  1F6E               	comf	(___fttol@lval+2)& (0+255),f,b
  1866  00123A  1F6D               	comf	(___fttol@lval+1)& (0+255),f,b
  1867  00123C  6D6C               	negf	___fttol@lval& (0+255),b
  1868  00123E  0E00               	movlw	0
  1869  001240  236D               	addwfc	(___fttol@lval+1)& (0+255),f,b
  1870  001242  236E               	addwfc	(___fttol@lval+2)& (0+255),f,b
  1871  001244  236F               	addwfc	(___fttol@lval+3)& (0+255),f,b
  1872  001246                     l2013:
  1873                           
  1874                           ; BSR set to: 0
  1875  001246  C06C  F037         	movff	___fttol@lval,?___fttol
  1876  00124A  C06D  F038         	movff	___fttol@lval+1,?___fttol+1
  1877  00124E  C06E  F039         	movff	___fttol@lval+2,?___fttol+2
  1878  001252  C06F  F03A         	movff	___fttol@lval+3,?___fttol+3
  1879  001256  0012               	return	
  1880  001258                     __end_of___fttol:
  1881                           	opt stack 0
  1882                           tblptru	equ	0xFF8
  1883                           tblptrh	equ	0xFF7
  1884                           tblptrl	equ	0xFF6
  1885                           tablat	equ	0xFF5
  1886                           prodh	equ	0xFF4
  1887                           prodl	equ	0xFF3
  1888                           postinc0	equ	0xFEE
  1889                           wreg	equ	0xFE8
  1890                           indf1	equ	0xFE7
  1891                           postdec1	equ	0xFE5
  1892                           fsr1h	equ	0xFE2
  1893                           fsr1l	equ	0xFE1
  1894                           indf2	equ	0xFDF
  1895                           fsr2h	equ	0xFDA
  1896                           fsr2l	equ	0xFD9
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function ___ftmul *****************
  1900 ;; Defined at:
  1901 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  f1              3   45[COMRAM] float 
  1904 ;;  f2              3   48[COMRAM] float 
  1905 ;; Auto vars:     Size  Location     Type
  1906 ;;  f3_as_produc    3    1[BANK0 ] unsigned um
  1907 ;;  sign            1    5[BANK0 ] unsigned char 
  1908 ;;  cntr            1    4[BANK0 ] unsigned char 
  1909 ;;  exp             1    0[BANK0 ] unsigned char 
  1910 ;; Return value:  Size  Location     Type
  1911 ;;                  3   45[COMRAM] float 
  1912 ;; Registers used:
  1913 ;;		wreg, status,2, status,0, cstack
  1914 ;; Tracked objects:
  1915 ;;		On entry : 0/0
  1916 ;;		On exit  : 0/0
  1917 ;;		Unchanged: 0/0
  1918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1919 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1920 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1921 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1922 ;;      Totals:         9       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1923 ;;Total ram usage:       15 bytes
  1924 ;; Hardware stack levels used:    1
  1925 ;; Hardware stack levels required when called:    3
  1926 ;; This function calls:
  1927 ;;		___ftpack
  1928 ;; This function is called by:
  1929 ;;		_calculateTemp
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text7
  1934  001258                     __ptext7:
  1935                           	opt stack 0
  1936  001258                     ___ftmul:
  1937                           	opt stack 25
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;incstack = 0
  1941  001258  C030  F034         	movff	___ftmul@f1+2,??___ftmul
  1942  00125C  6A35               	clrf	(??___ftmul+1)& (0+255),c
  1943  00125E  6A36               	clrf	(??___ftmul+2)& (0+255),c
  1944  001260  342F               	rlcf	___ftmul@f1+1,w,c
  1945  001262  3634               	rlcf	??___ftmul& (0+255),f,c
  1946  001264  E301               	bnc	u1421
  1947  001266  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  1948  001268                     u1421:
  1949  001268  5034               	movf	??___ftmul,w,c
  1950  00126A  0100               	movlb	0	; () banked
  1951  00126C  6F60               	movwf	___ftmul@exp& (0+255),b
  1952  00126E  0100               	movlb	0	; () banked
  1953  001270  5160               	movf	___ftmul@exp& (0+255),w,b
  1954  001272  A4D8               	btfss	status,2,c
  1955  001274  D007               	goto	l1917
  1956                           
  1957                           ; BSR set to: 0
  1958  001276  0E00               	movlw	0
  1959  001278  6E2E               	movwf	?___ftmul,c
  1960  00127A  0E00               	movlw	0
  1961  00127C  6E2F               	movwf	?___ftmul+1,c
  1962  00127E  0E00               	movlw	0
  1963  001280  6E30               	movwf	?___ftmul+2,c
  1964                           
  1965                           ; BSR set to: 0
  1966  001282  0012               	return	
  1967  001284                     l1917:
  1968                           
  1969                           ; BSR set to: 0
  1970  001284  C033  F034         	movff	___ftmul@f2+2,??___ftmul
  1971  001288  6A35               	clrf	(??___ftmul+1)& (0+255),c
  1972  00128A  6A36               	clrf	(??___ftmul+2)& (0+255),c
  1973  00128C  3432               	rlcf	___ftmul@f2+1,w,c
  1974  00128E  3634               	rlcf	??___ftmul& (0+255),f,c
  1975  001290  E301               	bnc	u1441
  1976  001292  8035               	bsf	(??___ftmul+1)& (0+255),0,c
  1977  001294                     u1441:
  1978  001294  5034               	movf	??___ftmul,w,c
  1979  001296  0100               	movlb	0	; () banked
  1980  001298  6F65               	movwf	___ftmul@sign& (0+255),b
  1981  00129A  0100               	movlb	0	; () banked
  1982  00129C  5165               	movf	___ftmul@sign& (0+255),w,b
  1983  00129E  A4D8               	btfss	status,2,c
  1984  0012A0  D007               	goto	l1923
  1985                           
  1986                           ; BSR set to: 0
  1987  0012A2  0E00               	movlw	0
  1988  0012A4  6E2E               	movwf	?___ftmul,c
  1989  0012A6  0E00               	movlw	0
  1990  0012A8  6E2F               	movwf	?___ftmul+1,c
  1991  0012AA  0E00               	movlw	0
  1992  0012AC  6E30               	movwf	?___ftmul+2,c
  1993                           
  1994                           ; BSR set to: 0
  1995  0012AE  0012               	return	
  1996  0012B0                     l1923:
  1997                           
  1998                           ; BSR set to: 0
  1999  0012B0  0100               	movlb	0	; () banked
  2000  0012B2  5165               	movf	___ftmul@sign& (0+255),w,b
  2001  0012B4  0F7B               	addlw	123
  2002  0012B6  0100               	movlb	0	; () banked
  2003  0012B8  2760               	addwf	___ftmul@exp& (0+255),f,b
  2004                           
  2005                           ; BSR set to: 0
  2006  0012BA  C030  F065         	movff	___ftmul@f1+2,___ftmul@sign
  2007  0012BE  5033               	movf	___ftmul@f2+2,w,c
  2008  0012C0  0100               	movlb	0	; () banked
  2009  0012C2  1B65               	xorwf	___ftmul@sign& (0+255),f,b
  2010  0012C4  0E80               	movlw	128
  2011  0012C6  0100               	movlb	0	; () banked
  2012  0012C8  1765               	andwf	___ftmul@sign& (0+255),f,b
  2013                           
  2014                           ; BSR set to: 0
  2015  0012CA  8E2F               	bsf	___ftmul@f1+1,7,c
  2016                           
  2017                           ; BSR set to: 0
  2018  0012CC  8E32               	bsf	___ftmul@f2+1,7,c
  2019                           
  2020                           ; BSR set to: 0
  2021  0012CE  0EFF               	movlw	255
  2022  0012D0  1631               	andwf	___ftmul@f2,f,c
  2023  0012D2  0EFF               	movlw	255
  2024  0012D4  1632               	andwf	___ftmul@f2+1,f,c
  2025  0012D6  0E00               	movlw	0
  2026  0012D8  1633               	andwf	___ftmul@f2+2,f,c
  2027                           
  2028                           ; BSR set to: 0
  2029  0012DA  0E00               	movlw	0
  2030  0012DC  0100               	movlb	0	; () banked
  2031  0012DE  6F61               	movwf	___ftmul@f3_as_product& (0+255),b
  2032  0012E0  0E00               	movlw	0
  2033  0012E2  0100               	movlb	0	; () banked
  2034  0012E4  6F62               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  2035  0012E6  0E00               	movlw	0
  2036  0012E8  0100               	movlb	0	; () banked
  2037  0012EA  6F63               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  2038                           
  2039                           ; BSR set to: 0
  2040  0012EC  0E07               	movlw	7
  2041  0012EE  0100               	movlb	0	; () banked
  2042  0012F0  6F64               	movwf	___ftmul@cntr& (0+255),b
  2043  0012F2                     l1937:
  2044                           
  2045                           ; BSR set to: 0
  2046  0012F2  A02E               	btfss	___ftmul@f1,0,c
  2047  0012F4  D009               	goto	l1941
  2048                           
  2049                           ; BSR set to: 0
  2050  0012F6  5031               	movf	___ftmul@f2,w,c
  2051  0012F8  0100               	movlb	0	; () banked
  2052  0012FA  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2053  0012FC  5032               	movf	___ftmul@f2+1,w,c
  2054  0012FE  0100               	movlb	0	; () banked
  2055  001300  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2056  001302  5033               	movf	___ftmul@f2+2,w,c
  2057  001304  0100               	movlb	0	; () banked
  2058  001306  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2059  001308                     l1941:
  2060                           
  2061                           ; BSR set to: 0
  2062  001308  90D8               	bcf	status,0,c
  2063  00130A  3230               	rrcf	___ftmul@f1+2,f,c
  2064  00130C  322F               	rrcf	___ftmul@f1+1,f,c
  2065  00130E  322E               	rrcf	___ftmul@f1,f,c
  2066  001310  90D8               	bcf	status,0,c
  2067  001312  3631               	rlcf	___ftmul@f2,f,c
  2068  001314  3632               	rlcf	___ftmul@f2+1,f,c
  2069  001316  3633               	rlcf	___ftmul@f2+2,f,c
  2070                           
  2071                           ; BSR set to: 0
  2072  001318  0100               	movlb	0	; () banked
  2073  00131A  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  2074  00131C  D7EA               	goto	l1937
  2075                           
  2076                           ; BSR set to: 0
  2077                           
  2078                           ; BSR set to: 0
  2079  00131E  0E09               	movlw	9
  2080  001320  0100               	movlb	0	; () banked
  2081  001322  6F64               	movwf	___ftmul@cntr& (0+255),b
  2082  001324                     l1947:
  2083                           
  2084                           ; BSR set to: 0
  2085  001324  A02E               	btfss	___ftmul@f1,0,c
  2086  001326  D009               	goto	l1951
  2087                           
  2088                           ; BSR set to: 0
  2089  001328  5031               	movf	___ftmul@f2,w,c
  2090  00132A  0100               	movlb	0	; () banked
  2091  00132C  2761               	addwf	___ftmul@f3_as_product& (0+255),f,b
  2092  00132E  5032               	movf	___ftmul@f2+1,w,c
  2093  001330  0100               	movlb	0	; () banked
  2094  001332  2362               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  2095  001334  5033               	movf	___ftmul@f2+2,w,c
  2096  001336  0100               	movlb	0	; () banked
  2097  001338  2363               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  2098  00133A                     l1951:
  2099                           
  2100                           ; BSR set to: 0
  2101  00133A  90D8               	bcf	status,0,c
  2102  00133C  3230               	rrcf	___ftmul@f1+2,f,c
  2103  00133E  322F               	rrcf	___ftmul@f1+1,f,c
  2104  001340  322E               	rrcf	___ftmul@f1,f,c
  2105  001342  0100               	movlb	0	; () banked
  2106  001344  90D8               	bcf	status,0,c
  2107  001346  3363               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  2108  001348  3362               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  2109  00134A  3361               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  2110                           
  2111                           ; BSR set to: 0
  2112  00134C  0100               	movlb	0	; () banked
  2113  00134E  2F64               	decfsz	___ftmul@cntr& (0+255),f,b
  2114  001350  D7E9               	goto	l1947
  2115                           
  2116                           ; BSR set to: 0
  2117                           
  2118                           ; BSR set to: 0
  2119  001352  C061  F013         	movff	___ftmul@f3_as_product,___ftpack@arg
  2120  001356  C062  F014         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2121  00135A  C063  F015         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2122  00135E  C060  F016         	movff	___ftmul@exp,___ftpack@exp
  2123  001362  C065  F017         	movff	___ftmul@sign,___ftpack@sign
  2124  001366  EC8B  F00A         	call	___ftpack	;wreg free
  2125  00136A  C013  F02E         	movff	?___ftpack,?___ftmul
  2126  00136E  C014  F02F         	movff	?___ftpack+1,?___ftmul+1
  2127  001372  C015  F030         	movff	?___ftpack+2,?___ftmul+2
  2128  001376  0012               	return	
  2129  001378                     __end_of___ftmul:
  2130                           	opt stack 0
  2131                           tblptru	equ	0xFF8
  2132                           tblptrh	equ	0xFF7
  2133                           tblptrl	equ	0xFF6
  2134                           tablat	equ	0xFF5
  2135                           prodh	equ	0xFF4
  2136                           prodl	equ	0xFF3
  2137                           postinc0	equ	0xFEE
  2138                           wreg	equ	0xFE8
  2139                           indf1	equ	0xFE7
  2140                           postdec1	equ	0xFE5
  2141                           fsr1h	equ	0xFE2
  2142                           fsr1l	equ	0xFE1
  2143                           indf2	equ	0xFDF
  2144                           fsr2h	equ	0xFDA
  2145                           fsr2l	equ	0xFD9
  2146                           status	equ	0xFD8
  2147                           
  2148 ;; *************** function ___ftdiv *****************
  2149 ;; Defined at:
  2150 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  2151 ;; Parameters:    Size  Location     Type
  2152 ;;  f1              3   30[COMRAM] float 
  2153 ;;  f2              3   33[COMRAM] float 
  2154 ;; Auto vars:     Size  Location     Type
  2155 ;;  f3              3   40[COMRAM] float 
  2156 ;;  sign            1   44[COMRAM] unsigned char 
  2157 ;;  exp             1   43[COMRAM] unsigned char 
  2158 ;;  cntr            1   39[COMRAM] unsigned char 
  2159 ;; Return value:  Size  Location     Type
  2160 ;;                  3   30[COMRAM] float 
  2161 ;; Registers used:
  2162 ;;		wreg, status,2, status,0, cstack
  2163 ;; Tracked objects:
  2164 ;;		On entry : 0/0
  2165 ;;		On exit  : 0/0
  2166 ;;		Unchanged: 0/0
  2167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2168 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2169 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2170 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2171 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2172 ;;Total ram usage:       15 bytes
  2173 ;; Hardware stack levels used:    1
  2174 ;; Hardware stack levels required when called:    3
  2175 ;; This function calls:
  2176 ;;		___ftpack
  2177 ;; This function is called by:
  2178 ;;		_calculateTemp
  2179 ;; This function uses a non-reentrant model
  2180 ;;
  2181                           
  2182                           	psect	text8
  2183  001378                     __ptext8:
  2184                           	opt stack 0
  2185  001378                     ___ftdiv:
  2186                           	opt stack 25
  2187                           
  2188                           ;incstack = 0
  2189  001378  C021  F025         	movff	___ftdiv@f1+2,??___ftdiv
  2190  00137C  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  2191  00137E  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  2192  001380  3420               	rlcf	___ftdiv@f1+1,w,c
  2193  001382  3625               	rlcf	??___ftdiv& (0+255),f,c
  2194  001384  E301               	bnc	u1371
  2195  001386  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  2196  001388                     u1371:
  2197  001388  5025               	movf	??___ftdiv,w,c
  2198  00138A  6E2C               	movwf	___ftdiv@exp,c
  2199  00138C  502C               	movf	___ftdiv@exp,w,c
  2200  00138E  A4D8               	btfss	status,2,c
  2201  001390  D007               	goto	l1871
  2202  001392  0E00               	movlw	0
  2203  001394  6E1F               	movwf	?___ftdiv,c
  2204  001396  0E00               	movlw	0
  2205  001398  6E20               	movwf	?___ftdiv+1,c
  2206  00139A  0E00               	movlw	0
  2207  00139C  6E21               	movwf	?___ftdiv+2,c
  2208  00139E  0012               	return	
  2209  0013A0                     l1871:
  2210  0013A0  C024  F025         	movff	___ftdiv@f2+2,??___ftdiv
  2211  0013A4  6A26               	clrf	(??___ftdiv+1)& (0+255),c
  2212  0013A6  6A27               	clrf	(??___ftdiv+2)& (0+255),c
  2213  0013A8  3423               	rlcf	___ftdiv@f2+1,w,c
  2214  0013AA  3625               	rlcf	??___ftdiv& (0+255),f,c
  2215  0013AC  E301               	bnc	u1391
  2216  0013AE  8026               	bsf	(??___ftdiv+1)& (0+255),0,c
  2217  0013B0                     u1391:
  2218  0013B0  5025               	movf	??___ftdiv,w,c
  2219  0013B2  6E2D               	movwf	___ftdiv@sign,c
  2220  0013B4  502D               	movf	___ftdiv@sign,w,c
  2221  0013B6  A4D8               	btfss	status,2,c
  2222  0013B8  D007               	goto	l1877
  2223  0013BA  0E00               	movlw	0
  2224  0013BC  6E1F               	movwf	?___ftdiv,c
  2225  0013BE  0E00               	movlw	0
  2226  0013C0  6E20               	movwf	?___ftdiv+1,c
  2227  0013C2  0E00               	movlw	0
  2228  0013C4  6E21               	movwf	?___ftdiv+2,c
  2229  0013C6  0012               	return	
  2230  0013C8                     l1877:
  2231  0013C8  0E00               	movlw	0
  2232  0013CA  6E29               	movwf	___ftdiv@f3,c
  2233  0013CC  0E00               	movlw	0
  2234  0013CE  6E2A               	movwf	___ftdiv@f3+1,c
  2235  0013D0  0E00               	movlw	0
  2236  0013D2  6E2B               	movwf	___ftdiv@f3+2,c
  2237  0013D4  502D               	movf	___ftdiv@sign,w,c
  2238  0013D6  0F89               	addlw	137
  2239  0013D8  5E2C               	subwf	___ftdiv@exp,f,c
  2240  0013DA  C021  F02D         	movff	___ftdiv@f1+2,___ftdiv@sign
  2241  0013DE  5024               	movf	___ftdiv@f2+2,w,c
  2242  0013E0  1A2D               	xorwf	___ftdiv@sign,f,c
  2243  0013E2  0E80               	movlw	128
  2244  0013E4  162D               	andwf	___ftdiv@sign,f,c
  2245  0013E6  8E20               	bsf	___ftdiv@f1+1,7,c
  2246  0013E8  0EFF               	movlw	255
  2247  0013EA  161F               	andwf	___ftdiv@f1,f,c
  2248  0013EC  0EFF               	movlw	255
  2249  0013EE  1620               	andwf	___ftdiv@f1+1,f,c
  2250  0013F0  0E00               	movlw	0
  2251  0013F2  1621               	andwf	___ftdiv@f1+2,f,c
  2252  0013F4  8E23               	bsf	___ftdiv@f2+1,7,c
  2253  0013F6  0EFF               	movlw	255
  2254  0013F8  1622               	andwf	___ftdiv@f2,f,c
  2255  0013FA  0EFF               	movlw	255
  2256  0013FC  1623               	andwf	___ftdiv@f2+1,f,c
  2257  0013FE  0E00               	movlw	0
  2258  001400  1624               	andwf	___ftdiv@f2+2,f,c
  2259  001402  0E18               	movlw	24
  2260  001404  6E28               	movwf	___ftdiv@cntr,c
  2261  001406                     l1897:
  2262  001406  90D8               	bcf	status,0,c
  2263  001408  3629               	rlcf	___ftdiv@f3,f,c
  2264  00140A  362A               	rlcf	___ftdiv@f3+1,f,c
  2265  00140C  362B               	rlcf	___ftdiv@f3+2,f,c
  2266  00140E  5022               	movf	___ftdiv@f2,w,c
  2267  001410  5C1F               	subwf	___ftdiv@f1,w,c
  2268  001412  5023               	movf	___ftdiv@f2+1,w,c
  2269  001414  5820               	subwfb	___ftdiv@f1+1,w,c
  2270  001416  5024               	movf	___ftdiv@f2+2,w,c
  2271  001418  5821               	subwfb	___ftdiv@f1+2,w,c
  2272  00141A  A0D8               	btfss	status,0,c
  2273  00141C  D007               	goto	l450
  2274  00141E  5022               	movf	___ftdiv@f2,w,c
  2275  001420  5E1F               	subwf	___ftdiv@f1,f,c
  2276  001422  5023               	movf	___ftdiv@f2+1,w,c
  2277  001424  5A20               	subwfb	___ftdiv@f1+1,f,c
  2278  001426  5024               	movf	___ftdiv@f2+2,w,c
  2279  001428  5A21               	subwfb	___ftdiv@f1+2,f,c
  2280  00142A  8029               	bsf	___ftdiv@f3,0,c
  2281  00142C                     l450:
  2282  00142C  90D8               	bcf	status,0,c
  2283  00142E  361F               	rlcf	___ftdiv@f1,f,c
  2284  001430  3620               	rlcf	___ftdiv@f1+1,f,c
  2285  001432  3621               	rlcf	___ftdiv@f1+2,f,c
  2286  001434  2E28               	decfsz	___ftdiv@cntr,f,c
  2287  001436  D7E7               	goto	l1897
  2288  001438  C029  F013         	movff	___ftdiv@f3,___ftpack@arg
  2289  00143C  C02A  F014         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2290  001440  C02B  F015         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2291  001444  C02C  F016         	movff	___ftdiv@exp,___ftpack@exp
  2292  001448  C02D  F017         	movff	___ftdiv@sign,___ftpack@sign
  2293  00144C  EC8B  F00A         	call	___ftpack	;wreg free
  2294  001450  C013  F01F         	movff	?___ftpack,?___ftdiv
  2295  001454  C014  F020         	movff	?___ftpack+1,?___ftdiv+1
  2296  001458  C015  F021         	movff	?___ftpack+2,?___ftdiv+2
  2297  00145C  0012               	return	
  2298  00145E                     __end_of___ftdiv:
  2299                           	opt stack 0
  2300                           tblptru	equ	0xFF8
  2301                           tblptrh	equ	0xFF7
  2302                           tblptrl	equ	0xFF6
  2303                           tablat	equ	0xFF5
  2304                           prodh	equ	0xFF4
  2305                           prodl	equ	0xFF3
  2306                           postinc0	equ	0xFEE
  2307                           wreg	equ	0xFE8
  2308                           indf1	equ	0xFE7
  2309                           postdec1	equ	0xFE5
  2310                           fsr1h	equ	0xFE2
  2311                           fsr1l	equ	0xFE1
  2312                           indf2	equ	0xFDF
  2313                           fsr2h	equ	0xFDA
  2314                           fsr2l	equ	0xFD9
  2315                           status	equ	0xFD8
  2316                           
  2317 ;; *************** function ___awtoft *****************
  2318 ;; Defined at:
  2319 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  2320 ;; Parameters:    Size  Location     Type
  2321 ;;  c               2   26[COMRAM] int 
  2322 ;; Auto vars:     Size  Location     Type
  2323 ;;  sign            1   29[COMRAM] unsigned char 
  2324 ;; Return value:  Size  Location     Type
  2325 ;;                  3   26[COMRAM] float 
  2326 ;; Registers used:
  2327 ;;		wreg, status,2, status,0, cstack
  2328 ;; Tracked objects:
  2329 ;;		On entry : 0/0
  2330 ;;		On exit  : 0/0
  2331 ;;		Unchanged: 0/0
  2332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2333 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2334 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2335 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2336 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2337 ;;Total ram usage:        4 bytes
  2338 ;; Hardware stack levels used:    1
  2339 ;; Hardware stack levels required when called:    3
  2340 ;; This function calls:
  2341 ;;		___ftpack
  2342 ;; This function is called by:
  2343 ;;		_calculateTemp
  2344 ;; This function uses a non-reentrant model
  2345 ;;
  2346                           
  2347                           	psect	text9
  2348  00184C                     __ptext9:
  2349                           	opt stack 0
  2350  00184C                     ___awtoft:
  2351                           	opt stack 25
  2352                           
  2353                           ;incstack = 0
  2354  00184C  0E00               	movlw	0
  2355  00184E  6E1E               	movwf	___awtoft@sign,c
  2356  001850  AE1C               	btfss	___awtoft@c+1,7,c
  2357  001852  D006               	goto	l1967
  2358  001854  6C1B               	negf	___awtoft@c,c
  2359  001856  1E1C               	comf	___awtoft@c+1,f,c
  2360  001858  B0D8               	btfsc	status,0,c
  2361  00185A  2A1C               	incf	___awtoft@c+1,f,c
  2362  00185C  0E01               	movlw	1
  2363  00185E  6E1E               	movwf	___awtoft@sign,c
  2364  001860                     l1967:
  2365  001860  C01B  F013         	movff	___awtoft@c,___ftpack@arg
  2366  001864  C01C  F014         	movff	___awtoft@c+1,___ftpack@arg+1
  2367  001868  6A15               	clrf	___ftpack@arg+2,c
  2368  00186A  0E8E               	movlw	142
  2369  00186C  6E16               	movwf	___ftpack@exp,c
  2370  00186E  C01E  F017         	movff	___awtoft@sign,___ftpack@sign
  2371  001872  EC8B  F00A         	call	___ftpack	;wreg free
  2372  001876  C013  F01B         	movff	?___ftpack,?___awtoft
  2373  00187A  C014  F01C         	movff	?___ftpack+1,?___awtoft+1
  2374  00187E  C015  F01D         	movff	?___ftpack+2,?___awtoft+2
  2375  001882  0012               	return	
  2376  001884                     __end_of___awtoft:
  2377                           	opt stack 0
  2378                           tblptru	equ	0xFF8
  2379                           tblptrh	equ	0xFF7
  2380                           tblptrl	equ	0xFF6
  2381                           tablat	equ	0xFF5
  2382                           prodh	equ	0xFF4
  2383                           prodl	equ	0xFF3
  2384                           postinc0	equ	0xFEE
  2385                           wreg	equ	0xFE8
  2386                           indf1	equ	0xFE7
  2387                           postdec1	equ	0xFE5
  2388                           fsr1h	equ	0xFE2
  2389                           fsr1l	equ	0xFE1
  2390                           indf2	equ	0xFDF
  2391                           fsr2h	equ	0xFDA
  2392                           fsr2l	equ	0xFD9
  2393                           status	equ	0xFD8
  2394                           
  2395 ;; *************** function ___ftpack *****************
  2396 ;; Defined at:
  2397 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  2398 ;; Parameters:    Size  Location     Type
  2399 ;;  arg             3   18[COMRAM] unsigned um
  2400 ;;  exp             1   21[COMRAM] unsigned char 
  2401 ;;  sign            1   22[COMRAM] unsigned char 
  2402 ;; Auto vars:     Size  Location     Type
  2403 ;;		None
  2404 ;; Return value:  Size  Location     Type
  2405 ;;                  3   18[COMRAM] float 
  2406 ;; Registers used:
  2407 ;;		wreg, status,2, status,0
  2408 ;; Tracked objects:
  2409 ;;		On entry : 0/0
  2410 ;;		On exit  : 0/0
  2411 ;;		Unchanged: 0/0
  2412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2413 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2414 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2415 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2416 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2417 ;;Total ram usage:        8 bytes
  2418 ;; Hardware stack levels used:    1
  2419 ;; Hardware stack levels required when called:    2
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		___awtoft
  2424 ;;		___ftdiv
  2425 ;;		___ftmul
  2426 ;; This function uses a non-reentrant model
  2427 ;;
  2428                           
  2429                           	psect	text10
  2430  001516                     __ptext10:
  2431                           	opt stack 0
  2432  001516                     ___ftpack:
  2433                           	opt stack 25
  2434                           
  2435                           ;incstack = 0
  2436  001516  5016               	movf	___ftpack@exp,w,c
  2437  001518  B4D8               	btfsc	status,2,c
  2438  00151A  D005               	goto	l1833
  2439  00151C  5013               	movf	___ftpack@arg,w,c
  2440  00151E  1014               	iorwf	___ftpack@arg+1,w,c
  2441  001520  1015               	iorwf	___ftpack@arg+2,w,c
  2442  001522  A4D8               	btfss	status,2,c
  2443  001524  D00C               	goto	l1839
  2444  001526                     l1833:
  2445  001526  0E00               	movlw	0
  2446  001528  6E13               	movwf	?___ftpack,c
  2447  00152A  0E00               	movlw	0
  2448  00152C  6E14               	movwf	?___ftpack+1,c
  2449  00152E  0E00               	movlw	0
  2450  001530  6E15               	movwf	?___ftpack+2,c
  2451  001532  0012               	return	
  2452  001534                     l1837:
  2453  001534  2A16               	incf	___ftpack@exp,f,c
  2454  001536  90D8               	bcf	status,0,c
  2455  001538  3215               	rrcf	___ftpack@arg+2,f,c
  2456  00153A  3214               	rrcf	___ftpack@arg+1,f,c
  2457  00153C  3213               	rrcf	___ftpack@arg,f,c
  2458  00153E                     l1839:
  2459  00153E  0E00               	movlw	0
  2460  001540  1413               	andwf	___ftpack@arg,w,c
  2461  001542  6E18               	movwf	??___ftpack& (0+255),c
  2462  001544  0E00               	movlw	0
  2463  001546  1414               	andwf	___ftpack@arg+1,w,c
  2464  001548  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2465  00154A  0EFE               	movlw	254
  2466  00154C  1415               	andwf	___ftpack@arg+2,w,c
  2467  00154E  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2468  001550  5018               	movf	??___ftpack,w,c
  2469  001552  1019               	iorwf	??___ftpack+1,w,c
  2470  001554  101A               	iorwf	??___ftpack+2,w,c
  2471  001556  B4D8               	btfsc	status,2,c
  2472  001558  D00C               	goto	l1845
  2473  00155A  D7EC               	goto	l1837
  2474  00155C                     l1841:
  2475  00155C  2A16               	incf	___ftpack@exp,f,c
  2476  00155E  0E01               	movlw	1
  2477  001560  2613               	addwf	___ftpack@arg,f,c
  2478  001562  0E00               	movlw	0
  2479  001564  2214               	addwfc	___ftpack@arg+1,f,c
  2480  001566  0E00               	movlw	0
  2481  001568  2215               	addwfc	___ftpack@arg+2,f,c
  2482  00156A  90D8               	bcf	status,0,c
  2483  00156C  3215               	rrcf	___ftpack@arg+2,f,c
  2484  00156E  3214               	rrcf	___ftpack@arg+1,f,c
  2485  001570  3213               	rrcf	___ftpack@arg,f,c
  2486  001572                     l1845:
  2487  001572  0E00               	movlw	0
  2488  001574  1413               	andwf	___ftpack@arg,w,c
  2489  001576  6E18               	movwf	??___ftpack& (0+255),c
  2490  001578  0E00               	movlw	0
  2491  00157A  1414               	andwf	___ftpack@arg+1,w,c
  2492  00157C  6E19               	movwf	(??___ftpack+1)& (0+255),c
  2493  00157E  0EFF               	movlw	255
  2494  001580  1415               	andwf	___ftpack@arg+2,w,c
  2495  001582  6E1A               	movwf	(??___ftpack+2)& (0+255),c
  2496  001584  5018               	movf	??___ftpack,w,c
  2497  001586  1019               	iorwf	??___ftpack+1,w,c
  2498  001588  101A               	iorwf	??___ftpack+2,w,c
  2499  00158A  B4D8               	btfsc	status,2,c
  2500  00158C  D006               	goto	l1849
  2501  00158E  D7E6               	goto	l1841
  2502  001590                     l1847:
  2503  001590  0616               	decf	___ftpack@exp,f,c
  2504  001592  90D8               	bcf	status,0,c
  2505  001594  3613               	rlcf	___ftpack@arg,f,c
  2506  001596  3614               	rlcf	___ftpack@arg+1,f,c
  2507  001598  3615               	rlcf	___ftpack@arg+2,f,c
  2508  00159A                     l1849:
  2509  00159A  BE14               	btfsc	___ftpack@arg+1,7,c
  2510  00159C  D003               	goto	l392
  2511  00159E  0E02               	movlw	2
  2512  0015A0  6016               	cpfslt	___ftpack@exp,c
  2513  0015A2  D7F6               	goto	l1847
  2514  0015A4                     l392:
  2515  0015A4  A016               	btfss	___ftpack@exp,0,c
  2516  0015A6  9E14               	bcf	___ftpack@arg+1,7,c
  2517  0015A8  90D8               	bcf	status,0,c
  2518  0015AA  3216               	rrcf	___ftpack@exp,f,c
  2519  0015AC  5016               	movf	___ftpack@exp,w,c
  2520  0015AE  1215               	iorwf	___ftpack@arg+2,f,c
  2521  0015B0  5017               	movf	___ftpack@sign,w,c
  2522  0015B2  A4D8               	btfss	status,2,c
  2523  0015B4  8E15               	bsf	___ftpack@arg+2,7,c
  2524  0015B6  C013  F013         	movff	___ftpack@arg,?___ftpack
  2525  0015BA  C014  F014         	movff	___ftpack@arg+1,?___ftpack+1
  2526  0015BE  C015  F015         	movff	___ftpack@arg+2,?___ftpack+2
  2527  0015C2  0012               	return	
  2528  0015C4                     __end_of___ftpack:
  2529                           	opt stack 0
  2530                           tblptru	equ	0xFF8
  2531                           tblptrh	equ	0xFF7
  2532                           tblptrl	equ	0xFF6
  2533                           tablat	equ	0xFF5
  2534                           prodh	equ	0xFF4
  2535                           prodl	equ	0xFF3
  2536                           postinc0	equ	0xFEE
  2537                           wreg	equ	0xFE8
  2538                           indf1	equ	0xFE7
  2539                           postdec1	equ	0xFE5
  2540                           fsr1h	equ	0xFE2
  2541                           fsr1l	equ	0xFE1
  2542                           indf2	equ	0xFDF
  2543                           fsr2h	equ	0xFDA
  2544                           fsr2l	equ	0xFD9
  2545                           status	equ	0xFD8
  2546                           
  2547 ;; *************** function _initUART1 *****************
  2548 ;; Defined at:
  2549 ;;		line 69 in file "main.c"
  2550 ;; Parameters:    Size  Location     Type
  2551 ;;		None
  2552 ;; Auto vars:     Size  Location     Type
  2553 ;;		None
  2554 ;; Return value:  Size  Location     Type
  2555 ;;                  1    wreg      void 
  2556 ;; Registers used:
  2557 ;;		wreg, status,2
  2558 ;; Tracked objects:
  2559 ;;		On entry : 0/0
  2560 ;;		On exit  : 0/0
  2561 ;;		Unchanged: 0/0
  2562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2563 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2565 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2566 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2567 ;;Total ram usage:        0 bytes
  2568 ;; Hardware stack levels used:    1
  2569 ;; Hardware stack levels required when called:    2
  2570 ;; This function calls:
  2571 ;;		Nothing
  2572 ;; This function is called by:
  2573 ;;		_main
  2574 ;; This function uses a non-reentrant model
  2575 ;;
  2576                           
  2577                           	psect	text11
  2578  001922                     __ptext11:
  2579                           	opt stack 0
  2580  001922                     _initUART1:
  2581                           	opt stack 28
  2582                           
  2583                           ;main.c: 72: TRISCbits.TRISC7 = 1;
  2584                           
  2585                           ;incstack = 0
  2586  001922  8E94               	bsf	3988,7,c	;volatile
  2587                           
  2588                           ;main.c: 73: TRISCbits.TRISC6 = 0;
  2589  001924  9C94               	bcf	3988,6,c	;volatile
  2590                           
  2591                           ;main.c: 75: TXSTA1bits.BRGH = 1;
  2592  001926  84AD               	bsf	4013,2,c	;volatile
  2593                           
  2594                           ;main.c: 76: BAUDCON1bits.BRG16 = 1;
  2595  001928  867E               	bsf	3966,3,c	;volatile
  2596                           
  2597                           ;main.c: 83: SPBRGH1 = 0;
  2598  00192A  0E00               	movlw	0
  2599  00192C  6E7F               	movwf	3967,c	;volatile
  2600                           
  2601                           ;main.c: 84: SPBRG1 = 34;
  2602  00192E  0E22               	movlw	34
  2603  001930  6EB0               	movwf	4016,c	;volatile
  2604                           
  2605                           ;main.c: 88: TXSTA1bits.SYNC = 0;
  2606  001932  98AD               	bcf	4013,4,c	;volatile
  2607                           
  2608                           ;main.c: 89: RCSTA1bits.SPEN = 1;
  2609  001934  8EAC               	bsf	4012,7,c	;volatile
  2610                           
  2611                           ;main.c: 93: PIE1bits.TXIE = 1;
  2612  001936  889D               	bsf	3997,4,c	;volatile
  2613                           
  2614                           ;main.c: 94: PIE1bits.RC1IE = 1;
  2615  001938  8A9D               	bsf	3997,5,c	;volatile
  2616                           
  2617                           ;main.c: 99: RCSTA1bits.CREN = 1;
  2618  00193A  88AC               	bsf	4012,4,c	;volatile
  2619  00193C  0012               	return		;funcret
  2620  00193E                     __end_of_initUART1:
  2621                           	opt stack 0
  2622                           tblptru	equ	0xFF8
  2623                           tblptrh	equ	0xFF7
  2624                           tblptrl	equ	0xFF6
  2625                           tablat	equ	0xFF5
  2626                           prodh	equ	0xFF4
  2627                           prodl	equ	0xFF3
  2628                           postinc0	equ	0xFEE
  2629                           wreg	equ	0xFE8
  2630                           indf1	equ	0xFE7
  2631                           postdec1	equ	0xFE5
  2632                           fsr1h	equ	0xFE2
  2633                           fsr1l	equ	0xFE1
  2634                           indf2	equ	0xFDF
  2635                           fsr2h	equ	0xFDA
  2636                           fsr2l	equ	0xFD9
  2637                           status	equ	0xFD8
  2638                           
  2639 ;; *************** function _initLoRa *****************
  2640 ;; Defined at:
  2641 ;;		line 199 in file "main.c"
  2642 ;; Parameters:    Size  Location     Type
  2643 ;;		None
  2644 ;; Auto vars:     Size  Location     Type
  2645 ;;		None
  2646 ;; Return value:  Size  Location     Type
  2647 ;;                  1    wreg      void 
  2648 ;; Registers used:
  2649 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2650 ;; Tracked objects:
  2651 ;;		On entry : 0/0
  2652 ;;		On exit  : 0/0
  2653 ;;		Unchanged: 0/0
  2654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2655 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2657 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2659 ;;Total ram usage:        0 bytes
  2660 ;; Hardware stack levels used:    1
  2661 ;; Hardware stack levels required when called:    3
  2662 ;; This function calls:
  2663 ;;		_delay
  2664 ;;		_sendUARTMessage
  2665 ;; This function is called by:
  2666 ;;		_main
  2667 ;; This function uses a non-reentrant model
  2668 ;;
  2669                           
  2670                           	psect	text12
  2671  00180A                     __ptext12:
  2672                           	opt stack 0
  2673  00180A                     _initLoRa:
  2674                           	opt stack 27
  2675                           
  2676                           ;main.c: 200: sendUARTMessage(&set_dev_eui);
  2677                           
  2678                           ;incstack = 0
  2679  00180A  0E80               	movlw	low _set_dev_eui
  2680  00180C  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2681  00180E  0E0F               	movlw	high _set_dev_eui
  2682  001810  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2683  001812  ECAC  F00C         	call	_sendUARTMessage	;wreg free
  2684                           
  2685                           ;main.c: 201: delay();
  2686  001816  ECDD  F00B         	call	_delay	;wreg free
  2687                           
  2688                           ;main.c: 202: sendUARTMessage(&set_app_eui);
  2689  00181A  0E5E               	movlw	low _set_app_eui
  2690  00181C  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2691  00181E  0E0F               	movlw	high _set_app_eui
  2692  001820  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2693  001822  ECAC  F00C         	call	_sendUARTMessage	;wreg free
  2694                           
  2695                           ;main.c: 203: delay();
  2696  001826  ECDD  F00B         	call	_delay	;wreg free
  2697                           
  2698                           ;main.c: 204: sendUARTMessage(&set_app_key);
  2699  00182A  0E2C               	movlw	low _set_app_key
  2700  00182C  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2701  00182E  0E0F               	movlw	high _set_app_key
  2702  001830  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2703  001832  ECAC  F00C         	call	_sendUARTMessage	;wreg free
  2704                           
  2705                           ;main.c: 205: delay();
  2706  001836  ECDD  F00B         	call	_delay	;wreg free
  2707                           
  2708                           ;main.c: 206: sendUARTMessage(&join_network);
  2709  00183A  0EA2               	movlw	low _join_network
  2710  00183C  6E13               	movwf	sendUARTMessage@newMessagePointer,c
  2711  00183E  0E0F               	movlw	high _join_network
  2712  001840  6E14               	movwf	sendUARTMessage@newMessagePointer+1,c
  2713  001842  ECAC  F00C         	call	_sendUARTMessage	;wreg free
  2714                           
  2715                           ;main.c: 207: delay();
  2716  001846  ECDD  F00B         	call	_delay	;wreg free
  2717  00184A  0012               	return		;funcret
  2718  00184C                     __end_of_initLoRa:
  2719                           	opt stack 0
  2720                           tblptru	equ	0xFF8
  2721                           tblptrh	equ	0xFF7
  2722                           tblptrl	equ	0xFF6
  2723                           tablat	equ	0xFF5
  2724                           prodh	equ	0xFF4
  2725                           prodl	equ	0xFF3
  2726                           postinc0	equ	0xFEE
  2727                           wreg	equ	0xFE8
  2728                           indf1	equ	0xFE7
  2729                           postdec1	equ	0xFE5
  2730                           fsr1h	equ	0xFE2
  2731                           fsr1l	equ	0xFE1
  2732                           indf2	equ	0xFDF
  2733                           fsr2h	equ	0xFDA
  2734                           fsr2l	equ	0xFD9
  2735                           status	equ	0xFD8
  2736                           
  2737 ;; *************** function _sendUARTMessage *****************
  2738 ;; Defined at:
  2739 ;;		line 185 in file "main.c"
  2740 ;; Parameters:    Size  Location     Type
  2741 ;;  newMessagePo    2   18[COMRAM] PTR unsigned char 
  2742 ;;		 -> join_network(16), set_app_key(50), set_app_eui(34), set_dev_eui(34), 
  2743 ;;		 -> temp_display_message(20), 
  2744 ;; Auto vars:     Size  Location     Type
  2745 ;;		None
  2746 ;; Return value:  Size  Location     Type
  2747 ;;                  1    wreg      void 
  2748 ;; Registers used:
  2749 ;;		wreg, status,2, status,0
  2750 ;; Tracked objects:
  2751 ;;		On entry : 0/0
  2752 ;;		On exit  : 0/0
  2753 ;;		Unchanged: 0/0
  2754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2755 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2758 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2759 ;;Total ram usage:        2 bytes
  2760 ;; Hardware stack levels used:    1
  2761 ;; Hardware stack levels required when called:    2
  2762 ;; This function calls:
  2763 ;;		Nothing
  2764 ;; This function is called by:
  2765 ;;		_initLoRa
  2766 ;;		_main
  2767 ;; This function uses a non-reentrant model
  2768 ;;
  2769                           
  2770                           	psect	text13
  2771  001958                     __ptext13:
  2772                           	opt stack 0
  2773  001958                     _sendUARTMessage:
  2774                           	opt stack 28
  2775                           
  2776                           ;main.c: 187: if(isCommandSent == 1){
  2777                           
  2778                           ;incstack = 0
  2779  001958  A04C               	btfss	_isCommandSent/(0+8),_isCommandSent& (0+7),c
  2780  00195A  0012               	return	
  2781                           
  2782                           ;main.c: 189: currentMessagePointer = newMessagePointer;
  2783  00195C  C013  F03C         	movff	sendUARTMessage@newMessagePointer,_currentMessagePointer
  2784  001960  C014  F03D         	movff	sendUARTMessage@newMessagePointer+1,_currentMessagePointer+1
  2785                           
  2786                           ;main.c: 194: PIE1bits.TXIE = 1;
  2787  001964  889D               	bsf	3997,4,c	;volatile
  2788                           
  2789                           ;main.c: 195: TXSTA1bits.TXEN = 1;
  2790  001966  8AAD               	bsf	4013,5,c	;volatile
  2791  001968  0012               	return	
  2792  00196A                     __end_of_sendUARTMessage:
  2793                           	opt stack 0
  2794                           tblptru	equ	0xFF8
  2795                           tblptrh	equ	0xFF7
  2796                           tblptrl	equ	0xFF6
  2797                           tablat	equ	0xFF5
  2798                           prodh	equ	0xFF4
  2799                           prodl	equ	0xFF3
  2800                           postinc0	equ	0xFEE
  2801                           wreg	equ	0xFE8
  2802                           indf1	equ	0xFE7
  2803                           postdec1	equ	0xFE5
  2804                           fsr1h	equ	0xFE2
  2805                           fsr1l	equ	0xFE1
  2806                           indf2	equ	0xFDF
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811 ;; *************** function _delay *****************
  2812 ;; Defined at:
  2813 ;;		line 209 in file "main.c"
  2814 ;; Parameters:    Size  Location     Type
  2815 ;;		None
  2816 ;; Auto vars:     Size  Location     Type
  2817 ;;  time            4   19[COMRAM] long 
  2818 ;; Return value:  Size  Location     Type
  2819 ;;                  1    wreg      void 
  2820 ;; Registers used:
  2821 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  2822 ;; Tracked objects:
  2823 ;;		On entry : 0/0
  2824 ;;		On exit  : 0/0
  2825 ;;		Unchanged: 0/0
  2826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2827 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2828 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2829 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2830 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2831 ;;Total ram usage:        5 bytes
  2832 ;; Hardware stack levels used:    1
  2833 ;; Hardware stack levels required when called:    2
  2834 ;; This function calls:
  2835 ;;		Nothing
  2836 ;; This function is called by:
  2837 ;;		_initLoRa
  2838 ;;		_main
  2839 ;; This function uses a non-reentrant model
  2840 ;;
  2841                           
  2842                           	psect	text14
  2843  0017BA                     __ptext14:
  2844                           	opt stack 0
  2845  0017BA                     _delay:
  2846                           	opt stack 27
  2847                           
  2848                           ;main.c: 210: long time = 0;
  2849                           
  2850                           ;incstack = 0
  2851  0017BA  0E00               	movlw	0
  2852  0017BC  6E14               	movwf	delay@time,c
  2853  0017BE  0E00               	movlw	0
  2854  0017C0  6E15               	movwf	delay@time+1,c
  2855  0017C2  0E00               	movlw	0
  2856  0017C4  6E16               	movwf	delay@time+2,c
  2857  0017C6  0E00               	movlw	0
  2858  0017C8  6E17               	movwf	delay@time+3,c
  2859                           
  2860                           ;main.c: 211: while(time < DELAY){
  2861  0017CA  D006               	goto	l1637
  2862  0017CC                     l1635:
  2863                           
  2864                           ;main.c: 212: time++;
  2865  0017CC  0E01               	movlw	1
  2866  0017CE  2614               	addwf	delay@time,f,c
  2867  0017D0  0E00               	movlw	0
  2868  0017D2  2215               	addwfc	delay@time+1,f,c
  2869  0017D4  2216               	addwfc	delay@time+2,f,c
  2870  0017D6  2217               	addwfc	delay@time+3,f,c
  2871  0017D8                     l1637:
  2872  0017D8  0E28               	movlw	low _DELAY
  2873  0017DA  6EF6               	movwf	tblptrl,c
  2874  0017DC                     	if	1	;There is more than 1 active tblptr byte
  2875  0017DC  0E0F               	movlw	high _DELAY
  2876  0017DE  6EF7               	movwf	tblptrh,c
  2877  0017E0                     	endif
  2878  0017E0                     	if	1	;There are 3 active tblptr bytes
  2879  0017E0  0E00               	movlw	low (_DELAY shr (0+16))
  2880  0017E2  6EF8               	movwf	tblptru,c
  2881  0017E4                     	endif
  2882  0017E4  0009               	tblrd		*+
  2883  0017E6  50F5               	movf	tablat,w,c
  2884  0017E8  5C14               	subwf	delay@time,w,c
  2885  0017EA  0009               	tblrd		*+
  2886  0017EC  50F5               	movf	tablat,w,c
  2887  0017EE  5815               	subwfb	delay@time+1,w,c
  2888  0017F0  0009               	tblrd		*+
  2889  0017F2  50F5               	movf	tablat,w,c
  2890  0017F4  5816               	subwfb	delay@time+2,w,c
  2891  0017F6  5017               	movf	delay@time+3,w,c
  2892  0017F8  0A80               	xorlw	128
  2893  0017FA  6E13               	movwf	??_delay& (0+255),c
  2894  0017FC  0009               	tblrd		*+
  2895  0017FE  50F5               	movf	tablat,w,c
  2896  001800  0A80               	xorlw	128
  2897  001802  5813               	subwfb	??_delay& (0+255),w,c
  2898  001804  B0D8               	btfsc	status,0,c
  2899  001806  0012               	return	
  2900  001808  D7E1               	goto	l1635
  2901  00180A                     __end_of_delay:
  2902                           	opt stack 0
  2903                           tblptru	equ	0xFF8
  2904                           tblptrh	equ	0xFF7
  2905                           tblptrl	equ	0xFF6
  2906                           tablat	equ	0xFF5
  2907                           prodh	equ	0xFF4
  2908                           prodl	equ	0xFF3
  2909                           postinc0	equ	0xFEE
  2910                           wreg	equ	0xFE8
  2911                           indf1	equ	0xFE7
  2912                           postdec1	equ	0xFE5
  2913                           fsr1h	equ	0xFE2
  2914                           fsr1l	equ	0xFE1
  2915                           indf2	equ	0xFDF
  2916                           fsr2h	equ	0xFDA
  2917                           fsr2l	equ	0xFD9
  2918                           status	equ	0xFD8
  2919                           
  2920 ;; *************** function _initInterrupts *****************
  2921 ;; Defined at:
  2922 ;;		line 173 in file "main.c"
  2923 ;; Parameters:    Size  Location     Type
  2924 ;;		None
  2925 ;; Auto vars:     Size  Location     Type
  2926 ;;		None
  2927 ;; Return value:  Size  Location     Type
  2928 ;;                  1    wreg      void 
  2929 ;; Registers used:
  2930 ;;		wreg, status,2
  2931 ;; Tracked objects:
  2932 ;;		On entry : 0/0
  2933 ;;		On exit  : 0/0
  2934 ;;		Unchanged: 0/0
  2935 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2936 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2938 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2939 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2940 ;;Total ram usage:        0 bytes
  2941 ;; Hardware stack levels used:    1
  2942 ;; Hardware stack levels required when called:    2
  2943 ;; This function calls:
  2944 ;;		Nothing
  2945 ;; This function is called by:
  2946 ;;		_main
  2947 ;; This function uses a non-reentrant model
  2948 ;;
  2949                           
  2950                           	psect	text15
  2951  00197A                     __ptext15:
  2952                           	opt stack 0
  2953  00197A                     _initInterrupts:
  2954                           	opt stack 28
  2955                           
  2956                           ;main.c: 174: INTCON = 0b11000000;
  2957                           
  2958                           ;incstack = 0
  2959  00197A  0EC0               	movlw	192
  2960  00197C  6EF2               	movwf	intcon,c	;volatile
  2961                           
  2962                           ;main.c: 175: RCONbits.IPEN = 0;
  2963  00197E  9ED0               	bcf	4048,7,c	;volatile
  2964  001980  0012               	return		;funcret
  2965  001982                     __end_of_initInterrupts:
  2966                           	opt stack 0
  2967                           tblptru	equ	0xFF8
  2968                           tblptrh	equ	0xFF7
  2969                           tblptrl	equ	0xFF6
  2970                           tablat	equ	0xFF5
  2971                           prodh	equ	0xFF4
  2972                           prodl	equ	0xFF3
  2973                           intcon	equ	0xFF2
  2974                           postinc0	equ	0xFEE
  2975                           wreg	equ	0xFE8
  2976                           indf1	equ	0xFE7
  2977                           postdec1	equ	0xFE5
  2978                           fsr1h	equ	0xFE2
  2979                           fsr1l	equ	0xFE1
  2980                           indf2	equ	0xFDF
  2981                           fsr2h	equ	0xFDA
  2982                           fsr2l	equ	0xFD9
  2983                           status	equ	0xFD8
  2984                           
  2985 ;; *************** function _initADC *****************
  2986 ;; Defined at:
  2987 ;;		line 103 in file "main.c"
  2988 ;; Parameters:    Size  Location     Type
  2989 ;;		None
  2990 ;; Auto vars:     Size  Location     Type
  2991 ;;		None
  2992 ;; Return value:  Size  Location     Type
  2993 ;;                  1    wreg      void 
  2994 ;; Registers used:
  2995 ;;		wreg, status,2
  2996 ;; Tracked objects:
  2997 ;;		On entry : 0/0
  2998 ;;		On exit  : 0/0
  2999 ;;		Unchanged: 0/0
  3000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3001 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3004 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3005 ;;Total ram usage:        0 bytes
  3006 ;; Hardware stack levels used:    1
  3007 ;; Hardware stack levels required when called:    2
  3008 ;; This function calls:
  3009 ;;		Nothing
  3010 ;; This function is called by:
  3011 ;;		_main
  3012 ;; This function uses a non-reentrant model
  3013 ;;
  3014                           
  3015                           	psect	text16
  3016  0018F4                     __ptext16:
  3017                           	opt stack 0
  3018  0018F4                     _initADC:
  3019                           	opt stack 28
  3020                           
  3021                           ;main.c: 104: TRISAbits.TRISA0 = '1';
  3022                           
  3023                           ;incstack = 0
  3024  0018F4  8092               	bsf	3986,0,c	;volatile
  3025                           
  3026                           ;main.c: 105: TRISAbits.TRISA1 = '1';
  3027  0018F6  8292               	bsf	3986,1,c	;volatile
  3028                           
  3029                           ;main.c: 106: PORTAbits.RA0 = '0';
  3030  0018F8  9080               	bcf	3968,0,c	;volatile
  3031                           
  3032                           ;main.c: 107: PORTAbits.RA1 = '0';
  3033  0018FA  9280               	bcf	3968,1,c	;volatile
  3034                           
  3035                           ;main.c: 109: PORTBbits.RB0 = '0';
  3036  0018FC  9081               	bcf	3969,0,c	;volatile
  3037                           
  3038                           ;main.c: 110: TRISBbits.TRISB0 = '1';
  3039  0018FE  8093               	bsf	3987,0,c	;volatile
  3040                           
  3041                           ;main.c: 111: PORTBbits.RB1 = '0';
  3042  001900  9281               	bcf	3969,1,c	;volatile
  3043                           
  3044                           ;main.c: 112: TRISBbits.TRISB1 = '1';
  3045  001902  8293               	bsf	3987,1,c	;volatile
  3046                           
  3047                           ;main.c: 115: ANCON0 = 0xFC;
  3048  001904  0EFC               	movlw	252
  3049  001906  010F               	movlb	15	; () banked
  3050  001908  6F48               	movwf	72,b	;volatile
  3051                           
  3052                           ;main.c: 116: ANCON1 = 0x1C;
  3053  00190A  0E1C               	movlw	28
  3054  00190C  010F               	movlb	15	; () banked
  3055  00190E  6F49               	movwf	73,b	;volatile
  3056                           
  3057                           ;main.c: 117: ADCON0 = 0x00;
  3058  001910  0E00               	movlw	0
  3059  001912  6EC2               	movwf	4034,c	;volatile
  3060                           
  3061                           ;main.c: 118: ADCON1 = 0b10111110;
  3062  001914  0EBE               	movlw	190
  3063  001916  6EC1               	movwf	4033,c	;volatile
  3064                           
  3065                           ; BSR set to: 15
  3066                           ;main.c: 119: ADCON0bits.ADON = 0x01;
  3067  001918  80C2               	bsf	4034,0,c	;volatile
  3068                           
  3069                           ; BSR set to: 15
  3070                           ;main.c: 121: PIR1bits.ADIF = 0;
  3071  00191A  9C9E               	bcf	3998,6,c	;volatile
  3072                           
  3073                           ; BSR set to: 15
  3074                           ;main.c: 122: PIE1bits.ADIE = 1;
  3075  00191C  8C9D               	bsf	3997,6,c	;volatile
  3076                           
  3077                           ; BSR set to: 15
  3078                           ;main.c: 125: ADCON0bits.GO_DONE = 1;
  3079  00191E  82C2               	bsf	4034,1,c	;volatile
  3080                           
  3081                           ; BSR set to: 15
  3082  001920  0012               	return		;funcret
  3083  001922                     __end_of_initADC:
  3084                           	opt stack 0
  3085                           tblptru	equ	0xFF8
  3086                           tblptrh	equ	0xFF7
  3087                           tblptrl	equ	0xFF6
  3088                           tablat	equ	0xFF5
  3089                           prodh	equ	0xFF4
  3090                           prodl	equ	0xFF3
  3091                           intcon	equ	0xFF2
  3092                           postinc0	equ	0xFEE
  3093                           wreg	equ	0xFE8
  3094                           indf1	equ	0xFE7
  3095                           postdec1	equ	0xFE5
  3096                           fsr1h	equ	0xFE2
  3097                           fsr1l	equ	0xFE1
  3098                           indf2	equ	0xFDF
  3099                           fsr2h	equ	0xFDA
  3100                           fsr2l	equ	0xFD9
  3101                           status	equ	0xFD8
  3102                           
  3103 ;; *************** function _clearUARTReceiveBuffer *****************
  3104 ;; Defined at:
  3105 ;;		line 178 in file "main.c"
  3106 ;; Parameters:    Size  Location     Type
  3107 ;;		None
  3108 ;; Auto vars:     Size  Location     Type
  3109 ;;  i               2   18[COMRAM] int 
  3110 ;; Return value:  Size  Location     Type
  3111 ;;                  1    wreg      void 
  3112 ;; Registers used:
  3113 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3114 ;; Tracked objects:
  3115 ;;		On entry : 0/0
  3116 ;;		On exit  : 0/0
  3117 ;;		Unchanged: 0/0
  3118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3120 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3122 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3123 ;;Total ram usage:        2 bytes
  3124 ;; Hardware stack levels used:    1
  3125 ;; Hardware stack levels required when called:    2
  3126 ;; This function calls:
  3127 ;;		Nothing
  3128 ;; This function is called by:
  3129 ;;		_main
  3130 ;; This function uses a non-reentrant model
  3131 ;;
  3132                           
  3133                           	psect	text17
  3134  001884                     __ptext17:
  3135                           	opt stack 0
  3136  001884                     _clearUARTReceiveBuffer:
  3137                           	opt stack 28
  3138                           
  3139                           ;main.c: 179: for(int i = 0; i<1000; i++){
  3140                           
  3141                           ; BSR set to: 15
  3142                           ;incstack = 0
  3143  001884  0E00               	movlw	0
  3144  001886  6E14               	movwf	clearUARTReceiveBuffer@i+1,c
  3145  001888  0E00               	movlw	0
  3146  00188A  6E13               	movwf	clearUARTReceiveBuffer@i,c
  3147  00188C                     l1685:
  3148  00188C  BE14               	btfsc	clearUARTReceiveBuffer@i+1,7,c
  3149  00188E  D006               	goto	l1689
  3150  001890  0EE8               	movlw	232
  3151  001892  5C13               	subwf	clearUARTReceiveBuffer@i,w,c
  3152  001894  0E03               	movlw	3
  3153  001896  5814               	subwfb	clearUARTReceiveBuffer@i+1,w,c
  3154  001898  B0D8               	btfsc	status,0,c
  3155  00189A  D00B               	goto	l1695
  3156  00189C                     l1689:
  3157                           
  3158                           ;main.c: 180: uart_receive_buffer[i] = '\0';
  3159  00189C  0E97               	movlw	low _uart_receive_buffer
  3160  00189E  2413               	addwf	clearUARTReceiveBuffer@i,w,c
  3161  0018A0  6ED9               	movwf	fsr2l,c
  3162  0018A2  0E00               	movlw	high _uart_receive_buffer
  3163  0018A4  2014               	addwfc	clearUARTReceiveBuffer@i+1,w,c
  3164  0018A6  6EDA               	movwf	fsr2h,c
  3165  0018A8  0E00               	movlw	0
  3166  0018AA  6EDF               	movwf	indf2,c
  3167  0018AC  4A13               	infsnz	clearUARTReceiveBuffer@i,f,c
  3168  0018AE  2A14               	incf	clearUARTReceiveBuffer@i+1,f,c
  3169  0018B0  D7ED               	goto	l1685
  3170  0018B2                     l1695:
  3171                           
  3172                           ;main.c: 181: }
  3173                           ;main.c: 182: uart_receive_buffer_index= 0 ;
  3174  0018B2  0E00               	movlw	0
  3175  0018B4  6E4B               	movwf	_uart_receive_buffer_index+1,c
  3176  0018B6  0E00               	movlw	0
  3177  0018B8  6E4A               	movwf	_uart_receive_buffer_index,c
  3178  0018BA  0012               	return		;funcret
  3179  0018BC                     __end_of_clearUARTReceiveBuffer:
  3180                           	opt stack 0
  3181                           tblptru	equ	0xFF8
  3182                           tblptrh	equ	0xFF7
  3183                           tblptrl	equ	0xFF6
  3184                           tablat	equ	0xFF5
  3185                           prodh	equ	0xFF4
  3186                           prodl	equ	0xFF3
  3187                           intcon	equ	0xFF2
  3188                           postinc0	equ	0xFEE
  3189                           wreg	equ	0xFE8
  3190                           indf1	equ	0xFE7
  3191                           postdec1	equ	0xFE5
  3192                           fsr1h	equ	0xFE2
  3193                           fsr1l	equ	0xFE1
  3194                           indf2	equ	0xFDF
  3195                           fsr2h	equ	0xFDA
  3196                           fsr2l	equ	0xFD9
  3197                           status	equ	0xFD8
  3198                           
  3199 ;; *************** function _UARTReceive *****************
  3200 ;; Defined at:
  3201 ;;		line 164 in file "main.c"
  3202 ;; Parameters:    Size  Location     Type
  3203 ;;  on_or_off       1    wreg     unsigned char 
  3204 ;; Auto vars:     Size  Location     Type
  3205 ;;  on_or_off       1   18[COMRAM] unsigned char 
  3206 ;; Return value:  Size  Location     Type
  3207 ;;                  1    wreg      void 
  3208 ;; Registers used:
  3209 ;;		wreg, status,2, status,0
  3210 ;; Tracked objects:
  3211 ;;		On entry : 0/0
  3212 ;;		On exit  : 0/0
  3213 ;;		Unchanged: 0/0
  3214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3215 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3216 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3217 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3218 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3219 ;;Total ram usage:        1 bytes
  3220 ;; Hardware stack levels used:    1
  3221 ;; Hardware stack levels required when called:    2
  3222 ;; This function calls:
  3223 ;;		Nothing
  3224 ;; This function is called by:
  3225 ;;		_main
  3226 ;; This function uses a non-reentrant model
  3227 ;;
  3228                           
  3229                           	psect	text18
  3230  00196A                     __ptext18:
  3231                           	opt stack 0
  3232  00196A                     _UARTReceive:
  3233                           	opt stack 28
  3234                           
  3235                           ;incstack = 0
  3236                           ;UARTReceive@on_or_off stored from wreg
  3237  00196A  6E13               	movwf	UARTReceive@on_or_off,c
  3238                           
  3239                           ;main.c: 165: if(on_or_off == 1){
  3240  00196C  0413               	decf	UARTReceive@on_or_off,w,c
  3241  00196E  A4D8               	btfss	status,2,c
  3242  001970  D002               	goto	l114
  3243                           
  3244                           ;main.c: 166: RCSTA1bits.CREN = 1;
  3245  001972  88AC               	bsf	4012,4,c	;volatile
  3246                           
  3247                           ;main.c: 167: }
  3248  001974  0012               	return	
  3249  001976                     l114:
  3250                           
  3251                           ;main.c: 168: else{
  3252                           ;main.c: 169: RCSTA1bits.CREN = 0;
  3253  001976  98AC               	bcf	4012,4,c	;volatile
  3254  001978  0012               	return	
  3255  00197A                     __end_of_UARTReceive:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           prodh	equ	0xFF4
  3262                           prodl	equ	0xFF3
  3263                           intcon	equ	0xFF2
  3264                           postinc0	equ	0xFEE
  3265                           wreg	equ	0xFE8
  3266                           indf1	equ	0xFE7
  3267                           postdec1	equ	0xFE5
  3268                           fsr1h	equ	0xFE2
  3269                           fsr1l	equ	0xFE1
  3270                           indf2	equ	0xFDF
  3271                           fsr2h	equ	0xFDA
  3272                           fsr2l	equ	0xFD9
  3273                           status	equ	0xFD8
  3274                           
  3275 ;; *************** function _high_ISR *****************
  3276 ;; Defined at:
  3277 ;;		line 267 in file "main.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;		None
  3280 ;; Auto vars:     Size  Location     Type
  3281 ;;		None
  3282 ;; Return value:  Size  Location     Type
  3283 ;;                  1    wreg      void 
  3284 ;; Registers used:
  3285 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3286 ;; Tracked objects:
  3287 ;;		On entry : 0/0
  3288 ;;		On exit  : 0/0
  3289 ;;		Unchanged: 0/0
  3290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3293 ;;      Temps:         16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3295 ;;Total ram usage:       16 bytes
  3296 ;; Hardware stack levels used:    1
  3297 ;; Hardware stack levels required when called:    1
  3298 ;; This function calls:
  3299 ;;		i2_clearUARTReceiveBuffer
  3300 ;; This function is called by:
  3301 ;;		Interrupt level 2
  3302 ;; This function uses a non-reentrant model
  3303 ;;
  3304                           
  3305                           	psect	intcode
  3306  000008                     __pintcode:
  3307                           	opt stack 0
  3308  000008                     _high_ISR:
  3309                           	opt stack 25
  3310                           
  3311                           ;incstack = 0
  3312  000008  824D               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3313  00000A  CFFA F005          	movff	pclath,??_high_ISR+2
  3314  00000E  CFFB F006          	movff	pclatu,??_high_ISR+3
  3315  000012  CFE9 F007          	movff	fsr0l,??_high_ISR+4
  3316  000016  CFEA F008          	movff	fsr0h,??_high_ISR+5
  3317  00001A  CFE1 F009          	movff	fsr1l,??_high_ISR+6
  3318  00001E  CFE2 F00A          	movff	fsr1h,??_high_ISR+7
  3319  000022  CFD9 F00B          	movff	fsr2l,??_high_ISR+8
  3320  000026  CFDA F00C          	movff	fsr2h,??_high_ISR+9
  3321  00002A  CFF3 F00D          	movff	prodl,??_high_ISR+10
  3322  00002E  CFF4 F00E          	movff	prodh,??_high_ISR+11
  3323  000032  CFF6 F00F          	movff	tblptrl,??_high_ISR+12
  3324  000036  CFF7 F010          	movff	tblptrh,??_high_ISR+13
  3325  00003A  CFF8 F011          	movff	tblptru,??_high_ISR+14
  3326  00003E  CFF5 F012          	movff	tablat,??_high_ISR+15
  3327                           
  3328                           ;main.c: 270: if(PIR1bits.TX1IF == 1){
  3329  000042  A89E               	btfss	3998,4,c	;volatile
  3330  000044  D02B               	goto	i2l1773
  3331                           
  3332                           ;main.c: 272: if(*currentMessagePointer == '\0'){
  3333  000046  C03C  FFF6         	movff	_currentMessagePointer,tblptrl
  3334  00004A  C03D  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3335  00004E  0E00               	movlw	low (__smallconst shr (0+16))
  3336  000050  6EF8               	movwf	tblptru,c
  3337  000052  0E0E               	movlw	(high __ramtop+-1)
  3338  000054  64F7               	cpfsgt	tblptrh,c
  3339  000056  D003               	bra	i2u122_47
  3340  000058  0008               	tblrd		*
  3341  00005A  50F5               	movf	tablat,w,c
  3342  00005C  D005               	bra	i2u122_40
  3343  00005E                     i2u122_47:
  3344  00005E  CFF6 FFE1          	movff	tblptrl,fsr1l
  3345  000062  CFF7 FFE2          	movff	tblptrh,fsr1h
  3346  000066  50E7               	movf	indf1,w,c
  3347  000068                     i2u122_40:
  3348  000068  0900               	iorlw	0
  3349  00006A  A4D8               	btfss	status,2,c
  3350  00006C  D003               	goto	i2l1769
  3351                           
  3352                           ;main.c: 273: PIE1bits.TXIE = 0;
  3353  00006E  989D               	bcf	3997,4,c	;volatile
  3354                           
  3355                           ;main.c: 274: isCommandSent = 1;
  3356  000070  804C               	bsf	_isCommandSent/(0+8),_isCommandSent& (0+7),c
  3357                           
  3358                           ;main.c: 275: }
  3359  000072  D014               	goto	i2l1773
  3360  000074                     i2l1769:
  3361                           
  3362                           ;main.c: 276: else{
  3363                           ;main.c: 278: TXREG1 = *currentMessagePointer;
  3364  000074  C03C  FFF6         	movff	_currentMessagePointer,tblptrl
  3365  000078  C03D  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3366  00007C  0E00               	movlw	low (__smallconst shr (0+16))
  3367  00007E  6EF8               	movwf	tblptru,c
  3368  000080  0E0E               	movlw	(high __ramtop+-1)
  3369  000082  64F7               	cpfsgt	tblptrh,c
  3370  000084  D003               	bra	i2u124_47
  3371  000086  0008               	tblrd		*
  3372  000088  50F5               	movf	tablat,w,c
  3373  00008A  D005               	bra	i2u124_40
  3374  00008C                     i2u124_47:
  3375  00008C  CFF6 FFE1          	movff	tblptrl,fsr1l
  3376  000090  CFF7 FFE2          	movff	tblptrh,fsr1h
  3377  000094  50E7               	movf	indf1,w,c
  3378  000096                     i2u124_40:
  3379  000096  6EAE               	movwf	4014,c	;volatile
  3380                           
  3381                           ;main.c: 280: currentMessagePointer += 1;
  3382  000098  4A3C               	infsnz	_currentMessagePointer,f,c
  3383  00009A  2A3D               	incf	_currentMessagePointer+1,f,c
  3384  00009C                     i2l1773:
  3385                           
  3386                           ;main.c: 281: }
  3387                           ;main.c: 282: }
  3388                           ;main.c: 284: if(PIR1bits.RC1IF == 1){
  3389  00009C  AA9E               	btfss	3998,5,c	;volatile
  3390  00009E  D01C               	goto	i2l1789
  3391                           
  3392                           ;main.c: 285: PIR1bits.RC1IF = 0;
  3393  0000A0  9A9E               	bcf	3998,5,c	;volatile
  3394                           
  3395                           ;main.c: 286: uart_receive_buffer[uart_receive_buffer_index] = RCREG1;
  3396  0000A2  0E97               	movlw	low _uart_receive_buffer
  3397  0000A4  244A               	addwf	_uart_receive_buffer_index,w,c
  3398  0000A6  6ED9               	movwf	fsr2l,c
  3399  0000A8  0E00               	movlw	high _uart_receive_buffer
  3400  0000AA  204B               	addwfc	_uart_receive_buffer_index+1,w,c
  3401  0000AC  6EDA               	movwf	fsr2h,c
  3402  0000AE  CFAF FFDF          	movff	4015,indf2	;volatile
  3403                           
  3404                           ;main.c: 287: uart_receive_buffer_index += 1;
  3405  0000B2  4A4A               	infsnz	_uart_receive_buffer_index,f,c
  3406  0000B4  2A4B               	incf	_uart_receive_buffer_index+1,f,c
  3407                           
  3408                           ;main.c: 288: if(uart_receive_buffer[uart_receive_buffer_index] == '\n'){
  3409  0000B6  0E97               	movlw	low _uart_receive_buffer
  3410  0000B8  244A               	addwf	_uart_receive_buffer_index,w,c
  3411  0000BA  6ED9               	movwf	fsr2l,c
  3412  0000BC  0E00               	movlw	high _uart_receive_buffer
  3413  0000BE  204B               	addwfc	_uart_receive_buffer_index+1,w,c
  3414  0000C0  6EDA               	movwf	fsr2h,c
  3415  0000C2  0E0A               	movlw	10
  3416  0000C4  18DE               	xorwf	postinc2,w,c
  3417  0000C6  B4D8               	btfsc	status,2,c
  3418                           
  3419                           ;main.c: 289: RCSTA1bits.CREN = 0;
  3420  0000C8  98AC               	bcf	4012,4,c	;volatile
  3421                           
  3422                           ;main.c: 290: }
  3423                           ;main.c: 291: if(uart_receive_buffer_index > 1000){
  3424  0000CA  0EE9               	movlw	233
  3425  0000CC  5C4A               	subwf	_uart_receive_buffer_index,w,c
  3426  0000CE  0E03               	movlw	3
  3427  0000D0  584B               	subwfb	_uart_receive_buffer_index+1,w,c
  3428  0000D2  B0D8               	btfsc	status,0,c
  3429                           
  3430                           ;main.c: 292: clearUARTReceiveBuffer();
  3431  0000D4  EC5E  F00C         	call	i2_clearUARTReceiveBuffer	;wreg free
  3432  0000D8                     i2l1789:
  3433                           
  3434                           ;main.c: 293: }
  3435                           ;main.c: 294: }
  3436                           ;main.c: 296: if(PIR1bits.ADIF == 1)
  3437  0000D8  AC9E               	btfss	3998,6,c	;volatile
  3438  0000DA  D04D               	goto	i2l167
  3439                           
  3440                           ;main.c: 297: {
  3441                           ;main.c: 298: PIR1bits.ADIF = 0;
  3442  0000DC  9C9E               	bcf	3998,6,c	;volatile
  3443                           
  3444                           ;main.c: 299: switch(currentChannel){
  3445  0000DE  D035               	goto	i2l1803
  3446  0000E0                     i2l162:
  3447                           
  3448                           ;main.c: 301: plus_pipe = ADRES;
  3449  0000E0  CFC3 F044          	movff	4035,_plus_pipe	;volatile
  3450  0000E4  CFC4 F045          	movff	4036,_plus_pipe+1	;volatile
  3451                           
  3452                           ;main.c: 302: ADCON0bits.CHS = 0b1000;
  3453  0000E8  50C2               	movf	4034,w,c	;volatile
  3454  0000EA  0BC3               	andlw	-61
  3455  0000EC  0920               	iorlw	32
  3456  0000EE  6EC2               	movwf	4034,c	;volatile
  3457                           
  3458                           ;main.c: 303: currentChannel = 1;
  3459  0000F0  0E00               	movlw	0
  3460  0000F2  0100               	movlb	0	; () banked
  3461  0000F4  6F96               	movwf	(_currentChannel+1)& (0+255),b
  3462  0000F6  0E01               	movlw	1
  3463  0000F8  D026               	goto	L5
  3464  0000FA                     i2l164:
  3465                           
  3466                           ;main.c: 306: minus_pipe = ADRES;
  3467  0000FA  CFC3 F040          	movff	4035,_minus_pipe	;volatile
  3468  0000FE  CFC4 F041          	movff	4036,_minus_pipe+1	;volatile
  3469                           
  3470                           ;main.c: 307: ADCON0bits.CHS = 0b0001;
  3471  000102  50C2               	movf	4034,w,c	;volatile
  3472  000104  0BC3               	andlw	-61
  3473  000106  0904               	iorlw	4
  3474  000108  6EC2               	movwf	4034,c	;volatile
  3475                           
  3476                           ;main.c: 308: currentChannel = 2;
  3477  00010A  0E00               	movlw	0
  3478  00010C  0100               	movlb	0	; () banked
  3479  00010E  6F96               	movwf	(_currentChannel+1)& (0+255),b
  3480  000110  0E02               	movlw	2
  3481  000112  D019               	goto	L5
  3482  000114                     i2l165:
  3483                           
  3484                           ;main.c: 311: plus_ambient = ADRES;
  3485  000114  CFC3 F042          	movff	4035,_plus_ambient	;volatile
  3486  000118  CFC4 F043          	movff	4036,_plus_ambient+1	;volatile
  3487                           
  3488                           ;main.c: 312: ADCON0bits.CHS = 0b0000;
  3489  00011C  94C2               	bcf	4034,2,c	;volatile
  3490  00011E  96C2               	bcf	4034,3,c	;volatile
  3491  000120  98C2               	bcf	4034,4,c	;volatile
  3492  000122  9AC2               	bcf	4034,5,c	;volatile
  3493                           
  3494                           ;main.c: 313: currentChannel = 3;
  3495  000124  0E00               	movlw	0
  3496  000126  0100               	movlb	0	; () banked
  3497  000128  6F96               	movwf	(_currentChannel+1)& (0+255),b
  3498  00012A  0E03               	movlw	3
  3499  00012C  D00C               	goto	L5
  3500  00012E                     i2l166:
  3501                           
  3502                           ;main.c: 316: minus_ambient = ADRES;
  3503  00012E  CFC3 F03E          	movff	4035,_minus_ambient	;volatile
  3504  000132  CFC4 F03F          	movff	4036,_minus_ambient+1	;volatile
  3505                           
  3506                           ;main.c: 317: ADCON0bits.CHS = 0b1001;
  3507  000136  50C2               	movf	4034,w,c	;volatile
  3508  000138  0BC3               	andlw	-61
  3509  00013A  0924               	iorlw	36
  3510  00013C  6EC2               	movwf	4034,c	;volatile
  3511                           
  3512                           ;main.c: 318: currentChannel = 0;
  3513  00013E  0E00               	movlw	0
  3514  000140  0100               	movlb	0	; () banked
  3515  000142  6F96               	movwf	(_currentChannel+1)& (0+255),b
  3516  000144  0E00               	movlw	0
  3517  000146                     L5:
  3518  000146  6F95               	movwf	_currentChannel& (0+255),b
  3519                           
  3520                           ; BSR set to: 0
  3521                           ;main.c: 320: }
  3522                           
  3523                           ;main.c: 319: break;
  3524  000148  D015               	goto	i2l163
  3525  00014A                     i2l1803:
  3526  00014A  C095  F003         	movff	_currentChannel,??_high_ISR
  3527  00014E  C096  F004         	movff	_currentChannel+1,??_high_ISR+1
  3528                           
  3529                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3530                           ; Switch size 1, requested type "space"
  3531                           ; Number of cases is 1, Range of values is 0 to 0
  3532                           ; switch strategies available:
  3533                           ; Name         Instructions Cycles
  3534                           ; simple_byte            4     3 (average)
  3535                           ;	Chosen strategy is simple_byte
  3536  000152  5004               	movf	??_high_ISR+1,w,c
  3537  000154  0A00               	xorlw	0	; case 0
  3538  000156  A4D8               	btfss	status,2,c
  3539  000158  D00D               	goto	i2l163
  3540                           
  3541                           ; Switch size 1, requested type "space"
  3542                           ; Number of cases is 4, Range of values is 0 to 3
  3543                           ; switch strategies available:
  3544                           ; Name         Instructions Cycles
  3545                           ; simple_byte           13     7 (average)
  3546                           ;	Chosen strategy is simple_byte
  3547  00015A  5003               	movf	??_high_ISR,w,c
  3548  00015C  0A00               	xorlw	0	; case 0
  3549  00015E  B4D8               	btfsc	status,2,c
  3550  000160  D7BF               	goto	i2l162
  3551  000162  0A01               	xorlw	1	; case 1
  3552  000164  B4D8               	btfsc	status,2,c
  3553  000166  D7C9               	goto	i2l164
  3554  000168  0A03               	xorlw	3	; case 2
  3555  00016A  B4D8               	btfsc	status,2,c
  3556  00016C  D7D3               	goto	i2l165
  3557  00016E  0A01               	xorlw	1	; case 3
  3558  000170  B4D8               	btfsc	status,2,c
  3559  000172  D7DD               	goto	i2l166
  3560  000174                     i2l163:
  3561                           
  3562                           ;main.c: 321: ADCON0bits.GO_DONE = 1;
  3563  000174  82C2               	bsf	4034,1,c	;volatile
  3564  000176                     i2l167:
  3565  000176  C012  FFF5         	movff	??_high_ISR+15,tablat
  3566  00017A  C011  FFF8         	movff	??_high_ISR+14,tblptru
  3567  00017E  C010  FFF7         	movff	??_high_ISR+13,tblptrh
  3568  000182  C00F  FFF6         	movff	??_high_ISR+12,tblptrl
  3569  000186  C00E  FFF4         	movff	??_high_ISR+11,prodh
  3570  00018A  C00D  FFF3         	movff	??_high_ISR+10,prodl
  3571  00018E  C00C  FFDA         	movff	??_high_ISR+9,fsr2h
  3572  000192  C00B  FFD9         	movff	??_high_ISR+8,fsr2l
  3573  000196  C00A  FFE2         	movff	??_high_ISR+7,fsr1h
  3574  00019A  C009  FFE1         	movff	??_high_ISR+6,fsr1l
  3575  00019E  C008  FFEA         	movff	??_high_ISR+5,fsr0h
  3576  0001A2  C007  FFE9         	movff	??_high_ISR+4,fsr0l
  3577  0001A6  C006  FFFB         	movff	??_high_ISR+3,pclatu
  3578  0001AA  C005  FFFA         	movff	??_high_ISR+2,pclath
  3579  0001AE  924D               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3580  0001B0  0011               	retfie		f
  3581  0001B2                     __end_of_high_ISR:
  3582                           	opt stack 0
  3583                           pclatu	equ	0xFFB
  3584                           pclath	equ	0xFFA
  3585                           tblptru	equ	0xFF8
  3586                           tblptrh	equ	0xFF7
  3587                           tblptrl	equ	0xFF6
  3588                           tablat	equ	0xFF5
  3589                           prodh	equ	0xFF4
  3590                           prodl	equ	0xFF3
  3591                           intcon	equ	0xFF2
  3592                           postinc0	equ	0xFEE
  3593                           fsr0h	equ	0xFEA
  3594                           fsr0l	equ	0xFE9
  3595                           wreg	equ	0xFE8
  3596                           indf1	equ	0xFE7
  3597                           postdec1	equ	0xFE5
  3598                           fsr1h	equ	0xFE2
  3599                           fsr1l	equ	0xFE1
  3600                           indf2	equ	0xFDF
  3601                           postinc2	equ	0xFDE
  3602                           fsr2h	equ	0xFDA
  3603                           fsr2l	equ	0xFD9
  3604                           status	equ	0xFD8
  3605                           
  3606 ;; *************** function i2_clearUARTReceiveBuffer *****************
  3607 ;; Defined at:
  3608 ;;		line 178 in file "main.c"
  3609 ;; Parameters:    Size  Location     Type
  3610 ;;		None
  3611 ;; Auto vars:     Size  Location     Type
  3612 ;;  clearUARTRec    2    0[COMRAM] int 
  3613 ;; Return value:  Size  Location     Type
  3614 ;;                  1    wreg      void 
  3615 ;; Registers used:
  3616 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3617 ;; Tracked objects:
  3618 ;;		On entry : 0/0
  3619 ;;		On exit  : 0/0
  3620 ;;		Unchanged: 0/0
  3621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3622 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3623 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3625 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3626 ;;Total ram usage:        2 bytes
  3627 ;; Hardware stack levels used:    1
  3628 ;; This function calls:
  3629 ;;		Nothing
  3630 ;; This function is called by:
  3631 ;;		_high_ISR
  3632 ;; This function uses a non-reentrant model
  3633 ;;
  3634                           
  3635                           	psect	text20
  3636  0018BC                     __ptext20:
  3637                           	opt stack 0
  3638  0018BC                     i2_clearUARTReceiveBuffer:
  3639                           	opt stack 25
  3640                           
  3641                           ;main.c: 179: for(int i = 0; i<1000; i++){
  3642                           
  3643                           ;incstack = 0
  3644  0018BC  0E00               	movlw	0
  3645  0018BE  6E02               	movwf	i2clearUARTReceiveBuffer@i+1,c
  3646  0018C0  0E00               	movlw	0
  3647  0018C2  6E01               	movwf	i2clearUARTReceiveBuffer@i,c
  3648  0018C4                     i2l1721:
  3649  0018C4  BE02               	btfsc	i2clearUARTReceiveBuffer@i+1,7,c
  3650  0018C6  D006               	goto	i2l1725
  3651  0018C8  0EE8               	movlw	232
  3652  0018CA  5C01               	subwf	i2clearUARTReceiveBuffer@i,w,c
  3653  0018CC  0E03               	movlw	3
  3654  0018CE  5802               	subwfb	i2clearUARTReceiveBuffer@i+1,w,c
  3655  0018D0  B0D8               	btfsc	status,0,c
  3656  0018D2  D00B               	goto	i2l1731
  3657  0018D4                     i2l1725:
  3658                           
  3659                           ;main.c: 180: uart_receive_buffer[i] = '\0';
  3660  0018D4  0E97               	movlw	low _uart_receive_buffer
  3661  0018D6  2401               	addwf	i2clearUARTReceiveBuffer@i,w,c
  3662  0018D8  6ED9               	movwf	fsr2l,c
  3663  0018DA  0E00               	movlw	high _uart_receive_buffer
  3664  0018DC  2002               	addwfc	i2clearUARTReceiveBuffer@i+1,w,c
  3665  0018DE  6EDA               	movwf	fsr2h,c
  3666  0018E0  0E00               	movlw	0
  3667  0018E2  6EDF               	movwf	indf2,c
  3668  0018E4  4A01               	infsnz	i2clearUARTReceiveBuffer@i,f,c
  3669  0018E6  2A02               	incf	i2clearUARTReceiveBuffer@i+1,f,c
  3670  0018E8  D7ED               	goto	i2l1721
  3671  0018EA                     i2l1731:
  3672                           
  3673                           ;main.c: 181: }
  3674                           ;main.c: 182: uart_receive_buffer_index= 0 ;
  3675  0018EA  0E00               	movlw	0
  3676  0018EC  6E4B               	movwf	_uart_receive_buffer_index+1,c
  3677  0018EE  0E00               	movlw	0
  3678  0018F0  6E4A               	movwf	_uart_receive_buffer_index,c
  3679  0018F2  0012               	return		;funcret
  3680  0018F4                     __end_ofi2_clearUARTReceiveBuffer:
  3681                           	opt stack 0
  3682                           pclatu	equ	0xFFB
  3683                           pclath	equ	0xFFA
  3684                           tblptru	equ	0xFF8
  3685                           tblptrh	equ	0xFF7
  3686                           tblptrl	equ	0xFF6
  3687                           tablat	equ	0xFF5
  3688                           prodh	equ	0xFF4
  3689                           prodl	equ	0xFF3
  3690                           intcon	equ	0xFF2
  3691                           postinc0	equ	0xFEE
  3692                           fsr0h	equ	0xFEA
  3693                           fsr0l	equ	0xFE9
  3694                           wreg	equ	0xFE8
  3695                           indf1	equ	0xFE7
  3696                           postdec1	equ	0xFE5
  3697                           fsr1h	equ	0xFE2
  3698                           fsr1l	equ	0xFE1
  3699                           indf2	equ	0xFDF
  3700                           postinc2	equ	0xFDE
  3701                           fsr2h	equ	0xFDA
  3702                           fsr2l	equ	0xFD9
  3703                           status	equ	0xFD8
  3704                           pclatu	equ	0xFFB
  3705                           pclath	equ	0xFFA
  3706                           tblptru	equ	0xFF8
  3707                           tblptrh	equ	0xFF7
  3708                           tblptrl	equ	0xFF6
  3709                           tablat	equ	0xFF5
  3710                           prodh	equ	0xFF4
  3711                           prodl	equ	0xFF3
  3712                           intcon	equ	0xFF2
  3713                           postinc0	equ	0xFEE
  3714                           fsr0h	equ	0xFEA
  3715                           fsr0l	equ	0xFE9
  3716                           wreg	equ	0xFE8
  3717                           indf1	equ	0xFE7
  3718                           postdec1	equ	0xFE5
  3719                           fsr1h	equ	0xFE2
  3720                           fsr1l	equ	0xFE1
  3721                           indf2	equ	0xFDF
  3722                           postinc2	equ	0xFDE
  3723                           fsr2h	equ	0xFDA
  3724                           fsr2l	equ	0xFD9
  3725                           status	equ	0xFD8
  3726                           
  3727                           	psect	rparam
  3728  0000                     pclatu	equ	0xFFB
  3729                           pclath	equ	0xFFA
  3730                           tblptru	equ	0xFF8
  3731                           tblptrh	equ	0xFF7
  3732                           tblptrl	equ	0xFF6
  3733                           tablat	equ	0xFF5
  3734                           prodh	equ	0xFF4
  3735                           prodl	equ	0xFF3
  3736                           intcon	equ	0xFF2
  3737                           postinc0	equ	0xFEE
  3738                           fsr0h	equ	0xFEA
  3739                           fsr0l	equ	0xFE9
  3740                           wreg	equ	0xFE8
  3741                           indf1	equ	0xFE7
  3742                           postdec1	equ	0xFE5
  3743                           fsr1h	equ	0xFE2
  3744                           fsr1l	equ	0xFE1
  3745                           indf2	equ	0xFDF
  3746                           postinc2	equ	0xFDE
  3747                           fsr2h	equ	0xFDA
  3748                           fsr2l	equ	0xFD9
  3749                           status	equ	0xFD8
  3750                           
  3751                           	psect	temp
  3752  00004D                     btemp:
  3753                           	opt stack 0
  3754  00004D                     	ds	1
  3755  0000                     int$flags	set	btemp
  3756                           pclatu	equ	0xFFB
  3757                           pclath	equ	0xFFA
  3758                           tblptru	equ	0xFF8
  3759                           tblptrh	equ	0xFF7
  3760                           tblptrl	equ	0xFF6
  3761                           tablat	equ	0xFF5
  3762                           prodh	equ	0xFF4
  3763                           prodl	equ	0xFF3
  3764                           intcon	equ	0xFF2
  3765                           postinc0	equ	0xFEE
  3766                           fsr0h	equ	0xFEA
  3767                           fsr0l	equ	0xFE9
  3768                           wreg	equ	0xFE8
  3769                           indf1	equ	0xFE7
  3770                           postdec1	equ	0xFE5
  3771                           fsr1h	equ	0xFE2
  3772                           fsr1l	equ	0xFE1
  3773                           indf2	equ	0xFDF
  3774                           postinc2	equ	0xFDE
  3775                           fsr2h	equ	0xFDA
  3776                           fsr2l	equ	0xFD9
  3777                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    177
    Data        25
    BSS         1018
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     59      76
    BANK0           160     28      55
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sendUARTMessage@newMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), set_dev_eui(CODE[34]), 
		 -> temp_display_message(BANK0[20]), 

    currentMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), 
		 -> set_dev_eui(CODE[34]), temp_display_message(BANK0[20]), 


Critical Paths under _main in COMRAM

    _main->_makeTempMessage
    _fillInTemp->___awdiv
    ___awdiv->___awmod
    _calculateTemp->___fttol
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _initLoRa->_delay

Critical Paths under _high_ISR in COMRAM

    _high_ISR->i2_clearUARTReceiveBuffer

Critical Paths under _main in BANK0

    _makeTempMessage->_calculateTemp
    _calculateTemp->___fttol
    ___fttol->___ftmul

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   12434
                        _UARTReceive
             _clearUARTReceiveBuffer
                              _delay
                            _initADC
                     _initInterrupts
                           _initLoRa
                          _initUART1
                    _makeTempMessage
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _makeTempMessage                                      1     1      0   11484
                                             58 COMRAM     1     1      0
                      _calculateTemp
                         _fillInTemp
 ---------------------------------------------------------------------------------
 (2) _fillInTemp                                          12    12      0    1513
                                             32 COMRAM    12    12      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     552
                                             18 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     556
                                             24 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                       11     7      4    9940
                                             17 BANK0     11     7      4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     448
                                             54 COMRAM     4     0      4
                                              6 BANK0     11    11      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3160
                                             45 COMRAM     9     3      6
                                              0 BANK0      6     6      0
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3246
                                             30 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2614
                                             26 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             18 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _initUART1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLoRa                                             0     0      0     430
                              _delay
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _sendUARTMessage                                      2     0      2     406
                                             18 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) _delay                                                5     5      0      24
                                             18 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _clearUARTReceiveBuffer                               2     2      0      68
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _UARTReceive                                          1     1      0      22
                                             18 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_ISR                                            16    16      0      68
                                              2 COMRAM    16    16      0
           i2_clearUARTReceiveBuffer
 ---------------------------------------------------------------------------------
 (6) i2_clearUARTReceiveBuffer                             2     2      0      68
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReceive
   _clearUARTReceiveBuffer
   _delay
   _initADC
   _initInterrupts
   _initLoRa
     _delay
     _sendUARTMessage
   _initUART1
   _makeTempMessage
     _calculateTemp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
     _fillInTemp
       ___awdiv
         ___awmod (ARG)
       ___awmod
   _sendUARTMessage

 _high_ISR (ROOT)
   i2_clearUARTReceiveBuffer

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0     3E8      35       26.6%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1C      37       5       34.4%
BITCOMRAM           5E      0       1       0        1.1%
COMRAM              5E     3B      4C       1       80.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      83       6        0.0%
DATA                 0      0     46B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Thu Mar 16 15:26:13 2017

        ?i2_clearUARTReceiveBuffer 0001             _clearUARTReceiveBuffer 1884  
                     ___awdiv@sign 001E                                l103 1006  
                              l114 1976                                l106 105A  
                              l450 142C                                l392 15A4  
                     ___awmod@sign 0018                                prod 000FF3  
                              wreg 000FE8                         _TXSTA1bits 000FAD  
                     ___ftdiv@cntr 0028                       ___ftdiv@sign 002D  
                             l2013 1246                               l2005 1210  
                             l2007 1220                               l2009 122A  
                             l2033 1796                               l2043 16D0  
                             l1511 16AE                               l1503 1696  
                             l1443 15D8                               l1507 16A0  
                             l1605 1076                               l1455 15FE  
                             l1471 1630                               l1615 10E8  
                             l1607 107C                               l1457 1606  
                             l1449 15E8                               l1635 17CC  
                             l1475 163E                               l1467 1626  
                             l1459 160A                               l1491 1668  
                             l1619 10F0                               l1637 17D8  
                             l1581 0FD4                               l1495 1676  
                             l1487 165C                               l1841 155C  
                             l1833 1526                               l1497 167E  
                             l1593 1028                               l1923 12B0  
                             l1499 1682                               l1587 1010  
                             l1685 188C                               l1845 1572  
                             l1837 1534                               l1941 1308  
                             l1917 1284                               l1695 18B2  
                             l1847 1590                               l1839 153E  
                             l1871 13A0                               l1951 133A  
                             l1599 1062                               l1689 189C  
                             l1849 159A                               l1937 12F2  
                             l1947 1324                               l1877 13C8  
                             l1967 1860                               l1897 1406  
                             l1977 1160                               l1995 11E2  
                             l1999 11F6                               u1070 1006  
                             u1090 105A                               u1421 1268  
                             u1510 1186                               u1441 1294  
                             u1371 1388                               u1515 117C  
                             u1391 13B0                               u1491 113E  
                             _main 16B8                       ___ftpack@arg 0013  
                     ___ftpack@exp 0016                               fsr0h 000FEA  
                             fsr1h 000FE2                               fsr0l 000FE9  
                             fsr2h 000FDA                               indf1 000FE7  
                             fsr1l 000FE1                               indf2 000FDF  
                             fsr2l 000FD9                               btemp 004D  
                             pclat 000FFA                               prodh 000FF4  
                             prodl 000FF3                               start 01B2  
                 fillInTemp@i_1008 0028                   fillInTemp@i_1009 002A  
                     ___ftmul@cntr 0064            __end_of_makeTempMessage 17BA  
                     ___param_bank 000010                       ___ftmul@sign 0065  
                     ___fttol@exp1 0070                       ___fttol@lval 006C  
                 ?_sendUARTMessage 0013                       _BAUDCON1bits 000F7E  
                            ?_main 0001                    __end_of___awdiv 1648  
                            _ADRES 000FC3              __end_of_ambient_ascii 0F23  
                  __end_of___awmod 16B8                              _DELAY 0F28  
                  __end_of___ftdiv 145E                    __end_of___ftmul 1378  
                  ___awdiv@divisor 001B                    __end_of___fttol 1258  
                            i2l162 00E0                              i2l163 0174  
                            i2l164 00FA                              i2l165 0114  
                            i2l166 012E                              i2l167 0176  
                  ___awdiv@counter 001D                    __end_of_initADC 1922  
                    ___awtoft@sign 001E                              _delay 17BA  
                    ___ftpack@sign 0017                              tablat 000FF5  
                            status 000FD8                    __initialization 171A  
                     __end_of_main 171A                             ??_main 003C  
                    ___fttol@sign1 006B                      __activetblptr 000003  
                           ?_delay 0001                             _ADCON0 000FC2  
                           _ADCON1 000FC1                             _ANCON0 000F48  
                           _ANCON1 000F49                   ___awdiv@dividend 0019  
                 __end_of___awtoft 1884                   __end_of___ftpack 15C4  
                           i2l1721 18C4                             i2l1731 18EA  
                           i2l1803 014A                             i2l1725 18D4  
                   __CFG_WDTEN$OFF 000000                             i2l1773 009C  
                           i2l1769 0074                             i2l1789 00D8  
                           _INTCON 000FF2                             _RCREG1 000FAF  
                           _SPBRG1 000FB0                             _TXREG1 000FAE  
                     ?_UARTReceive 0001                     __CFG_XINST$OFF 000000  
                 __end_of_high_ISR 01B2               _temp_display_message 0081  
                 ?_makeTempMessage 0001                          ??___awdiv 001D  
                        ??___awmod 0017                          ??___ftdiv 0025  
                        ??___ftmul 0034                          ??___fttol 0066  
                 __end_of_initLoRa 184C                             clear_0 1722  
                           clear_1 173A                   ___awdiv@quotient 001F  
                  ___awmod@divisor 0015                    ___awmod@counter 0017  
                        ??_initADC 0013              ___ftmul@f3_as_product 0061  
            __end_of_set_data_rate 0F10                       __mediumconst 0000  
                           tblptrh 000FF7                             tblptrl 000FF6  
                           tblptru 000FF8   __end_ofi2_clearUARTReceiveBuffer 18F4  
                       __accesstop 0060            __end_of__initialization 1760  
          ?_clearUARTReceiveBuffer 0001                      __end_of_DELAY 0F2C  
                    ___rparam_used 000001                         ___ftdiv@f1 001F  
                       ___ftdiv@f2 0022                         ___ftdiv@f3 0029  
                       ___awtoft@c 001B                         ___ftmul@f1 002E  
                       ___ftmul@f2 0031                         ___fttol@f1 0037  
                   __pcstackCOMRAM 0001                       __pidataBANK0 193E  
                    __end_of_delay 180A            __size_of_initInterrupts 0008  
                          ??_delay 0013                         __pbssBANK0 0095  
               __size_of_initUART1 001C     __end_of_clearUARTReceiveBuffer 18BC  
            __end_of_getVerCommand 0F1E                          ?___awtoft 001B  
                        ?___ftpack 0013                         _fillInTemp 0FB4  
           __size_of_calculateTemp 00B8                 __CFG_OSC$INTOSCPLL 000000  
                          _SPBRGH1 000F7F                          ?_high_ISR 0001  
                        ?_initLoRa 0001               UARTReceive@on_or_off 0013  
         i2_clearUARTReceiveBuffer 18BC                            __Hparam 0000  
                          __Lparam 0000               __size_of_UARTReceive 0010  
                          ___awdiv 15C4                            ___awmod 1648  
                          ___ftdiv 1378                            ___ftmul 1258  
                          ___fttol 112A                       __psmallconst 0F00  
                          __pcinit 171A                         ??___awtoft 001E  
                       ??___ftpack 0018                  __end_of_initUART1 193E  
                          __ramtop 0F00                            __ptext0 16B8  
                          __ptext1 176A                            __ptext2 0FB4  
                          __ptext3 1648                            __ptext4 15C4  
                          __ptext5 145E                            __ptext6 112A  
                          __ptext7 1258                            __ptext8 1378  
                          __ptext9 184C                            _initADC 18F4  
                 ___awmod@dividend 0013           __size_of_sendUARTMessage 0012  
                       ??_high_ISR 0003               end_of_initialization 1760  
                       _minus_pipe 0040                         _pipe_ascii 0F23  
                       ??_initLoRa 0018               __end_of_join_network 0FB2  
                    _calculateTemp 145E                            postdec1 000FE5  
                   _initInterrupts 197A                            postinc0 000FEE  
                          postinc2 000FDE                        ?_fillInTemp 0001  
        _uart_receive_buffer_index 004A                          _PORTAbits 000F80  
                        _PORTBbits 000F81                   __CFG_CPUDIV$OSC1 000000  
                        _TRISAbits 000F92                          _TRISBbits 000F93  
                        _TRISCbits 000F94                     ?_calculateTemp 0071  
                      ___ftdiv@exp 002C             __end_of_initInterrupts 1982  
                      ___ftmul@exp 0060                      _minus_ambient 003E  
         __size_of_makeTempMessage 0050                      _ambient_ascii 0F1E  
                    __pbitnvCOMRAM 0260                start_initialization 171A  
          clearUARTReceiveBuffer@i 0013   sendUARTMessage@newMessagePointer 0013  
                ??_sendUARTMessage 0015                __size_of_fillInTemp 0176  
                   _currentChannel 0095                    ?_initInterrupts 0001  
                      __pdataBANK0 007C                 _calculateTemp$1598 0077  
                __size_of___awtoft 0038                  __size_of___ftpack 00AE  
                      __pbssBIGRAM 0097                        __pbssCOMRAM 003C  
                    __pcstackBANK0 0060         ??i2_clearUARTReceiveBuffer 0001  
                  ??_calculateTemp 0075                  __size_of_high_ISR 01AA  
                __size_of_initLoRa 0042                          __pintcode 0008  
                        _asciiTemp 007C                           ?___awdiv 0019  
                         ?___awmod 0013                           ?___ftdiv 001F  
                         ?___ftmul 002E                           ?___fttol 0037  
                     _join_network 0FA2                           ?_initADC 0001  
                      __smallconst 0F00                      _set_data_rate 0F01  
                        _initUART1 1922                     __size_of_delay 0050  
                ??_makeTempMessage 003B                          delay@time 0014  
                    ??_UARTReceive 0013                           _PIE1bits 000F9D  
                         i2u122_40 0068                           i2u122_47 005E  
                         i2u124_40 0096                           i2u124_47 008C  
            _currentMessagePointer 003C                           _PIR1bits 000F9E  
                         _RCONbits 000FD0                          _temp_pipe 0048  
                        _plus_pipe 0044                       ??_fillInTemp 0021  
                       _ADCON0bits 000FC2                         ?_initUART1 0001  
              _uart_receive_buffer 0097                  __CFG_CFGPLLEN$OFF 000000  
         ??_clearUARTReceiveBuffer 0013                     fillInTemp@temp 002B  
                        copy_data0 1754         fillInTemp@pipe_or_ambience 0025  
               __end_of_fillInTemp 112A                           __Hrparam 0000  
                         __Lrparam 0000                      _getVerCommand 0F10  
              __end_of_UARTReceive 197A                __end_of_set_dev_eui 0FA2  
              __end_of_set_app_eui 0F80                __end_of_set_app_key 0F5E  
                 __size_of___awdiv 0084                   __size_of___awmod 0070  
                 __size_of___ftdiv 00E6                   __size_of___ftmul 0120  
                 __size_of___fttol 012E                           ___awtoft 184C  
                         ___ftpack 1516                    _sendUARTMessage 1958  
                 __size_of_initADC 002E                           __ptext10 1516  
                         __ptext11 1922                           __ptext20 18BC  
                         __ptext12 180A                           __ptext13 1958  
                         __ptext14 17BA                           __ptext15 197A  
                         __ptext16 18F4                           __ptext17 1884  
                         __ptext18 196A                           _high_ISR 0008  
                    _isCommandSent 0260                   ??_initInterrupts 0013  
                         _initLoRa 180A                      __size_of_main 0062  
                         int$flags 004D     makeTempMessage@pipe_or_ambient 003B  
                     _temp_ambient 0046                 __end_of_pipe_ascii 0F28  
                      ??_initUART1 0013    __size_of_clearUARTReceiveBuffer 0038  
                         intlevel2 0000                 calculateTemp@minus 0073  
                      _UARTReceive 196A                         _RCSTA1bits 000FAC  
                      _set_dev_eui 0F80                        _set_app_eui 0F5E  
                      _set_app_key 0F2C                         _OSCCONbits 000FD3  
        i2clearUARTReceiveBuffer@i 0001            __end_of_sendUARTMessage 196A  
                     _plus_ambient 0042                    _makeTempMessage 176A  
                calculateTemp@temp 007A                  calculateTemp@plus 0071  
                      fillInTemp@i 0026              __end_of_calculateTemp 1516  
__size_ofi2_clearUARTReceiveBuffer 0038  
