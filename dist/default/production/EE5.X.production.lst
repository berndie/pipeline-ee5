

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Fri Mar 24 15:34:21 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18LF27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    43                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    44                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    45  0000                     
    46                           	psect	idataBANK0
    47  001BA4                     __pidataBANK0:
    48                           	opt stack 0
    49                           
    50                           ;initializer for _asciiTemp
    51  001BA4  20                 	db	32
    52  001BA5  20                 	db	32
    53  001BA6  20                 	db	32
    54  001BA7  20                 	db	32
    55  001BA8  20                 	db	32
    56                           
    57                           ;initializer for _isCommandSent
    58  001BA9  01                 	db	1
    59                           
    60                           ;initializer for _frequency_message
    61  001BAA  54                 	db	84
    62  001BAB  68                 	db	104
    63  001BAC  65                 	db	101
    64  001BAD  20                 	db	32
    65  001BAE  66                 	db	102
    66  001BAF  72                 	db	114
    67  001BB0  65                 	db	101
    68  001BB1  71                 	db	113
    69  001BB2  75                 	db	117
    70  001BB3  65                 	db	101
    71  001BB4  6E                 	db	110
    72  001BB5  63                 	db	99
    73  001BB6  79                 	db	121
    74  001BB7  20                 	db	32
    75  001BB8  69                 	db	105
    76  001BB9  73                 	db	115
    77  001BBA  3A                 	db	58
    78  001BBB  20                 	db	32
    79  001BBC  20                 	db	32
    80  001BBD  20                 	db	32
    81  001BBE  20                 	db	32
    82  001BBF  20                 	db	32
    83  001BC0  20                 	db	32
    84  001BC1  0D                 	db	13
    85  001BC2  0A                 	db	10
    86  001BC3  00                 	db	0
    87                           
    88                           ;initializer for _temp_display_message
    89  001BC4  50                 	db	80
    90  001BC5  69                 	db	105
    91  001BC6  70                 	db	112
    92  001BC7  65                 	db	101
    93  001BC8  20                 	db	32
    94  001BC9  74                 	db	116
    95  001BCA  65                 	db	101
    96  001BCB  6D                 	db	109
    97  001BCC  70                 	db	112
    98  001BCD  20                 	db	32
    99  001BCE  3D                 	db	61
   100  001BCF  20                 	db	32
   101  001BD0  20                 	db	32
   102  001BD1  20                 	db	32
   103  001BD2  20                 	db	32
   104  001BD3  20                 	db	32
   105  001BD4  20                 	db	32
   106  001BD5  0D                 	db	13
   107  001BD6  0A                 	db	10
   108  001BD7  00                 	db	0
   109                           
   110                           	psect	smallconst
   111  000F00                     __psmallconst:
   112                           	opt stack 0
   113  000F00  00                 	db	0
   114  000F01                     _set_data_rate:
   115                           	opt stack 0
   116  000F01  6D                 	db	109
   117  000F02  61                 	db	97
   118  000F03  63                 	db	99
   119  000F04  20                 	db	32
   120  000F05  73                 	db	115
   121  000F06  65                 	db	101
   122  000F07  74                 	db	116
   123  000F08  20                 	db	32
   124  000F09  64                 	db	100
   125  000F0A  72                 	db	114
   126  000F0B  20                 	db	32
   127  000F0C  78                 	db	120
   128  000F0D  0D                 	db	13
   129  000F0E  0A                 	db	10
   130  000F0F  00                 	db	0
   131  000F10                     __end_of_set_data_rate:
   132                           	opt stack 0
   133  000F10                     _getVerCommand:
   134                           	opt stack 0
   135  000F10  73                 	db	115
   136  000F11  79                 	db	121
   137  000F12  73                 	db	115
   138  000F13  20                 	db	32
   139  000F14  67                 	db	103
   140  000F15  65                 	db	101
   141  000F16  74                 	db	116
   142  000F17  20                 	db	32
   143  000F18  76                 	db	118
   144  000F19  65                 	db	101
   145  000F1A  72                 	db	114
   146  000F1B  0D                 	db	13
   147  000F1C  0A                 	db	10
   148  000F1D  00                 	db	0
   149  000F1E                     __end_of_getVerCommand:
   150                           	opt stack 0
   151  000F1E                     _ambient_ascii:
   152                           	opt stack 0
   153  000F1E  41                 	db	65
   154  000F1F  6D                 	db	109
   155  000F20  62                 	db	98
   156  000F21  2E                 	db	46
   157  000F22  00                 	db	0
   158  000F23                     __end_of_ambient_ascii:
   159                           	opt stack 0
   160  000F23                     _pipe_ascii:
   161                           	opt stack 0
   162  000F23  50                 	db	80
   163  000F24  69                 	db	105
   164  000F25  70                 	db	112
   165  000F26  65                 	db	101
   166  000F27  00                 	db	0
   167  000F28                     __end_of_pipe_ascii:
   168                           	opt stack 0
   169  000F28                     _set_app_key:
   170                           	opt stack 0
   171  000F28  6D                 	db	109
   172  000F29  61                 	db	97
   173  000F2A  63                 	db	99
   174  000F2B  20                 	db	32
   175  000F2C  73                 	db	115
   176  000F2D  65                 	db	101
   177  000F2E  74                 	db	116
   178  000F2F  20                 	db	32
   179  000F30  61                 	db	97
   180  000F31  70                 	db	112
   181  000F32  70                 	db	112
   182  000F33  6B                 	db	107
   183  000F34  65                 	db	101
   184  000F35  79                 	db	121
   185  000F36  20                 	db	32
   186  000F37  32                 	db	50
   187  000F38  45                 	db	69
   188  000F39  31                 	db	49
   189  000F3A  35                 	db	53
   190  000F3B  41                 	db	65
   191  000F3C  46                 	db	70
   192  000F3D  43                 	db	67
   193  000F3E  39                 	db	57
   194  000F3F  34                 	db	52
   195  000F40  41                 	db	65
   196  000F41  37                 	db	55
   197  000F42  45                 	db	69
   198  000F43  46                 	db	70
   199  000F44  36                 	db	54
   200  000F45  39                 	db	57
   201  000F46  41                 	db	65
   202  000F47  45                 	db	69
   203  000F48  36                 	db	54
   204  000F49  31                 	db	49
   205  000F4A  41                 	db	65
   206  000F4B  38                 	db	56
   207  000F4C  31                 	db	49
   208  000F4D  34                 	db	52
   209  000F4E  37                 	db	55
   210  000F4F  33                 	db	51
   211  000F50  37                 	db	55
   212  000F51  43                 	db	67
   213  000F52  33                 	db	51
   214  000F53  38                 	db	56
   215  000F54  36                 	db	54
   216  000F55  39                 	db	57
   217  000F56  39                 	db	57
   218  000F57  0D                 	db	13
   219  000F58  0A                 	db	10
   220  000F59  00                 	db	0
   221  000F5A                     __end_of_set_app_key:
   222                           	opt stack 0
   223  000F5A                     _set_app_eui:
   224                           	opt stack 0
   225  000F5A  6D                 	db	109
   226  000F5B  61                 	db	97
   227  000F5C  63                 	db	99
   228  000F5D  20                 	db	32
   229  000F5E  73                 	db	115
   230  000F5F  65                 	db	101
   231  000F60  74                 	db	116
   232  000F61  20                 	db	32
   233  000F62  61                 	db	97
   234  000F63  70                 	db	112
   235  000F64  70                 	db	112
   236  000F65  65                 	db	101
   237  000F66  75                 	db	117
   238  000F67  69                 	db	105
   239  000F68  20                 	db	32
   240  000F69  37                 	db	55
   241  000F6A  34                 	db	52
   242  000F6B  43                 	db	67
   243  000F6C  35                 	db	53
   244  000F6D  34                 	db	52
   245  000F6E  32                 	db	50
   246  000F6F  34                 	db	52
   247  000F70  35                 	db	53
   248  000F71  33                 	db	51
   249  000F72  38                 	db	56
   250  000F73  35                 	db	53
   251  000F74  37                 	db	55
   252  000F75  39                 	db	57
   253  000F76  37                 	db	55
   254  000F77  34                 	db	52
   255  000F78  41                 	db	65
   256  000F79  0D                 	db	13
   257  000F7A  0A                 	db	10
   258  000F7B  00                 	db	0
   259  000F7C                     __end_of_set_app_eui:
   260                           	opt stack 0
   261  000F7C                     _set_dev_eui:
   262                           	opt stack 0
   263  000F7C  6D                 	db	109
   264  000F7D  61                 	db	97
   265  000F7E  63                 	db	99
   266  000F7F  20                 	db	32
   267  000F80  73                 	db	115
   268  000F81  65                 	db	101
   269  000F82  74                 	db	116
   270  000F83  20                 	db	32
   271  000F84  64                 	db	100
   272  000F85  65                 	db	101
   273  000F86  76                 	db	118
   274  000F87  65                 	db	101
   275  000F88  75                 	db	117
   276  000F89  69                 	db	105
   277  000F8A  20                 	db	32
   278  000F8B  30                 	db	48
   279  000F8C  30                 	db	48
   280  000F8D  30                 	db	48
   281  000F8E  34                 	db	52
   282  000F8F  41                 	db	65
   283  000F90  33                 	db	51
   284  000F91  30                 	db	48
   285  000F92  42                 	db	66
   286  000F93  30                 	db	48
   287  000F94  30                 	db	48
   288  000F95  31                 	db	49
   289  000F96  41                 	db	65
   290  000F97  43                 	db	67
   291  000F98  46                 	db	70
   292  000F99  37                 	db	55
   293  000F9A  44                 	db	68
   294  000F9B  0D                 	db	13
   295  000F9C  0A                 	db	10
   296  000F9D  00                 	db	0
   297  000F9E                     __end_of_set_dev_eui:
   298                           	opt stack 0
   299  000F9E                     _join_network:
   300                           	opt stack 0
   301  000F9E  6D                 	db	109
   302  000F9F  61                 	db	97
   303  000FA0  63                 	db	99
   304  000FA1  20                 	db	32
   305  000FA2  6A                 	db	106
   306  000FA3  6F                 	db	111
   307  000FA4  69                 	db	105
   308  000FA5  6E                 	db	110
   309  000FA6  20                 	db	32
   310  000FA7  6F                 	db	111
   311  000FA8  74                 	db	116
   312  000FA9  61                 	db	97
   313  000FAA  61                 	db	97
   314  000FAB  0D                 	db	13
   315  000FAC  0A                 	db	10
   316  000FAD  00                 	db	0
   317  000FAE                     __end_of_join_network:
   318                           	opt stack 0
   319  000FAE  00                 	db	0	; dummy byte at the end
   320  0000                     
   321                           	psect	nvBANK0
   322  0000C2                     __pnvBANK0:
   323                           	opt stack 0
   324  0000C2                     _inductive:
   325                           	opt stack 0
   326  0000C2                     	ds	2
   327  0000                     _ANCON0	set	3912
   328  0000                     _ANCON1	set	3913
   329  0000                     _CCP8CON	set	3846
   330  0000                     _CCPR8H	set	3848
   331  0000                     _CCPR8L	set	3847
   332  0000                     _CCPTMRS2bits	set	3920
   333  0000                     _ADRES	set	4035
   334  0000                     _ADCON0	set	4034
   335  0000                     _ADCON0bits	set	4034
   336  0000                     _ADCON1	set	4033
   337  0000                     _BAUDCON1bits	set	3966
   338  0000                     _INTCON	set	4082
   339  0000                     _INTCONbits	set	4082
   340  0000                     _OSCCONbits	set	4051
   341  0000                     _PIE1bits	set	3997
   342  0000                     _PIE4bits	set	3982
   343  0000                     _PIR1bits	set	3998
   344  0000                     _PIR4bits	set	3983
   345  0000                     _PORTAbits	set	3968
   346  0000                     _PORTBbits	set	3969
   347  0000                     _RCONbits	set	4048
   348  0000                     _RCREG1	set	4015
   349  0000                     _RCSTA1bits	set	4012
   350  0000                     _SPBRG1	set	4016
   351  0000                     _SPBRGH1	set	3967
   352  0000                     _T1CONbits	set	4045
   353  0000                     _TMR1H	set	4047
   354  0000                     _TMR1L	set	4046
   355  0000                     _TRISAbits	set	3986
   356  0000                     _TRISBbits	set	3987
   357  0000                     _TRISCbits	set	3988
   358  0000                     _TXREG1	set	4014
   359  0000                     _TXSTA1bits	set	4013
   360                           
   361                           ; #config settings
   362  0000                     
   363                           	psect	cinit
   364  001AA2                     __pcinit:
   365                           	opt stack 0
   366  001AA2                     start_initialization:
   367                           	opt stack 0
   368  001AA2                     __initialization:
   369                           	opt stack 0
   370                           
   371                           ; Clear objects allocated to BANK1 (100 bytes)
   372  001AA2  EE01  F000         	lfsr	0,__pbssBANK1
   373  001AA6  0E64               	movlw	100
   374  001AA8                     clear_0:
   375  001AA8  6AEE               	clrf	postinc0,c
   376  001AAA  06E8               	decf	wreg,f,c
   377  001AAC  E1FD               	bnz	clear_0
   378                           
   379                           ; Clear objects allocated to BANK0 (19 bytes)
   380  001AAE  EE00  F0AF         	lfsr	0,__pbssBANK0
   381  001AB2  0E13               	movlw	19
   382  001AB4                     clear_1:
   383  001AB4  6AEE               	clrf	postinc0,c
   384  001AB6  06E8               	decf	wreg,f,c
   385  001AB8  E1FD               	bnz	clear_1
   386                           
   387                           ; Clear objects allocated to COMRAM (16 bytes)
   388  001ABA  EE00  F03E         	lfsr	0,__pbssCOMRAM
   389  001ABE  0E10               	movlw	16
   390  001AC0                     clear_2:
   391  001AC0  6AEE               	clrf	postinc0,c
   392  001AC2  06E8               	decf	wreg,f,c
   393  001AC4  E1FD               	bnz	clear_2
   394                           
   395                           ; Initialize objects allocated to BANK0 (52 bytes)
   396                           ; load TBLPTR registers with __pidataBANK0
   397  001AC6  0EA4               	movlw	low __pidataBANK0
   398  001AC8  6EF6               	movwf	tblptrl,c
   399  001ACA  0E1B               	movlw	high __pidataBANK0
   400  001ACC  6EF7               	movwf	tblptrh,c
   401  001ACE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   402  001AD0  6EF8               	movwf	tblptru,c
   403  001AD2  EE00  F060         	lfsr	0,__pdataBANK0
   404  001AD6  EE10 F034          	lfsr	1,52
   405  001ADA                     copy_data0:
   406  001ADA  0009               	tblrd		*+
   407  001ADC  CFF5 FFEE          	movff	tablat,postinc0
   408  001AE0  50E5               	movf	postdec1,w,c
   409  001AE2  50E1               	movf	fsr1l,w,c
   410  001AE4  E1FA               	bnz	copy_data0
   411  001AE6                     end_of_initialization:
   412                           	opt stack 0
   413  001AE6                     __end_of__initialization:
   414                           	opt stack 0
   415  001AE6  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   416  001AE8  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   417  001AEA  0100               	movlb	0
   418  001AEC  EF22  F00A         	goto	_main	;jump to C main() function
   419                           tblptru	equ	0xFF8
   420                           tblptrh	equ	0xFF7
   421                           tblptrl	equ	0xFF6
   422                           tablat	equ	0xFF5
   423                           postinc0	equ	0xFEE
   424                           wreg	equ	0xFE8
   425                           postdec1	equ	0xFE5
   426                           fsr1l	equ	0xFE1
   427                           
   428                           	psect	bssCOMRAM
   429  00003E                     __pbssCOMRAM:
   430                           	opt stack 0
   431  00003E                     _currentMessagePointer:
   432                           	opt stack 0
   433  00003E                     	ds	2
   434  000040                     _measurement1:
   435                           	opt stack 0
   436  000040                     	ds	2
   437  000042                     _measurement2:
   438                           	opt stack 0
   439  000042                     	ds	2
   440  000044                     _minus_ambient:
   441                           	opt stack 0
   442  000044                     	ds	2
   443  000046                     _minus_pipe:
   444                           	opt stack 0
   445  000046                     	ds	2
   446  000048                     _plus_ambient:
   447                           	opt stack 0
   448  000048                     	ds	2
   449  00004A                     _plus_pipe:
   450                           	opt stack 0
   451  00004A                     	ds	2
   452  00004C                     _uart_receive_buffer_index:
   453                           	opt stack 0
   454  00004C                     	ds	2
   455                           tblptru	equ	0xFF8
   456                           tblptrh	equ	0xFF7
   457                           tblptrl	equ	0xFF6
   458                           tablat	equ	0xFF5
   459                           postinc0	equ	0xFEE
   460                           wreg	equ	0xFE8
   461                           postdec1	equ	0xFE5
   462                           fsr1l	equ	0xFE1
   463                           
   464                           	psect	bssBANK0
   465  0000AF                     __pbssBANK0:
   466                           	opt stack 0
   467  0000AF                     _percent:
   468                           	opt stack 0
   469  0000AF                     	ds	3
   470  0000B2                     _currentChannel:
   471                           	opt stack 0
   472  0000B2                     	ds	2
   473  0000B4                     _last_received_message_index:
   474                           	opt stack 0
   475  0000B4                     	ds	2
   476  0000B6                     _temp_ambient:
   477                           	opt stack 0
   478  0000B6                     	ds	2
   479  0000B8                     _temp_pipe:
   480                           	opt stack 0
   481  0000B8                     	ds	2
   482  0000BA                     _timer:
   483                           	opt stack 0
   484  0000BA                     	ds	2
   485  0000BC                     _valueH:
   486                           	opt stack 0
   487  0000BC                     	ds	2
   488  0000BE                     _valueL:
   489                           	opt stack 0
   490  0000BE                     	ds	2
   491  0000C0                     _value:
   492                           	opt stack 0
   493  0000C0                     	ds	2
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           
   503                           	psect	dataBANK0
   504  000060                     __pdataBANK0:
   505                           	opt stack 0
   506  000060                     _asciiTemp:
   507                           	opt stack 0
   508  000060                     	ds	5
   509  000065                     _isCommandSent:
   510                           	opt stack 0
   511  000065                     	ds	1
   512  000066                     _frequency_message:
   513                           	opt stack 0
   514  000066                     	ds	26
   515  000080                     _temp_display_message:
   516                           	opt stack 0
   517  000080                     	ds	20
   518                           tblptru	equ	0xFF8
   519                           tblptrh	equ	0xFF7
   520                           tblptrl	equ	0xFF6
   521                           tablat	equ	0xFF5
   522                           postinc0	equ	0xFEE
   523                           wreg	equ	0xFE8
   524                           postdec1	equ	0xFE5
   525                           fsr1l	equ	0xFE1
   526                           
   527                           	psect	bssBANK1
   528  000100                     __pbssBANK1:
   529                           	opt stack 0
   530  000100                     _uart_receive_buffer:
   531                           	opt stack 0
   532  000100                     	ds	100
   533                           tblptru	equ	0xFF8
   534                           tblptrh	equ	0xFF7
   535                           tblptrl	equ	0xFF6
   536                           tablat	equ	0xFF5
   537                           postinc0	equ	0xFEE
   538                           wreg	equ	0xFE8
   539                           postdec1	equ	0xFE5
   540                           fsr1l	equ	0xFE1
   541                           
   542                           	psect	cstackBANK0
   543  000094                     __pcstackBANK0:
   544                           	opt stack 0
   545  000094                     ?___fttol:
   546                           	opt stack 0
   547  000094                     ___fttol@f1:
   548                           	opt stack 0
   549                           
   550                           ; 3 bytes @ 0x0
   551  000094                     	ds	4
   552  000098                     ??___fttol:
   553                           
   554                           ; 1 bytes @ 0x4
   555  000098                     	ds	5
   556  00009D                     ___fttol@sign1:
   557                           	opt stack 0
   558                           
   559                           ; 1 bytes @ 0x9
   560  00009D                     	ds	1
   561  00009E                     ___fttol@lval:
   562                           	opt stack 0
   563                           
   564                           ; 4 bytes @ 0xA
   565  00009E                     	ds	4
   566  0000A2                     ___fttol@exp1:
   567                           	opt stack 0
   568                           
   569                           ; 1 bytes @ 0xE
   570  0000A2                     	ds	1
   571  0000A3                     ?_calculateTemp:
   572                           	opt stack 0
   573  0000A3                     calculateTemp@plus:
   574                           	opt stack 0
   575                           
   576                           ; 2 bytes @ 0xF
   577  0000A3                     	ds	2
   578  0000A5                     calculateTemp@minus:
   579                           	opt stack 0
   580                           
   581                           ; 2 bytes @ 0x11
   582  0000A5                     	ds	2
   583  0000A7                     _calculateTemp$1935:
   584                           	opt stack 0
   585                           
   586                           ; 3 bytes @ 0x13
   587  0000A7                     	ds	3
   588  0000AA                     calculateTemp@temp:
   589                           	opt stack 0
   590                           
   591                           ; 2 bytes @ 0x16
   592  0000AA                     	ds	2
   593  0000AC                     makeTempMessage@pipe_or_ambient:
   594                           	opt stack 0
   595                           
   596                           ; 1 bytes @ 0x18
   597  0000AC                     	ds	1
   598  0000AD                     _main$1934:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x19
   602  0000AD                     	ds	2
   603                           tblptru	equ	0xFF8
   604                           tblptrh	equ	0xFF7
   605                           tblptrl	equ	0xFF6
   606                           tablat	equ	0xFF5
   607                           postinc0	equ	0xFEE
   608                           wreg	equ	0xFE8
   609                           postdec1	equ	0xFE5
   610                           fsr1l	equ	0xFE1
   611                           
   612                           	psect	cstackCOMRAM
   613  000001                     __pcstackCOMRAM:
   614                           	opt stack 0
   615  000001                     ??_temperature_interrupt:
   616  000001                     ??_frequency_interrupt:
   617  000001                     
   618                           ; 1 bytes @ 0x0
   619  000001                     	ds	3
   620  000004                     ??_high_ISR:
   621                           
   622                           ; 1 bytes @ 0x3
   623  000004                     	ds	14
   624  000012                     ?___wmul:
   625                           	opt stack 0
   626  000012                     ?___awmod:
   627                           	opt stack 0
   628  000012                     ?___lwmod:
   629                           	opt stack 0
   630  000012                     ?___ftpack:
   631                           	opt stack 0
   632  000012                     UARTReceive@on_or_off:
   633                           	opt stack 0
   634  000012                     delay_ms@ms:
   635                           	opt stack 0
   636  000012                     ___wmul@multiplier:
   637                           	opt stack 0
   638  000012                     ___awmod@dividend:
   639                           	opt stack 0
   640  000012                     ___lwmod@dividend:
   641                           	opt stack 0
   642  000012                     ___ftpack@arg:
   643                           	opt stack 0
   644                           
   645                           ; 3 bytes @ 0x11
   646  000012                     	ds	2
   647  000014                     ??_delay_ms:
   648  000014                     ___wmul@multiplicand:
   649                           	opt stack 0
   650  000014                     ___awmod@divisor:
   651                           	opt stack 0
   652  000014                     ___lwmod@divisor:
   653                           	opt stack 0
   654                           
   655                           ; 2 bytes @ 0x13
   656  000014                     	ds	1
   657  000015                     ___ftpack@exp:
   658                           	opt stack 0
   659  000015                     delay_ms@i:
   660                           	opt stack 0
   661                           
   662                           ; 2 bytes @ 0x14
   663  000015                     	ds	1
   664  000016                     ___awmod@counter:
   665                           	opt stack 0
   666  000016                     ___ftpack@sign:
   667                           	opt stack 0
   668  000016                     ___lwmod@counter:
   669                           	opt stack 0
   670  000016                     ___wmul@product:
   671                           	opt stack 0
   672                           
   673                           ; 2 bytes @ 0x15
   674  000016                     	ds	1
   675  000017                     ??___ftpack:
   676  000017                     ?___lwdiv:
   677                           	opt stack 0
   678  000017                     ___awmod@sign:
   679                           	opt stack 0
   680  000017                     sendUARTMessage@newMessagePointer:
   681                           	opt stack 0
   682  000017                     ___lwdiv@dividend:
   683                           	opt stack 0
   684                           
   685                           ; 2 bytes @ 0x16
   686  000017                     	ds	1
   687  000018                     ?___awdiv:
   688                           	opt stack 0
   689  000018                     ___awdiv@dividend:
   690                           	opt stack 0
   691                           
   692                           ; 2 bytes @ 0x17
   693  000018                     	ds	1
   694  000019                     ___lwdiv@divisor:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x18
   698  000019                     	ds	1
   699  00001A                     ?___awtoft:
   700                           	opt stack 0
   701  00001A                     ___awdiv@divisor:
   702                           	opt stack 0
   703  00001A                     ___awtoft@c:
   704                           	opt stack 0
   705                           
   706                           ; 2 bytes @ 0x19
   707  00001A                     	ds	1
   708  00001B                     ___lwdiv@quotient:
   709                           	opt stack 0
   710                           
   711                           ; 2 bytes @ 0x1A
   712  00001B                     	ds	1
   713  00001C                     ___awdiv@counter:
   714                           	opt stack 0
   715                           
   716                           ; 1 bytes @ 0x1B
   717  00001C                     	ds	1
   718  00001D                     ___awdiv@sign:
   719                           	opt stack 0
   720  00001D                     ___awtoft@sign:
   721                           	opt stack 0
   722  00001D                     ___lwdiv@counter:
   723                           	opt stack 0
   724                           
   725                           ; 1 bytes @ 0x1C
   726  00001D                     	ds	1
   727  00001E                     ?___ftdiv:
   728                           	opt stack 0
   729  00001E                     ___awdiv@quotient:
   730                           	opt stack 0
   731  00001E                     ___ftdiv@f1:
   732                           	opt stack 0
   733                           
   734                           ; 3 bytes @ 0x1D
   735  00001E                     	ds	2
   736  000020                     ??_fillInTemp:
   737                           
   738                           ; 1 bytes @ 0x1F
   739  000020                     	ds	1
   740  000021                     ___ftdiv@f2:
   741                           	opt stack 0
   742                           
   743                           ; 3 bytes @ 0x20
   744  000021                     	ds	3
   745  000024                     ??___ftdiv:
   746  000024                     fillInTemp@pipe_or_ambience:
   747                           	opt stack 0
   748                           
   749                           ; 1 bytes @ 0x23
   750  000024                     	ds	1
   751  000025                     fillInTemp@i:
   752                           	opt stack 0
   753                           
   754                           ; 2 bytes @ 0x24
   755  000025                     	ds	2
   756  000027                     ___ftdiv@cntr:
   757                           	opt stack 0
   758  000027                     fillInTemp@i_1142:
   759                           	opt stack 0
   760                           
   761                           ; 2 bytes @ 0x26
   762  000027                     	ds	1
   763  000028                     ___ftdiv@f3:
   764                           	opt stack 0
   765                           
   766                           ; 3 bytes @ 0x27
   767  000028                     	ds	1
   768  000029                     fillInTemp@i_1143:
   769                           	opt stack 0
   770                           
   771                           ; 1 bytes @ 0x28
   772  000029                     	ds	1
   773  00002A                     fillInTemp@temp:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x29
   777  00002A                     	ds	1
   778  00002B                     ___ftdiv@exp:
   779                           	opt stack 0
   780                           
   781                           ; 1 bytes @ 0x2A
   782  00002B                     	ds	1
   783  00002C                     ___ftdiv@sign:
   784                           	opt stack 0
   785                           
   786                           ; 1 bytes @ 0x2B
   787  00002C                     	ds	1
   788  00002D                     ?___ftmul:
   789                           	opt stack 0
   790  00002D                     ___ftmul@f1:
   791                           	opt stack 0
   792                           
   793                           ; 3 bytes @ 0x2C
   794  00002D                     	ds	3
   795  000030                     ___ftmul@f2:
   796                           	opt stack 0
   797                           
   798                           ; 3 bytes @ 0x2F
   799  000030                     	ds	3
   800  000033                     ??___ftmul:
   801                           
   802                           ; 1 bytes @ 0x32
   803  000033                     	ds	3
   804  000036                     ___ftmul@exp:
   805                           	opt stack 0
   806                           
   807                           ; 1 bytes @ 0x35
   808  000036                     	ds	1
   809  000037                     ___ftmul@f3_as_product:
   810                           	opt stack 0
   811                           
   812                           ; 3 bytes @ 0x36
   813  000037                     	ds	3
   814  00003A                     ___ftmul@cntr:
   815                           	opt stack 0
   816                           
   817                           ; 1 bytes @ 0x39
   818  00003A                     	ds	1
   819  00003B                     ___ftmul@sign:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x3A
   823  00003B                     	ds	1
   824  00003C                     ??_calculateTemp:
   825                           
   826                           ; 1 bytes @ 0x3B
   827  00003C                     	ds	2
   828  00003E                     tblptru	equ	0xFF8
   829                           tblptrh	equ	0xFF7
   830                           tblptrl	equ	0xFF6
   831                           tablat	equ	0xFF5
   832                           postinc0	equ	0xFEE
   833                           wreg	equ	0xFE8
   834                           postdec1	equ	0xFE5
   835                           fsr1l	equ	0xFE1
   836                           
   837                           ; 1 bytes @ 0x3D
   838 ;;
   839 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   840 ;;
   841 ;; *************** function _main *****************
   842 ;; Defined at:
   843 ;;		line 25 in file "main.c"
   844 ;; Parameters:    Size  Location     Type
   845 ;;		None
   846 ;; Auto vars:     Size  Location     Type
   847 ;;		None
   848 ;; Return value:  Size  Location     Type
   849 ;;                  1    wreg      void 
   850 ;; Registers used:
   851 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   852 ;; Tracked objects:
   853 ;;		On entry : 0/0
   854 ;;		On exit  : 0/0
   855 ;;		Unchanged: 0/0
   856 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
   857 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   858 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   859 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   860 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
   861 ;;Total ram usage:        2 bytes
   862 ;; Hardware stack levels required when called:    6
   863 ;; This function calls:
   864 ;;		_UARTReceive
   865 ;;		___wmul
   866 ;;		_delay_ms
   867 ;;		_initADC
   868 ;;		_initInterrupts
   869 ;;		_initLoRa
   870 ;;		_initUART1
   871 ;;		_init_frequency
   872 ;;		_makeTempMessage
   873 ;;		_make_frequency_message
   874 ;;		_sendUARTMessage
   875 ;; This function is called by:
   876 ;;		Startup code after reset
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           	psect	text0
   881  001444                     __ptext0:
   882                           	opt stack 0
   883  001444                     _main:
   884                           	opt stack 25
   885                           
   886                           ;main.c: 27: OSCCONbits.IRCF0 = 1;
   887                           
   888                           ;incstack = 0
   889  001444  88D3               	bsf	4051,4,c	;volatile
   890                           
   891                           ;main.c: 28: OSCCONbits.SCS0 = 1;
   892  001446  80D3               	bsf	4051,0,c	;volatile
   893                           
   894                           ;main.c: 29: OSCCONbits.SCS1 = 1;
   895  001448  82D3               	bsf	4051,1,c	;volatile
   896                           
   897                           ;main.c: 31: isCommandSent = 1;
   898  00144A  0E01               	movlw	1
   899  00144C  0100               	movlb	0	; () banked
   900  00144E  6F65               	movwf	_isCommandSent& (0+255),b
   901                           
   902                           ; BSR set to: 0
   903                           ;main.c: 32: init_frequency();
   904  001450  EC99  F00D         	call	_init_frequency	;wreg free
   905                           
   906                           ;main.c: 33: initUART1();
   907  001454  EC47  F00E         	call	_initUART1	;wreg free
   908                           
   909                           ;main.c: 34: initADC();
   910  001458  EC1D  F00E         	call	_initADC	;wreg free
   911                           
   912                           ;main.c: 35: initInterrupts();
   913  00145C  EC5D  F00E         	call	_initInterrupts	;wreg free
   914  001460                     l2475:
   915                           
   916                           ;main.c: 37: inductive= 40*value*value;
   917  001460  C0C0  F012         	movff	_value,___wmul@multiplier
   918  001464  C0C1  F013         	movff	_value+1,___wmul@multiplier+1
   919  001468  C0C0  F014         	movff	_value,___wmul@multiplicand
   920  00146C  C0C1  F015         	movff	_value+1,___wmul@multiplicand+1
   921  001470  EC34  F00E         	call	___wmul	;wreg free
   922  001474  C012  F0AD         	movff	?___wmul,_main$1934
   923  001478  C013  F0AE         	movff	?___wmul+1,_main$1934+1
   924                           
   925                           ;main.c: 37: inductive= 40*value*value;
   926  00147C  C0AD  F012         	movff	_main$1934,___wmul@multiplier
   927  001480  C0AE  F013         	movff	_main$1934+1,___wmul@multiplier+1
   928  001484  0E00               	movlw	0
   929  001486  6E15               	movwf	___wmul@multiplicand+1,c
   930  001488  0E28               	movlw	40
   931  00148A  6E14               	movwf	___wmul@multiplicand,c
   932  00148C  EC34  F00E         	call	___wmul	;wreg free
   933  001490  C012  F0C2         	movff	?___wmul,_inductive
   934  001494  C013  F0C3         	movff	?___wmul+1,_inductive+1
   935                           
   936                           ;main.c: 38: UARTReceive(1);
   937  001498  0E01               	movlw	1
   938  00149A  EC55  F00E         	call	_UARTReceive
   939                           
   940                           ;main.c: 39: initLoRa();
   941  00149E  ECCC  F00C         	call	_initLoRa	;wreg free
   942                           
   943                           ;main.c: 40: UARTReceive(0);
   944  0014A2  0E00               	movlw	0
   945  0014A4  EC55  F00E         	call	_UARTReceive
   946                           
   947                           ;main.c: 42: delay_ms(800);
   948  0014A8  0E03               	movlw	3
   949  0014AA  6E13               	movwf	delay_ms@ms+1,c
   950  0014AC  0E20               	movlw	32
   951  0014AE  6E12               	movwf	delay_ms@ms,c
   952  0014B0  ECEC  F00D         	call	_delay_ms	;wreg free
   953                           
   954                           ;main.c: 43: make_frequency_message();
   955  0014B4  EC87  F00B         	call	_make_frequency_message	;wreg free
   956                           
   957                           ;main.c: 44: sendUARTMessage(frequency_message);
   958  0014B8  0E66               	movlw	low _frequency_message
   959  0014BA  6E17               	movwf	sendUARTMessage@newMessagePointer,c
   960  0014BC  0E00               	movlw	high _frequency_message
   961  0014BE  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
   962  0014C0  EC59  F00C         	call	_sendUARTMessage	;wreg free
   963                           
   964                           ;main.c: 45: delay_ms(800);
   965  0014C4  0E03               	movlw	3
   966  0014C6  6E13               	movwf	delay_ms@ms+1,c
   967  0014C8  0E20               	movlw	32
   968  0014CA  6E12               	movwf	delay_ms@ms,c
   969  0014CC  ECEC  F00D         	call	_delay_ms	;wreg free
   970                           
   971                           ;main.c: 47: makeTempMessage(0);
   972  0014D0  0E00               	movlw	0
   973  0014D2  ECFD  F00C         	call	_makeTempMessage
   974                           
   975                           ;main.c: 48: sendUARTMessage(temp_display_message);
   976  0014D6  0E80               	movlw	low _temp_display_message
   977  0014D8  6E17               	movwf	sendUARTMessage@newMessagePointer,c
   978  0014DA  0E00               	movlw	high _temp_display_message
   979  0014DC  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
   980  0014DE  EC59  F00C         	call	_sendUARTMessage	;wreg free
   981                           
   982                           ;main.c: 49: delay_ms(800);
   983  0014E2  0E03               	movlw	3
   984  0014E4  6E13               	movwf	delay_ms@ms+1,c
   985  0014E6  0E20               	movlw	32
   986  0014E8  6E12               	movwf	delay_ms@ms,c
   987  0014EA  ECEC  F00D         	call	_delay_ms	;wreg free
   988                           
   989                           ;main.c: 51: makeTempMessage(1);
   990  0014EE  0E01               	movlw	1
   991  0014F0  ECFD  F00C         	call	_makeTempMessage
   992                           
   993                           ;main.c: 52: sendUARTMessage(temp_display_message);
   994  0014F4  0E80               	movlw	low _temp_display_message
   995  0014F6  6E17               	movwf	sendUARTMessage@newMessagePointer,c
   996  0014F8  0E00               	movlw	high _temp_display_message
   997  0014FA  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
   998  0014FC  EC59  F00C         	call	_sendUARTMessage	;wreg free
   999                           
  1000                           ;main.c: 53: delay_ms(800);
  1001  001500  0E03               	movlw	3
  1002  001502  6E13               	movwf	delay_ms@ms+1,c
  1003  001504  0E20               	movlw	32
  1004  001506  6E12               	movwf	delay_ms@ms,c
  1005  001508  ECEC  F00D         	call	_delay_ms	;wreg free
  1006  00150C  D7A9               	goto	l2475
  1007  00150E                     __end_of_main:
  1008                           	opt stack 0
  1009                           tblptru	equ	0xFF8
  1010                           tblptrh	equ	0xFF7
  1011                           tblptrl	equ	0xFF6
  1012                           tablat	equ	0xFF5
  1013                           postinc0	equ	0xFEE
  1014                           wreg	equ	0xFE8
  1015                           postdec1	equ	0xFE5
  1016                           fsr1l	equ	0xFE1
  1017                           
  1018 ;; *************** function _make_frequency_message *****************
  1019 ;; Defined at:
  1020 ;;		line 81 in file "frequency.c"
  1021 ;; Parameters:    Size  Location     Type
  1022 ;;		None
  1023 ;; Auto vars:     Size  Location     Type
  1024 ;;		None
  1025 ;; Return value:  Size  Location     Type
  1026 ;;                  1    wreg      void 
  1027 ;; Registers used:
  1028 ;;		wreg, status,2, status,0, cstack
  1029 ;; Tracked objects:
  1030 ;;		On entry : 0/0
  1031 ;;		On exit  : 0/0
  1032 ;;		Unchanged: 0/0
  1033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1034 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1035 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1036 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1037 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1038 ;;Total ram usage:        0 bytes
  1039 ;; Hardware stack levels used:    1
  1040 ;; Hardware stack levels required when called:    3
  1041 ;; This function calls:
  1042 ;;		___lwdiv
  1043 ;;		___lwmod
  1044 ;; This function is called by:
  1045 ;;		_main
  1046 ;; This function uses a non-reentrant model
  1047 ;;
  1048                           
  1049                           	psect	text1
  1050  00170E                     __ptext1:
  1051                           	opt stack 0
  1052  00170E                     _make_frequency_message:
  1053                           	opt stack 27
  1054                           
  1055                           ;frequency.c: 82: frequency_message[19] = (value / 1000 + 48);
  1056                           
  1057                           ;incstack = 0
  1058  00170E  C0C0  F017         	movff	_value,___lwdiv@dividend
  1059  001712  C0C1  F018         	movff	_value+1,___lwdiv@dividend+1
  1060  001716  0E03               	movlw	3
  1061  001718  6E1A               	movwf	___lwdiv@divisor+1,c
  1062  00171A  0EE8               	movlw	232
  1063  00171C  6E19               	movwf	___lwdiv@divisor,c
  1064  00171E  EC28  F00D         	call	___lwdiv	;wreg free
  1065  001722  5017               	movf	?___lwdiv,w,c
  1066  001724  0F30               	addlw	48
  1067  001726  0100               	movlb	0	; () banked
  1068  001728  6F79               	movwf	(_frequency_message+19)& (0+255),b
  1069                           
  1070                           ;frequency.c: 83: frequency_message[20] = (value % 1000 / 100 + 48);
  1071  00172A  0E03               	movlw	3
  1072  00172C  6E15               	movwf	___lwmod@divisor+1,c
  1073  00172E  0EE8               	movlw	232
  1074  001730  6E14               	movwf	___lwmod@divisor,c
  1075  001732  C0C0  F012         	movff	_value,___lwmod@dividend
  1076  001736  C0C1  F013         	movff	_value+1,___lwmod@dividend+1
  1077  00173A  EC78  F00D         	call	___lwmod	;wreg free
  1078  00173E  C012  F017         	movff	?___lwmod,___lwdiv@dividend
  1079  001742  C013  F018         	movff	?___lwmod+1,___lwdiv@dividend+1
  1080  001746  0E00               	movlw	0
  1081  001748  6E1A               	movwf	___lwdiv@divisor+1,c
  1082  00174A  0E64               	movlw	100
  1083  00174C  6E19               	movwf	___lwdiv@divisor,c
  1084  00174E  EC28  F00D         	call	___lwdiv	;wreg free
  1085  001752  5017               	movf	?___lwdiv,w,c
  1086  001754  0F30               	addlw	48
  1087  001756  0100               	movlb	0	; () banked
  1088  001758  6F7A               	movwf	(_frequency_message+20)& (0+255),b
  1089                           
  1090                           ;frequency.c: 84: frequency_message[21] = (value % 100 / 10 + 48);
  1091  00175A  0E00               	movlw	0
  1092  00175C  6E15               	movwf	___lwmod@divisor+1,c
  1093  00175E  0E64               	movlw	100
  1094  001760  6E14               	movwf	___lwmod@divisor,c
  1095  001762  C0C0  F012         	movff	_value,___lwmod@dividend
  1096  001766  C0C1  F013         	movff	_value+1,___lwmod@dividend+1
  1097  00176A  EC78  F00D         	call	___lwmod	;wreg free
  1098  00176E  C012  F017         	movff	?___lwmod,___lwdiv@dividend
  1099  001772  C013  F018         	movff	?___lwmod+1,___lwdiv@dividend+1
  1100  001776  0E00               	movlw	0
  1101  001778  6E1A               	movwf	___lwdiv@divisor+1,c
  1102  00177A  0E0A               	movlw	10
  1103  00177C  6E19               	movwf	___lwdiv@divisor,c
  1104  00177E  EC28  F00D         	call	___lwdiv	;wreg free
  1105  001782  5017               	movf	?___lwdiv,w,c
  1106  001784  0F30               	addlw	48
  1107  001786  0100               	movlb	0	; () banked
  1108  001788  6F7B               	movwf	(_frequency_message+21)& (0+255),b
  1109                           
  1110                           ;frequency.c: 85: frequency_message[22] = (value % 10 + 48);
  1111  00178A  C0C0  F012         	movff	_value,___lwmod@dividend
  1112  00178E  C0C1  F013         	movff	_value+1,___lwmod@dividend+1
  1113  001792  0E00               	movlw	0
  1114  001794  6E15               	movwf	___lwmod@divisor+1,c
  1115  001796  0E0A               	movlw	10
  1116  001798  6E14               	movwf	___lwmod@divisor,c
  1117  00179A  EC78  F00D         	call	___lwmod	;wreg free
  1118  00179E  5012               	movf	?___lwmod,w,c
  1119  0017A0  0F30               	addlw	48
  1120  0017A2  0100               	movlb	0	; () banked
  1121  0017A4  6F7C               	movwf	(_frequency_message+22)& (0+255),b
  1122                           
  1123                           ; BSR set to: 0
  1124  0017A6  0012               	return		;funcret
  1125  0017A8                     __end_of_make_frequency_message:
  1126                           	opt stack 0
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           postinc0	equ	0xFEE
  1132                           wreg	equ	0xFE8
  1133                           postdec1	equ	0xFE5
  1134                           fsr1l	equ	0xFE1
  1135                           
  1136 ;; *************** function ___lwmod *****************
  1137 ;; Defined at:
  1138 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  1139 ;; Parameters:    Size  Location     Type
  1140 ;;  dividend        2   17[COMRAM] unsigned int 
  1141 ;;  divisor         2   19[COMRAM] unsigned int 
  1142 ;; Auto vars:     Size  Location     Type
  1143 ;;  counter         1   21[COMRAM] unsigned char 
  1144 ;; Return value:  Size  Location     Type
  1145 ;;                  2   17[COMRAM] unsigned int 
  1146 ;; Registers used:
  1147 ;;		wreg, status,2, status,0
  1148 ;; Tracked objects:
  1149 ;;		On entry : 0/0
  1150 ;;		On exit  : 0/0
  1151 ;;		Unchanged: 0/0
  1152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1153 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1154 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1155 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1156 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1157 ;;Total ram usage:        5 bytes
  1158 ;; Hardware stack levels used:    1
  1159 ;; Hardware stack levels required when called:    2
  1160 ;; This function calls:
  1161 ;;		Nothing
  1162 ;; This function is called by:
  1163 ;;		_make_frequency_message
  1164 ;; This function uses a non-reentrant model
  1165 ;;
  1166                           
  1167                           	psect	text2
  1168  001AF0                     __ptext2:
  1169                           	opt stack 0
  1170  001AF0                     ___lwmod:
  1171                           	opt stack 27
  1172                           
  1173                           ; BSR set to: 0
  1174                           ;incstack = 0
  1175  001AF0  5014               	movf	___lwmod@divisor,w,c
  1176  001AF2  1015               	iorwf	___lwmod@divisor+1,w,c
  1177  001AF4  B4D8               	btfsc	status,2,c
  1178  001AF6  D018               	goto	l730
  1179  001AF8  0E01               	movlw	1
  1180  001AFA  6E16               	movwf	___lwmod@counter,c
  1181  001AFC  D004               	goto	l1905
  1182  001AFE                     l1903:
  1183  001AFE  90D8               	bcf	status,0,c
  1184  001B00  3614               	rlcf	___lwmod@divisor,f,c
  1185  001B02  3615               	rlcf	___lwmod@divisor+1,f,c
  1186  001B04  2A16               	incf	___lwmod@counter,f,c
  1187  001B06                     l1905:
  1188  001B06  AE15               	btfss	___lwmod@divisor+1,7,c
  1189  001B08  D7FA               	goto	l1903
  1190  001B0A                     l1907:
  1191  001B0A  5014               	movf	___lwmod@divisor,w,c
  1192  001B0C  5C12               	subwf	___lwmod@dividend,w,c
  1193  001B0E  5015               	movf	___lwmod@divisor+1,w,c
  1194  001B10  5813               	subwfb	___lwmod@dividend+1,w,c
  1195  001B12  A0D8               	btfss	status,0,c
  1196  001B14  D004               	goto	l1911
  1197  001B16  5014               	movf	___lwmod@divisor,w,c
  1198  001B18  5E12               	subwf	___lwmod@dividend,f,c
  1199  001B1A  5015               	movf	___lwmod@divisor+1,w,c
  1200  001B1C  5A13               	subwfb	___lwmod@dividend+1,f,c
  1201  001B1E                     l1911:
  1202  001B1E  90D8               	bcf	status,0,c
  1203  001B20  3215               	rrcf	___lwmod@divisor+1,f,c
  1204  001B22  3214               	rrcf	___lwmod@divisor,f,c
  1205  001B24  2E16               	decfsz	___lwmod@counter,f,c
  1206  001B26  D7F1               	goto	l1907
  1207  001B28                     l730:
  1208  001B28  C012  F012         	movff	___lwmod@dividend,?___lwmod
  1209  001B2C  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
  1210  001B30  0012               	return		;funcret
  1211  001B32                     __end_of___lwmod:
  1212                           	opt stack 0
  1213                           tblptru	equ	0xFF8
  1214                           tblptrh	equ	0xFF7
  1215                           tblptrl	equ	0xFF6
  1216                           tablat	equ	0xFF5
  1217                           postinc0	equ	0xFEE
  1218                           wreg	equ	0xFE8
  1219                           postdec1	equ	0xFE5
  1220                           fsr1l	equ	0xFE1
  1221                           status	equ	0xFD8
  1222                           
  1223 ;; *************** function ___lwdiv *****************
  1224 ;; Defined at:
  1225 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  1226 ;; Parameters:    Size  Location     Type
  1227 ;;  dividend        2   22[COMRAM] unsigned int 
  1228 ;;  divisor         2   24[COMRAM] unsigned int 
  1229 ;; Auto vars:     Size  Location     Type
  1230 ;;  quotient        2   26[COMRAM] unsigned int 
  1231 ;;  counter         1   28[COMRAM] unsigned char 
  1232 ;; Return value:  Size  Location     Type
  1233 ;;                  2   22[COMRAM] unsigned int 
  1234 ;; Registers used:
  1235 ;;		wreg, status,2, status,0
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1241 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1242 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1243 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1244 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1245 ;;Total ram usage:        7 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; Hardware stack levels required when called:    2
  1248 ;; This function calls:
  1249 ;;		Nothing
  1250 ;; This function is called by:
  1251 ;;		_make_frequency_message
  1252 ;; This function uses a non-reentrant model
  1253 ;;
  1254                           
  1255                           	psect	text3
  1256  001A50                     __ptext3:
  1257                           	opt stack 0
  1258  001A50                     ___lwdiv:
  1259                           	opt stack 27
  1260                           
  1261                           ;incstack = 0
  1262  001A50  0E00               	movlw	0
  1263  001A52  6E1C               	movwf	___lwdiv@quotient+1,c
  1264  001A54  0E00               	movlw	0
  1265  001A56  6E1B               	movwf	___lwdiv@quotient,c
  1266  001A58  5019               	movf	___lwdiv@divisor,w,c
  1267  001A5A  101A               	iorwf	___lwdiv@divisor+1,w,c
  1268  001A5C  B4D8               	btfsc	status,2,c
  1269  001A5E  D01C               	goto	l720
  1270  001A60  0E01               	movlw	1
  1271  001A62  6E1D               	movwf	___lwdiv@counter,c
  1272  001A64  D004               	goto	l1885
  1273  001A66                     l1883:
  1274  001A66  90D8               	bcf	status,0,c
  1275  001A68  3619               	rlcf	___lwdiv@divisor,f,c
  1276  001A6A  361A               	rlcf	___lwdiv@divisor+1,f,c
  1277  001A6C  2A1D               	incf	___lwdiv@counter,f,c
  1278  001A6E                     l1885:
  1279  001A6E  AE1A               	btfss	___lwdiv@divisor+1,7,c
  1280  001A70  D7FA               	goto	l1883
  1281  001A72                     l1887:
  1282  001A72  90D8               	bcf	status,0,c
  1283  001A74  361B               	rlcf	___lwdiv@quotient,f,c
  1284  001A76  361C               	rlcf	___lwdiv@quotient+1,f,c
  1285  001A78  5019               	movf	___lwdiv@divisor,w,c
  1286  001A7A  5C17               	subwf	___lwdiv@dividend,w,c
  1287  001A7C  501A               	movf	___lwdiv@divisor+1,w,c
  1288  001A7E  5818               	subwfb	___lwdiv@dividend+1,w,c
  1289  001A80  A0D8               	btfss	status,0,c
  1290  001A82  D005               	goto	l1895
  1291  001A84  5019               	movf	___lwdiv@divisor,w,c
  1292  001A86  5E17               	subwf	___lwdiv@dividend,f,c
  1293  001A88  501A               	movf	___lwdiv@divisor+1,w,c
  1294  001A8A  5A18               	subwfb	___lwdiv@dividend+1,f,c
  1295  001A8C  801B               	bsf	___lwdiv@quotient,0,c
  1296  001A8E                     l1895:
  1297  001A8E  90D8               	bcf	status,0,c
  1298  001A90  321A               	rrcf	___lwdiv@divisor+1,f,c
  1299  001A92  3219               	rrcf	___lwdiv@divisor,f,c
  1300  001A94  2E1D               	decfsz	___lwdiv@counter,f,c
  1301  001A96  D7ED               	goto	l1887
  1302  001A98                     l720:
  1303  001A98  C01B  F017         	movff	___lwdiv@quotient,?___lwdiv
  1304  001A9C  C01C  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1305  001AA0  0012               	return		;funcret
  1306  001AA2                     __end_of___lwdiv:
  1307                           	opt stack 0
  1308                           tblptru	equ	0xFF8
  1309                           tblptrh	equ	0xFF7
  1310                           tblptrl	equ	0xFF6
  1311                           tablat	equ	0xFF5
  1312                           postinc0	equ	0xFEE
  1313                           wreg	equ	0xFE8
  1314                           postdec1	equ	0xFE5
  1315                           fsr1l	equ	0xFE1
  1316                           status	equ	0xFD8
  1317                           
  1318 ;; *************** function _makeTempMessage *****************
  1319 ;; Defined at:
  1320 ;;		line 100 in file "temperature.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  pipe_or_ambi    1    wreg     unsigned char 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  pipe_or_ambi    1   24[BANK0 ] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1334 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1335 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1337 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1338 ;;Total ram usage:        1 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; Hardware stack levels required when called:    5
  1341 ;; This function calls:
  1342 ;;		_calculateTemp
  1343 ;;		_fillInTemp
  1344 ;; This function is called by:
  1345 ;;		_main
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           	psect	text4
  1350  0019FA                     __ptext4:
  1351                           	opt stack 0
  1352  0019FA                     _makeTempMessage:
  1353                           	opt stack 25
  1354                           
  1355                           ;incstack = 0
  1356                           ;makeTempMessage@pipe_or_ambient stored from wreg
  1357  0019FA  0100               	movlb	0	; () banked
  1358  0019FC  6FAC               	movwf	makeTempMessage@pipe_or_ambient& (0+255),b
  1359                           
  1360                           ;temperature.c: 102: if(pipe_or_ambient == 0){
  1361  0019FE  0100               	movlb	0	; () banked
  1362  001A00  51AC               	movf	makeTempMessage@pipe_or_ambient& (0+255),w,b
  1363  001A02  0100               	movlb	0	; () banked
  1364  001A04  A4D8               	btfss	status,2,c
  1365  001A06  D012               	goto	l2459
  1366                           
  1367                           ; BSR set to: 0
  1368                           ;temperature.c: 103: temp_pipe = calculateTemp(plus_pipe, minus_pipe);
  1369  001A08  C04A  F0A3         	movff	_plus_pipe,calculateTemp@plus
  1370  001A0C  C04B  F0A4         	movff	_plus_pipe+1,calculateTemp@plus+1
  1371  001A10  C046  F0A5         	movff	_minus_pipe,calculateTemp@minus
  1372  001A14  C047  F0A6         	movff	_minus_pipe+1,calculateTemp@minus+1
  1373  001A18  EC87  F00A         	call	_calculateTemp	;wreg free
  1374  001A1C  C0A3  F0B8         	movff	?_calculateTemp,_temp_pipe
  1375  001A20  C0A4  F0B9         	movff	?_calculateTemp+1,_temp_pipe+1
  1376                           
  1377                           ;temperature.c: 104: fillInTemp(0);
  1378  001A24  0E00               	movlw	0
  1379  001A26  ECD8  F007         	call	_fillInTemp
  1380                           
  1381                           ;temperature.c: 105: }
  1382  001A2A  0012               	return	
  1383  001A2C                     l2459:
  1384                           
  1385                           ;temperature.c: 107: else{
  1386                           ;temperature.c: 108: temp_ambient = calculateTemp(plus_ambient, minus_ambient);
  1387  001A2C  C048  F0A3         	movff	_plus_ambient,calculateTemp@plus
  1388  001A30  C049  F0A4         	movff	_plus_ambient+1,calculateTemp@plus+1
  1389  001A34  C044  F0A5         	movff	_minus_ambient,calculateTemp@minus
  1390  001A38  C045  F0A6         	movff	_minus_ambient+1,calculateTemp@minus+1
  1391  001A3C  EC87  F00A         	call	_calculateTemp	;wreg free
  1392  001A40  C0A3  F0B6         	movff	?_calculateTemp,_temp_ambient
  1393  001A44  C0A4  F0B7         	movff	?_calculateTemp+1,_temp_ambient+1
  1394                           
  1395                           ;temperature.c: 109: fillInTemp(1);
  1396  001A48  0E01               	movlw	1
  1397  001A4A  ECD8  F007         	call	_fillInTemp
  1398  001A4E  0012               	return	
  1399  001A50                     __end_of_makeTempMessage:
  1400                           	opt stack 0
  1401                           tblptru	equ	0xFF8
  1402                           tblptrh	equ	0xFF7
  1403                           tblptrl	equ	0xFF6
  1404                           tablat	equ	0xFF5
  1405                           postinc0	equ	0xFEE
  1406                           wreg	equ	0xFE8
  1407                           postdec1	equ	0xFE5
  1408                           fsr1l	equ	0xFE1
  1409                           status	equ	0xFD8
  1410                           
  1411 ;; *************** function _fillInTemp *****************
  1412 ;; Defined at:
  1413 ;;		line 50 in file "temperature.c"
  1414 ;; Parameters:    Size  Location     Type
  1415 ;;  pipe_or_ambi    1    wreg     unsigned char 
  1416 ;; Auto vars:     Size  Location     Type
  1417 ;;  pipe_or_ambi    1   35[COMRAM] unsigned char 
  1418 ;;  i               2   38[COMRAM] int 
  1419 ;;  i               2   36[COMRAM] int 
  1420 ;;  i               1   40[COMRAM] unsigned char 
  1421 ;;  temp            2   41[COMRAM] int 
  1422 ;; Return value:  Size  Location     Type
  1423 ;;                  1    wreg      void 
  1424 ;; Registers used:
  1425 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1426 ;; Tracked objects:
  1427 ;;		On entry : 0/0
  1428 ;;		On exit  : 0/0
  1429 ;;		Unchanged: 0/0
  1430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1431 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1432 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1433 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1434 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1435 ;;Total ram usage:       12 bytes
  1436 ;; Hardware stack levels used:    1
  1437 ;; Hardware stack levels required when called:    3
  1438 ;; This function calls:
  1439 ;;		___awdiv
  1440 ;;		___awmod
  1441 ;; This function is called by:
  1442 ;;		_makeTempMessage
  1443 ;; This function uses a non-reentrant model
  1444 ;;
  1445                           
  1446                           	psect	text5
  1447  000FB0                     __ptext5:
  1448                           	opt stack 0
  1449  000FB0                     _fillInTemp:
  1450                           	opt stack 26
  1451                           
  1452                           ;incstack = 0
  1453                           ;fillInTemp@pipe_or_ambience stored from wreg
  1454  000FB0  6E24               	movwf	fillInTemp@pipe_or_ambience,c
  1455                           
  1456                           ;temperature.c: 51: signed int temp;
  1457                           ;temperature.c: 53: if(pipe_or_ambience == 0){
  1458  000FB2  5024               	movf	fillInTemp@pipe_or_ambience,w,c
  1459  000FB4  A4D8               	btfss	status,2,c
  1460  000FB6  D02A               	goto	l2405
  1461                           
  1462                           ;temperature.c: 55: for(int i = 0; i<4; i++){
  1463  000FB8  0E00               	movlw	0
  1464  000FBA  6E26               	movwf	fillInTemp@i+1,c
  1465  000FBC  0E00               	movlw	0
  1466  000FBE  6E25               	movwf	fillInTemp@i,c
  1467  000FC0  BE26               	btfsc	fillInTemp@i+1,7,c
  1468  000FC2  D006               	goto	l2399
  1469  000FC4  5026               	movf	fillInTemp@i+1,w,c
  1470  000FC6  E11D               	bnz	l207
  1471  000FC8  0E04               	movlw	4
  1472  000FCA  5C25               	subwf	fillInTemp@i,w,c
  1473  000FCC  B0D8               	btfsc	status,0,c
  1474  000FCE  D019               	goto	l207
  1475  000FD0                     l2399:
  1476                           
  1477                           ;temperature.c: 56: temp_display_message[i] = pipe_ascii[i];
  1478  000FD0  0E23               	movlw	low _pipe_ascii
  1479  000FD2  2425               	addwf	fillInTemp@i,w,c
  1480  000FD4  6EF6               	movwf	tblptrl,c
  1481  000FD6  0E0F               	movlw	high _pipe_ascii
  1482  000FD8  2026               	addwfc	fillInTemp@i+1,w,c
  1483  000FDA  6EF7               	movwf	tblptrh,c
  1484  000FDC                     	if	1	;There are 3 active tblptr bytes
  1485  000FDC  6AF8               	clrf	tblptru,c
  1486  000FDE  0E00               	movlw	low (__mediumconst shr (0+16))
  1487  000FE0  22F8               	addwfc	tblptru,f,c
  1488  000FE2                     	endif
  1489  000FE2  0E80               	movlw	low _temp_display_message
  1490  000FE4  2425               	addwf	fillInTemp@i,w,c
  1491  000FE6  6ED9               	movwf	fsr2l,c
  1492  000FE8  0E00               	movlw	high _temp_display_message
  1493  000FEA  2026               	addwfc	fillInTemp@i+1,w,c
  1494  000FEC  6EDA               	movwf	fsr2h,c
  1495  000FEE  0008               	tblrd		*
  1496  000FF0  CFF5 FFDF          	movff	tablat,indf2
  1497  000FF4  4A25               	infsnz	fillInTemp@i,f,c
  1498  000FF6  2A26               	incf	fillInTemp@i+1,f,c
  1499  000FF8  BE26               	btfsc	fillInTemp@i+1,7,c
  1500  000FFA  D7EA               	goto	l2399
  1501  000FFC  5026               	movf	fillInTemp@i+1,w,c
  1502  000FFE  E101               	bnz	u1830
  1503  001000  D7E3               	goto	L1
  1504  001002                     u1830:
  1505  001002                     l207:
  1506                           
  1507                           ;temperature.c: 57: }
  1508                           ;temperature.c: 58: temp = temp_pipe;
  1509  001002  C0B8  F02A         	movff	_temp_pipe,fillInTemp@temp
  1510  001006  C0B9  F02B         	movff	_temp_pipe+1,fillInTemp@temp+1
  1511                           
  1512                           ;temperature.c: 59: }
  1513  00100A  D029               	goto	l2417
  1514  00100C                     l2405:
  1515                           
  1516                           ;temperature.c: 60: else{
  1517                           ;temperature.c: 62: for(int i = 0; i<4; i++){
  1518  00100C  0E00               	movlw	0
  1519  00100E  6E28               	movwf	fillInTemp@i_1142+1,c
  1520  001010  0E00               	movlw	0
  1521  001012  6E27               	movwf	fillInTemp@i_1142,c
  1522  001014  BE28               	btfsc	fillInTemp@i_1142+1,7,c
  1523  001016  D006               	goto	l2411
  1524  001018  5028               	movf	fillInTemp@i_1142+1,w,c
  1525  00101A  E11D               	bnz	l210
  1526  00101C  0E04               	movlw	4
  1527  00101E  5C27               	subwf	fillInTemp@i_1142,w,c
  1528  001020  B0D8               	btfsc	status,0,c
  1529  001022  D019               	goto	l210
  1530  001024                     l2411:
  1531                           
  1532                           ;temperature.c: 63: temp_display_message[i] = ambient_ascii[i];
  1533  001024  0E1E               	movlw	low _ambient_ascii
  1534  001026  2427               	addwf	fillInTemp@i_1142,w,c
  1535  001028  6EF6               	movwf	tblptrl,c
  1536  00102A  0E0F               	movlw	high _ambient_ascii
  1537  00102C  2028               	addwfc	fillInTemp@i_1142+1,w,c
  1538  00102E  6EF7               	movwf	tblptrh,c
  1539  001030                     	if	1	;There are 3 active tblptr bytes
  1540  001030  6AF8               	clrf	tblptru,c
  1541  001032  0E00               	movlw	low (__mediumconst shr (0+16))
  1542  001034  22F8               	addwfc	tblptru,f,c
  1543  001036                     	endif
  1544  001036  0E80               	movlw	low _temp_display_message
  1545  001038  2427               	addwf	fillInTemp@i_1142,w,c
  1546  00103A  6ED9               	movwf	fsr2l,c
  1547  00103C  0E00               	movlw	high _temp_display_message
  1548  00103E  2028               	addwfc	fillInTemp@i_1142+1,w,c
  1549  001040  6EDA               	movwf	fsr2h,c
  1550  001042  0008               	tblrd		*
  1551  001044  CFF5 FFDF          	movff	tablat,indf2
  1552  001048  4A27               	infsnz	fillInTemp@i_1142,f,c
  1553  00104A  2A28               	incf	fillInTemp@i_1142+1,f,c
  1554  00104C  BE28               	btfsc	fillInTemp@i_1142+1,7,c
  1555  00104E  D7EA               	goto	l2411
  1556  001050  5028               	movf	fillInTemp@i_1142+1,w,c
  1557  001052  E101               	bnz	u1850
  1558  001054  D7E3               	goto	L2
  1559  001056                     u1850:
  1560  001056                     l210:
  1561                           
  1562                           ;temperature.c: 64: }
  1563                           ;temperature.c: 65: temp = temp_ambient;
  1564  001056  C0B6  F02A         	movff	_temp_ambient,fillInTemp@temp
  1565  00105A  C0B7  F02B         	movff	_temp_ambient+1,fillInTemp@temp+1
  1566  00105E                     l2417:
  1567                           
  1568                           ;temperature.c: 66: }
  1569                           ;temperature.c: 69: if(temp < 0){
  1570  00105E  AE2B               	btfss	fillInTemp@temp+1,7,c
  1571  001060  D008               	goto	l2423
  1572                           
  1573                           ;temperature.c: 71: asciiTemp[0] = '-';
  1574  001062  0E2D               	movlw	45
  1575  001064  0100               	movlb	0	; () banked
  1576  001066  6F60               	movwf	_asciiTemp& (0+255),b
  1577                           
  1578                           ; BSR set to: 0
  1579                           ;temperature.c: 73: temp = - temp;
  1580  001068  6C2A               	negf	fillInTemp@temp,c
  1581  00106A  1E2B               	comf	fillInTemp@temp+1,f,c
  1582  00106C  B0D8               	btfsc	status,0,c
  1583  00106E  2A2B               	incf	fillInTemp@temp+1,f,c
  1584                           
  1585                           ;temperature.c: 74: }
  1586  001070  D003               	goto	l2425
  1587  001072                     l2423:
  1588                           
  1589                           ;temperature.c: 75: else{
  1590                           ;temperature.c: 76: asciiTemp[0] = ' ';
  1591  001072  0E20               	movlw	32
  1592  001074  0100               	movlb	0	; () banked
  1593  001076  6F60               	movwf	_asciiTemp& (0+255),b
  1594  001078                     l2425:
  1595                           
  1596                           ; BSR set to: 0
  1597                           ;temperature.c: 77: }
  1598                           ;temperature.c: 79: asciiTemp[1] =(char) (temp/100 + 48);
  1599  001078  C02A  F018         	movff	fillInTemp@temp,___awdiv@dividend
  1600  00107C  C02B  F019         	movff	fillInTemp@temp+1,___awdiv@dividend+1
  1601  001080  0E00               	movlw	0
  1602  001082  6E1B               	movwf	___awdiv@divisor+1,c
  1603  001084  0E64               	movlw	100
  1604  001086  6E1A               	movwf	___awdiv@divisor,c
  1605  001088  EC17  F00C         	call	___awdiv	;wreg free
  1606  00108C  5018               	movf	?___awdiv,w,c
  1607  00108E  0F30               	addlw	48
  1608  001090  0100               	movlb	0	; () banked
  1609  001092  6F61               	movwf	(_asciiTemp+1)& (0+255),b
  1610                           
  1611                           ; BSR set to: 0
  1612                           ;temperature.c: 80: asciiTemp[2] =(char) (temp % 100 / 10 + 48);
  1613  001094  0E00               	movlw	0
  1614  001096  6E15               	movwf	___awmod@divisor+1,c
  1615  001098  0E64               	movlw	100
  1616  00109A  6E14               	movwf	___awmod@divisor,c
  1617  00109C  C02A  F012         	movff	fillInTemp@temp,___awmod@dividend
  1618  0010A0  C02B  F013         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1619  0010A4  EC94  F00C         	call	___awmod	;wreg free
  1620  0010A8  C012  F018         	movff	?___awmod,___awdiv@dividend
  1621  0010AC  C013  F019         	movff	?___awmod+1,___awdiv@dividend+1
  1622  0010B0  0E00               	movlw	0
  1623  0010B2  6E1B               	movwf	___awdiv@divisor+1,c
  1624  0010B4  0E0A               	movlw	10
  1625  0010B6  6E1A               	movwf	___awdiv@divisor,c
  1626  0010B8  EC17  F00C         	call	___awdiv	;wreg free
  1627  0010BC  5018               	movf	?___awdiv,w,c
  1628  0010BE  0F30               	addlw	48
  1629  0010C0  0100               	movlb	0	; () banked
  1630  0010C2  6F62               	movwf	(_asciiTemp+2)& (0+255),b
  1631                           
  1632                           ; BSR set to: 0
  1633                           ;temperature.c: 81: asciiTemp[3] = (char) (temp % 10 + 48);
  1634  0010C4  C02A  F012         	movff	fillInTemp@temp,___awmod@dividend
  1635  0010C8  C02B  F013         	movff	fillInTemp@temp+1,___awmod@dividend+1
  1636  0010CC  0E00               	movlw	0
  1637  0010CE  6E15               	movwf	___awmod@divisor+1,c
  1638  0010D0  0E0A               	movlw	10
  1639  0010D2  6E14               	movwf	___awmod@divisor,c
  1640  0010D4  EC94  F00C         	call	___awmod	;wreg free
  1641  0010D8  5012               	movf	?___awmod,w,c
  1642  0010DA  0F30               	addlw	48
  1643  0010DC  0100               	movlb	0	; () banked
  1644  0010DE  6F63               	movwf	(_asciiTemp+3)& (0+255),b
  1645                           
  1646                           ; BSR set to: 0
  1647                           ;temperature.c: 85: for(char i = 12; i<17; i++){
  1648  0010E0  0E0C               	movlw	12
  1649  0010E2  6E29               	movwf	fillInTemp@i_1143,c
  1650  0010E4                     l2433:
  1651                           
  1652                           ; BSR set to: 0
  1653  0010E4  0E10               	movlw	16
  1654  0010E6  6429               	cpfsgt	fillInTemp@i_1143,c
  1655  0010E8  D001               	goto	l2437
  1656  0010EA  0012               	return	
  1657  0010EC                     l2437:
  1658                           
  1659                           ;temperature.c: 86: temp_display_message[i] = asciiTemp[i-12];
  1660  0010EC  0EF4               	movlw	244
  1661  0010EE  6E20               	movwf	??_fillInTemp& (0+255),c
  1662  0010F0  0EFF               	movlw	255
  1663  0010F2  6E21               	movwf	(??_fillInTemp+1)& (0+255),c
  1664  0010F4  5029               	movf	fillInTemp@i_1143,w,c
  1665  0010F6  6E22               	movwf	(??_fillInTemp+2)& (0+255),c
  1666  0010F8  6A23               	clrf	(??_fillInTemp+3)& (0+255),c
  1667  0010FA  5020               	movf	??_fillInTemp,w,c
  1668  0010FC  2622               	addwf	??_fillInTemp+2,f,c
  1669  0010FE  5021               	movf	??_fillInTemp+1,w,c
  1670  001100  2223               	addwfc	??_fillInTemp+3,f,c
  1671  001102  0E60               	movlw	low _asciiTemp
  1672  001104  2422               	addwf	??_fillInTemp+2,w,c
  1673  001106  6ED9               	movwf	fsr2l,c
  1674  001108  0E00               	movlw	high _asciiTemp
  1675  00110A  2023               	addwfc	??_fillInTemp+3,w,c
  1676  00110C  6EDA               	movwf	fsr2h,c
  1677  00110E  5029               	movf	fillInTemp@i_1143,w,c
  1678  001110  0D01               	mullw	1
  1679  001112  0E80               	movlw	low _temp_display_message
  1680  001114  24F3               	addwf	prodl,w,c
  1681  001116  6EE1               	movwf	fsr1l,c
  1682  001118  0E00               	movlw	high _temp_display_message
  1683  00111A  20F4               	addwfc	prodh,w,c
  1684  00111C  6EE2               	movwf	fsr1h,c
  1685  00111E  CFDF FFE7          	movff	indf2,indf1
  1686  001122  2A29               	incf	fillInTemp@i_1143,f,c
  1687  001124  D7DF               	goto	l2433
  1688  001126                     __end_of_fillInTemp:
  1689                           	opt stack 0
  1690                           tblptru	equ	0xFF8
  1691                           tblptrh	equ	0xFF7
  1692                           tblptrl	equ	0xFF6
  1693                           tablat	equ	0xFF5
  1694                           prodh	equ	0xFF4
  1695                           prodl	equ	0xFF3
  1696                           postinc0	equ	0xFEE
  1697                           wreg	equ	0xFE8
  1698                           indf1	equ	0xFE7
  1699                           postdec1	equ	0xFE5
  1700                           fsr1h	equ	0xFE2
  1701                           fsr1l	equ	0xFE1
  1702                           indf2	equ	0xFDF
  1703                           fsr2h	equ	0xFDA
  1704                           fsr2l	equ	0xFD9
  1705                           status	equ	0xFD8
  1706                           
  1707 ;; *************** function ___awmod *****************
  1708 ;; Defined at:
  1709 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  1710 ;; Parameters:    Size  Location     Type
  1711 ;;  dividend        2   17[COMRAM] int 
  1712 ;;  divisor         2   19[COMRAM] int 
  1713 ;; Auto vars:     Size  Location     Type
  1714 ;;  sign            1   22[COMRAM] unsigned char 
  1715 ;;  counter         1   21[COMRAM] unsigned char 
  1716 ;; Return value:  Size  Location     Type
  1717 ;;                  2   17[COMRAM] int 
  1718 ;; Registers used:
  1719 ;;		wreg, status,2, status,0
  1720 ;; Tracked objects:
  1721 ;;		On entry : 0/0
  1722 ;;		On exit  : 0/0
  1723 ;;		Unchanged: 0/0
  1724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1725 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1726 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1728 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1729 ;;Total ram usage:        6 bytes
  1730 ;; Hardware stack levels used:    1
  1731 ;; Hardware stack levels required when called:    2
  1732 ;; This function calls:
  1733 ;;		Nothing
  1734 ;; This function is called by:
  1735 ;;		_fillInTemp
  1736 ;; This function uses a non-reentrant model
  1737 ;;
  1738                           
  1739                           	psect	text6
  1740  001928                     __ptext6:
  1741                           	opt stack 0
  1742  001928                     ___awmod:
  1743                           	opt stack 26
  1744                           
  1745                           ;incstack = 0
  1746  001928  0E00               	movlw	0
  1747  00192A  6E17               	movwf	___awmod@sign,c
  1748  00192C  AE13               	btfss	___awmod@dividend+1,7,c
  1749  00192E  D006               	goto	l2305
  1750  001930  6C12               	negf	___awmod@dividend,c
  1751  001932  1E13               	comf	___awmod@dividend+1,f,c
  1752  001934  B0D8               	btfsc	status,0,c
  1753  001936  2A13               	incf	___awmod@dividend+1,f,c
  1754  001938  0E01               	movlw	1
  1755  00193A  6E17               	movwf	___awmod@sign,c
  1756  00193C                     l2305:
  1757  00193C  AE15               	btfss	___awmod@divisor+1,7,c
  1758  00193E  D004               	goto	l2309
  1759  001940  6C14               	negf	___awmod@divisor,c
  1760  001942  1E15               	comf	___awmod@divisor+1,f,c
  1761  001944  B0D8               	btfsc	status,0,c
  1762  001946  2A15               	incf	___awmod@divisor+1,f,c
  1763  001948                     l2309:
  1764  001948  5014               	movf	___awmod@divisor,w,c
  1765  00194A  1015               	iorwf	___awmod@divisor+1,w,c
  1766  00194C  B4D8               	btfsc	status,2,c
  1767  00194E  D018               	goto	l2325
  1768  001950  0E01               	movlw	1
  1769  001952  6E16               	movwf	___awmod@counter,c
  1770  001954  D004               	goto	l2315
  1771  001956                     l2313:
  1772  001956  90D8               	bcf	status,0,c
  1773  001958  3614               	rlcf	___awmod@divisor,f,c
  1774  00195A  3615               	rlcf	___awmod@divisor+1,f,c
  1775  00195C  2A16               	incf	___awmod@counter,f,c
  1776  00195E                     l2315:
  1777  00195E  AE15               	btfss	___awmod@divisor+1,7,c
  1778  001960  D7FA               	goto	l2313
  1779  001962                     l2317:
  1780  001962  5014               	movf	___awmod@divisor,w,c
  1781  001964  5C12               	subwf	___awmod@dividend,w,c
  1782  001966  5015               	movf	___awmod@divisor+1,w,c
  1783  001968  5813               	subwfb	___awmod@dividend+1,w,c
  1784  00196A  A0D8               	btfss	status,0,c
  1785  00196C  D004               	goto	l2321
  1786  00196E  5014               	movf	___awmod@divisor,w,c
  1787  001970  5E12               	subwf	___awmod@dividend,f,c
  1788  001972  5015               	movf	___awmod@divisor+1,w,c
  1789  001974  5A13               	subwfb	___awmod@dividend+1,f,c
  1790  001976                     l2321:
  1791  001976  90D8               	bcf	status,0,c
  1792  001978  3215               	rrcf	___awmod@divisor+1,f,c
  1793  00197A  3214               	rrcf	___awmod@divisor,f,c
  1794  00197C  2E16               	decfsz	___awmod@counter,f,c
  1795  00197E  D7F1               	goto	l2317
  1796  001980                     l2325:
  1797  001980  5017               	movf	___awmod@sign,w,c
  1798  001982  B4D8               	btfsc	status,2,c
  1799  001984  D004               	goto	l2329
  1800  001986  6C12               	negf	___awmod@dividend,c
  1801  001988  1E13               	comf	___awmod@dividend+1,f,c
  1802  00198A  B0D8               	btfsc	status,0,c
  1803  00198C  2A13               	incf	___awmod@dividend+1,f,c
  1804  00198E                     l2329:
  1805  00198E  C012  F012         	movff	___awmod@dividend,?___awmod
  1806  001992  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
  1807  001996  0012               	return	
  1808  001998                     __end_of___awmod:
  1809                           	opt stack 0
  1810                           tblptru	equ	0xFF8
  1811                           tblptrh	equ	0xFF7
  1812                           tblptrl	equ	0xFF6
  1813                           tablat	equ	0xFF5
  1814                           prodh	equ	0xFF4
  1815                           prodl	equ	0xFF3
  1816                           postinc0	equ	0xFEE
  1817                           wreg	equ	0xFE8
  1818                           indf1	equ	0xFE7
  1819                           postdec1	equ	0xFE5
  1820                           fsr1h	equ	0xFE2
  1821                           fsr1l	equ	0xFE1
  1822                           indf2	equ	0xFDF
  1823                           fsr2h	equ	0xFDA
  1824                           fsr2l	equ	0xFD9
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function ___awdiv *****************
  1828 ;; Defined at:
  1829 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  dividend        2   23[COMRAM] int 
  1832 ;;  divisor         2   25[COMRAM] int 
  1833 ;; Auto vars:     Size  Location     Type
  1834 ;;  quotient        2   29[COMRAM] int 
  1835 ;;  sign            1   28[COMRAM] unsigned char 
  1836 ;;  counter         1   27[COMRAM] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;                  2   23[COMRAM] int 
  1839 ;; Registers used:
  1840 ;;		wreg, status,2, status,0
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1846 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1847 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1849 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1850 ;;Total ram usage:        8 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    2
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_fillInTemp
  1857 ;; This function uses a non-reentrant model
  1858 ;;
  1859                           
  1860                           	psect	text7
  1861  00182E                     __ptext7:
  1862                           	opt stack 0
  1863  00182E                     ___awdiv:
  1864                           	opt stack 26
  1865                           
  1866                           ;incstack = 0
  1867  00182E  0E00               	movlw	0
  1868  001830  6E1D               	movwf	___awdiv@sign,c
  1869  001832  AE1B               	btfss	___awdiv@divisor+1,7,c
  1870  001834  D006               	goto	l2261
  1871  001836  6C1A               	negf	___awdiv@divisor,c
  1872  001838  1E1B               	comf	___awdiv@divisor+1,f,c
  1873  00183A  B0D8               	btfsc	status,0,c
  1874  00183C  2A1B               	incf	___awdiv@divisor+1,f,c
  1875  00183E  0E01               	movlw	1
  1876  001840  6E1D               	movwf	___awdiv@sign,c
  1877  001842                     l2261:
  1878  001842  AE19               	btfss	___awdiv@dividend+1,7,c
  1879  001844  D006               	goto	l2267
  1880  001846  6C18               	negf	___awdiv@dividend,c
  1881  001848  1E19               	comf	___awdiv@dividend+1,f,c
  1882  00184A  B0D8               	btfsc	status,0,c
  1883  00184C  2A19               	incf	___awdiv@dividend+1,f,c
  1884  00184E  0E01               	movlw	1
  1885  001850  1A1D               	xorwf	___awdiv@sign,f,c
  1886  001852                     l2267:
  1887  001852  0E00               	movlw	0
  1888  001854  6E1F               	movwf	___awdiv@quotient+1,c
  1889  001856  0E00               	movlw	0
  1890  001858  6E1E               	movwf	___awdiv@quotient,c
  1891  00185A  501A               	movf	___awdiv@divisor,w,c
  1892  00185C  101B               	iorwf	___awdiv@divisor+1,w,c
  1893  00185E  B4D8               	btfsc	status,2,c
  1894  001860  D01C               	goto	l2289
  1895  001862  0E01               	movlw	1
  1896  001864  6E1C               	movwf	___awdiv@counter,c
  1897  001866  D004               	goto	l2275
  1898  001868                     l2273:
  1899  001868  90D8               	bcf	status,0,c
  1900  00186A  361A               	rlcf	___awdiv@divisor,f,c
  1901  00186C  361B               	rlcf	___awdiv@divisor+1,f,c
  1902  00186E  2A1C               	incf	___awdiv@counter,f,c
  1903  001870                     l2275:
  1904  001870  AE1B               	btfss	___awdiv@divisor+1,7,c
  1905  001872  D7FA               	goto	l2273
  1906  001874                     l2277:
  1907  001874  90D8               	bcf	status,0,c
  1908  001876  361E               	rlcf	___awdiv@quotient,f,c
  1909  001878  361F               	rlcf	___awdiv@quotient+1,f,c
  1910  00187A  501A               	movf	___awdiv@divisor,w,c
  1911  00187C  5C18               	subwf	___awdiv@dividend,w,c
  1912  00187E  501B               	movf	___awdiv@divisor+1,w,c
  1913  001880  5819               	subwfb	___awdiv@dividend+1,w,c
  1914  001882  A0D8               	btfss	status,0,c
  1915  001884  D005               	goto	l2285
  1916  001886  501A               	movf	___awdiv@divisor,w,c
  1917  001888  5E18               	subwf	___awdiv@dividend,f,c
  1918  00188A  501B               	movf	___awdiv@divisor+1,w,c
  1919  00188C  5A19               	subwfb	___awdiv@dividend+1,f,c
  1920  00188E  801E               	bsf	___awdiv@quotient,0,c
  1921  001890                     l2285:
  1922  001890  90D8               	bcf	status,0,c
  1923  001892  321B               	rrcf	___awdiv@divisor+1,f,c
  1924  001894  321A               	rrcf	___awdiv@divisor,f,c
  1925  001896  2E1C               	decfsz	___awdiv@counter,f,c
  1926  001898  D7ED               	goto	l2277
  1927  00189A                     l2289:
  1928  00189A  501D               	movf	___awdiv@sign,w,c
  1929  00189C  B4D8               	btfsc	status,2,c
  1930  00189E  D004               	goto	l2293
  1931  0018A0  6C1E               	negf	___awdiv@quotient,c
  1932  0018A2  1E1F               	comf	___awdiv@quotient+1,f,c
  1933  0018A4  B0D8               	btfsc	status,0,c
  1934  0018A6  2A1F               	incf	___awdiv@quotient+1,f,c
  1935  0018A8                     l2293:
  1936  0018A8  C01E  F018         	movff	___awdiv@quotient,?___awdiv
  1937  0018AC  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
  1938  0018B0  0012               	return	
  1939  0018B2                     __end_of___awdiv:
  1940                           	opt stack 0
  1941                           tblptru	equ	0xFF8
  1942                           tblptrh	equ	0xFF7
  1943                           tblptrl	equ	0xFF6
  1944                           tablat	equ	0xFF5
  1945                           prodh	equ	0xFF4
  1946                           prodl	equ	0xFF3
  1947                           postinc0	equ	0xFEE
  1948                           wreg	equ	0xFE8
  1949                           indf1	equ	0xFE7
  1950                           postdec1	equ	0xFE5
  1951                           fsr1h	equ	0xFE2
  1952                           fsr1l	equ	0xFE1
  1953                           indf2	equ	0xFDF
  1954                           fsr2h	equ	0xFDA
  1955                           fsr2l	equ	0xFD9
  1956                           status	equ	0xFD8
  1957                           
  1958 ;; *************** function _calculateTemp *****************
  1959 ;; Defined at:
  1960 ;;		line 90 in file "temperature.c"
  1961 ;; Parameters:    Size  Location     Type
  1962 ;;  plus            2   15[BANK0 ] int 
  1963 ;;  minus           2   17[BANK0 ] int 
  1964 ;; Auto vars:     Size  Location     Type
  1965 ;;  temp            2   22[BANK0 ] int 
  1966 ;; Return value:  Size  Location     Type
  1967 ;;                  2   15[BANK0 ] int 
  1968 ;; Registers used:
  1969 ;;		wreg, status,2, status,0, cstack
  1970 ;; Tracked objects:
  1971 ;;		On entry : 0/0
  1972 ;;		On exit  : 0/0
  1973 ;;		Unchanged: 0/0
  1974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1975 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1976 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1977 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1978 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1979 ;;Total ram usage:       11 bytes
  1980 ;; Hardware stack levels used:    1
  1981 ;; Hardware stack levels required when called:    4
  1982 ;; This function calls:
  1983 ;;		___awtoft
  1984 ;;		___ftdiv
  1985 ;;		___ftmul
  1986 ;;		___fttol
  1987 ;; This function is called by:
  1988 ;;		_makeTempMessage
  1989 ;; This function uses a non-reentrant model
  1990 ;;
  1991                           
  1992                           	psect	text8
  1993  00150E                     __ptext8:
  1994                           	opt stack 0
  1995  00150E                     _calculateTemp:
  1996                           	opt stack 25
  1997                           
  1998                           ;temperature.c: 91: signed int temp;
  1999                           ;temperature.c: 93: temp = plus - minus;
  2000                           
  2001                           ;incstack = 0
  2002  00150E  C0A5  F03C         	movff	calculateTemp@minus,??_calculateTemp
  2003  001512  C0A6  F03D         	movff	calculateTemp@minus+1,??_calculateTemp+1
  2004  001516  1E3C               	comf	??_calculateTemp,f,c
  2005  001518  1E3D               	comf	??_calculateTemp+1,f,c
  2006  00151A  4A3C               	infsnz	??_calculateTemp,f,c
  2007  00151C  2A3D               	incf	??_calculateTemp+1,f,c
  2008  00151E  0100               	movlb	0	; () banked
  2009  001520  51A3               	movf	calculateTemp@plus& (0+255),w,b
  2010  001522  243C               	addwf	??_calculateTemp,w,c
  2011  001524  0100               	movlb	0	; () banked
  2012  001526  6FAA               	movwf	calculateTemp@temp& (0+255),b
  2013  001528  0100               	movlb	0	; () banked
  2014  00152A  51A4               	movf	(calculateTemp@plus+1)& (0+255),w,b
  2015  00152C  203D               	addwfc	??_calculateTemp+1,w,c
  2016  00152E  0100               	movlb	0	; () banked
  2017  001530  6FAB               	movwf	(calculateTemp@temp+1)& (0+255),b
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;temperature.c: 95: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  2021  001532  0EE0               	movlw	224
  2022  001534  6E30               	movwf	___ftmul@f2,c
  2023  001536  0E2B               	movlw	43
  2024  001538  6E31               	movwf	___ftmul@f2+1,c
  2025  00153A  0E45               	movlw	69
  2026  00153C  6E32               	movwf	___ftmul@f2+2,c
  2027  00153E  0E00               	movlw	0
  2028  001540  6E21               	movwf	___ftdiv@f2,c
  2029  001542  0E80               	movlw	128
  2030  001544  6E22               	movwf	___ftdiv@f2+1,c
  2031  001546  0E44               	movlw	68
  2032  001548  6E23               	movwf	___ftdiv@f2+2,c
  2033  00154A  C0AA  F01A         	movff	calculateTemp@temp,___awtoft@c
  2034  00154E  C0AB  F01B         	movff	calculateTemp@temp+1,___awtoft@c+1
  2035  001552  ECB6  F00D         	call	___awtoft	;wreg free
  2036  001556  C01A  F01E         	movff	?___awtoft,___ftdiv@f1
  2037  00155A  C01B  F01F         	movff	?___awtoft+1,___ftdiv@f1+1
  2038  00155E  C01C  F020         	movff	?___awtoft+2,___ftdiv@f1+2
  2039  001562  ECAF  F009         	call	___ftdiv	;wreg free
  2040  001566  C01E  F02D         	movff	?___ftdiv,___ftmul@f1
  2041  00156A  C01F  F02E         	movff	?___ftdiv+1,___ftmul@f1+1
  2042  00156E  C020  F02F         	movff	?___ftdiv+2,___ftmul@f1+2
  2043  001572  EC35  F009         	call	___ftmul	;wreg free
  2044  001576  C02D  F0A7         	movff	?___ftmul,_calculateTemp$1935
  2045  00157A  C02E  F0A8         	movff	?___ftmul+1,_calculateTemp$1935+1
  2046  00157E  C02F  F0A9         	movff	?___ftmul+2,_calculateTemp$1935+2
  2047                           
  2048                           ;temperature.c: 95: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  2049  001582  0E00               	movlw	0
  2050  001584  6E21               	movwf	___ftdiv@f2,c
  2051  001586  0E20               	movlw	32
  2052  001588  6E22               	movwf	___ftdiv@f2+1,c
  2053  00158A  0E41               	movlw	65
  2054  00158C  6E23               	movwf	___ftdiv@f2+2,c
  2055  00158E  C0A7  F01E         	movff	_calculateTemp$1935,___ftdiv@f1
  2056  001592  C0A8  F01F         	movff	_calculateTemp$1935+1,___ftdiv@f1+1
  2057  001596  C0A9  F020         	movff	_calculateTemp$1935+2,___ftdiv@f1+2
  2058  00159A  ECAF  F009         	call	___ftdiv	;wreg free
  2059  00159E  C01E  F094         	movff	?___ftdiv,___fttol@f1
  2060  0015A2  C01F  F095         	movff	?___ftdiv+1,___fttol@f1+1
  2061  0015A6  C020  F096         	movff	?___ftdiv+2,___fttol@f1+2
  2062  0015AA  EC93  F008         	call	___fttol	;wreg free
  2063  0015AE  C094  F0AA         	movff	?___fttol,calculateTemp@temp
  2064  0015B2  C095  F0AB         	movff	?___fttol+1,calculateTemp@temp+1
  2065                           
  2066                           ;temperature.c: 97: return temp;
  2067  0015B6  C0AA  F0A3         	movff	calculateTemp@temp,?_calculateTemp
  2068  0015BA  C0AB  F0A4         	movff	calculateTemp@temp+1,?_calculateTemp+1
  2069  0015BE  0012               	return	
  2070  0015C0                     __end_of_calculateTemp:
  2071                           	opt stack 0
  2072                           tblptru	equ	0xFF8
  2073                           tblptrh	equ	0xFF7
  2074                           tblptrl	equ	0xFF6
  2075                           tablat	equ	0xFF5
  2076                           prodh	equ	0xFF4
  2077                           prodl	equ	0xFF3
  2078                           postinc0	equ	0xFEE
  2079                           wreg	equ	0xFE8
  2080                           indf1	equ	0xFE7
  2081                           postdec1	equ	0xFE5
  2082                           fsr1h	equ	0xFE2
  2083                           fsr1l	equ	0xFE1
  2084                           indf2	equ	0xFDF
  2085                           fsr2h	equ	0xFDA
  2086                           fsr2l	equ	0xFD9
  2087                           status	equ	0xFD8
  2088                           
  2089 ;; *************** function ___fttol *****************
  2090 ;; Defined at:
  2091 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  f1              3    0[BANK0 ] float 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  lval            4   10[BANK0 ] unsigned long 
  2096 ;;  exp1            1   14[BANK0 ] unsigned char 
  2097 ;;  sign1           1    9[BANK0 ] unsigned char 
  2098 ;; Return value:  Size  Location     Type
  2099 ;;                  4    0[BANK0 ] long 
  2100 ;; Registers used:
  2101 ;;		wreg, status,2, status,0
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2107 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2108 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2109 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2110 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2111 ;;Total ram usage:       15 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; Hardware stack levels required when called:    2
  2114 ;; This function calls:
  2115 ;;		Nothing
  2116 ;; This function is called by:
  2117 ;;		_calculateTemp
  2118 ;; This function uses a non-reentrant model
  2119 ;;
  2120                           
  2121                           	psect	text9
  2122  001126                     __ptext9:
  2123                           	opt stack 0
  2124  001126                     ___fttol:
  2125                           	opt stack 26
  2126                           
  2127                           ;incstack = 0
  2128  001126  C096  F098         	movff	___fttol@f1+2,??___fttol
  2129  00112A  0100               	movlb	0	; () banked
  2130  00112C  6B99               	clrf	(??___fttol+1)& (0+255),b
  2131  00112E  6B9A               	clrf	(??___fttol+2)& (0+255),b
  2132  001130  0100               	movlb	0	; () banked
  2133  001132  3595               	rlcf	(___fttol@f1+1)& (0+255),w,b
  2134  001134  0100               	movlb	0	; () banked
  2135  001136  3798               	rlcf	??___fttol& (0+255),f,b
  2136  001138  E301               	bnc	u1731
  2137  00113A  8199               	bsf	(??___fttol+1)& (0+255),0,b
  2138  00113C                     u1731:
  2139  00113C  0100               	movlb	0	; () banked
  2140  00113E  5198               	movf	??___fttol& (0+255),w,b
  2141  001140  0100               	movlb	0	; () banked
  2142  001142  6FA2               	movwf	___fttol@exp1& (0+255),b
  2143  001144  0100               	movlb	0	; () banked
  2144  001146  51A2               	movf	___fttol@exp1& (0+255),w,b
  2145  001148  A4D8               	btfss	status,2,c
  2146  00114A  D00A               	goto	l2351
  2147                           
  2148                           ; BSR set to: 0
  2149  00114C  0E00               	movlw	0
  2150  00114E  0100               	movlb	0	; () banked
  2151  001150  6F94               	movwf	?___fttol& (0+255),b
  2152  001152  0E00               	movlw	0
  2153  001154  6F95               	movwf	(?___fttol+1)& (0+255),b
  2154  001156  0E00               	movlw	0
  2155  001158  6F96               	movwf	(?___fttol+2)& (0+255),b
  2156  00115A  0E00               	movlw	0
  2157  00115C  6F97               	movwf	(?___fttol+3)& (0+255),b
  2158                           
  2159                           ; BSR set to: 0
  2160  00115E  0012               	return	
  2161  001160                     l2351:
  2162                           
  2163                           ; BSR set to: 0
  2164  001160  0E17               	movlw	23
  2165  001162  0100               	movlb	0	; () banked
  2166  001164  6F98               	movwf	??___fttol& (0+255),b
  2167  001166  C094  F099         	movff	___fttol@f1,??___fttol+1
  2168  00116A  C095  F09A         	movff	___fttol@f1+1,??___fttol+2
  2169  00116E  C096  F09B         	movff	___fttol@f1+2,??___fttol+3
  2170  001172  0100               	movlb	0	; () banked
  2171  001174  2998               	incf	??___fttol& (0+255),w,b
  2172  001176  0100               	movlb	0	; () banked
  2173  001178  6F9C               	movwf	(??___fttol+4)& (0+255),b
  2174  00117A  D005               	goto	u1750
  2175  00117C                     u1755:
  2176  00117C  0100               	movlb	0	; () banked
  2177  00117E  90D8               	bcf	status,0,c
  2178  001180  339B               	rrcf	(??___fttol+3)& (0+255),f,b
  2179  001182  339A               	rrcf	(??___fttol+2)& (0+255),f,b
  2180  001184  3399               	rrcf	(??___fttol+1)& (0+255),f,b
  2181  001186                     u1750:
  2182  001186  0100               	movlb	0	; () banked
  2183  001188  2F9C               	decfsz	(??___fttol+4)& (0+255),f,b
  2184  00118A  D7F8               	goto	u1755
  2185  00118C  0100               	movlb	0	; () banked
  2186  00118E  5199               	movf	(??___fttol+1)& (0+255),w,b
  2187  001190  0100               	movlb	0	; () banked
  2188  001192  6F9D               	movwf	___fttol@sign1& (0+255),b
  2189                           
  2190                           ; BSR set to: 0
  2191  001194  0100               	movlb	0	; () banked
  2192  001196  8F95               	bsf	(___fttol@f1+1)& (0+255),7,b
  2193                           
  2194                           ; BSR set to: 0
  2195  001198  0EFF               	movlw	255
  2196  00119A  0100               	movlb	0	; () banked
  2197  00119C  1794               	andwf	___fttol@f1& (0+255),f,b
  2198  00119E  0EFF               	movlw	255
  2199  0011A0  0100               	movlb	0	; () banked
  2200  0011A2  1795               	andwf	(___fttol@f1+1)& (0+255),f,b
  2201  0011A4  0E00               	movlw	0
  2202  0011A6  0100               	movlb	0	; () banked
  2203  0011A8  1796               	andwf	(___fttol@f1+2)& (0+255),f,b
  2204                           
  2205                           ; BSR set to: 0
  2206  0011AA  0100               	movlb	0	; () banked
  2207  0011AC  5194               	movf	___fttol@f1& (0+255),w,b
  2208  0011AE  0100               	movlb	0	; () banked
  2209  0011B0  6F9E               	movwf	___fttol@lval& (0+255),b
  2210  0011B2  0100               	movlb	0	; () banked
  2211  0011B4  5195               	movf	(___fttol@f1+1)& (0+255),w,b
  2212  0011B6  0100               	movlb	0	; () banked
  2213  0011B8  6F9F               	movwf	(___fttol@lval+1)& (0+255),b
  2214  0011BA  0100               	movlb	0	; () banked
  2215  0011BC  5196               	movf	(___fttol@f1+2)& (0+255),w,b
  2216  0011BE  0100               	movlb	0	; () banked
  2217  0011C0  6FA0               	movwf	(___fttol@lval+2)& (0+255),b
  2218  0011C2  0100               	movlb	0	; () banked
  2219  0011C4  6BA1               	clrf	(___fttol@lval+3)& (0+255),b
  2220                           
  2221                           ; BSR set to: 0
  2222  0011C6  0E8E               	movlw	142
  2223  0011C8  0100               	movlb	0	; () banked
  2224  0011CA  5FA2               	subwf	___fttol@exp1& (0+255),f,b
  2225                           
  2226                           ; BSR set to: 0
  2227  0011CC  0100               	movlb	0	; () banked
  2228  0011CE  AFA2               	btfss	___fttol@exp1& (0+255),7,b
  2229  0011D0  D01A               	goto	l2373
  2230                           
  2231                           ; BSR set to: 0
  2232  0011D2  0100               	movlb	0	; () banked
  2233  0011D4  51A2               	movf	___fttol@exp1& (0+255),w,b
  2234  0011D6  0A80               	xorlw	128
  2235  0011D8  0F8F               	addlw	143
  2236  0011DA  B0D8               	btfsc	status,0,c
  2237  0011DC  D00A               	goto	l2369
  2238                           
  2239                           ; BSR set to: 0
  2240  0011DE  0E00               	movlw	0
  2241  0011E0  0100               	movlb	0	; () banked
  2242  0011E2  6F94               	movwf	?___fttol& (0+255),b
  2243  0011E4  0E00               	movlw	0
  2244  0011E6  6F95               	movwf	(?___fttol+1)& (0+255),b
  2245  0011E8  0E00               	movlw	0
  2246  0011EA  6F96               	movwf	(?___fttol+2)& (0+255),b
  2247  0011EC  0E00               	movlw	0
  2248  0011EE  6F97               	movwf	(?___fttol+3)& (0+255),b
  2249                           
  2250                           ; BSR set to: 0
  2251  0011F0  0012               	return	
  2252  0011F2                     l2369:
  2253                           
  2254                           ; BSR set to: 0
  2255  0011F2  0100               	movlb	0	; () banked
  2256  0011F4  90D8               	bcf	status,0,c
  2257  0011F6  33A1               	rrcf	(___fttol@lval+3)& (0+255),f,b
  2258  0011F8  33A0               	rrcf	(___fttol@lval+2)& (0+255),f,b
  2259  0011FA  339F               	rrcf	(___fttol@lval+1)& (0+255),f,b
  2260  0011FC  339E               	rrcf	___fttol@lval& (0+255),f,b
  2261                           
  2262                           ; BSR set to: 0
  2263  0011FE  0100               	movlb	0	; () banked
  2264  001200  3FA2               	incfsz	___fttol@exp1& (0+255),f,b
  2265  001202  D7F7               	goto	l2369
  2266                           
  2267                           ; BSR set to: 0
  2268  001204  D01B               	goto	l2383
  2269  001206                     l2373:
  2270                           
  2271                           ; BSR set to: 0
  2272  001206  0E17               	movlw	23
  2273  001208  0100               	movlb	0	; () banked
  2274  00120A  65A2               	cpfsgt	___fttol@exp1& (0+255),b
  2275  00120C  D012               	goto	l2381
  2276                           
  2277                           ; BSR set to: 0
  2278  00120E  0E00               	movlw	0
  2279  001210  0100               	movlb	0	; () banked
  2280  001212  6F94               	movwf	?___fttol& (0+255),b
  2281  001214  0E00               	movlw	0
  2282  001216  6F95               	movwf	(?___fttol+1)& (0+255),b
  2283  001218  0E00               	movlw	0
  2284  00121A  6F96               	movwf	(?___fttol+2)& (0+255),b
  2285  00121C  0E00               	movlw	0
  2286  00121E  6F97               	movwf	(?___fttol+3)& (0+255),b
  2287                           
  2288                           ; BSR set to: 0
  2289  001220  0012               	return	
  2290  001222                     l2379:
  2291                           
  2292                           ; BSR set to: 0
  2293  001222  0100               	movlb	0	; () banked
  2294  001224  90D8               	bcf	status,0,c
  2295  001226  379E               	rlcf	___fttol@lval& (0+255),f,b
  2296  001228  379F               	rlcf	(___fttol@lval+1)& (0+255),f,b
  2297  00122A  37A0               	rlcf	(___fttol@lval+2)& (0+255),f,b
  2298  00122C  37A1               	rlcf	(___fttol@lval+3)& (0+255),f,b
  2299  00122E  0100               	movlb	0	; () banked
  2300  001230  07A2               	decf	___fttol@exp1& (0+255),f,b
  2301  001232                     l2381:
  2302                           
  2303                           ; BSR set to: 0
  2304  001232  0100               	movlb	0	; () banked
  2305  001234  51A2               	movf	___fttol@exp1& (0+255),w,b
  2306  001236  0100               	movlb	0	; () banked
  2307  001238  A4D8               	btfss	status,2,c
  2308  00123A  D7F3               	goto	l2379
  2309  00123C                     l2383:
  2310                           
  2311                           ; BSR set to: 0
  2312  00123C  0100               	movlb	0	; () banked
  2313  00123E  519D               	movf	___fttol@sign1& (0+255),w,b
  2314  001240  0100               	movlb	0	; () banked
  2315  001242  B4D8               	btfsc	status,2,c
  2316  001244  D009               	goto	l2387
  2317                           
  2318                           ; BSR set to: 0
  2319  001246  0100               	movlb	0	; () banked
  2320  001248  1FA1               	comf	(___fttol@lval+3)& (0+255),f,b
  2321  00124A  1FA0               	comf	(___fttol@lval+2)& (0+255),f,b
  2322  00124C  1F9F               	comf	(___fttol@lval+1)& (0+255),f,b
  2323  00124E  6D9E               	negf	___fttol@lval& (0+255),b
  2324  001250  0E00               	movlw	0
  2325  001252  239F               	addwfc	(___fttol@lval+1)& (0+255),f,b
  2326  001254  23A0               	addwfc	(___fttol@lval+2)& (0+255),f,b
  2327  001256  23A1               	addwfc	(___fttol@lval+3)& (0+255),f,b
  2328  001258                     l2387:
  2329                           
  2330                           ; BSR set to: 0
  2331  001258  C09E  F094         	movff	___fttol@lval,?___fttol
  2332  00125C  C09F  F095         	movff	___fttol@lval+1,?___fttol+1
  2333  001260  C0A0  F096         	movff	___fttol@lval+2,?___fttol+2
  2334  001264  C0A1  F097         	movff	___fttol@lval+3,?___fttol+3
  2335  001268  0012               	return	
  2336  00126A                     __end_of___fttol:
  2337                           	opt stack 0
  2338                           tblptru	equ	0xFF8
  2339                           tblptrh	equ	0xFF7
  2340                           tblptrl	equ	0xFF6
  2341                           tablat	equ	0xFF5
  2342                           prodh	equ	0xFF4
  2343                           prodl	equ	0xFF3
  2344                           postinc0	equ	0xFEE
  2345                           wreg	equ	0xFE8
  2346                           indf1	equ	0xFE7
  2347                           postdec1	equ	0xFE5
  2348                           fsr1h	equ	0xFE2
  2349                           fsr1l	equ	0xFE1
  2350                           indf2	equ	0xFDF
  2351                           fsr2h	equ	0xFDA
  2352                           fsr2l	equ	0xFD9
  2353                           status	equ	0xFD8
  2354                           
  2355 ;; *************** function ___ftmul *****************
  2356 ;; Defined at:
  2357 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  2358 ;; Parameters:    Size  Location     Type
  2359 ;;  f1              3   44[COMRAM] float 
  2360 ;;  f2              3   47[COMRAM] float 
  2361 ;; Auto vars:     Size  Location     Type
  2362 ;;  f3_as_produc    3   54[COMRAM] unsigned um
  2363 ;;  sign            1   58[COMRAM] unsigned char 
  2364 ;;  cntr            1   57[COMRAM] unsigned char 
  2365 ;;  exp             1   53[COMRAM] unsigned char 
  2366 ;; Return value:  Size  Location     Type
  2367 ;;                  3   44[COMRAM] float 
  2368 ;; Registers used:
  2369 ;;		wreg, status,2, status,0, cstack
  2370 ;; Tracked objects:
  2371 ;;		On entry : 0/0
  2372 ;;		On exit  : 0/0
  2373 ;;		Unchanged: 0/0
  2374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2375 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2376 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2377 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2378 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2379 ;;Total ram usage:       15 bytes
  2380 ;; Hardware stack levels used:    1
  2381 ;; Hardware stack levels required when called:    3
  2382 ;; This function calls:
  2383 ;;		___ftpack
  2384 ;; This function is called by:
  2385 ;;		_calculateTemp
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           	psect	text10
  2390  00126A                     __ptext10:
  2391                           	opt stack 0
  2392  00126A                     ___ftmul:
  2393                           	opt stack 25
  2394                           
  2395                           ; BSR set to: 0
  2396                           ;incstack = 0
  2397  00126A  C02F  F033         	movff	___ftmul@f1+2,??___ftmul
  2398  00126E  6A34               	clrf	(??___ftmul+1)& (0+255),c
  2399  001270  6A35               	clrf	(??___ftmul+2)& (0+255),c
  2400  001272  342E               	rlcf	___ftmul@f1+1,w,c
  2401  001274  3633               	rlcf	??___ftmul& (0+255),f,c
  2402  001276  E301               	bnc	u1541
  2403  001278  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  2404  00127A                     u1541:
  2405  00127A  5033               	movf	??___ftmul,w,c
  2406  00127C  6E36               	movwf	___ftmul@exp,c
  2407  00127E  5036               	movf	___ftmul@exp,w,c
  2408  001280  A4D8               	btfss	status,2,c
  2409  001282  D007               	goto	l2211
  2410  001284  0E00               	movlw	0
  2411  001286  6E2D               	movwf	?___ftmul,c
  2412  001288  0E00               	movlw	0
  2413  00128A  6E2E               	movwf	?___ftmul+1,c
  2414  00128C  0E00               	movlw	0
  2415  00128E  6E2F               	movwf	?___ftmul+2,c
  2416  001290  0012               	return	
  2417  001292                     l2211:
  2418  001292  C032  F033         	movff	___ftmul@f2+2,??___ftmul
  2419  001296  6A34               	clrf	(??___ftmul+1)& (0+255),c
  2420  001298  6A35               	clrf	(??___ftmul+2)& (0+255),c
  2421  00129A  3431               	rlcf	___ftmul@f2+1,w,c
  2422  00129C  3633               	rlcf	??___ftmul& (0+255),f,c
  2423  00129E  E301               	bnc	u1561
  2424  0012A0  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  2425  0012A2                     u1561:
  2426  0012A2  5033               	movf	??___ftmul,w,c
  2427  0012A4  6E3B               	movwf	___ftmul@sign,c
  2428  0012A6  503B               	movf	___ftmul@sign,w,c
  2429  0012A8  A4D8               	btfss	status,2,c
  2430  0012AA  D007               	goto	l2217
  2431  0012AC  0E00               	movlw	0
  2432  0012AE  6E2D               	movwf	?___ftmul,c
  2433  0012B0  0E00               	movlw	0
  2434  0012B2  6E2E               	movwf	?___ftmul+1,c
  2435  0012B4  0E00               	movlw	0
  2436  0012B6  6E2F               	movwf	?___ftmul+2,c
  2437  0012B8  0012               	return	
  2438  0012BA                     l2217:
  2439  0012BA  503B               	movf	___ftmul@sign,w,c
  2440  0012BC  0F7B               	addlw	123
  2441  0012BE  2636               	addwf	___ftmul@exp,f,c
  2442  0012C0  C02F  F03B         	movff	___ftmul@f1+2,___ftmul@sign
  2443  0012C4  5032               	movf	___ftmul@f2+2,w,c
  2444  0012C6  1A3B               	xorwf	___ftmul@sign,f,c
  2445  0012C8  0E80               	movlw	128
  2446  0012CA  163B               	andwf	___ftmul@sign,f,c
  2447  0012CC  8E2E               	bsf	___ftmul@f1+1,7,c
  2448  0012CE  8E31               	bsf	___ftmul@f2+1,7,c
  2449  0012D0  0EFF               	movlw	255
  2450  0012D2  1630               	andwf	___ftmul@f2,f,c
  2451  0012D4  0EFF               	movlw	255
  2452  0012D6  1631               	andwf	___ftmul@f2+1,f,c
  2453  0012D8  0E00               	movlw	0
  2454  0012DA  1632               	andwf	___ftmul@f2+2,f,c
  2455  0012DC  0E00               	movlw	0
  2456  0012DE  6E37               	movwf	___ftmul@f3_as_product,c
  2457  0012E0  0E00               	movlw	0
  2458  0012E2  6E38               	movwf	___ftmul@f3_as_product+1,c
  2459  0012E4  0E00               	movlw	0
  2460  0012E6  6E39               	movwf	___ftmul@f3_as_product+2,c
  2461  0012E8  0E07               	movlw	7
  2462  0012EA  6E3A               	movwf	___ftmul@cntr,c
  2463  0012EC                     l2231:
  2464  0012EC  A02D               	btfss	___ftmul@f1,0,c
  2465  0012EE  D006               	goto	l2235
  2466  0012F0  5030               	movf	___ftmul@f2,w,c
  2467  0012F2  2637               	addwf	___ftmul@f3_as_product,f,c
  2468  0012F4  5031               	movf	___ftmul@f2+1,w,c
  2469  0012F6  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  2470  0012F8  5032               	movf	___ftmul@f2+2,w,c
  2471  0012FA  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  2472  0012FC                     l2235:
  2473  0012FC  90D8               	bcf	status,0,c
  2474  0012FE  322F               	rrcf	___ftmul@f1+2,f,c
  2475  001300  322E               	rrcf	___ftmul@f1+1,f,c
  2476  001302  322D               	rrcf	___ftmul@f1,f,c
  2477  001304  90D8               	bcf	status,0,c
  2478  001306  3630               	rlcf	___ftmul@f2,f,c
  2479  001308  3631               	rlcf	___ftmul@f2+1,f,c
  2480  00130A  3632               	rlcf	___ftmul@f2+2,f,c
  2481  00130C  2E3A               	decfsz	___ftmul@cntr,f,c
  2482  00130E  D7EE               	goto	l2231
  2483  001310  0E09               	movlw	9
  2484  001312  6E3A               	movwf	___ftmul@cntr,c
  2485  001314                     l2241:
  2486  001314  A02D               	btfss	___ftmul@f1,0,c
  2487  001316  D006               	goto	l2245
  2488  001318  5030               	movf	___ftmul@f2,w,c
  2489  00131A  2637               	addwf	___ftmul@f3_as_product,f,c
  2490  00131C  5031               	movf	___ftmul@f2+1,w,c
  2491  00131E  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  2492  001320  5032               	movf	___ftmul@f2+2,w,c
  2493  001322  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  2494  001324                     l2245:
  2495  001324  90D8               	bcf	status,0,c
  2496  001326  322F               	rrcf	___ftmul@f1+2,f,c
  2497  001328  322E               	rrcf	___ftmul@f1+1,f,c
  2498  00132A  322D               	rrcf	___ftmul@f1,f,c
  2499  00132C  90D8               	bcf	status,0,c
  2500  00132E  3239               	rrcf	___ftmul@f3_as_product+2,f,c
  2501  001330  3238               	rrcf	___ftmul@f3_as_product+1,f,c
  2502  001332  3237               	rrcf	___ftmul@f3_as_product,f,c
  2503  001334  2E3A               	decfsz	___ftmul@cntr,f,c
  2504  001336  D7EE               	goto	l2241
  2505  001338  C037  F012         	movff	___ftmul@f3_as_product,___ftpack@arg
  2506  00133C  C038  F013         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  2507  001340  C039  F014         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  2508  001344  C036  F015         	movff	___ftmul@exp,___ftpack@exp
  2509  001348  C03B  F016         	movff	___ftmul@sign,___ftpack@sign
  2510  00134C  ECE0  F00A         	call	___ftpack	;wreg free
  2511  001350  C012  F02D         	movff	?___ftpack,?___ftmul
  2512  001354  C013  F02E         	movff	?___ftpack+1,?___ftmul+1
  2513  001358  C014  F02F         	movff	?___ftpack+2,?___ftmul+2
  2514  00135C  0012               	return	
  2515  00135E                     __end_of___ftmul:
  2516                           	opt stack 0
  2517                           tblptru	equ	0xFF8
  2518                           tblptrh	equ	0xFF7
  2519                           tblptrl	equ	0xFF6
  2520                           tablat	equ	0xFF5
  2521                           prodh	equ	0xFF4
  2522                           prodl	equ	0xFF3
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           indf1	equ	0xFE7
  2526                           postdec1	equ	0xFE5
  2527                           fsr1h	equ	0xFE2
  2528                           fsr1l	equ	0xFE1
  2529                           indf2	equ	0xFDF
  2530                           fsr2h	equ	0xFDA
  2531                           fsr2l	equ	0xFD9
  2532                           status	equ	0xFD8
  2533                           
  2534 ;; *************** function ___ftdiv *****************
  2535 ;; Defined at:
  2536 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  2537 ;; Parameters:    Size  Location     Type
  2538 ;;  f1              3   29[COMRAM] float 
  2539 ;;  f2              3   32[COMRAM] float 
  2540 ;; Auto vars:     Size  Location     Type
  2541 ;;  f3              3   39[COMRAM] float 
  2542 ;;  sign            1   43[COMRAM] unsigned char 
  2543 ;;  exp             1   42[COMRAM] unsigned char 
  2544 ;;  cntr            1   38[COMRAM] unsigned char 
  2545 ;; Return value:  Size  Location     Type
  2546 ;;                  3   29[COMRAM] float 
  2547 ;; Registers used:
  2548 ;;		wreg, status,2, status,0, cstack
  2549 ;; Tracked objects:
  2550 ;;		On entry : 0/0
  2551 ;;		On exit  : 0/0
  2552 ;;		Unchanged: 0/0
  2553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2554 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2555 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2556 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2557 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2558 ;;Total ram usage:       15 bytes
  2559 ;; Hardware stack levels used:    1
  2560 ;; Hardware stack levels required when called:    3
  2561 ;; This function calls:
  2562 ;;		___ftpack
  2563 ;; This function is called by:
  2564 ;;		_calculateTemp
  2565 ;; This function uses a non-reentrant model
  2566 ;;
  2567                           
  2568                           	psect	text11
  2569  00135E                     __ptext11:
  2570                           	opt stack 0
  2571  00135E                     ___ftdiv:
  2572                           	opt stack 25
  2573                           
  2574                           ;incstack = 0
  2575  00135E  C020  F024         	movff	___ftdiv@f1+2,??___ftdiv
  2576  001362  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  2577  001364  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  2578  001366  341F               	rlcf	___ftdiv@f1+1,w,c
  2579  001368  3624               	rlcf	??___ftdiv& (0+255),f,c
  2580  00136A  E301               	bnc	u1491
  2581  00136C  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  2582  00136E                     u1491:
  2583  00136E  5024               	movf	??___ftdiv,w,c
  2584  001370  6E2B               	movwf	___ftdiv@exp,c
  2585  001372  502B               	movf	___ftdiv@exp,w,c
  2586  001374  A4D8               	btfss	status,2,c
  2587  001376  D007               	goto	l2165
  2588  001378  0E00               	movlw	0
  2589  00137A  6E1E               	movwf	?___ftdiv,c
  2590  00137C  0E00               	movlw	0
  2591  00137E  6E1F               	movwf	?___ftdiv+1,c
  2592  001380  0E00               	movlw	0
  2593  001382  6E20               	movwf	?___ftdiv+2,c
  2594  001384  0012               	return	
  2595  001386                     l2165:
  2596  001386  C023  F024         	movff	___ftdiv@f2+2,??___ftdiv
  2597  00138A  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  2598  00138C  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  2599  00138E  3422               	rlcf	___ftdiv@f2+1,w,c
  2600  001390  3624               	rlcf	??___ftdiv& (0+255),f,c
  2601  001392  E301               	bnc	u1511
  2602  001394  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  2603  001396                     u1511:
  2604  001396  5024               	movf	??___ftdiv,w,c
  2605  001398  6E2C               	movwf	___ftdiv@sign,c
  2606  00139A  502C               	movf	___ftdiv@sign,w,c
  2607  00139C  A4D8               	btfss	status,2,c
  2608  00139E  D007               	goto	l2171
  2609  0013A0  0E00               	movlw	0
  2610  0013A2  6E1E               	movwf	?___ftdiv,c
  2611  0013A4  0E00               	movlw	0
  2612  0013A6  6E1F               	movwf	?___ftdiv+1,c
  2613  0013A8  0E00               	movlw	0
  2614  0013AA  6E20               	movwf	?___ftdiv+2,c
  2615  0013AC  0012               	return	
  2616  0013AE                     l2171:
  2617  0013AE  0E00               	movlw	0
  2618  0013B0  6E28               	movwf	___ftdiv@f3,c
  2619  0013B2  0E00               	movlw	0
  2620  0013B4  6E29               	movwf	___ftdiv@f3+1,c
  2621  0013B6  0E00               	movlw	0
  2622  0013B8  6E2A               	movwf	___ftdiv@f3+2,c
  2623  0013BA  502C               	movf	___ftdiv@sign,w,c
  2624  0013BC  0F89               	addlw	137
  2625  0013BE  5E2B               	subwf	___ftdiv@exp,f,c
  2626  0013C0  C020  F02C         	movff	___ftdiv@f1+2,___ftdiv@sign
  2627  0013C4  5023               	movf	___ftdiv@f2+2,w,c
  2628  0013C6  1A2C               	xorwf	___ftdiv@sign,f,c
  2629  0013C8  0E80               	movlw	128
  2630  0013CA  162C               	andwf	___ftdiv@sign,f,c
  2631  0013CC  8E1F               	bsf	___ftdiv@f1+1,7,c
  2632  0013CE  0EFF               	movlw	255
  2633  0013D0  161E               	andwf	___ftdiv@f1,f,c
  2634  0013D2  0EFF               	movlw	255
  2635  0013D4  161F               	andwf	___ftdiv@f1+1,f,c
  2636  0013D6  0E00               	movlw	0
  2637  0013D8  1620               	andwf	___ftdiv@f1+2,f,c
  2638  0013DA  8E22               	bsf	___ftdiv@f2+1,7,c
  2639  0013DC  0EFF               	movlw	255
  2640  0013DE  1621               	andwf	___ftdiv@f2,f,c
  2641  0013E0  0EFF               	movlw	255
  2642  0013E2  1622               	andwf	___ftdiv@f2+1,f,c
  2643  0013E4  0E00               	movlw	0
  2644  0013E6  1623               	andwf	___ftdiv@f2+2,f,c
  2645  0013E8  0E18               	movlw	24
  2646  0013EA  6E27               	movwf	___ftdiv@cntr,c
  2647  0013EC                     l2191:
  2648  0013EC  90D8               	bcf	status,0,c
  2649  0013EE  3628               	rlcf	___ftdiv@f3,f,c
  2650  0013F0  3629               	rlcf	___ftdiv@f3+1,f,c
  2651  0013F2  362A               	rlcf	___ftdiv@f3+2,f,c
  2652  0013F4  5021               	movf	___ftdiv@f2,w,c
  2653  0013F6  5C1E               	subwf	___ftdiv@f1,w,c
  2654  0013F8  5022               	movf	___ftdiv@f2+1,w,c
  2655  0013FA  581F               	subwfb	___ftdiv@f1+1,w,c
  2656  0013FC  5023               	movf	___ftdiv@f2+2,w,c
  2657  0013FE  5820               	subwfb	___ftdiv@f1+2,w,c
  2658  001400  A0D8               	btfss	status,0,c
  2659  001402  D007               	goto	l600
  2660  001404  5021               	movf	___ftdiv@f2,w,c
  2661  001406  5E1E               	subwf	___ftdiv@f1,f,c
  2662  001408  5022               	movf	___ftdiv@f2+1,w,c
  2663  00140A  5A1F               	subwfb	___ftdiv@f1+1,f,c
  2664  00140C  5023               	movf	___ftdiv@f2+2,w,c
  2665  00140E  5A20               	subwfb	___ftdiv@f1+2,f,c
  2666  001410  8028               	bsf	___ftdiv@f3,0,c
  2667  001412                     l600:
  2668  001412  90D8               	bcf	status,0,c
  2669  001414  361E               	rlcf	___ftdiv@f1,f,c
  2670  001416  361F               	rlcf	___ftdiv@f1+1,f,c
  2671  001418  3620               	rlcf	___ftdiv@f1+2,f,c
  2672  00141A  2E27               	decfsz	___ftdiv@cntr,f,c
  2673  00141C  D7E7               	goto	l2191
  2674  00141E  C028  F012         	movff	___ftdiv@f3,___ftpack@arg
  2675  001422  C029  F013         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2676  001426  C02A  F014         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2677  00142A  C02B  F015         	movff	___ftdiv@exp,___ftpack@exp
  2678  00142E  C02C  F016         	movff	___ftdiv@sign,___ftpack@sign
  2679  001432  ECE0  F00A         	call	___ftpack	;wreg free
  2680  001436  C012  F01E         	movff	?___ftpack,?___ftdiv
  2681  00143A  C013  F01F         	movff	?___ftpack+1,?___ftdiv+1
  2682  00143E  C014  F020         	movff	?___ftpack+2,?___ftdiv+2
  2683  001442  0012               	return	
  2684  001444                     __end_of___ftdiv:
  2685                           	opt stack 0
  2686                           tblptru	equ	0xFF8
  2687                           tblptrh	equ	0xFF7
  2688                           tblptrl	equ	0xFF6
  2689                           tablat	equ	0xFF5
  2690                           prodh	equ	0xFF4
  2691                           prodl	equ	0xFF3
  2692                           postinc0	equ	0xFEE
  2693                           wreg	equ	0xFE8
  2694                           indf1	equ	0xFE7
  2695                           postdec1	equ	0xFE5
  2696                           fsr1h	equ	0xFE2
  2697                           fsr1l	equ	0xFE1
  2698                           indf2	equ	0xFDF
  2699                           fsr2h	equ	0xFDA
  2700                           fsr2l	equ	0xFD9
  2701                           status	equ	0xFD8
  2702                           
  2703 ;; *************** function ___awtoft *****************
  2704 ;; Defined at:
  2705 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  2706 ;; Parameters:    Size  Location     Type
  2707 ;;  c               2   25[COMRAM] int 
  2708 ;; Auto vars:     Size  Location     Type
  2709 ;;  sign            1   28[COMRAM] unsigned char 
  2710 ;; Return value:  Size  Location     Type
  2711 ;;                  3   25[COMRAM] float 
  2712 ;; Registers used:
  2713 ;;		wreg, status,2, status,0, cstack
  2714 ;; Tracked objects:
  2715 ;;		On entry : 0/0
  2716 ;;		On exit  : 0/0
  2717 ;;		Unchanged: 0/0
  2718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2719 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2720 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2721 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2722 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2723 ;;Total ram usage:        4 bytes
  2724 ;; Hardware stack levels used:    1
  2725 ;; Hardware stack levels required when called:    3
  2726 ;; This function calls:
  2727 ;;		___ftpack
  2728 ;; This function is called by:
  2729 ;;		_calculateTemp
  2730 ;; This function uses a non-reentrant model
  2731 ;;
  2732                           
  2733                           	psect	text12
  2734  001B6C                     __ptext12:
  2735                           	opt stack 0
  2736  001B6C                     ___awtoft:
  2737                           	opt stack 25
  2738                           
  2739                           ;incstack = 0
  2740  001B6C  0E00               	movlw	0
  2741  001B6E  6E1D               	movwf	___awtoft@sign,c
  2742  001B70  AE1B               	btfss	___awtoft@c+1,7,c
  2743  001B72  D006               	goto	l2341
  2744  001B74  6C1A               	negf	___awtoft@c,c
  2745  001B76  1E1B               	comf	___awtoft@c+1,f,c
  2746  001B78  B0D8               	btfsc	status,0,c
  2747  001B7A  2A1B               	incf	___awtoft@c+1,f,c
  2748  001B7C  0E01               	movlw	1
  2749  001B7E  6E1D               	movwf	___awtoft@sign,c
  2750  001B80                     l2341:
  2751  001B80  C01A  F012         	movff	___awtoft@c,___ftpack@arg
  2752  001B84  C01B  F013         	movff	___awtoft@c+1,___ftpack@arg+1
  2753  001B88  6A14               	clrf	___ftpack@arg+2,c
  2754  001B8A  0E8E               	movlw	142
  2755  001B8C  6E15               	movwf	___ftpack@exp,c
  2756  001B8E  C01D  F016         	movff	___awtoft@sign,___ftpack@sign
  2757  001B92  ECE0  F00A         	call	___ftpack	;wreg free
  2758  001B96  C012  F01A         	movff	?___ftpack,?___awtoft
  2759  001B9A  C013  F01B         	movff	?___ftpack+1,?___awtoft+1
  2760  001B9E  C014  F01C         	movff	?___ftpack+2,?___awtoft+2
  2761  001BA2  0012               	return	
  2762  001BA4                     __end_of___awtoft:
  2763                           	opt stack 0
  2764                           tblptru	equ	0xFF8
  2765                           tblptrh	equ	0xFF7
  2766                           tblptrl	equ	0xFF6
  2767                           tablat	equ	0xFF5
  2768                           prodh	equ	0xFF4
  2769                           prodl	equ	0xFF3
  2770                           postinc0	equ	0xFEE
  2771                           wreg	equ	0xFE8
  2772                           indf1	equ	0xFE7
  2773                           postdec1	equ	0xFE5
  2774                           fsr1h	equ	0xFE2
  2775                           fsr1l	equ	0xFE1
  2776                           indf2	equ	0xFDF
  2777                           fsr2h	equ	0xFDA
  2778                           fsr2l	equ	0xFD9
  2779                           status	equ	0xFD8
  2780                           
  2781 ;; *************** function ___ftpack *****************
  2782 ;; Defined at:
  2783 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  2784 ;; Parameters:    Size  Location     Type
  2785 ;;  arg             3   17[COMRAM] unsigned um
  2786 ;;  exp             1   20[COMRAM] unsigned char 
  2787 ;;  sign            1   21[COMRAM] unsigned char 
  2788 ;; Auto vars:     Size  Location     Type
  2789 ;;		None
  2790 ;; Return value:  Size  Location     Type
  2791 ;;                  3   17[COMRAM] float 
  2792 ;; Registers used:
  2793 ;;		wreg, status,2, status,0
  2794 ;; Tracked objects:
  2795 ;;		On entry : 0/0
  2796 ;;		On exit  : 0/0
  2797 ;;		Unchanged: 0/0
  2798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2799 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2801 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2802 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2803 ;;Total ram usage:        8 bytes
  2804 ;; Hardware stack levels used:    1
  2805 ;; Hardware stack levels required when called:    2
  2806 ;; This function calls:
  2807 ;;		Nothing
  2808 ;; This function is called by:
  2809 ;;		___awtoft
  2810 ;;		___ftdiv
  2811 ;;		___ftmul
  2812 ;; This function uses a non-reentrant model
  2813 ;;
  2814                           
  2815                           	psect	text13
  2816  0015C0                     __ptext13:
  2817                           	opt stack 0
  2818  0015C0                     ___ftpack:
  2819                           	opt stack 25
  2820                           
  2821                           ;incstack = 0
  2822  0015C0  5015               	movf	___ftpack@exp,w,c
  2823  0015C2  B4D8               	btfsc	status,2,c
  2824  0015C4  D005               	goto	l2127
  2825  0015C6  5012               	movf	___ftpack@arg,w,c
  2826  0015C8  1013               	iorwf	___ftpack@arg+1,w,c
  2827  0015CA  1014               	iorwf	___ftpack@arg+2,w,c
  2828  0015CC  A4D8               	btfss	status,2,c
  2829  0015CE  D00C               	goto	l2133
  2830  0015D0                     l2127:
  2831  0015D0  0E00               	movlw	0
  2832  0015D2  6E12               	movwf	?___ftpack,c
  2833  0015D4  0E00               	movlw	0
  2834  0015D6  6E13               	movwf	?___ftpack+1,c
  2835  0015D8  0E00               	movlw	0
  2836  0015DA  6E14               	movwf	?___ftpack+2,c
  2837  0015DC  0012               	return	
  2838  0015DE                     l2131:
  2839  0015DE  2A15               	incf	___ftpack@exp,f,c
  2840  0015E0  90D8               	bcf	status,0,c
  2841  0015E2  3214               	rrcf	___ftpack@arg+2,f,c
  2842  0015E4  3213               	rrcf	___ftpack@arg+1,f,c
  2843  0015E6  3212               	rrcf	___ftpack@arg,f,c
  2844  0015E8                     l2133:
  2845  0015E8  0E00               	movlw	0
  2846  0015EA  1412               	andwf	___ftpack@arg,w,c
  2847  0015EC  6E17               	movwf	??___ftpack& (0+255),c
  2848  0015EE  0E00               	movlw	0
  2849  0015F0  1413               	andwf	___ftpack@arg+1,w,c
  2850  0015F2  6E18               	movwf	(??___ftpack+1)& (0+255),c
  2851  0015F4  0EFE               	movlw	254
  2852  0015F6  1414               	andwf	___ftpack@arg+2,w,c
  2853  0015F8  6E19               	movwf	(??___ftpack+2)& (0+255),c
  2854  0015FA  5017               	movf	??___ftpack,w,c
  2855  0015FC  1018               	iorwf	??___ftpack+1,w,c
  2856  0015FE  1019               	iorwf	??___ftpack+2,w,c
  2857  001600  B4D8               	btfsc	status,2,c
  2858  001602  D00C               	goto	l2139
  2859  001604  D7EC               	goto	l2131
  2860  001606                     l2135:
  2861  001606  2A15               	incf	___ftpack@exp,f,c
  2862  001608  0E01               	movlw	1
  2863  00160A  2612               	addwf	___ftpack@arg,f,c
  2864  00160C  0E00               	movlw	0
  2865  00160E  2213               	addwfc	___ftpack@arg+1,f,c
  2866  001610  0E00               	movlw	0
  2867  001612  2214               	addwfc	___ftpack@arg+2,f,c
  2868  001614  90D8               	bcf	status,0,c
  2869  001616  3214               	rrcf	___ftpack@arg+2,f,c
  2870  001618  3213               	rrcf	___ftpack@arg+1,f,c
  2871  00161A  3212               	rrcf	___ftpack@arg,f,c
  2872  00161C                     l2139:
  2873  00161C  0E00               	movlw	0
  2874  00161E  1412               	andwf	___ftpack@arg,w,c
  2875  001620  6E17               	movwf	??___ftpack& (0+255),c
  2876  001622  0E00               	movlw	0
  2877  001624  1413               	andwf	___ftpack@arg+1,w,c
  2878  001626  6E18               	movwf	(??___ftpack+1)& (0+255),c
  2879  001628  0EFF               	movlw	255
  2880  00162A  1414               	andwf	___ftpack@arg+2,w,c
  2881  00162C  6E19               	movwf	(??___ftpack+2)& (0+255),c
  2882  00162E  5017               	movf	??___ftpack,w,c
  2883  001630  1018               	iorwf	??___ftpack+1,w,c
  2884  001632  1019               	iorwf	??___ftpack+2,w,c
  2885  001634  B4D8               	btfsc	status,2,c
  2886  001636  D006               	goto	l2143
  2887  001638  D7E6               	goto	l2135
  2888  00163A                     l2141:
  2889  00163A  0615               	decf	___ftpack@exp,f,c
  2890  00163C  90D8               	bcf	status,0,c
  2891  00163E  3612               	rlcf	___ftpack@arg,f,c
  2892  001640  3613               	rlcf	___ftpack@arg+1,f,c
  2893  001642  3614               	rlcf	___ftpack@arg+2,f,c
  2894  001644                     l2143:
  2895  001644  BE13               	btfsc	___ftpack@arg+1,7,c
  2896  001646  D003               	goto	l542
  2897  001648  0E02               	movlw	2
  2898  00164A  6015               	cpfslt	___ftpack@exp,c
  2899  00164C  D7F6               	goto	l2141
  2900  00164E                     l542:
  2901  00164E  A015               	btfss	___ftpack@exp,0,c
  2902  001650  9E13               	bcf	___ftpack@arg+1,7,c
  2903  001652  90D8               	bcf	status,0,c
  2904  001654  3215               	rrcf	___ftpack@exp,f,c
  2905  001656  5015               	movf	___ftpack@exp,w,c
  2906  001658  1214               	iorwf	___ftpack@arg+2,f,c
  2907  00165A  5016               	movf	___ftpack@sign,w,c
  2908  00165C  A4D8               	btfss	status,2,c
  2909  00165E  8E14               	bsf	___ftpack@arg+2,7,c
  2910  001660  C012  F012         	movff	___ftpack@arg,?___ftpack
  2911  001664  C013  F013         	movff	___ftpack@arg+1,?___ftpack+1
  2912  001668  C014  F014         	movff	___ftpack@arg+2,?___ftpack+2
  2913  00166C  0012               	return	
  2914  00166E                     __end_of___ftpack:
  2915                           	opt stack 0
  2916                           tblptru	equ	0xFF8
  2917                           tblptrh	equ	0xFF7
  2918                           tblptrl	equ	0xFF6
  2919                           tablat	equ	0xFF5
  2920                           prodh	equ	0xFF4
  2921                           prodl	equ	0xFF3
  2922                           postinc0	equ	0xFEE
  2923                           wreg	equ	0xFE8
  2924                           indf1	equ	0xFE7
  2925                           postdec1	equ	0xFE5
  2926                           fsr1h	equ	0xFE2
  2927                           fsr1l	equ	0xFE1
  2928                           indf2	equ	0xFDF
  2929                           fsr2h	equ	0xFDA
  2930                           fsr2l	equ	0xFD9
  2931                           status	equ	0xFD8
  2932                           
  2933 ;; *************** function _init_frequency *****************
  2934 ;; Defined at:
  2935 ;;		line 91 in file "frequency.c"
  2936 ;; Parameters:    Size  Location     Type
  2937 ;;		None
  2938 ;; Auto vars:     Size  Location     Type
  2939 ;;		None
  2940 ;; Return value:  Size  Location     Type
  2941 ;;                  1    wreg      void 
  2942 ;; Registers used:
  2943 ;;		wreg, status,2
  2944 ;; Tracked objects:
  2945 ;;		On entry : 0/0
  2946 ;;		On exit  : 0/0
  2947 ;;		Unchanged: 0/0
  2948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2950 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2952 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2953 ;;Total ram usage:        0 bytes
  2954 ;; Hardware stack levels used:    1
  2955 ;; Hardware stack levels required when called:    2
  2956 ;; This function calls:
  2957 ;;		Nothing
  2958 ;; This function is called by:
  2959 ;;		_main
  2960 ;; This function uses a non-reentrant model
  2961 ;;
  2962                           
  2963                           	psect	text14
  2964  001B32                     __ptext14:
  2965                           	opt stack 0
  2966  001B32                     _init_frequency:
  2967                           	opt stack 28
  2968                           
  2969                           ;frequency.c: 93: TRISCbits.TRISC1 = 1;
  2970                           
  2971                           ;incstack = 0
  2972  001B32  8294               	bsf	3988,1,c	;volatile
  2973                           
  2974                           ;frequency.c: 95: CCPTMRS2bits.C8TSEL1=0;
  2975  001B34  010F               	movlb	15	; () banked
  2976  001B36  9350               	bcf	80,1,b	;volatile
  2977                           
  2978                           ;frequency.c: 96: CCPTMRS2bits.C8TSEL0=0;
  2979  001B38  010F               	movlb	15	; () banked
  2980  001B3A  9150               	bcf	80,0,b	;volatile
  2981                           
  2982                           ;frequency.c: 98: PIE4bits.CCP8IE =1;
  2983  001B3C  8A8E               	bsf	3982,5,c	;volatile
  2984                           
  2985                           ;frequency.c: 99: PIR4bits.CCP8IF=0;
  2986  001B3E  9A8F               	bcf	3983,5,c	;volatile
  2987                           
  2988                           ; BSR set to: 15
  2989                           ;frequency.c: 105: CCP8CON=0x07;
  2990  001B40  0E07               	movlw	7
  2991  001B42  010F               	movlb	15	; () banked
  2992  001B44  6F06               	movwf	6,b	;volatile
  2993                           
  2994                           ; BSR set to: 15
  2995                           ;frequency.c: 108: INTCONbits.GIE = 1;
  2996  001B46  8EF2               	bsf	intcon,7,c	;volatile
  2997                           
  2998                           ; BSR set to: 15
  2999                           ;frequency.c: 110: T1CONbits.RD16=1;
  3000  001B48  82CD               	bsf	4045,1,c	;volatile
  3001                           
  3002                           ; BSR set to: 15
  3003                           ;frequency.c: 111: T1CONbits.TMR1ON=1;
  3004  001B4A  80CD               	bsf	4045,0,c	;volatile
  3005                           
  3006                           ; BSR set to: 15
  3007                           ;frequency.c: 112: T1CONbits.TMR1CS0=1;
  3008  001B4C  8CCD               	bsf	4045,6,c	;volatile
  3009                           
  3010                           ; BSR set to: 15
  3011                           ;frequency.c: 113: T1CONbits.TMR1CS1=0;
  3012  001B4E  9ECD               	bcf	4045,7,c	;volatile
  3013                           
  3014                           ; BSR set to: 15
  3015                           ;frequency.c: 114: T1CONbits.T1CKPS1=0;
  3016  001B50  9ACD               	bcf	4045,5,c	;volatile
  3017                           
  3018                           ; BSR set to: 15
  3019                           ;frequency.c: 115: T1CONbits.T1CKPS0=0;
  3020  001B52  98CD               	bcf	4045,4,c	;volatile
  3021                           
  3022                           ; BSR set to: 15
  3023                           ;frequency.c: 116: T1CONbits.T1OSCEN=0;
  3024  001B54  96CD               	bcf	4045,3,c	;volatile
  3025                           
  3026                           ;frequency.c: 117: TMR1L=0X00;
  3027  001B56  0E00               	movlw	0
  3028  001B58  6ECE               	movwf	4046,c	;volatile
  3029                           
  3030                           ;frequency.c: 118: TMR1H=0X00;
  3031  001B5A  0E00               	movlw	0
  3032  001B5C  6ECF               	movwf	4047,c	;volatile
  3033                           
  3034                           ;frequency.c: 119: CCPR8H=0x00;
  3035  001B5E  0E00               	movlw	0
  3036  001B60  010F               	movlb	15	; () banked
  3037  001B62  6F08               	movwf	8,b	;volatile
  3038                           
  3039                           ;frequency.c: 120: CCPR8L=0x00;
  3040  001B64  0E00               	movlw	0
  3041  001B66  010F               	movlb	15	; () banked
  3042  001B68  6F07               	movwf	7,b	;volatile
  3043                           
  3044                           ; BSR set to: 15
  3045  001B6A  0012               	return		;funcret
  3046  001B6C                     __end_of_init_frequency:
  3047                           	opt stack 0
  3048                           tblptru	equ	0xFF8
  3049                           tblptrh	equ	0xFF7
  3050                           tblptrl	equ	0xFF6
  3051                           tablat	equ	0xFF5
  3052                           prodh	equ	0xFF4
  3053                           prodl	equ	0xFF3
  3054                           intcon	equ	0xFF2
  3055                           postinc0	equ	0xFEE
  3056                           wreg	equ	0xFE8
  3057                           indf1	equ	0xFE7
  3058                           postdec1	equ	0xFE5
  3059                           fsr1h	equ	0xFE2
  3060                           fsr1l	equ	0xFE1
  3061                           indf2	equ	0xFDF
  3062                           fsr2h	equ	0xFDA
  3063                           fsr2l	equ	0xFD9
  3064                           status	equ	0xFD8
  3065                           
  3066 ;; *************** function _initUART1 *****************
  3067 ;; Defined at:
  3068 ;;		line 20 in file "uart.c"
  3069 ;; Parameters:    Size  Location     Type
  3070 ;;		None
  3071 ;; Auto vars:     Size  Location     Type
  3072 ;;		None
  3073 ;; Return value:  Size  Location     Type
  3074 ;;                  1    wreg      void 
  3075 ;; Registers used:
  3076 ;;		wreg, status,2
  3077 ;; Tracked objects:
  3078 ;;		On entry : 0/0
  3079 ;;		On exit  : 0/0
  3080 ;;		Unchanged: 0/0
  3081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3082 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3083 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3084 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3085 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3086 ;;Total ram usage:        0 bytes
  3087 ;; Hardware stack levels used:    1
  3088 ;; Hardware stack levels required when called:    2
  3089 ;; This function calls:
  3090 ;;		Nothing
  3091 ;; This function is called by:
  3092 ;;		_main
  3093 ;; This function uses a non-reentrant model
  3094 ;;
  3095                           
  3096                           	psect	text15
  3097  001C8E                     __ptext15:
  3098                           	opt stack 0
  3099  001C8E                     _initUART1:
  3100                           	opt stack 28
  3101                           
  3102                           ;uart.c: 23: TRISCbits.TRISC7 = 1;
  3103                           
  3104                           ; BSR set to: 15
  3105                           ;incstack = 0
  3106  001C8E  8E94               	bsf	3988,7,c	;volatile
  3107                           
  3108                           ;uart.c: 24: TRISCbits.TRISC6 = 0;
  3109  001C90  9C94               	bcf	3988,6,c	;volatile
  3110                           
  3111                           ;uart.c: 26: TXSTA1bits.BRGH = 1;
  3112  001C92  84AD               	bsf	4013,2,c	;volatile
  3113                           
  3114                           ;uart.c: 27: BAUDCON1bits.BRG16 = 1;
  3115  001C94  867E               	bsf	3966,3,c	;volatile
  3116                           
  3117                           ;uart.c: 35: SPBRGH1 = 0;
  3118  001C96  0E00               	movlw	0
  3119  001C98  6E7F               	movwf	3967,c	;volatile
  3120                           
  3121                           ;uart.c: 36: SPBRG1 = 34;
  3122  001C9A  0E22               	movlw	34
  3123  001C9C  6EB0               	movwf	4016,c	;volatile
  3124                           
  3125                           ;uart.c: 40: TXSTA1bits.SYNC = 0;
  3126  001C9E  98AD               	bcf	4013,4,c	;volatile
  3127                           
  3128                           ;uart.c: 41: RCSTA1bits.SPEN = 1;
  3129  001CA0  8EAC               	bsf	4012,7,c	;volatile
  3130                           
  3131                           ;uart.c: 45: PIE1bits.TXIE = 0;
  3132  001CA2  989D               	bcf	3997,4,c	;volatile
  3133                           
  3134                           ;uart.c: 46: PIE1bits.RC1IE = 1;
  3135  001CA4  8A9D               	bsf	3997,5,c	;volatile
  3136                           
  3137                           ;uart.c: 51: RCSTA1bits.CREN = 1;
  3138  001CA6  88AC               	bsf	4012,4,c	;volatile
  3139  001CA8  0012               	return		;funcret
  3140  001CAA                     __end_of_initUART1:
  3141                           	opt stack 0
  3142                           tblptru	equ	0xFF8
  3143                           tblptrh	equ	0xFF7
  3144                           tblptrl	equ	0xFF6
  3145                           tablat	equ	0xFF5
  3146                           prodh	equ	0xFF4
  3147                           prodl	equ	0xFF3
  3148                           intcon	equ	0xFF2
  3149                           postinc0	equ	0xFEE
  3150                           wreg	equ	0xFE8
  3151                           indf1	equ	0xFE7
  3152                           postdec1	equ	0xFE5
  3153                           fsr1h	equ	0xFE2
  3154                           fsr1l	equ	0xFE1
  3155                           indf2	equ	0xFDF
  3156                           fsr2h	equ	0xFDA
  3157                           fsr2l	equ	0xFD9
  3158                           status	equ	0xFD8
  3159                           
  3160 ;; *************** function _initLoRa *****************
  3161 ;; Defined at:
  3162 ;;		line 22 in file "lora.c"
  3163 ;; Parameters:    Size  Location     Type
  3164 ;;		None
  3165 ;; Auto vars:     Size  Location     Type
  3166 ;;		None
  3167 ;; Return value:  Size  Location     Type
  3168 ;;                  1    wreg      void 
  3169 ;; Registers used:
  3170 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3171 ;; Tracked objects:
  3172 ;;		On entry : 0/0
  3173 ;;		On exit  : 0/0
  3174 ;;		Unchanged: 0/0
  3175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3176 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3177 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3178 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3179 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3180 ;;Total ram usage:        0 bytes
  3181 ;; Hardware stack levels used:    1
  3182 ;; Hardware stack levels required when called:    4
  3183 ;; This function calls:
  3184 ;;		_delay_ms
  3185 ;;		_sendUARTMessage
  3186 ;; This function is called by:
  3187 ;;		_main
  3188 ;; This function uses a non-reentrant model
  3189 ;;
  3190                           
  3191                           	psect	text16
  3192  001998                     __ptext16:
  3193                           	opt stack 0
  3194  001998                     _initLoRa:
  3195                           	opt stack 26
  3196                           
  3197                           ;lora.c: 24: sendUARTMessage(set_dev_eui);
  3198                           
  3199                           ;incstack = 0
  3200  001998  0E7C               	movlw	low _set_dev_eui
  3201  00199A  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  3202  00199C  0E0F               	movlw	high _set_dev_eui
  3203  00199E  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  3204  0019A0  EC59  F00C         	call	_sendUARTMessage	;wreg free
  3205                           
  3206                           ;lora.c: 25: delay_ms(800);
  3207  0019A4  0E03               	movlw	3
  3208  0019A6  6E13               	movwf	delay_ms@ms+1,c
  3209  0019A8  0E20               	movlw	32
  3210  0019AA  6E12               	movwf	delay_ms@ms,c
  3211  0019AC  ECEC  F00D         	call	_delay_ms	;wreg free
  3212                           
  3213                           ;lora.c: 27: sendUARTMessage(set_app_eui);
  3214  0019B0  0E5A               	movlw	low _set_app_eui
  3215  0019B2  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  3216  0019B4  0E0F               	movlw	high _set_app_eui
  3217  0019B6  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  3218  0019B8  EC59  F00C         	call	_sendUARTMessage	;wreg free
  3219                           
  3220                           ;lora.c: 28: delay_ms(800);
  3221  0019BC  0E03               	movlw	3
  3222  0019BE  6E13               	movwf	delay_ms@ms+1,c
  3223  0019C0  0E20               	movlw	32
  3224  0019C2  6E12               	movwf	delay_ms@ms,c
  3225  0019C4  ECEC  F00D         	call	_delay_ms	;wreg free
  3226                           
  3227                           ;lora.c: 30: sendUARTMessage(set_app_key);
  3228  0019C8  0E28               	movlw	low _set_app_key
  3229  0019CA  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  3230  0019CC  0E0F               	movlw	high _set_app_key
  3231  0019CE  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  3232  0019D0  EC59  F00C         	call	_sendUARTMessage	;wreg free
  3233                           
  3234                           ;lora.c: 31: delay_ms(3000);
  3235  0019D4  0E0B               	movlw	11
  3236  0019D6  6E13               	movwf	delay_ms@ms+1,c
  3237  0019D8  0EB8               	movlw	184
  3238  0019DA  6E12               	movwf	delay_ms@ms,c
  3239  0019DC  ECEC  F00D         	call	_delay_ms	;wreg free
  3240                           
  3241                           ;lora.c: 33: sendUARTMessage(join_network);
  3242  0019E0  0E9E               	movlw	low _join_network
  3243  0019E2  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  3244  0019E4  0E0F               	movlw	high _join_network
  3245  0019E6  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  3246  0019E8  EC59  F00C         	call	_sendUARTMessage	;wreg free
  3247                           
  3248                           ;lora.c: 34: delay_ms(3000);
  3249  0019EC  0E0B               	movlw	11
  3250  0019EE  6E13               	movwf	delay_ms@ms+1,c
  3251  0019F0  0EB8               	movlw	184
  3252  0019F2  6E12               	movwf	delay_ms@ms,c
  3253  0019F4  ECEC  F00D         	call	_delay_ms	;wreg free
  3254  0019F8  0012               	return		;funcret
  3255  0019FA                     __end_of_initLoRa:
  3256                           	opt stack 0
  3257                           tblptru	equ	0xFF8
  3258                           tblptrh	equ	0xFF7
  3259                           tblptrl	equ	0xFF6
  3260                           tablat	equ	0xFF5
  3261                           prodh	equ	0xFF4
  3262                           prodl	equ	0xFF3
  3263                           intcon	equ	0xFF2
  3264                           postinc0	equ	0xFEE
  3265                           wreg	equ	0xFE8
  3266                           indf1	equ	0xFE7
  3267                           postdec1	equ	0xFE5
  3268                           fsr1h	equ	0xFE2
  3269                           fsr1l	equ	0xFE1
  3270                           indf2	equ	0xFDF
  3271                           fsr2h	equ	0xFDA
  3272                           fsr2l	equ	0xFD9
  3273                           status	equ	0xFD8
  3274                           
  3275 ;; *************** function _sendUARTMessage *****************
  3276 ;; Defined at:
  3277 ;;		line 61 in file "uart.c"
  3278 ;; Parameters:    Size  Location     Type
  3279 ;;  newMessagePo    2   22[COMRAM] PTR unsigned char 
  3280 ;;		 -> join_network(16), set_app_key(50), set_app_eui(34), set_dev_eui(34), 
  3281 ;;		 -> temp_display_message(20), frequency_message(26), 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;		None
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3293 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3294 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3295 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3296 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3297 ;;Total ram usage:        2 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; Hardware stack levels required when called:    3
  3300 ;; This function calls:
  3301 ;;		_delay_ms
  3302 ;; This function is called by:
  3303 ;;		_main
  3304 ;;		_initLoRa
  3305 ;; This function uses a non-reentrant model
  3306 ;;
  3307                           
  3308                           	psect	text17
  3309  0018B2                     __ptext17:
  3310                           	opt stack 0
  3311  0018B2                     _sendUARTMessage:
  3312                           	opt stack 27
  3313                           
  3314                           ;uart.c: 64: currentMessagePointer = newMessagePointer;
  3315                           
  3316                           ;incstack = 0
  3317  0018B2  C017  F03E         	movff	sendUARTMessage@newMessagePointer,_currentMessagePointer
  3318  0018B6  C018  F03F         	movff	sendUARTMessage@newMessagePointer+1,_currentMessagePointer+1
  3319                           
  3320                           ;uart.c: 69: last_received_message_index = uart_receive_buffer_index;
  3321  0018BA  C04C  F0B4         	movff	_uart_receive_buffer_index,_last_received_message_index
  3322  0018BE  C04D  F0B5         	movff	_uart_receive_buffer_index+1,_last_received_message_index+1
  3323                           
  3324                           ;uart.c: 70: TXSTA1bits.TXEN = 1;
  3325  0018C2  8AAD               	bsf	4013,5,c	;volatile
  3326                           
  3327                           ;uart.c: 72: while(*currentMessagePointer != '\0'){
  3328  0018C4  D01C               	goto	l1813
  3329  0018C6                     l140:
  3330                           
  3331                           ;uart.c: 73: if(PIR1bits.TXIF == 1){
  3332  0018C6  A89E               	btfss	3998,4,c	;volatile
  3333  0018C8  D01A               	goto	l1813
  3334                           
  3335                           ;uart.c: 75: TXREG1 = *currentMessagePointer;
  3336  0018CA  C03E  FFF6         	movff	_currentMessagePointer,tblptrl
  3337  0018CE  C03F  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3338  0018D2  0E00               	movlw	low (__smallconst shr (0+16))
  3339  0018D4  6EF8               	movwf	tblptru,c
  3340  0018D6  0E0E               	movlw	(high __ramtop+-1)
  3341  0018D8  64F7               	cpfsgt	tblptrh,c
  3342  0018DA  D003               	bra	u1137
  3343  0018DC  0008               	tblrd		*
  3344  0018DE  50F5               	movf	tablat,w,c
  3345  0018E0  D005               	bra	u1130
  3346  0018E2                     u1137:
  3347  0018E2  CFF6 FFE9          	movff	tblptrl,fsr0l
  3348  0018E6  CFF7 FFEA          	movff	tblptrh,fsr0h
  3349  0018EA  50EF               	movf	indf0,w,c
  3350  0018EC                     u1130:
  3351  0018EC  6EAE               	movwf	4014,c	;volatile
  3352                           
  3353                           ;uart.c: 77: currentMessagePointer += 1;
  3354  0018EE  4A3E               	infsnz	_currentMessagePointer,f,c
  3355  0018F0  2A3F               	incf	_currentMessagePointer+1,f,c
  3356                           
  3357                           ;uart.c: 78: delay_ms(1);
  3358  0018F2  0E00               	movlw	0
  3359  0018F4  6E13               	movwf	delay_ms@ms+1,c
  3360  0018F6  0E01               	movlw	1
  3361  0018F8  6E12               	movwf	delay_ms@ms,c
  3362  0018FA  ECEC  F00D         	call	_delay_ms	;wreg free
  3363  0018FE                     l1813:
  3364  0018FE  C03E  FFF6         	movff	_currentMessagePointer,tblptrl
  3365  001902  C03F  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3366  001906  0E00               	movlw	low (__smallconst shr (0+16))
  3367  001908  6EF8               	movwf	tblptru,c
  3368  00190A  0E0E               	movlw	(high __ramtop+-1)
  3369  00190C  64F7               	cpfsgt	tblptrh,c
  3370  00190E  D003               	bra	u1147
  3371  001910  0008               	tblrd		*
  3372  001912  50F5               	movf	tablat,w,c
  3373  001914  D005               	bra	u1140
  3374  001916                     u1147:
  3375  001916  CFF6 FFE9          	movff	tblptrl,fsr0l
  3376  00191A  CFF7 FFEA          	movff	tblptrh,fsr0h
  3377  00191E  50EF               	movf	indf0,w,c
  3378  001920                     u1140:
  3379  001920  0900               	iorlw	0
  3380  001922  B4D8               	btfsc	status,2,c
  3381  001924  0012               	return	
  3382  001926  D7CF               	goto	l140
  3383  001928                     __end_of_sendUARTMessage:
  3384                           	opt stack 0
  3385                           tblptru	equ	0xFF8
  3386                           tblptrh	equ	0xFF7
  3387                           tblptrl	equ	0xFF6
  3388                           tablat	equ	0xFF5
  3389                           prodh	equ	0xFF4
  3390                           prodl	equ	0xFF3
  3391                           intcon	equ	0xFF2
  3392                           indf0	equ	0xFEF
  3393                           postinc0	equ	0xFEE
  3394                           fsr0h	equ	0xFEA
  3395                           fsr0l	equ	0xFE9
  3396                           wreg	equ	0xFE8
  3397                           indf1	equ	0xFE7
  3398                           postdec1	equ	0xFE5
  3399                           fsr1h	equ	0xFE2
  3400                           fsr1l	equ	0xFE1
  3401                           indf2	equ	0xFDF
  3402                           fsr2h	equ	0xFDA
  3403                           fsr2l	equ	0xFD9
  3404                           status	equ	0xFD8
  3405                           
  3406 ;; *************** function _delay_ms *****************
  3407 ;; Defined at:
  3408 ;;		line 11 in file "delay.c"
  3409 ;; Parameters:    Size  Location     Type
  3410 ;;  ms              2   17[COMRAM] int 
  3411 ;; Auto vars:     Size  Location     Type
  3412 ;;  i               2   20[COMRAM] int 
  3413 ;; Return value:  Size  Location     Type
  3414 ;;                  1    wreg      void 
  3415 ;; Registers used:
  3416 ;;		wreg, status,2, status,0
  3417 ;; Tracked objects:
  3418 ;;		On entry : 0/0
  3419 ;;		On exit  : 0/0
  3420 ;;		Unchanged: 0/0
  3421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3422 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3423 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3424 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3425 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3426 ;;Total ram usage:        5 bytes
  3427 ;; Hardware stack levels used:    1
  3428 ;; Hardware stack levels required when called:    2
  3429 ;; This function calls:
  3430 ;;		Nothing
  3431 ;; This function is called by:
  3432 ;;		_main
  3433 ;;		_sendUARTMessage
  3434 ;;		_initLoRa
  3435 ;; This function uses a non-reentrant model
  3436 ;;
  3437                           
  3438                           	psect	text18
  3439  001BD8                     __ptext18:
  3440                           	opt stack 0
  3441  001BD8                     _delay_ms:
  3442                           	opt stack 27
  3443                           
  3444                           ;delay.c: 12: for(int i = 0; i<ms; i++){
  3445                           
  3446                           ;incstack = 0
  3447  001BD8  0E00               	movlw	0
  3448  001BDA  6E16               	movwf	delay_ms@i+1,c
  3449  001BDC  0E00               	movlw	0
  3450  001BDE  6E15               	movwf	delay_ms@i,c
  3451  001BE0  D009               	goto	l263
  3452  001BE2                     l1565:
  3453                           
  3454                           ;delay.c: 13: _delay((unsigned long)((1)*(8000000/4000.0)));
  3455  001BE2  0E03               	movlw	3
  3456  001BE4  6E14               	movwf	??_delay_ms& (0+255),c
  3457  001BE6  0E98               	movlw	152
  3458  001BE8                     u1907:
  3459  001BE8  2EE8               	decfsz	wreg,f,c
  3460  001BEA  D7FE               	goto	u1907
  3461  001BEC  2E14               	decfsz	??_delay_ms& (0+255),f,c
  3462  001BEE  D7FC               	goto	u1907
  3463  001BF0  4A15               	infsnz	delay_ms@i,f,c
  3464  001BF2  2A16               	incf	delay_ms@i+1,f,c
  3465  001BF4                     l263:
  3466  001BF4  5012               	movf	delay_ms@ms,w,c
  3467  001BF6  5C15               	subwf	delay_ms@i,w,c
  3468  001BF8  5016               	movf	delay_ms@i+1,w,c
  3469  001BFA  0A80               	xorlw	128
  3470  001BFC  6E14               	movwf	??_delay_ms& (0+255),c
  3471  001BFE  5013               	movf	delay_ms@ms+1,w,c
  3472  001C00  0A80               	xorlw	128
  3473  001C02  5814               	subwfb	??_delay_ms& (0+255),w,c
  3474  001C04  B0D8               	btfsc	status,0,c
  3475  001C06  0012               	return	
  3476  001C08  D7EC               	goto	l1565
  3477  001C0A                     __end_of_delay_ms:
  3478                           	opt stack 0
  3479                           tblptru	equ	0xFF8
  3480                           tblptrh	equ	0xFF7
  3481                           tblptrl	equ	0xFF6
  3482                           tablat	equ	0xFF5
  3483                           prodh	equ	0xFF4
  3484                           prodl	equ	0xFF3
  3485                           intcon	equ	0xFF2
  3486                           indf0	equ	0xFEF
  3487                           postinc0	equ	0xFEE
  3488                           fsr0h	equ	0xFEA
  3489                           fsr0l	equ	0xFE9
  3490                           wreg	equ	0xFE8
  3491                           indf1	equ	0xFE7
  3492                           postdec1	equ	0xFE5
  3493                           fsr1h	equ	0xFE2
  3494                           fsr1l	equ	0xFE1
  3495                           indf2	equ	0xFDF
  3496                           fsr2h	equ	0xFDA
  3497                           fsr2l	equ	0xFD9
  3498                           status	equ	0xFD8
  3499                           
  3500 ;; *************** function _initInterrupts *****************
  3501 ;; Defined at:
  3502 ;;		line 20 in file "main.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;		None
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, status,2
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3516 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3517 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3519 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3520 ;;Total ram usage:        0 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    2
  3523 ;; This function calls:
  3524 ;;		Nothing
  3525 ;; This function is called by:
  3526 ;;		_main
  3527 ;; This function uses a non-reentrant model
  3528 ;;
  3529                           
  3530                           	psect	text19
  3531  001CBA                     __ptext19:
  3532                           	opt stack 0
  3533  001CBA                     _initInterrupts:
  3534                           	opt stack 28
  3535                           
  3536                           ;main.c: 21: INTCON = 0b11000000;
  3537                           
  3538                           ;incstack = 0
  3539  001CBA  0EC0               	movlw	192
  3540  001CBC  6EF2               	movwf	intcon,c	;volatile
  3541                           
  3542                           ;main.c: 22: RCONbits.IPEN = 0;
  3543  001CBE  9ED0               	bcf	4048,7,c	;volatile
  3544  001CC0  0012               	return		;funcret
  3545  001CC2                     __end_of_initInterrupts:
  3546                           	opt stack 0
  3547                           tblptru	equ	0xFF8
  3548                           tblptrh	equ	0xFF7
  3549                           tblptrl	equ	0xFF6
  3550                           tablat	equ	0xFF5
  3551                           prodh	equ	0xFF4
  3552                           prodl	equ	0xFF3
  3553                           intcon	equ	0xFF2
  3554                           indf0	equ	0xFEF
  3555                           postinc0	equ	0xFEE
  3556                           fsr0h	equ	0xFEA
  3557                           fsr0l	equ	0xFE9
  3558                           wreg	equ	0xFE8
  3559                           indf1	equ	0xFE7
  3560                           postdec1	equ	0xFE5
  3561                           fsr1h	equ	0xFE2
  3562                           fsr1l	equ	0xFE1
  3563                           indf2	equ	0xFDF
  3564                           fsr2h	equ	0xFDA
  3565                           fsr2l	equ	0xFD9
  3566                           status	equ	0xFD8
  3567                           
  3568 ;; *************** function _initADC *****************
  3569 ;; Defined at:
  3570 ;;		line 24 in file "temperature.c"
  3571 ;; Parameters:    Size  Location     Type
  3572 ;;		None
  3573 ;; Auto vars:     Size  Location     Type
  3574 ;;		None
  3575 ;; Return value:  Size  Location     Type
  3576 ;;                  1    wreg      void 
  3577 ;; Registers used:
  3578 ;;		wreg, status,2
  3579 ;; Tracked objects:
  3580 ;;		On entry : 0/0
  3581 ;;		On exit  : 0/0
  3582 ;;		Unchanged: 0/0
  3583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3584 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3586 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3587 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3588 ;;Total ram usage:        0 bytes
  3589 ;; Hardware stack levels used:    1
  3590 ;; Hardware stack levels required when called:    2
  3591 ;; This function calls:
  3592 ;;		Nothing
  3593 ;; This function is called by:
  3594 ;;		_main
  3595 ;; This function uses a non-reentrant model
  3596 ;;
  3597                           
  3598                           	psect	text20
  3599  001C3A                     __ptext20:
  3600                           	opt stack 0
  3601  001C3A                     _initADC:
  3602                           	opt stack 28
  3603                           
  3604                           ;temperature.c: 25: TRISAbits.TRISA0 = 1;
  3605                           
  3606                           ;incstack = 0
  3607  001C3A  8092               	bsf	3986,0,c	;volatile
  3608                           
  3609                           ;temperature.c: 26: TRISAbits.TRISA1 = 1;
  3610  001C3C  8292               	bsf	3986,1,c	;volatile
  3611                           
  3612                           ;temperature.c: 27: PORTAbits.RA0 = 0;
  3613  001C3E  9080               	bcf	3968,0,c	;volatile
  3614                           
  3615                           ;temperature.c: 28: PORTAbits.RA1 = 0;
  3616  001C40  9280               	bcf	3968,1,c	;volatile
  3617                           
  3618                           ;temperature.c: 30: PORTBbits.RB0 = 0;
  3619  001C42  9081               	bcf	3969,0,c	;volatile
  3620                           
  3621                           ;temperature.c: 31: TRISBbits.TRISB0 = 1;
  3622  001C44  8093               	bsf	3987,0,c	;volatile
  3623                           
  3624                           ;temperature.c: 32: PORTBbits.RB1 = 0;
  3625  001C46  9281               	bcf	3969,1,c	;volatile
  3626                           
  3627                           ;temperature.c: 33: TRISBbits.TRISB1 = 1;
  3628  001C48  8293               	bsf	3987,1,c	;volatile
  3629                           
  3630                           ;temperature.c: 36: ANCON0 = 0xFC;
  3631  001C4A  0EFC               	movlw	252
  3632  001C4C  010F               	movlb	15	; () banked
  3633  001C4E  6F48               	movwf	72,b	;volatile
  3634                           
  3635                           ;temperature.c: 37: ANCON1 = 0x1C;
  3636  001C50  0E1C               	movlw	28
  3637  001C52  010F               	movlb	15	; () banked
  3638  001C54  6F49               	movwf	73,b	;volatile
  3639                           
  3640                           ;temperature.c: 38: ADCON0 = 0x00;
  3641  001C56  0E00               	movlw	0
  3642  001C58  6EC2               	movwf	4034,c	;volatile
  3643                           
  3644                           ;temperature.c: 39: ADCON1 = 0b10111110;
  3645  001C5A  0EBE               	movlw	190
  3646  001C5C  6EC1               	movwf	4033,c	;volatile
  3647                           
  3648                           ; BSR set to: 15
  3649                           ;temperature.c: 40: ADCON0bits.ADON = 0x01;
  3650  001C5E  80C2               	bsf	4034,0,c	;volatile
  3651                           
  3652                           ; BSR set to: 15
  3653                           ;temperature.c: 42: PIR1bits.ADIF = 0;
  3654  001C60  9C9E               	bcf	3998,6,c	;volatile
  3655                           
  3656                           ; BSR set to: 15
  3657                           ;temperature.c: 43: PIE1bits.ADIE = 0;
  3658  001C62  9C9D               	bcf	3997,6,c	;volatile
  3659                           
  3660                           ; BSR set to: 15
  3661                           ;temperature.c: 46: ADCON0bits.GO_DONE = 1;
  3662  001C64  82C2               	bsf	4034,1,c	;volatile
  3663                           
  3664                           ; BSR set to: 15
  3665  001C66  0012               	return		;funcret
  3666  001C68                     __end_of_initADC:
  3667                           	opt stack 0
  3668                           tblptru	equ	0xFF8
  3669                           tblptrh	equ	0xFF7
  3670                           tblptrl	equ	0xFF6
  3671                           tablat	equ	0xFF5
  3672                           prodh	equ	0xFF4
  3673                           prodl	equ	0xFF3
  3674                           intcon	equ	0xFF2
  3675                           indf0	equ	0xFEF
  3676                           postinc0	equ	0xFEE
  3677                           fsr0h	equ	0xFEA
  3678                           fsr0l	equ	0xFE9
  3679                           wreg	equ	0xFE8
  3680                           indf1	equ	0xFE7
  3681                           postdec1	equ	0xFE5
  3682                           fsr1h	equ	0xFE2
  3683                           fsr1l	equ	0xFE1
  3684                           indf2	equ	0xFDF
  3685                           fsr2h	equ	0xFDA
  3686                           fsr2l	equ	0xFD9
  3687                           status	equ	0xFD8
  3688                           
  3689 ;; *************** function ___wmul *****************
  3690 ;; Defined at:
  3691 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  3692 ;; Parameters:    Size  Location     Type
  3693 ;;  multiplier      2   17[COMRAM] unsigned int 
  3694 ;;  multiplicand    2   19[COMRAM] unsigned int 
  3695 ;; Auto vars:     Size  Location     Type
  3696 ;;  product         2   21[COMRAM] unsigned int 
  3697 ;; Return value:  Size  Location     Type
  3698 ;;                  2   17[COMRAM] unsigned int 
  3699 ;; Registers used:
  3700 ;;		wreg, status,2, status,0, prodl, prodh
  3701 ;; Tracked objects:
  3702 ;;		On entry : 0/0
  3703 ;;		On exit  : 0/0
  3704 ;;		Unchanged: 0/0
  3705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3706 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3707 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3708 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3709 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3710 ;;Total ram usage:        6 bytes
  3711 ;; Hardware stack levels used:    1
  3712 ;; Hardware stack levels required when called:    2
  3713 ;; This function calls:
  3714 ;;		Nothing
  3715 ;; This function is called by:
  3716 ;;		_main
  3717 ;; This function uses a non-reentrant model
  3718 ;;
  3719                           
  3720                           	psect	text21
  3721  001C68                     __ptext21:
  3722                           	opt stack 0
  3723  001C68                     ___wmul:
  3724                           	opt stack 28
  3725                           
  3726                           ; BSR set to: 15
  3727                           ;incstack = 0
  3728  001C68  5012               	movf	___wmul@multiplier,w,c
  3729  001C6A  0214               	mulwf	___wmul@multiplicand,c
  3730  001C6C  CFF3 F016          	movff	prodl,___wmul@product
  3731  001C70  CFF4 F017          	movff	prodh,___wmul@product+1
  3732  001C74  5012               	movf	___wmul@multiplier,w,c
  3733  001C76  0215               	mulwf	___wmul@multiplicand+1,c
  3734  001C78  50F3               	movf	prodl,w,c
  3735  001C7A  2617               	addwf	___wmul@product+1,f,c
  3736  001C7C  5013               	movf	___wmul@multiplier+1,w,c
  3737  001C7E  0214               	mulwf	___wmul@multiplicand,c
  3738  001C80  50F3               	movf	prodl,w,c
  3739  001C82  2617               	addwf	___wmul@product+1,f,c
  3740  001C84  C016  F012         	movff	___wmul@product,?___wmul
  3741  001C88  C017  F013         	movff	___wmul@product+1,?___wmul+1
  3742  001C8C  0012               	return	
  3743  001C8E                     __end_of___wmul:
  3744                           	opt stack 0
  3745                           tblptru	equ	0xFF8
  3746                           tblptrh	equ	0xFF7
  3747                           tblptrl	equ	0xFF6
  3748                           tablat	equ	0xFF5
  3749                           prodh	equ	0xFF4
  3750                           prodl	equ	0xFF3
  3751                           intcon	equ	0xFF2
  3752                           indf0	equ	0xFEF
  3753                           postinc0	equ	0xFEE
  3754                           fsr0h	equ	0xFEA
  3755                           fsr0l	equ	0xFE9
  3756                           wreg	equ	0xFE8
  3757                           indf1	equ	0xFE7
  3758                           postdec1	equ	0xFE5
  3759                           fsr1h	equ	0xFE2
  3760                           fsr1l	equ	0xFE1
  3761                           indf2	equ	0xFDF
  3762                           fsr2h	equ	0xFDA
  3763                           fsr2l	equ	0xFD9
  3764                           status	equ	0xFD8
  3765                           
  3766 ;; *************** function _UARTReceive *****************
  3767 ;; Defined at:
  3768 ;;		line 53 in file "uart.c"
  3769 ;; Parameters:    Size  Location     Type
  3770 ;;  on_or_off       1    wreg     unsigned char 
  3771 ;; Auto vars:     Size  Location     Type
  3772 ;;  on_or_off       1   17[COMRAM] unsigned char 
  3773 ;; Return value:  Size  Location     Type
  3774 ;;                  1    wreg      void 
  3775 ;; Registers used:
  3776 ;;		wreg, status,2, status,0
  3777 ;; Tracked objects:
  3778 ;;		On entry : 0/0
  3779 ;;		On exit  : 0/0
  3780 ;;		Unchanged: 0/0
  3781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3782 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3783 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3784 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3785 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3786 ;;Total ram usage:        1 bytes
  3787 ;; Hardware stack levels used:    1
  3788 ;; Hardware stack levels required when called:    2
  3789 ;; This function calls:
  3790 ;;		Nothing
  3791 ;; This function is called by:
  3792 ;;		_main
  3793 ;; This function uses a non-reentrant model
  3794 ;;
  3795                           
  3796                           	psect	text22
  3797  001CAA                     __ptext22:
  3798                           	opt stack 0
  3799  001CAA                     _UARTReceive:
  3800                           	opt stack 28
  3801                           
  3802                           ;incstack = 0
  3803                           ;UARTReceive@on_or_off stored from wreg
  3804  001CAA  6E12               	movwf	UARTReceive@on_or_off,c
  3805                           
  3806                           ;uart.c: 54: if(on_or_off == 1){
  3807  001CAC  0412               	decf	UARTReceive@on_or_off,w,c
  3808  001CAE  A4D8               	btfss	status,2,c
  3809  001CB0  D002               	goto	l134
  3810                           
  3811                           ;uart.c: 55: RCSTA1bits.CREN = 1;
  3812  001CB2  88AC               	bsf	4012,4,c	;volatile
  3813                           
  3814                           ;uart.c: 56: }
  3815  001CB4  0012               	return	
  3816  001CB6                     l134:
  3817                           
  3818                           ;uart.c: 57: else{
  3819                           ;uart.c: 58: RCSTA1bits.CREN = 0;
  3820  001CB6  98AC               	bcf	4012,4,c	;volatile
  3821  001CB8  0012               	return	
  3822  001CBA                     __end_of_UARTReceive:
  3823                           	opt stack 0
  3824                           tblptru	equ	0xFF8
  3825                           tblptrh	equ	0xFF7
  3826                           tblptrl	equ	0xFF6
  3827                           tablat	equ	0xFF5
  3828                           prodh	equ	0xFF4
  3829                           prodl	equ	0xFF3
  3830                           intcon	equ	0xFF2
  3831                           indf0	equ	0xFEF
  3832                           postinc0	equ	0xFEE
  3833                           fsr0h	equ	0xFEA
  3834                           fsr0l	equ	0xFE9
  3835                           wreg	equ	0xFE8
  3836                           indf1	equ	0xFE7
  3837                           postdec1	equ	0xFE5
  3838                           fsr1h	equ	0xFE2
  3839                           fsr1l	equ	0xFE1
  3840                           indf2	equ	0xFDF
  3841                           fsr2h	equ	0xFDA
  3842                           fsr2l	equ	0xFD9
  3843                           status	equ	0xFD8
  3844                           
  3845 ;; *************** function _high_ISR *****************
  3846 ;; Defined at:
  3847 ;;		line 57 in file "main.c"
  3848 ;; Parameters:    Size  Location     Type
  3849 ;;		None
  3850 ;; Auto vars:     Size  Location     Type
  3851 ;;		None
  3852 ;; Return value:  Size  Location     Type
  3853 ;;                  1    wreg      void 
  3854 ;; Registers used:
  3855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3856 ;; Tracked objects:
  3857 ;;		On entry : 0/0
  3858 ;;		On exit  : 0/0
  3859 ;;		Unchanged: 0/0
  3860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3861 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3862 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3863 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3864 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3865 ;;Total ram usage:       14 bytes
  3866 ;; Hardware stack levels used:    1
  3867 ;; Hardware stack levels required when called:    1
  3868 ;; This function calls:
  3869 ;;		_frequency_interrupt
  3870 ;;		_temperature_interrupt
  3871 ;;		_uart_interrupt
  3872 ;; This function is called by:
  3873 ;;		Interrupt level 2
  3874 ;; This function uses a non-reentrant model
  3875 ;;
  3876                           
  3877                           	psect	intcode
  3878  000008                     __pintcode:
  3879                           	opt stack 0
  3880  000008                     _high_ISR:
  3881                           	opt stack 25
  3882                           
  3883                           ;incstack = 0
  3884  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  3885  00000A  CFFA F004          	movff	pclath,??_high_ISR
  3886  00000E  CFFB F005          	movff	pclatu,??_high_ISR+1
  3887  000012  CFE9 F006          	movff	fsr0l,??_high_ISR+2
  3888  000016  CFEA F007          	movff	fsr0h,??_high_ISR+3
  3889  00001A  CFE1 F008          	movff	fsr1l,??_high_ISR+4
  3890  00001E  CFE2 F009          	movff	fsr1h,??_high_ISR+5
  3891  000022  CFD9 F00A          	movff	fsr2l,??_high_ISR+6
  3892  000026  CFDA F00B          	movff	fsr2h,??_high_ISR+7
  3893  00002A  CFF3 F00C          	movff	prodl,??_high_ISR+8
  3894  00002E  CFF4 F00D          	movff	prodh,??_high_ISR+9
  3895  000032  CFF6 F00E          	movff	tblptrl,??_high_ISR+10
  3896  000036  CFF7 F00F          	movff	tblptrh,??_high_ISR+11
  3897  00003A  CFF8 F010          	movff	tblptru,??_high_ISR+12
  3898  00003E  CFF5 F011          	movff	tablat,??_high_ISR+13
  3899                           
  3900                           ;main.c: 58: temperature_interrupt();
  3901  000042  EC37  F00B         	call	_temperature_interrupt	;wreg free
  3902                           
  3903                           ;main.c: 59: uart_interrupt();
  3904  000046  EC05  F00E         	call	_uart_interrupt	;wreg free
  3905                           
  3906                           ;main.c: 60: frequency_interrupt();
  3907  00004A  ECD4  F00B         	call	_frequency_interrupt	;wreg free
  3908  00004E  C011  FFF5         	movff	??_high_ISR+13,tablat
  3909  000052  C010  FFF8         	movff	??_high_ISR+12,tblptru
  3910  000056  C00F  FFF7         	movff	??_high_ISR+11,tblptrh
  3911  00005A  C00E  FFF6         	movff	??_high_ISR+10,tblptrl
  3912  00005E  C00D  FFF4         	movff	??_high_ISR+9,prodh
  3913  000062  C00C  FFF3         	movff	??_high_ISR+8,prodl
  3914  000066  C00B  FFDA         	movff	??_high_ISR+7,fsr2h
  3915  00006A  C00A  FFD9         	movff	??_high_ISR+6,fsr2l
  3916  00006E  C009  FFE2         	movff	??_high_ISR+5,fsr1h
  3917  000072  C008  FFE1         	movff	??_high_ISR+4,fsr1l
  3918  000076  C007  FFEA         	movff	??_high_ISR+3,fsr0h
  3919  00007A  C006  FFE9         	movff	??_high_ISR+2,fsr0l
  3920  00007E  C005  FFFB         	movff	??_high_ISR+1,pclatu
  3921  000082  C004  FFFA         	movff	??_high_ISR,pclath
  3922  000086  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  3923  000088  0011               	retfie		f
  3924  00008A                     __end_of_high_ISR:
  3925                           	opt stack 0
  3926                           pclatu	equ	0xFFB
  3927                           pclath	equ	0xFFA
  3928                           tblptru	equ	0xFF8
  3929                           tblptrh	equ	0xFF7
  3930                           tblptrl	equ	0xFF6
  3931                           tablat	equ	0xFF5
  3932                           prodh	equ	0xFF4
  3933                           prodl	equ	0xFF3
  3934                           intcon	equ	0xFF2
  3935                           indf0	equ	0xFEF
  3936                           postinc0	equ	0xFEE
  3937                           fsr0h	equ	0xFEA
  3938                           fsr0l	equ	0xFE9
  3939                           wreg	equ	0xFE8
  3940                           indf1	equ	0xFE7
  3941                           postdec1	equ	0xFE5
  3942                           fsr1h	equ	0xFE2
  3943                           fsr1l	equ	0xFE1
  3944                           indf2	equ	0xFDF
  3945                           fsr2h	equ	0xFDA
  3946                           fsr2l	equ	0xFD9
  3947                           status	equ	0xFD8
  3948                           
  3949 ;; *************** function _uart_interrupt *****************
  3950 ;; Defined at:
  3951 ;;		line 89 in file "uart.c"
  3952 ;; Parameters:    Size  Location     Type
  3953 ;;		None
  3954 ;; Auto vars:     Size  Location     Type
  3955 ;;		None
  3956 ;; Return value:  Size  Location     Type
  3957 ;;                  1    wreg      void 
  3958 ;; Registers used:
  3959 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  3960 ;; Tracked objects:
  3961 ;;		On entry : 0/0
  3962 ;;		On exit  : 0/0
  3963 ;;		Unchanged: 0/0
  3964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3966 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3968 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3969 ;;Total ram usage:        0 bytes
  3970 ;; Hardware stack levels used:    1
  3971 ;; This function calls:
  3972 ;;		Nothing
  3973 ;; This function is called by:
  3974 ;;		_high_ISR
  3975 ;; This function uses a non-reentrant model
  3976 ;;
  3977                           
  3978                           	psect	text24
  3979  001C0A                     __ptext24:
  3980                           	opt stack 0
  3981  001C0A                     _uart_interrupt:
  3982                           	opt stack 25
  3983                           
  3984                           ;uart.c: 91: if(PIR1bits.RC1IF == 1){
  3985                           
  3986                           ;incstack = 0
  3987  001C0A  AA9E               	btfss	3998,5,c	;volatile
  3988  001C0C  0012               	return	
  3989                           
  3990                           ;uart.c: 92: PIR1bits.RC1IF = 0;
  3991  001C0E  9A9E               	bcf	3998,5,c	;volatile
  3992                           
  3993                           ;uart.c: 94: uart_receive_buffer[uart_receive_buffer_index] = RCREG1;
  3994  001C10  0E00               	movlw	low _uart_receive_buffer
  3995  001C12  244C               	addwf	_uart_receive_buffer_index,w,c
  3996  001C14  6ED9               	movwf	fsr2l,c
  3997  001C16  0E01               	movlw	high _uart_receive_buffer
  3998  001C18  204D               	addwfc	_uart_receive_buffer_index+1,w,c
  3999  001C1A  6EDA               	movwf	fsr2h,c
  4000  001C1C  CFAF FFDF          	movff	4015,indf2	;volatile
  4001                           
  4002                           ;uart.c: 95: uart_receive_buffer_index += 1;
  4003  001C20  4A4C               	infsnz	_uart_receive_buffer_index,f,c
  4004  001C22  2A4D               	incf	_uart_receive_buffer_index+1,f,c
  4005                           
  4006                           ;uart.c: 99: if(uart_receive_buffer_index > 100){
  4007  001C24  504D               	movf	_uart_receive_buffer_index+1,w,c
  4008  001C26  E104               	bnz	i2u134_40
  4009  001C28  0E65               	movlw	101
  4010  001C2A  5C4C               	subwf	_uart_receive_buffer_index,w,c
  4011  001C2C  A0D8               	btfss	status,0,c
  4012  001C2E  0012               	return	
  4013  001C30                     i2u134_40:
  4014                           
  4015                           ;uart.c: 100: uart_receive_buffer_index = 0;
  4016  001C30  0E00               	movlw	0
  4017  001C32  6E4D               	movwf	_uart_receive_buffer_index+1,c
  4018  001C34  0E00               	movlw	0
  4019  001C36  6E4C               	movwf	_uart_receive_buffer_index,c
  4020  001C38  0012               	return	
  4021  001C3A                     __end_of_uart_interrupt:
  4022                           	opt stack 0
  4023                           pclatu	equ	0xFFB
  4024                           pclath	equ	0xFFA
  4025                           tblptru	equ	0xFF8
  4026                           tblptrh	equ	0xFF7
  4027                           tblptrl	equ	0xFF6
  4028                           tablat	equ	0xFF5
  4029                           prodh	equ	0xFF4
  4030                           prodl	equ	0xFF3
  4031                           intcon	equ	0xFF2
  4032                           indf0	equ	0xFEF
  4033                           postinc0	equ	0xFEE
  4034                           fsr0h	equ	0xFEA
  4035                           fsr0l	equ	0xFE9
  4036                           wreg	equ	0xFE8
  4037                           indf1	equ	0xFE7
  4038                           postdec1	equ	0xFE5
  4039                           fsr1h	equ	0xFE2
  4040                           fsr1l	equ	0xFE1
  4041                           indf2	equ	0xFDF
  4042                           fsr2h	equ	0xFDA
  4043                           fsr2l	equ	0xFD9
  4044                           status	equ	0xFD8
  4045                           
  4046 ;; *************** function _temperature_interrupt *****************
  4047 ;; Defined at:
  4048 ;;		line 113 in file "temperature.c"
  4049 ;; Parameters:    Size  Location     Type
  4050 ;;		None
  4051 ;; Auto vars:     Size  Location     Type
  4052 ;;		None
  4053 ;; Return value:  Size  Location     Type
  4054 ;;                  1    wreg      void 
  4055 ;; Registers used:
  4056 ;;		wreg, status,2, status,0
  4057 ;; Tracked objects:
  4058 ;;		On entry : 0/0
  4059 ;;		On exit  : 0/0
  4060 ;;		Unchanged: 0/0
  4061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4062 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4063 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4065 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4066 ;;Total ram usage:        2 bytes
  4067 ;; Hardware stack levels used:    1
  4068 ;; This function calls:
  4069 ;;		Nothing
  4070 ;; This function is called by:
  4071 ;;		_high_ISR
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           	psect	text25
  4076  00166E                     __ptext25:
  4077                           	opt stack 0
  4078  00166E                     _temperature_interrupt:
  4079                           	opt stack 25
  4080                           
  4081                           ;temperature.c: 115: if(PIR1bits.ADIF == 1)
  4082                           
  4083                           ;incstack = 0
  4084  00166E  AC9E               	btfss	3998,6,c	;volatile
  4085  001670  0012               	return	
  4086                           
  4087                           ;temperature.c: 116: {
  4088                           ;temperature.c: 117: PIR1bits.ADIF = 0;
  4089  001672  9C9E               	bcf	3998,6,c	;volatile
  4090                           
  4091                           ;temperature.c: 118: switch(currentChannel){
  4092  001674  D035               	goto	i2l2007
  4093  001676                     i2l228:
  4094                           
  4095                           ;temperature.c: 120: plus_pipe = ADRES;
  4096  001676  CFC3 F04A          	movff	4035,_plus_pipe	;volatile
  4097  00167A  CFC4 F04B          	movff	4036,_plus_pipe+1	;volatile
  4098                           
  4099                           ;temperature.c: 121: ADCON0bits.CHS = 0b1000;
  4100  00167E  50C2               	movf	4034,w,c	;volatile
  4101  001680  0BC3               	andlw	-61
  4102  001682  0920               	iorlw	32
  4103  001684  6EC2               	movwf	4034,c	;volatile
  4104                           
  4105                           ;temperature.c: 122: currentChannel = 1;
  4106  001686  0E00               	movlw	0
  4107  001688  0100               	movlb	0	; () banked
  4108  00168A  6FB3               	movwf	(_currentChannel+1)& (0+255),b
  4109  00168C  0E01               	movlw	1
  4110  00168E  D026               	goto	L5
  4111  001690                     i2l230:
  4112                           
  4113                           ;temperature.c: 125: minus_pipe = ADRES;
  4114  001690  CFC3 F046          	movff	4035,_minus_pipe	;volatile
  4115  001694  CFC4 F047          	movff	4036,_minus_pipe+1	;volatile
  4116                           
  4117                           ;temperature.c: 126: ADCON0bits.CHS = 0b0001;
  4118  001698  50C2               	movf	4034,w,c	;volatile
  4119  00169A  0BC3               	andlw	-61
  4120  00169C  0904               	iorlw	4
  4121  00169E  6EC2               	movwf	4034,c	;volatile
  4122                           
  4123                           ;temperature.c: 127: currentChannel = 2;
  4124  0016A0  0E00               	movlw	0
  4125  0016A2  0100               	movlb	0	; () banked
  4126  0016A4  6FB3               	movwf	(_currentChannel+1)& (0+255),b
  4127  0016A6  0E02               	movlw	2
  4128  0016A8  D019               	goto	L5
  4129  0016AA                     i2l231:
  4130                           
  4131                           ;temperature.c: 130: plus_ambient = ADRES;
  4132  0016AA  CFC3 F048          	movff	4035,_plus_ambient	;volatile
  4133  0016AE  CFC4 F049          	movff	4036,_plus_ambient+1	;volatile
  4134                           
  4135                           ;temperature.c: 131: ADCON0bits.CHS = 0b0000;
  4136  0016B2  94C2               	bcf	4034,2,c	;volatile
  4137  0016B4  96C2               	bcf	4034,3,c	;volatile
  4138  0016B6  98C2               	bcf	4034,4,c	;volatile
  4139  0016B8  9AC2               	bcf	4034,5,c	;volatile
  4140                           
  4141                           ;temperature.c: 132: currentChannel = 3;
  4142  0016BA  0E00               	movlw	0
  4143  0016BC  0100               	movlb	0	; () banked
  4144  0016BE  6FB3               	movwf	(_currentChannel+1)& (0+255),b
  4145  0016C0  0E03               	movlw	3
  4146  0016C2  D00C               	goto	L5
  4147  0016C4                     i2l232:
  4148                           
  4149                           ;temperature.c: 135: minus_ambient = ADRES;
  4150  0016C4  CFC3 F044          	movff	4035,_minus_ambient	;volatile
  4151  0016C8  CFC4 F045          	movff	4036,_minus_ambient+1	;volatile
  4152                           
  4153                           ;temperature.c: 136: ADCON0bits.CHS = 0b1001;
  4154  0016CC  50C2               	movf	4034,w,c	;volatile
  4155  0016CE  0BC3               	andlw	-61
  4156  0016D0  0924               	iorlw	36
  4157  0016D2  6EC2               	movwf	4034,c	;volatile
  4158                           
  4159                           ;temperature.c: 137: currentChannel = 0;
  4160  0016D4  0E00               	movlw	0
  4161  0016D6  0100               	movlb	0	; () banked
  4162  0016D8  6FB3               	movwf	(_currentChannel+1)& (0+255),b
  4163  0016DA  0E00               	movlw	0
  4164  0016DC                     L5:
  4165  0016DC  6FB2               	movwf	_currentChannel& (0+255),b
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;temperature.c: 139: }
  4169                           
  4170                           ;temperature.c: 138: break;
  4171  0016DE  D015               	goto	i2l229
  4172  0016E0                     i2l2007:
  4173  0016E0  C0B2  F001         	movff	_currentChannel,??_temperature_interrupt
  4174  0016E4  C0B3  F002         	movff	_currentChannel+1,??_temperature_interrupt+1
  4175                           
  4176                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4177                           ; Switch size 1, requested type "space"
  4178                           ; Number of cases is 1, Range of values is 0 to 0
  4179                           ; switch strategies available:
  4180                           ; Name         Instructions Cycles
  4181                           ; simple_byte            4     3 (average)
  4182                           ;	Chosen strategy is simple_byte
  4183  0016E8  5002               	movf	??_temperature_interrupt+1,w,c
  4184  0016EA  0A00               	xorlw	0	; case 0
  4185  0016EC  A4D8               	btfss	status,2,c
  4186  0016EE  D00D               	goto	i2l229
  4187                           
  4188                           ; Switch size 1, requested type "space"
  4189                           ; Number of cases is 4, Range of values is 0 to 3
  4190                           ; switch strategies available:
  4191                           ; Name         Instructions Cycles
  4192                           ; simple_byte           13     7 (average)
  4193                           ;	Chosen strategy is simple_byte
  4194  0016F0  5001               	movf	??_temperature_interrupt,w,c
  4195  0016F2  0A00               	xorlw	0	; case 0
  4196  0016F4  B4D8               	btfsc	status,2,c
  4197  0016F6  D7BF               	goto	i2l228
  4198  0016F8  0A01               	xorlw	1	; case 1
  4199  0016FA  B4D8               	btfsc	status,2,c
  4200  0016FC  D7C9               	goto	i2l230
  4201  0016FE  0A03               	xorlw	3	; case 2
  4202  001700  B4D8               	btfsc	status,2,c
  4203  001702  D7D3               	goto	i2l231
  4204  001704  0A01               	xorlw	1	; case 3
  4205  001706  B4D8               	btfsc	status,2,c
  4206  001708  D7DD               	goto	i2l232
  4207  00170A                     i2l229:
  4208                           
  4209                           ;temperature.c: 140: ADCON0bits.GO_DONE = 1;
  4210  00170A  82C2               	bsf	4034,1,c	;volatile
  4211  00170C  0012               	return	
  4212  00170E                     __end_of_temperature_interrupt:
  4213                           	opt stack 0
  4214                           pclatu	equ	0xFFB
  4215                           pclath	equ	0xFFA
  4216                           tblptru	equ	0xFF8
  4217                           tblptrh	equ	0xFF7
  4218                           tblptrl	equ	0xFF6
  4219                           tablat	equ	0xFF5
  4220                           prodh	equ	0xFF4
  4221                           prodl	equ	0xFF3
  4222                           intcon	equ	0xFF2
  4223                           indf0	equ	0xFEF
  4224                           postinc0	equ	0xFEE
  4225                           fsr0h	equ	0xFEA
  4226                           fsr0l	equ	0xFE9
  4227                           wreg	equ	0xFE8
  4228                           indf1	equ	0xFE7
  4229                           postdec1	equ	0xFE5
  4230                           fsr1h	equ	0xFE2
  4231                           fsr1l	equ	0xFE1
  4232                           indf2	equ	0xFDF
  4233                           fsr2h	equ	0xFDA
  4234                           fsr2l	equ	0xFD9
  4235                           status	equ	0xFD8
  4236                           
  4237 ;; *************** function _frequency_interrupt *****************
  4238 ;; Defined at:
  4239 ;;		line 39 in file "frequency.c"
  4240 ;; Parameters:    Size  Location     Type
  4241 ;;		None
  4242 ;; Auto vars:     Size  Location     Type
  4243 ;;		None
  4244 ;; Return value:  Size  Location     Type
  4245 ;;                  1    wreg      void 
  4246 ;; Registers used:
  4247 ;;		wreg, status,2, status,0
  4248 ;; Tracked objects:
  4249 ;;		On entry : 0/0
  4250 ;;		On exit  : 0/0
  4251 ;;		Unchanged: 0/0
  4252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4255 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4256 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4257 ;;Total ram usage:        3 bytes
  4258 ;; Hardware stack levels used:    1
  4259 ;; This function calls:
  4260 ;;		Nothing
  4261 ;; This function is called by:
  4262 ;;		_high_ISR
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text26
  4267  0017A8                     __ptext26:
  4268                           	opt stack 0
  4269  0017A8                     _frequency_interrupt:
  4270                           	opt stack 25
  4271                           
  4272                           ;frequency.c: 41: if(PIR4bits.CCP8IF == 1)
  4273                           
  4274                           ;incstack = 0
  4275  0017A8  AA8F               	btfss	3983,5,c	;volatile
  4276  0017AA  0012               	return	
  4277                           
  4278                           ;frequency.c: 42: {
  4279                           ;frequency.c: 44: measurement1 = measurement2;
  4280  0017AC  C042  F040         	movff	_measurement2,_measurement1
  4281  0017B0  C043  F041         	movff	_measurement2+1,_measurement1+1
  4282                           
  4283                           ;frequency.c: 45: measurement2 = CCPR8L + 256*CCPR8H;
  4284  0017B4  010F               	movlb	15	; () banked
  4285  0017B6  5108               	movf	8,w,b	;volatile
  4286  0017B8  6E02               	movwf	(??_frequency_interrupt+1)& (0+255),c
  4287  0017BA  6A01               	clrf	??_frequency_interrupt& (0+255),c
  4288  0017BC  010F               	movlb	15	; () banked
  4289  0017BE  5107               	movf	7,w,b	;volatile
  4290  0017C0  2401               	addwf	??_frequency_interrupt,w,c
  4291  0017C2  6E42               	movwf	_measurement2,c
  4292  0017C4  0E00               	movlw	0
  4293  0017C6  2002               	addwfc	??_frequency_interrupt+1,w,c
  4294  0017C8  6E43               	movwf	_measurement2+1,c
  4295                           
  4296                           ;frequency.c: 46: if((measurement2 - measurement1)/16 < 1600){
  4297  0017CA  C040  F001         	movff	_measurement1,??_frequency_interrupt
  4298  0017CE  C041  F002         	movff	_measurement1+1,??_frequency_interrupt+1
  4299  0017D2  1E01               	comf	??_frequency_interrupt,f,c
  4300  0017D4  1E02               	comf	??_frequency_interrupt+1,f,c
  4301  0017D6  4A01               	infsnz	??_frequency_interrupt,f,c
  4302  0017D8  2A02               	incf	??_frequency_interrupt+1,f,c
  4303  0017DA  5042               	movf	_measurement2,w,c
  4304  0017DC  2601               	addwf	??_frequency_interrupt,f,c
  4305  0017DE  5043               	movf	_measurement2+1,w,c
  4306  0017E0  2202               	addwfc	??_frequency_interrupt+1,f,c
  4307  0017E2  0E04               	movlw	4
  4308  0017E4  6E03               	movwf	(??_frequency_interrupt+2)& (0+255),c
  4309  0017E6                     i2u136_45:
  4310  0017E6  90D8               	bcf	status,0,c
  4311  0017E8  3202               	rrcf	??_frequency_interrupt+1,f,c
  4312  0017EA  3201               	rrcf	??_frequency_interrupt,f,c
  4313  0017EC  2E03               	decfsz	(??_frequency_interrupt+2)& (0+255),f,c
  4314  0017EE  D7FB               	goto	i2u136_45
  4315  0017F0  0E40               	movlw	64
  4316  0017F2  5C01               	subwf	??_frequency_interrupt,w,c
  4317  0017F4  0E06               	movlw	6
  4318  0017F6  5802               	subwfb	??_frequency_interrupt+1,w,c
  4319  0017F8  B0D8               	btfsc	status,0,c
  4320  0017FA  D017               	goto	i2l2033
  4321                           
  4322                           ; BSR set to: 15
  4323                           ;frequency.c: 47: value = (measurement2 - measurement1)/16;
  4324  0017FC  C040  F001         	movff	_measurement1,??_frequency_interrupt
  4325  001800  C041  F002         	movff	_measurement1+1,??_frequency_interrupt+1
  4326  001804  1E01               	comf	??_frequency_interrupt,f,c
  4327  001806  1E02               	comf	??_frequency_interrupt+1,f,c
  4328  001808  4A01               	infsnz	??_frequency_interrupt,f,c
  4329  00180A  2A02               	incf	??_frequency_interrupt+1,f,c
  4330  00180C  5042               	movf	_measurement2,w,c
  4331  00180E  2601               	addwf	??_frequency_interrupt,f,c
  4332  001810  5043               	movf	_measurement2+1,w,c
  4333  001812  2202               	addwfc	??_frequency_interrupt+1,f,c
  4334  001814  0E04               	movlw	4
  4335  001816  6E03               	movwf	(??_frequency_interrupt+2)& (0+255),c
  4336  001818                     i2u138_45:
  4337  001818  90D8               	bcf	status,0,c
  4338  00181A  3202               	rrcf	??_frequency_interrupt+1,f,c
  4339  00181C  3201               	rrcf	??_frequency_interrupt,f,c
  4340  00181E  2E03               	decfsz	(??_frequency_interrupt+2)& (0+255),f,c
  4341  001820  D7FB               	goto	i2u138_45
  4342  001822  C001  F0C0         	movff	??_frequency_interrupt,_value
  4343  001826  C002  F0C1         	movff	??_frequency_interrupt+1,_value+1
  4344  00182A                     i2l2033:
  4345                           
  4346                           ; BSR set to: 15
  4347                           ;frequency.c: 48: }
  4348                           ;frequency.c: 53: PIR4bits.CCP8IF=0;
  4349  00182A  9A8F               	bcf	3983,5,c	;volatile
  4350  00182C  0012               	return	
  4351  00182E                     __end_of_frequency_interrupt:
  4352                           	opt stack 0
  4353                           pclatu	equ	0xFFB
  4354                           pclath	equ	0xFFA
  4355                           tblptru	equ	0xFF8
  4356                           tblptrh	equ	0xFF7
  4357                           tblptrl	equ	0xFF6
  4358                           tablat	equ	0xFF5
  4359                           prodh	equ	0xFF4
  4360                           prodl	equ	0xFF3
  4361                           intcon	equ	0xFF2
  4362                           indf0	equ	0xFEF
  4363                           postinc0	equ	0xFEE
  4364                           fsr0h	equ	0xFEA
  4365                           fsr0l	equ	0xFE9
  4366                           wreg	equ	0xFE8
  4367                           indf1	equ	0xFE7
  4368                           postdec1	equ	0xFE5
  4369                           fsr1h	equ	0xFE2
  4370                           fsr1l	equ	0xFE1
  4371                           indf2	equ	0xFDF
  4372                           fsr2h	equ	0xFDA
  4373                           fsr2l	equ	0xFD9
  4374                           status	equ	0xFD8
  4375                           pclatu	equ	0xFFB
  4376                           pclath	equ	0xFFA
  4377                           tblptru	equ	0xFF8
  4378                           tblptrh	equ	0xFF7
  4379                           tblptrl	equ	0xFF6
  4380                           tablat	equ	0xFF5
  4381                           prodh	equ	0xFF4
  4382                           prodl	equ	0xFF3
  4383                           intcon	equ	0xFF2
  4384                           indf0	equ	0xFEF
  4385                           postinc0	equ	0xFEE
  4386                           fsr0h	equ	0xFEA
  4387                           fsr0l	equ	0xFE9
  4388                           wreg	equ	0xFE8
  4389                           indf1	equ	0xFE7
  4390                           postdec1	equ	0xFE5
  4391                           fsr1h	equ	0xFE2
  4392                           fsr1l	equ	0xFE1
  4393                           indf2	equ	0xFDF
  4394                           fsr2h	equ	0xFDA
  4395                           fsr2l	equ	0xFD9
  4396                           status	equ	0xFD8
  4397                           
  4398                           	psect	rparam
  4399  0000                     pclatu	equ	0xFFB
  4400                           pclath	equ	0xFFA
  4401                           tblptru	equ	0xFF8
  4402                           tblptrh	equ	0xFF7
  4403                           tblptrl	equ	0xFF6
  4404                           tablat	equ	0xFF5
  4405                           prodh	equ	0xFF4
  4406                           prodl	equ	0xFF3
  4407                           intcon	equ	0xFF2
  4408                           indf0	equ	0xFEF
  4409                           postinc0	equ	0xFEE
  4410                           fsr0h	equ	0xFEA
  4411                           fsr0l	equ	0xFE9
  4412                           wreg	equ	0xFE8
  4413                           indf1	equ	0xFE7
  4414                           postdec1	equ	0xFE5
  4415                           fsr1h	equ	0xFE2
  4416                           fsr1l	equ	0xFE1
  4417                           indf2	equ	0xFDF
  4418                           fsr2h	equ	0xFDA
  4419                           fsr2l	equ	0xFD9
  4420                           status	equ	0xFD8
  4421                           
  4422                           	psect	temp
  4423  00004E                     btemp:
  4424                           	opt stack 0
  4425  00004E                     	ds	1
  4426  0000                     int$flags	set	btemp
  4427                           pclatu	equ	0xFFB
  4428                           pclath	equ	0xFFA
  4429                           tblptru	equ	0xFF8
  4430                           tblptrh	equ	0xFF7
  4431                           tblptrl	equ	0xFF6
  4432                           tablat	equ	0xFF5
  4433                           prodh	equ	0xFF4
  4434                           prodl	equ	0xFF3
  4435                           intcon	equ	0xFF2
  4436                           indf0	equ	0xFEF
  4437                           postinc0	equ	0xFEE
  4438                           fsr0h	equ	0xFEA
  4439                           fsr0l	equ	0xFE9
  4440                           wreg	equ	0xFE8
  4441                           indf1	equ	0xFE7
  4442                           postdec1	equ	0xFE5
  4443                           fsr1h	equ	0xFE2
  4444                           fsr1l	equ	0xFE1
  4445                           indf2	equ	0xFDF
  4446                           fsr2h	equ	0xFDA
  4447                           fsr2l	equ	0xFD9
  4448                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    173
    Data        52
    BSS         135
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      77
    BANK0           160     27     100
    BANK1           256      0     100
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    sendUARTMessage@newMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), set_dev_eui(CODE[34]), 
		 -> temp_display_message(BANK0[20]), frequency_message(BANK0[26]), 

    currentMessagePointer	PTR unsigned char  size(2) Largest target is 50
		 -> NULL(NULL[0]), join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), 
		 -> set_dev_eui(CODE[34]), temp_display_message(BANK0[20]), frequency_message(BANK0[26]), 


Critical Paths under _main in COMRAM

    _make_frequency_message->___lwdiv
    ___lwdiv->___lwmod
    _makeTempMessage->_calculateTemp
    _fillInTemp->___awdiv
    ___awdiv->___awmod
    _calculateTemp->___ftmul
    ___fttol->___ftmul
    ___ftmul->___ftdiv
    ___ftdiv->___awtoft
    ___awtoft->___ftpack
    _initLoRa->_sendUARTMessage
    _sendUARTMessage->_delay_ms

Critical Paths under _high_ISR in COMRAM

    _high_ISR->_frequency_interrupt

Critical Paths under _main in BANK0

    _main->_makeTempMessage
    _makeTempMessage->_calculateTemp
    _calculateTemp->___fttol

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0   17038
                                             25 BANK0      2     2      0
                        _UARTReceive
                             ___wmul
                           _delay_ms
                            _initADC
                     _initInterrupts
                           _initLoRa
                          _initUART1
                     _init_frequency
                    _makeTempMessage
             _make_frequency_message
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _make_frequency_message                               0     0      0    1089
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     543
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     546
                                             22 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _makeTempMessage                                      1     1      0   12050
                                             24 BANK0      1     1      0
                      _calculateTemp
                         _fillInTemp
 ---------------------------------------------------------------------------------
 (2) _fillInTemp                                          12    12      0    2079
                                             31 COMRAM    12    12      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     741
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     753
                                             23 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                       11     7      4    9940
                                             59 COMRAM     2     2      0
                                             15 BANK0      9     5      4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     448
                                              0 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    3160
                                             44 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3246
                                             29 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    2614
                                             25 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2404
                                             17 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _init_frequency                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLoRa                                             0     0      0    1714
                           _delay_ms
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _sendUARTMessage                                      2     0      2    1092
                                             22 COMRAM     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     622
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) ___wmul                                               6     2      4     415
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _UARTReceive                                          1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _high_ISR                                            14    14      0       0
                                              3 COMRAM    14    14      0
                _frequency_interrupt
              _temperature_interrupt
                     _uart_interrupt
 ---------------------------------------------------------------------------------
 (6) _uart_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _temperature_interrupt                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (6) _frequency_interrupt                                  3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReceive
   ___wmul
   _delay_ms
   _initADC
   _initInterrupts
   _initLoRa
     _delay_ms
     _sendUARTMessage
       _delay_ms
   _initUART1
   _init_frequency
   _makeTempMessage
     _calculateTemp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftpack (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
           ___ftpack (ARG)
     _fillInTemp
       ___awdiv
         ___awmod (ARG)
       ___awmod
   _make_frequency_message
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _sendUARTMessage
     _delay_ms

 _high_ISR (ROOT)
   _frequency_interrupt
   _temperature_interrupt
   _uart_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      64       8       39.1%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     1B      64       5       62.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      4D       1       81.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     115       6        0.0%
DATA                 0      0     115       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Fri Mar 24 15:34:21 2017

                    ___awdiv@sign 001D               ___wmul@multiplicand 0014  
                             l210 1056                               l140 18C6  
                             l134 1CB6                               l207 1002  
                             l263 1BF4                               l600 1412  
                             l542 164E                               l720 1A98  
                             l730 1B28            ?_temperature_interrupt 0001  
                    ___awmod@sign 0017                               prod 000FF3  
                             wreg 000FE8                        _TXSTA1bits 000FAD  
           ??_frequency_interrupt 0001                      ___ftdiv@cntr 0027  
                    ___ftdiv@sign 002C                              l2131 15DE  
                            l2211 1292                              l2141 163A  
                            l2133 15E8                              l2143 1644  
                            l2135 1606                              l2127 15D0  
                            l2231 12EC                              l2241 1314  
                            l2217 12BA                              l2321 1976  
                            l2313 1956                              l2305 193C  
                            l2139 161C                              l2171 13AE  
                            l2235 12FC                              l2315 195E  
                            l2411 1024                              l2341 1B80  
                            l2165 1386                              l2245 1324  
                            l2261 1842                              l2317 1962  
                            l2325 1980                              l2309 1948  
                            l2405 100C                              l2191 13EC  
                            l2351 1160                              l2423 1072  
                            l2273 1868                              l2329 198E  
                            l2433 10E4                              l2425 1078  
                            l2417 105E                              l2275 1870  
                            l2267 1852                              l1565 1BE2  
                            l1813 18FE                              l2381 1232  
                            l2373 1206                              l2293 18A8  
                            l2285 1890                              l2277 1874  
                            l2437 10EC                              l2383 123C  
                            l1911 1B1E                              l1903 1AFE  
                            l2369 11F2                              l2289 189A  
                            l1905 1B06                              l2387 1258  
                            l2379 1222                              l2459 1A2C  
                            l1907 1B0A                              l2475 1460  
                            l2399 0FD0                              l1883 1A66  
                            l1885 1A6E                              l1895 1A8E  
                            l1887 1A72                              u1130 18EC  
                            u1140 1920                              u1137 18E2  
                            u1147 1916                              u1511 1396  
                            u1541 127A                              u1561 12A2  
                            u1491 136E                              u1731 113C  
                            u1750 1186                              u1830 1002  
                            u1850 1056                              u1907 1BE8  
                            u1755 117C           ?_make_frequency_message 0001  
                            _main 1444                      ___ftpack@arg 0012  
                    ___ftpack@exp 0015                              fsr0h 000FEA  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            btemp 004E                              pclat 000FFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 008A                  fillInTemp@i_1142 0027  
                fillInTemp@i_1143 0029                  ??_uart_interrupt 0001  
                    ___ftmul@cntr 003A           __end_of_makeTempMessage 1A50  
                    ___param_bank 000010                      ___ftmul@sign 003B  
                    ___fttol@exp1 00A2                      ___fttol@lval 009E  
                ?_sendUARTMessage 0017                      _BAUDCON1bits 000F7E  
                           ?_main 0001                   __end_of___awdiv 18B2  
                           _ADRES 000FC3             __end_of_ambient_ascii 0F23  
                 __end_of___awmod 1998                   __end_of___ftdiv 1444  
                 __end_of___ftmul 135E                   ___awdiv@divisor 001A  
                 __end_of___fttol 126A                   __end_of___lwdiv 1AA2  
                 __end_of___lwmod 1B32                             i2l230 1690  
                           i2l231 16AA                             i2l232 16C4  
                           i2l228 1676                             i2l229 170A  
                 ___awdiv@counter 001C                             _TMR1H 000FCF  
                           _TMR1L 000FCE                   __end_of_initADC 1C68  
                   ___awtoft@sign 001D    __end_of_make_frequency_message 17A8  
                   ___ftpack@sign 0016                             _value 00C0  
                           _timer 00BA                             tablat 000FF5  
                           status 000FD8                   __initialization 1AA2  
                    __end_of_main 150E                            ??_main 003E  
                   ___fttol@sign1 009D                     __activetblptr 000003  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          _CCPR8H 000F08                            _CCPR8L 000F07  
                          _ANCON0 000F48                            _ANCON1 000F49  
                ___awdiv@dividend 0018                  __end_of___awtoft 1BA4  
                __end_of___ftpack 166E                            i2l2007 16E0  
                          i2l2033 182A                    __CFG_WDTEN$OFF 000000  
                          _INTCON 000FF2                            _RCREG1 000FAF  
                          _SPBRG1 000FB0                            _TXREG1 000FAE  
                    ?_UARTReceive 0001                  __end_of_delay_ms 1C0A  
                  __CFG_XINST$OFF 000000                  __end_of_high_ISR 008A  
            _temp_display_message 0080                      _CCPTMRS2bits 000F50  
                ?_makeTempMessage 0001                            ___wmul 1C68  
                       ??___awdiv 001C                         ??___awmod 0016  
                       ??___ftdiv 0024                         ??___ftmul 0033  
                       ??___fttol 0098                         ??___lwdiv 001B  
                       ??___lwmod 0016                  __end_of_initLoRa 19FA  
                          clear_0 1AA8                            clear_1 1AB4  
                          clear_2 1AC0                  ___awdiv@quotient 001E  
                 ___awmod@divisor 0014                            _valueH 00BC  
                          _valueL 00BE                   ___awmod@counter 0016  
                       ??_initADC 0012             ___ftmul@f3_as_product 0037  
           __end_of_set_data_rate 0F10                      __mediumconst 0000  
                          tblptrh 000FF7                            tblptrl 000FF6  
                          tblptru 000FF8                        __accesstop 0060  
         __end_of__initialization 1AE6                     ___rparam_used 000001  
                      ___ftdiv@f1 001E                        ___ftdiv@f2 0021  
                      ___ftdiv@f3 0028                        ___awtoft@c 001A  
                      ___ftmul@f1 002D                        ___ftmul@f2 0030  
                      ___fttol@f1 0094                    __pcstackCOMRAM 0001  
                    __pidataBANK0 1BA4           __size_of_initInterrupts 0008  
         ??_temperature_interrupt 0001                        __pbssBANK0 00AF  
                      __pbssBANK1 0100                __size_of_initUART1 001C  
           __end_of_getVerCommand 0F1E                           ?___wmul 0012  
                         _CCP8CON 000F06                         ?___awtoft 001A  
                       ?___ftpack 0012                        _fillInTemp 0FB0  
     __end_of_frequency_interrupt 182E            __size_of_calculateTemp 00B2  
              __CFG_OSC$INTOSCPLL 000000                         ?_delay_ms 0012  
                         _SPBRGH1 000F7F                         ?_high_ISR 0001  
                __CFG_CFGPLLEN$ON 000000                         ?_initLoRa 0001  
            UARTReceive@on_or_off 0012                           __Hparam 0000  
                         __Lparam 0000              __size_of_UARTReceive 0010  
                         ___awdiv 182E                           ___awmod 1928  
                         ___ftdiv 135E                   __size_of___wmul 0026  
                         ___ftmul 126A                           ___fttol 1126  
                         ___lwdiv 1A50                           ___lwmod 1AF0  
                    __psmallconst 0F00                           __pcinit 1AA2  
                      ??___awtoft 001D                        ??___ftpack 0017  
               __end_of_initUART1 1CAA                           __ramtop 0F00  
                         __ptext0 1444                           __ptext1 170E  
                         __ptext2 1AF0                           __ptext3 1A50  
                         __ptext4 19FA                           __ptext5 0FB0  
                         __ptext6 1928                           __ptext7 182E  
                         __ptext8 150E                           __ptext9 1126  
         __size_of_init_frequency 003A                           _initADC 1C3A  
                       _T1CONbits 000FCD                  ___awmod@dividend 0012  
                         _percent 00AF          __size_of_sendUARTMessage 0076  
                      ??_delay_ms 0014                        ??_high_ISR 0004  
                      delay_ms@ms 0012              end_of_initialization 1AE6  
                      _minus_pipe 0046                        _pipe_ascii 0F23  
                      ??_initLoRa 0019              __end_of_join_network 0FAE  
                   _calculateTemp 150E                           postdec1 000FE5  
                  _initInterrupts 1CBA                           postinc0 000FEE  
                     ?_fillInTemp 0001         _uart_receive_buffer_index 004C  
         __size_of_uart_interrupt 0030                         _PORTAbits 000F80  
                       _PORTBbits 000F81                  __CFG_CPUDIV$OSC1 000000  
                       _TRISAbits 000F92                         _TRISBbits 000F93  
                       _TRISCbits 000F94                    ?_calculateTemp 00A3  
                     ___ftdiv@exp 002B            __end_of_initInterrupts 1CC2  
                     ___ftmul@exp 0036                    __end_of___wmul 1C8E  
  __size_of_temperature_interrupt 00A0     __end_of_temperature_interrupt 170E  
                   _minus_ambient 0044          __size_of_makeTempMessage 0056  
                   _ambient_ascii 0F1E          ??_make_frequency_message 001E  
             start_initialization 1AA2  sendUARTMessage@newMessagePointer 0017  
               ??_sendUARTMessage 0019               __size_of_fillInTemp 0176  
                  _currentChannel 00B2                   ?_initInterrupts 0001  
                        ??___wmul 0016                       __pdataBANK0 0060  
              _calculateTemp$1935 00A7                      _measurement1 0040  
                    _measurement2 0042                    _init_frequency 1B32  
               __size_of___awtoft 0038                 __size_of___ftpack 00AE  
                     __pbssCOMRAM 003E                     __pcstackBANK0 0094  
               __size_of_delay_ms 0032                   ??_calculateTemp 003C  
               __size_of_high_ISR 0082                         __pnvBANK0 00C2  
               __size_of_initLoRa 0062                         _main$1934 00AD  
                ___lwdiv@dividend 0017                         __pintcode 0008  
                       _asciiTemp 0060                          ?___awdiv 0018  
                        ?___awmod 0012                          ?___ftdiv 001E  
                        ?___ftmul 002D                          ?___fttol 0094  
          __end_of_init_frequency 1B6C                          ?___lwdiv 0017  
                        ?___lwmod 0012                    _uart_interrupt 1C0A  
                    _join_network 0F9E                          ?_initADC 0001  
                     __smallconst 0F00                     _set_data_rate 0F01  
                       _initUART1 1C8E   __size_of_make_frequency_message 009A  
                       _inductive 00C2                  ___lwdiv@quotient 001B  
    __size_of_frequency_interrupt 0086                 ??_makeTempMessage 003E  
                  ___wmul@product 0016                     ??_UARTReceive 0012  
                       delay_ms@i 0015                          _PIE1bits 000F9D  
                        _PIE4bits 000F8E             _currentMessagePointer 003E  
                        i2u134_40 1C30                          i2u136_45 17E6  
                        i2u138_45 1818                          _PIR1bits 000F9E  
                        _PIR4bits 000F8F                 _frequency_message 0066  
                        _RCONbits 000FD0                         _temp_pipe 00B8  
          __end_of_uart_interrupt 1C3A                   ?_init_frequency 0001  
                       _plus_pipe 004A                      ??_fillInTemp 0020  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0012  
                      ?_initUART1 0001               _uart_receive_buffer 0100  
                  fillInTemp@temp 002A                         copy_data0 1ADA  
      fillInTemp@pipe_or_ambience 0024                __end_of_fillInTemp 1126  
          _make_frequency_message 170E                          __Hrparam 0000  
                        __Lrparam 0000                     _getVerCommand 0F10  
             __end_of_UARTReceive 1CBA                   ?_uart_interrupt 0001  
             __end_of_set_dev_eui 0F9E               __end_of_set_app_eui 0F7C  
             __end_of_set_app_key 0F5A                  __size_of___awdiv 0084  
                __size_of___awmod 0070                  __size_of___ftdiv 00E6  
                __size_of___ftmul 00F4                  __size_of___fttol 0144  
                __size_of___lwdiv 0052       _last_received_message_index 00B4  
                __size_of___lwmod 0042                          ___awtoft 1B6C  
                        ___ftpack 15C0                   _sendUARTMessage 18B2  
                __size_of_initADC 002E                          _delay_ms 1BD8  
                 ___lwdiv@divisor 0019                   ___lwdiv@counter 001D  
                        __ptext10 126A                          __ptext11 135E  
                        __ptext20 1C3A                          __ptext12 1B6C  
                        __ptext21 1C68                          __ptext13 15C0  
                        __ptext22 1CAA                          __ptext14 1B32  
                        __ptext15 1C8E                          __ptext24 1C0A  
                        __ptext16 1998                          __ptext25 166E  
                        __ptext17 18B2                          __ptext26 17A8  
                        __ptext18 1BD8                          __ptext19 1CBA  
                        _high_ISR 0008                     _isCommandSent 0065  
                ??_initInterrupts 0012                          _initLoRa 1998  
                   __size_of_main 00CA                          int$flags 004E  
  makeTempMessage@pipe_or_ambient 00AC                      _temp_ambient 00B6  
              __end_of_pipe_ascii 0F28                        _INTCONbits 000FF2  
                     ??_initUART1 0012             _temperature_interrupt 166E  
                        intlevel2 0000                calculateTemp@minus 00A5  
                ___lwmod@dividend 0012                       _UARTReceive 1CAA  
                      _RCSTA1bits 000FAC                       _set_dev_eui 0F7C  
                     _set_app_eui 0F5A                       _set_app_key 0F28  
                      _OSCCONbits 000FD3               _frequency_interrupt 17A8  
         __end_of_sendUARTMessage 1928                      _plus_ambient 0048  
                 _makeTempMessage 19FA                 calculateTemp@temp 00AA  
               calculateTemp@plus 00A3                   ___lwmod@divisor 0014  
                 ___lwmod@counter 0016              ?_frequency_interrupt 0001  
                     fillInTemp@i 0025             __end_of_calculateTemp 15C0  
                ??_init_frequency 0012  
