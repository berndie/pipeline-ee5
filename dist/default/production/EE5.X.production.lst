

Microchip Technology PIC18 LITE Macro Assembler V1.36 build -262312587 
                                                                                               Wed Apr 19 09:41:10 2017

Microchip Technology Omniscient Code Generator v1.36 (Free mode) build 201601150325
     1                           	processor	18LF27J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     7                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1
    58                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1
    62                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    63                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    64                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    65  0000                     
    66                           	psect	idataBANK0
    67  011C0A                     __pidataBANK0:
    68                           	opt stack 0
    69                           
    70                           ;initializer for _asciiTemp
    71  011C0A  20                 	db	32
    72  011C0B  20                 	db	32
    73  011C0C  20                 	db	32
    74  011C0D  20                 	db	32
    75  011C0E  20                 	db	32
    76                           
    77                           ;initializer for _isCommandSent
    78  011C0F  01                 	db	1
    79                           
    80                           ;initializer for _frequency_message
    81  011C10  54                 	db	84
    82  011C11  68                 	db	104
    83  011C12  65                 	db	101
    84  011C13  20                 	db	32
    85  011C14  66                 	db	102
    86  011C15  72                 	db	114
    87  011C16  65                 	db	101
    88  011C17  71                 	db	113
    89  011C18  75                 	db	117
    90  011C19  65                 	db	101
    91  011C1A  6E                 	db	110
    92  011C1B  63                 	db	99
    93  011C1C  79                 	db	121
    94  011C1D  20                 	db	32
    95  011C1E  69                 	db	105
    96  011C1F  73                 	db	115
    97  011C20  3A                 	db	58
    98  011C21  20                 	db	32
    99  011C22  20                 	db	32
   100  011C23  20                 	db	32
   101  011C24  20                 	db	32
   102  011C25  20                 	db	32
   103  011C26  20                 	db	32
   104  011C27  0D                 	db	13
   105  011C28  0A                 	db	10
   106  011C29  00                 	db	0
   107                           
   108                           ;initializer for _temp_display_message
   109  011C2A  50                 	db	80
   110  011C2B  69                 	db	105
   111  011C2C  70                 	db	112
   112  011C2D  65                 	db	101
   113  011C2E  20                 	db	32
   114  011C2F  74                 	db	116
   115  011C30  65                 	db	101
   116  011C31  6D                 	db	109
   117  011C32  70                 	db	112
   118  011C33  20                 	db	32
   119  011C34  3D                 	db	61
   120  011C35  20                 	db	32
   121  011C36  20                 	db	32
   122  011C37  20                 	db	32
   123  011C38  20                 	db	32
   124  011C39  20                 	db	32
   125  011C3A  20                 	db	32
   126  011C3B  0D                 	db	13
   127  011C3C  0A                 	db	10
   128  011C3D  00                 	db	0
   129                           
   130                           	psect	mediumconst
   131  00FEC6                     __pmediumconst:
   132                           	opt stack 0
   133  00FEC6  00                 	db	0
   134  00FEC7                     _set_data_rate:
   135                           	opt stack 0
   136  00FEC7  6D                 	db	109
   137  00FEC8  61                 	db	97
   138  00FEC9  63                 	db	99
   139  00FECA  20                 	db	32
   140  00FECB  73                 	db	115
   141  00FECC  65                 	db	101
   142  00FECD  74                 	db	116
   143  00FECE  20                 	db	32
   144  00FECF  64                 	db	100
   145  00FED0  72                 	db	114
   146  00FED1  20                 	db	32
   147  00FED2  78                 	db	120
   148  00FED3  0D                 	db	13
   149  00FED4  0A                 	db	10
   150  00FED5  00                 	db	0
   151  00FED6                     __end_of_set_data_rate:
   152                           	opt stack 0
   153  00FED6                     _getVerCommand:
   154                           	opt stack 0
   155  00FED6  73                 	db	115
   156  00FED7  79                 	db	121
   157  00FED8  73                 	db	115
   158  00FED9  20                 	db	32
   159  00FEDA  67                 	db	103
   160  00FEDB  65                 	db	101
   161  00FEDC  74                 	db	116
   162  00FEDD  20                 	db	32
   163  00FEDE  76                 	db	118
   164  00FEDF  65                 	db	101
   165  00FEE0  72                 	db	114
   166  00FEE1  0D                 	db	13
   167  00FEE2  0A                 	db	10
   168  00FEE3  00                 	db	0
   169  00FEE4                     __end_of_getVerCommand:
   170                           	opt stack 0
   171  00FEE4  0001               	dw	1
   172  00FEE6  0010               	dw	16
   173  00FEE8  0100               	dw	256
   174  00FEEA  1000               	dw	4096
   175  00FEEC                     __end_of_hexpowers:
   176                           	opt stack 0
   177  00FEEC                     _ambient_ascii:
   178                           	opt stack 0
   179  00FEEC  41                 	db	65
   180  00FEED  6D                 	db	109
   181  00FEEE  62                 	db	98
   182  00FEEF  2E                 	db	46
   183  00FEF0  00                 	db	0
   184  00FEF1                     __end_of_ambient_ascii:
   185                           	opt stack 0
   186  00FEF1                     _pipe_ascii:
   187                           	opt stack 0
   188  00FEF1  50                 	db	80
   189  00FEF2  69                 	db	105
   190  00FEF3  70                 	db	112
   191  00FEF4  65                 	db	101
   192  00FEF5  00                 	db	0
   193  00FEF6                     __end_of_pipe_ascii:
   194                           	opt stack 0
   195  00FEF6                     _delimiter:
   196                           	opt stack 0
   197  00FEF6  FD                 	db	low STR_3
   198  00FEF7                     __end_of_delimiter:
   199                           	opt stack 0
   200  00FEF7                     _send_data_EOL:
   201                           	opt stack 0
   202  00FEF7  D3                 	db	low (STR_4+27)
   203  00FEF8                     __end_of_send_data_EOL:
   204                           	opt stack 0
   205  00FEF8                     _send_data_part_1:
   206                           	opt stack 0
   207  00FEF8  E8                 	db	low STR_1
   208  00FEF9                     __end_of_send_data_part_1:
   209                           	opt stack 0
   210  00FEF9                     _set_app_key:
   211                           	opt stack 0
   212  00FEF9  6D                 	db	109
   213  00FEFA  61                 	db	97
   214  00FEFB  63                 	db	99
   215  00FEFC  20                 	db	32
   216  00FEFD  73                 	db	115
   217  00FEFE  65                 	db	101
   218  00FEFF  74                 	db	116
   219  00FF00  20                 	db	32
   220  00FF01  61                 	db	97
   221  00FF02  70                 	db	112
   222  00FF03  70                 	db	112
   223  00FF04  6B                 	db	107
   224  00FF05  65                 	db	101
   225  00FF06  79                 	db	121
   226  00FF07  20                 	db	32
   227  00FF08  32                 	db	50
   228  00FF09  45                 	db	69
   229  00FF0A  31                 	db	49
   230  00FF0B  35                 	db	53
   231  00FF0C  41                 	db	65
   232  00FF0D  46                 	db	70
   233  00FF0E  43                 	db	67
   234  00FF0F  39                 	db	57
   235  00FF10  34                 	db	52
   236  00FF11  41                 	db	65
   237  00FF12  37                 	db	55
   238  00FF13  45                 	db	69
   239  00FF14  46                 	db	70
   240  00FF15  36                 	db	54
   241  00FF16  39                 	db	57
   242  00FF17  41                 	db	65
   243  00FF18  45                 	db	69
   244  00FF19  36                 	db	54
   245  00FF1A  31                 	db	49
   246  00FF1B  41                 	db	65
   247  00FF1C  38                 	db	56
   248  00FF1D  31                 	db	49
   249  00FF1E  34                 	db	52
   250  00FF1F  37                 	db	55
   251  00FF20  33                 	db	51
   252  00FF21  37                 	db	55
   253  00FF22  43                 	db	67
   254  00FF23  33                 	db	51
   255  00FF24  38                 	db	56
   256  00FF25  36                 	db	54
   257  00FF26  39                 	db	57
   258  00FF27  39                 	db	57
   259  00FF28  0D                 	db	13
   260  00FF29  0A                 	db	10
   261  00FF2A  00                 	db	0
   262  00FF2B                     __end_of_set_app_key:
   263                           	opt stack 0
   264  00FF2B                     _set_app_eui:
   265                           	opt stack 0
   266  00FF2B  6D                 	db	109
   267  00FF2C  61                 	db	97
   268  00FF2D  63                 	db	99
   269  00FF2E  20                 	db	32
   270  00FF2F  73                 	db	115
   271  00FF30  65                 	db	101
   272  00FF31  74                 	db	116
   273  00FF32  20                 	db	32
   274  00FF33  61                 	db	97
   275  00FF34  70                 	db	112
   276  00FF35  70                 	db	112
   277  00FF36  65                 	db	101
   278  00FF37  75                 	db	117
   279  00FF38  69                 	db	105
   280  00FF39  20                 	db	32
   281  00FF3A  37                 	db	55
   282  00FF3B  34                 	db	52
   283  00FF3C  43                 	db	67
   284  00FF3D  35                 	db	53
   285  00FF3E  34                 	db	52
   286  00FF3F  32                 	db	50
   287  00FF40  34                 	db	52
   288  00FF41  35                 	db	53
   289  00FF42  33                 	db	51
   290  00FF43  38                 	db	56
   291  00FF44  35                 	db	53
   292  00FF45  37                 	db	55
   293  00FF46  39                 	db	57
   294  00FF47  37                 	db	55
   295  00FF48  34                 	db	52
   296  00FF49  41                 	db	65
   297  00FF4A  0D                 	db	13
   298  00FF4B  0A                 	db	10
   299  00FF4C  00                 	db	0
   300  00FF4D                     __end_of_set_app_eui:
   301                           	opt stack 0
   302  00FF4D                     _set_dev_eui:
   303                           	opt stack 0
   304  00FF4D  6D                 	db	109
   305  00FF4E  61                 	db	97
   306  00FF4F  63                 	db	99
   307  00FF50  20                 	db	32
   308  00FF51  73                 	db	115
   309  00FF52  65                 	db	101
   310  00FF53  74                 	db	116
   311  00FF54  20                 	db	32
   312  00FF55  64                 	db	100
   313  00FF56  65                 	db	101
   314  00FF57  76                 	db	118
   315  00FF58  65                 	db	101
   316  00FF59  75                 	db	117
   317  00FF5A  69                 	db	105
   318  00FF5B  20                 	db	32
   319  00FF5C  30                 	db	48
   320  00FF5D  30                 	db	48
   321  00FF5E  30                 	db	48
   322  00FF5F  34                 	db	52
   323  00FF60  41                 	db	65
   324  00FF61  33                 	db	51
   325  00FF62  30                 	db	48
   326  00FF63  42                 	db	66
   327  00FF64  30                 	db	48
   328  00FF65  30                 	db	48
   329  00FF66  31                 	db	49
   330  00FF67  41                 	db	65
   331  00FF68  43                 	db	67
   332  00FF69  46                 	db	70
   333  00FF6A  37                 	db	55
   334  00FF6B  44                 	db	68
   335  00FF6C  0D                 	db	13
   336  00FF6D  0A                 	db	10
   337  00FF6E  00                 	db	0
   338  00FF6F                     __end_of_set_dev_eui:
   339                           	opt stack 0
   340  00FF6F                     exp@coeff:
   341                           	opt stack 0
   342  00FF6F  00                 	db	0
   343  00FF70  80                 	db	128
   344  00FF71  3F                 	db	63
   345  00FF72  72                 	db	114
   346  00FF73  31                 	db	49
   347  00FF74  3F                 	db	63
   348  00FF75  FE                 	db	254
   349  00FF76  75                 	db	117
   350  00FF77  3E                 	db	62
   351  00FF78  58                 	db	88
   352  00FF79  63                 	db	99
   353  00FF7A  3D                 	db	61
   354  00FF7B  95                 	db	149
   355  00FF7C  1D                 	db	29
   356  00FF7D  3C                 	db	60
   357  00FF7E  C5                 	db	197
   358  00FF7F  AE                 	db	174
   359  00FF80  3A                 	db	58
   360  00FF81  79                 	db	121
   361  00FF82  21                 	db	33
   362  00FF83  39                 	db	57
   363  00FF84  94                 	db	148
   364  00FF85  80                 	db	128
   365  00FF86  37                 	db	55
   366  00FF87  93                 	db	147
   367  00FF88  A7                 	db	167
   368  00FF89  35                 	db	53
   369  00FF8A  56                 	db	86
   370  00FF8B  15                 	db	21
   371  00FF8C  34                 	db	52
   372  00FF8D                     __end_ofexp@coeff:
   373                           	opt stack 0
   374  00FF8D                     log@coeff:
   375                           	opt stack 0
   376  00FF8D  00                 	db	0
   377  00FF8E  00                 	db	0
   378  00FF8F  00                 	db	0
   379  00FF90  00                 	db	0
   380  00FF91  80                 	db	128
   381  00FF92  3F                 	db	63
   382  00FF93  F0                 	db	240
   383  00FF94  FF                 	db	255
   384  00FF95  BE                 	db	190
   385  00FF96  E2                 	db	226
   386  00FF97  A9                 	db	169
   387  00FF98  3E                 	db	62
   388  00FF99  83                 	db	131
   389  00FF9A  76                 	db	118
   390  00FF9B  BE                 	db	190
   391  00FF9C  AE                 	db	174
   392  00FF9D  2B                 	db	43
   393  00FF9E  3E                 	db	62
   394  00FF9F  3C                 	db	60
   395  00FFA0  C3                 	db	195
   396  00FFA1  BD                 	db	189
   397  00FFA2  D2                 	db	210
   398  00FFA3  13                 	db	19
   399  00FFA4  3D                 	db	61
   400  00FFA5  78                 	db	120
   401  00FFA6  D3                 	db	211
   402  00FFA7  BB                 	db	187
   403  00FFA8                     __end_oflog@coeff:
   404                           	opt stack 0
   405  00FFA8                     _join_network:
   406                           	opt stack 0
   407  00FFA8  6D                 	db	109
   408  00FFA9  61                 	db	97
   409  00FFAA  63                 	db	99
   410  00FFAB  20                 	db	32
   411  00FFAC  6A                 	db	106
   412  00FFAD  6F                 	db	111
   413  00FFAE  69                 	db	105
   414  00FFAF  6E                 	db	110
   415  00FFB0  20                 	db	32
   416  00FFB1  6F                 	db	111
   417  00FFB2  74                 	db	116
   418  00FFB3  61                 	db	97
   419  00FFB4  61                 	db	97
   420  00FFB5  0D                 	db	13
   421  00FFB6  0A                 	db	10
   422  00FFB7  00                 	db	0
   423  00FFB8                     __end_of_join_network:
   424                           	opt stack 0
   425  00FFB8                     STR_4:
   426  00FFB8  6D                 	db	109	;'m'
   427  00FFB9  61                 	db	97	;'a'
   428  00FFBA  63                 	db	99	;'c'
   429  00FFBB  20                 	db	32
   430  00FFBC  74                 	db	116	;'t'
   431  00FFBD  78                 	db	120	;'x'
   432  00FFBE  20                 	db	32
   433  00FFBF  63                 	db	99	;'c'
   434  00FFC0  6E                 	db	110	;'n'
   435  00FFC1  66                 	db	102	;'f'
   436  00FFC2  20                 	db	32
   437  00FFC3  31                 	db	49	;'1'
   438  00FFC4  20                 	db	32
   439  00FFC5  25                 	db	37
   440  00FFC6  78                 	db	120	;'x'
   441  00FFC7  25                 	db	37
   442  00FFC8  73                 	db	115	;'s'
   443  00FFC9  25                 	db	37
   444  00FFCA  78                 	db	120	;'x'
   445  00FFCB  25                 	db	37
   446  00FFCC  73                 	db	115	;'s'
   447  00FFCD  25                 	db	37
   448  00FFCE  78                 	db	120	;'x'
   449  00FFCF  25                 	db	37
   450  00FFD0  73                 	db	115	;'s'
   451  00FFD1  25                 	db	37
   452  00FFD2  78                 	db	120	;'x'
   453  00FFD3  20                 	db	32
   454  00FFD4  0D                 	db	13
   455  00FFD5  0A                 	db	10
   456  00FFD6  00                 	db	0
   457  00FFD7  30                 	db	48	;'0'
   458  00FFD8  31                 	db	49	;'1'
   459  00FFD9  32                 	db	50	;'2'
   460  00FFDA  33                 	db	51	;'3'
   461  00FFDB  34                 	db	52	;'4'
   462  00FFDC  35                 	db	53	;'5'
   463  00FFDD  36                 	db	54	;'6'
   464  00FFDE  37                 	db	55	;'7'
   465  00FFDF  38                 	db	56	;'8'
   466  00FFE0  39                 	db	57	;'9'
   467  00FFE1  61                 	db	97	;'a'
   468  00FFE2  62                 	db	98	;'b'
   469  00FFE3  63                 	db	99	;'c'
   470  00FFE4  64                 	db	100	;'d'
   471  00FFE5  65                 	db	101	;'e'
   472  00FFE6  66                 	db	102	;'f'
   473  00FFE7  00                 	db	0
   474  00FFE8                     STR_1:
   475  00FFE8  6D                 	db	109	;'m'
   476  00FFE9  61                 	db	97	;'a'
   477  00FFEA  63                 	db	99	;'c'
   478  00FFEB  20                 	db	32
   479  00FFEC  74                 	db	116	;'t'
   480  00FFED  78                 	db	120	;'x'
   481  00FFEE  20                 	db	32
   482  00FFEF  63                 	db	99	;'c'
   483  00FFF0  6E                 	db	110	;'n'
   484  00FFF1  66                 	db	102	;'f'
   485  00FFF2  20                 	db	32
   486  00FFF3  31                 	db	49	;'1'
   487  00FFF4  20                 	db	32
   488  00FFF5  00                 	db	0
   489  00FFF6  28                 	db	40
   490  00FFF7  6E                 	db	110	;'n'
   491  00FFF8  75                 	db	117	;'u'
   492  00FFF9  6C                 	db	108	;'l'
   493  00FFFA  6C                 	db	108	;'l'
   494  00FFFB  29                 	db	41
   495  00FFFC  00                 	db	0
   496  00FFFD                     STR_3:
   497  00FFFD  5F                 	db	95	;'_'
   498  00FFFE  00                 	db	0
   499  0000                     
   500                           ; #config settings
   501  00FFFF  00                 	db	0	; dummy byte at the end
   502  0000                     
   503                           	psect	nvBANK0
   504  0000F3                     __pnvBANK0:
   505                           	opt stack 0
   506  0000F3                     _nominalfrequency:
   507                           	opt stack 0
   508  0000F3                     	ds	3
   509  0000F6                     _inductive:
   510                           	opt stack 0
   511  0000F6                     	ds	2
   512  0000                     _RPINR21	set	3836
   513  0000                     _RPOR7	set	3783
   514  0000                     _RPOR9	set	3785
   515  0000                     _IOLOCK	set	30200
   516  0000                     _ANCON0	set	3912
   517  0000                     _ANCON1	set	3913
   518  0000                     _CCP8CON	set	3846
   519  0000                     _CCPR8H	set	3848
   520  0000                     _CCPR8L	set	3847
   521  0000                     _CCPTMRS2bits	set	3920
   522  0000                     _ADRES	set	4035
   523  0000                     _ADCON0	set	4034
   524  0000                     _ADCON0bits	set	4034
   525  0000                     _ADCON1	set	4033
   526  0000                     _BAUDCON1bits	set	3966
   527  0000                     _EECON2	set	4007
   528  0000                     _INTCON	set	4082
   529  0000                     _INTCONbits	set	4082
   530  0000                     _OSCCONbits	set	4051
   531  0000                     _PIE1bits	set	3997
   532  0000                     _PIE4bits	set	3982
   533  0000                     _PIR1bits	set	3998
   534  0000                     _PIR4bits	set	3983
   535  0000                     _PORTAbits	set	3968
   536  0000                     _PORTBbits	set	3969
   537  0000                     _RCONbits	set	4048
   538  0000                     _RCREG1	set	4015
   539  0000                     _RCSTA1bits	set	4012
   540  0000                     _SPBRG1	set	4016
   541  0000                     _SPBRGH1	set	3967
   542  0000                     _SSP2CON1	set	3954
   543  0000                     _SSP2STAT	set	3955
   544  0000                     _SSP2STATbits	set	3955
   545  0000                     _SSPBUF	set	4041
   546  0000                     _T1CONbits	set	4045
   547  0000                     _TMR1H	set	4047
   548  0000                     _TMR1L	set	4046
   549  0000                     _TRISA	set	3986
   550  0000                     _TRISAbits	set	3986
   551  0000                     _TRISB	set	3987
   552  0000                     _TRISBbits	set	3987
   553  0000                     _TRISC	set	3988
   554  0000                     _TRISCbits	set	3988
   555  0000                     _TXREG1	set	4014
   556  0000                     _TXSTA1bits	set	4013
   557                           
   558                           	psect	cinit
   559  011ABC                     __pcinit:
   560                           	opt stack 0
   561  011ABC                     start_initialization:
   562                           	opt stack 0
   563  011ABC                     __initialization:
   564                           	opt stack 0
   565                           
   566                           ; Clear objects allocated to BANK1 (130 bytes)
   567  011ABC  EE01  F000         	lfsr	0,__pbssBANK1
   568  011AC0  0E82               	movlw	130
   569  011AC2                     clear_0:
   570  011AC2  6AEE               	clrf	postinc0,c
   571  011AC4  06E8               	decf	wreg,f,c
   572  011AC6  E1FD               	bnz	clear_0
   573                           
   574                           ; Clear objects allocated to BANK0 (27 bytes)
   575  011AC8  EE00  F0D8         	lfsr	0,__pbssBANK0
   576  011ACC  0E1B               	movlw	27
   577  011ACE                     clear_1:
   578  011ACE  6AEE               	clrf	postinc0,c
   579  011AD0  06E8               	decf	wreg,f,c
   580  011AD2  E1FD               	bnz	clear_1
   581                           
   582                           ; Clear objects allocated to COMRAM (16 bytes)
   583  011AD4  EE00  F03E         	lfsr	0,__pbssCOMRAM
   584  011AD8  0E10               	movlw	16
   585  011ADA                     clear_2:
   586  011ADA  6AEE               	clrf	postinc0,c
   587  011ADC  06E8               	decf	wreg,f,c
   588  011ADE  E1FD               	bnz	clear_2
   589                           
   590                           ; Initialize objects allocated to BANK0 (52 bytes)
   591                           ; load TBLPTR registers with __pidataBANK0
   592  011AE0  0E0A               	movlw	low __pidataBANK0
   593  011AE2  6EF6               	movwf	tblptrl,c
   594  011AE4  0E1C               	movlw	high __pidataBANK0
   595  011AE6  6EF7               	movwf	tblptrh,c
   596  011AE8  0E01               	movlw	low (__pidataBANK0 shr (0+16))
   597  011AEA  6EF8               	movwf	tblptru,c
   598  011AEC  EE00  F0A4         	lfsr	0,__pdataBANK0
   599  011AF0  EE10 F034          	lfsr	1,52
   600  011AF4                     copy_data0:
   601  011AF4  0009               	tblrd		*+
   602  011AF6  CFF5 FFEE          	movff	tablat,postinc0
   603  011AFA  50E5               	movf	postdec1,w,c
   604  011AFC  50E1               	movf	fsr1l,w,c
   605  011AFE  E1FA               	bnz	copy_data0
   606  011B00                     end_of_initialization:
   607                           	opt stack 0
   608  011B00                     __end_of__initialization:
   609                           	opt stack 0
   610  011B00  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   611  011B02  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   612  011B04  0100               	movlb	0
   613  011B06  EFB2  F088         	goto	_main	;jump to C main() function
   614                           tblptru	equ	0xFF8
   615                           tblptrh	equ	0xFF7
   616                           tblptrl	equ	0xFF6
   617                           tablat	equ	0xFF5
   618                           postinc0	equ	0xFEE
   619                           wreg	equ	0xFE8
   620                           postdec1	equ	0xFE5
   621                           fsr1l	equ	0xFE1
   622                           
   623                           	psect	bssCOMRAM
   624  00003E                     __pbssCOMRAM:
   625                           	opt stack 0
   626  00003E                     _currentMessagePointer:
   627                           	opt stack 0
   628  00003E                     	ds	2
   629  000040                     _last_received_message_index:
   630                           	opt stack 0
   631  000040                     	ds	2
   632  000042                     _measurement1:
   633                           	opt stack 0
   634  000042                     	ds	2
   635  000044                     _measurement2:
   636                           	opt stack 0
   637  000044                     	ds	2
   638  000046                     _minus_pipe:
   639                           	opt stack 0
   640  000046                     	ds	2
   641  000048                     _plus_ambient:
   642                           	opt stack 0
   643  000048                     	ds	2
   644  00004A                     _plus_pipe:
   645                           	opt stack 0
   646  00004A                     	ds	2
   647  00004C                     _uart_receive_buffer_index:
   648                           	opt stack 0
   649  00004C                     	ds	2
   650                           tblptru	equ	0xFF8
   651                           tblptrh	equ	0xFF7
   652                           tblptrl	equ	0xFF6
   653                           tablat	equ	0xFF5
   654                           postinc0	equ	0xFEE
   655                           wreg	equ	0xFE8
   656                           postdec1	equ	0xFE5
   657                           fsr1l	equ	0xFE1
   658                           
   659                           	psect	bssBANK0
   660  0000D8                     __pbssBANK0:
   661                           	opt stack 0
   662  0000D8                     _frequency:
   663                           	opt stack 0
   664  0000D8                     	ds	3
   665  0000DB                     _percent:
   666                           	opt stack 0
   667  0000DB                     	ds	3
   668  0000DE                     _currentChannel:
   669                           	opt stack 0
   670  0000DE                     	ds	2
   671  0000E0                     _errno:
   672                           	opt stack 0
   673  0000E0                     	ds	2
   674  0000E2                     _minus_ambient:
   675                           	opt stack 0
   676  0000E2                     	ds	2
   677  0000E4                     _temp_ambient:
   678                           	opt stack 0
   679  0000E4                     	ds	2
   680  0000E6                     _temp_pipe:
   681                           	opt stack 0
   682  0000E6                     	ds	2
   683  0000E8                     _timer:
   684                           	opt stack 0
   685  0000E8                     	ds	2
   686  0000EA                     _valueH:
   687                           	opt stack 0
   688  0000EA                     	ds	2
   689  0000EC                     _valueL:
   690                           	opt stack 0
   691  0000EC                     	ds	2
   692  0000EE                     _bigorsmall:
   693                           	opt stack 0
   694  0000EE                     	ds	1
   695  0000EF                     _state:
   696                           	opt stack 0
   697  0000EF                     	ds	1
   698  0000F0                     _value:
   699                           	opt stack 0
   700  0000F0                     	ds	2
   701  0000F2                     _step:
   702                           	opt stack 0
   703  0000F2                     	ds	1
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1l	equ	0xFE1
   712                           
   713                           	psect	dataBANK0
   714  0000A4                     __pdataBANK0:
   715                           	opt stack 0
   716  0000A4                     _asciiTemp:
   717                           	opt stack 0
   718  0000A4                     	ds	5
   719  0000A9                     _isCommandSent:
   720                           	opt stack 0
   721  0000A9                     	ds	1
   722  0000AA                     _frequency_message:
   723                           	opt stack 0
   724  0000AA                     	ds	26
   725  0000C4                     _temp_display_message:
   726                           	opt stack 0
   727  0000C4                     	ds	20
   728                           tblptru	equ	0xFF8
   729                           tblptrh	equ	0xFF7
   730                           tblptrl	equ	0xFF6
   731                           tablat	equ	0xFF5
   732                           postinc0	equ	0xFEE
   733                           wreg	equ	0xFE8
   734                           postdec1	equ	0xFE5
   735                           fsr1l	equ	0xFE1
   736                           
   737                           	psect	bssBANK1
   738  000100                     __pbssBANK1:
   739                           	opt stack 0
   740  000100                     _uart_receive_buffer:
   741                           	opt stack 0
   742  000100                     	ds	100
   743  000164                     _last_uart_message:
   744                           	opt stack 0
   745  000164                     	ds	30
   746                           tblptru	equ	0xFF8
   747                           tblptrh	equ	0xFF7
   748                           tblptrl	equ	0xFF6
   749                           tablat	equ	0xFF5
   750                           postinc0	equ	0xFEE
   751                           wreg	equ	0xFE8
   752                           postdec1	equ	0xFE5
   753                           fsr1l	equ	0xFE1
   754                           
   755                           	psect	cstackBANK0
   756  000060                     __pcstackBANK0:
   757                           	opt stack 0
   758  000060                     ?___ftadd:
   759                           	opt stack 0
   760  000060                     ?___fttol:
   761                           	opt stack 0
   762  000060                     ___ftadd@f1:
   763                           	opt stack 0
   764  000060                     ___ftge@ff1:
   765                           	opt stack 0
   766  000060                     ___fttol@f1:
   767                           	opt stack 0
   768                           
   769                           ; 3 bytes @ 0x0
   770  000060                     	ds	3
   771  000063                     ___ftadd@f2:
   772                           	opt stack 0
   773  000063                     ___ftge@ff2:
   774                           	opt stack 0
   775                           
   776                           ; 3 bytes @ 0x3
   777  000063                     	ds	1
   778  000064                     ??___fttol:
   779                           
   780                           ; 1 bytes @ 0x4
   781  000064                     	ds	2
   782  000066                     ??___ftadd:
   783  000066                     ??___ftge:
   784                           
   785                           ; 1 bytes @ 0x6
   786  000066                     	ds	3
   787  000069                     ___ftadd@sign:
   788                           	opt stack 0
   789  000069                     ___fttol@sign1:
   790                           	opt stack 0
   791                           
   792                           ; 1 bytes @ 0x9
   793  000069                     	ds	1
   794  00006A                     ___ftadd@exp2:
   795                           	opt stack 0
   796  00006A                     ___fttol@lval:
   797                           	opt stack 0
   798                           
   799                           ; 4 bytes @ 0xA
   800  00006A                     	ds	1
   801  00006B                     ___ftadd@exp1:
   802                           	opt stack 0
   803                           
   804                           ; 1 bytes @ 0xB
   805  00006B                     	ds	1
   806  00006C                     ?___ftsub:
   807                           	opt stack 0
   808  00006C                     ?_eval_poly:
   809                           	opt stack 0
   810  00006C                     ___ftsub@f1:
   811                           	opt stack 0
   812  00006C                     eval_poly@x:
   813                           	opt stack 0
   814                           
   815                           ; 3 bytes @ 0xC
   816  00006C                     	ds	2
   817  00006E                     ___fttol@exp1:
   818                           	opt stack 0
   819                           
   820                           ; 1 bytes @ 0xE
   821  00006E                     	ds	1
   822  00006F                     ?_calculateTemp:
   823                           	opt stack 0
   824  00006F                     ?___altoft:
   825                           	opt stack 0
   826  00006F                     calculateTemp@plus:
   827                           	opt stack 0
   828  00006F                     eval_poly@d:
   829                           	opt stack 0
   830  00006F                     ___ftsub@f2:
   831                           	opt stack 0
   832  00006F                     ___altoft@c:
   833                           	opt stack 0
   834                           
   835                           ; 4 bytes @ 0xF
   836  00006F                     	ds	2
   837  000071                     calculateTemp@minus:
   838                           	opt stack 0
   839  000071                     eval_poly@n:
   840                           	opt stack 0
   841                           
   842                           ; 2 bytes @ 0x11
   843  000071                     	ds	2
   844  000073                     ??___altoft:
   845  000073                     eval_poly@res:
   846                           	opt stack 0
   847  000073                     _calculateTemp$2422:
   848                           	opt stack 0
   849                           
   850                           ; 3 bytes @ 0x13
   851  000073                     	ds	3
   852  000076                     ?_log:
   853                           	opt stack 0
   854  000076                     ?_ldexp:
   855                           	opt stack 0
   856  000076                     calculateTemp@temp:
   857                           	opt stack 0
   858  000076                     ldexp@value:
   859                           	opt stack 0
   860  000076                     log@x:
   861                           	opt stack 0
   862                           
   863                           ; 3 bytes @ 0x16
   864  000076                     	ds	1
   865  000077                     ?_floor:
   866                           	opt stack 0
   867  000077                     floor@x:
   868                           	opt stack 0
   869                           
   870                           ; 3 bytes @ 0x17
   871  000077                     	ds	1
   872  000078                     makeTempMessage@pipe_or_ambient:
   873                           	opt stack 0
   874                           
   875                           ; 1 bytes @ 0x18
   876  000078                     	ds	1
   877  000079                     ldexp@newexp:
   878                           	opt stack 0
   879  000079                     log@exponent:
   880                           	opt stack 0
   881                           
   882                           ; 2 bytes @ 0x19
   883  000079                     	ds	1
   884  00007A                     floor@i:
   885                           	opt stack 0
   886                           
   887                           ; 3 bytes @ 0x1A
   888  00007A                     	ds	1
   889  00007B                     ??_ldexp:
   890                           
   891                           ; 1 bytes @ 0x1B
   892  00007B                     	ds	2
   893  00007D                     floor@expon:
   894                           	opt stack 0
   895                           
   896                           ; 2 bytes @ 0x1D
   897  00007D                     	ds	2
   898  00007F                     ?_exp:
   899                           	opt stack 0
   900  00007F                     exp@x:
   901                           	opt stack 0
   902                           
   903                           ; 3 bytes @ 0x1F
   904  00007F                     	ds	3
   905  000082                     _exp$2431:
   906                           	opt stack 0
   907                           
   908                           ; 3 bytes @ 0x22
   909  000082                     	ds	3
   910  000085                     exp@exponent:
   911                           	opt stack 0
   912                           
   913                           ; 2 bytes @ 0x25
   914  000085                     	ds	2
   915  000087                     exp@sign:
   916                           	opt stack 0
   917                           
   918                           ; 1 bytes @ 0x27
   919  000087                     	ds	1
   920  000088                     ?_pow:
   921                           	opt stack 0
   922  000088                     pow@x:
   923                           	opt stack 0
   924                           
   925                           ; 3 bytes @ 0x28
   926  000088                     	ds	3
   927  00008B                     pow@y:
   928                           	opt stack 0
   929                           
   930                           ; 3 bytes @ 0x2B
   931  00008B                     	ds	3
   932  00008E                     _pow$2429:
   933                           	opt stack 0
   934                           
   935                           ; 3 bytes @ 0x2E
   936  00008E                     	ds	3
   937  000091                     _pow$2430:
   938                           	opt stack 0
   939                           
   940                           ; 3 bytes @ 0x31
   941  000091                     	ds	3
   942  000094                     pow@sign:
   943                           	opt stack 0
   944                           
   945                           ; 1 bytes @ 0x34
   946  000094                     	ds	1
   947  000095                     pow@yi:
   948                           	opt stack 0
   949                           
   950                           ; 4 bytes @ 0x35
   951  000095                     	ds	4
   952  000099                     _initSPI$2423:
   953                           	opt stack 0
   954  000099                     _adjustDigipot$2426:
   955                           	opt stack 0
   956                           
   957                           ; 3 bytes @ 0x39
   958  000099                     	ds	3
   959  00009C                     _initSPI$2424:
   960                           	opt stack 0
   961  00009C                     _adjustDigipot$2427:
   962                           	opt stack 0
   963                           
   964                           ; 3 bytes @ 0x3C
   965  00009C                     	ds	3
   966  00009F                     _initSPI$2425:
   967                           	opt stack 0
   968  00009F                     _adjustDigipot$2428:
   969                           	opt stack 0
   970                           
   971                           ; 3 bytes @ 0x3F
   972  00009F                     	ds	3
   973  0000A2                     _main$2421:
   974                           	opt stack 0
   975                           
   976                           ; 2 bytes @ 0x42
   977  0000A2                     	ds	2
   978                           tblptru	equ	0xFF8
   979                           tblptrh	equ	0xFF7
   980                           tblptrl	equ	0xFF6
   981                           tablat	equ	0xFF5
   982                           postinc0	equ	0xFEE
   983                           wreg	equ	0xFE8
   984                           postdec1	equ	0xFE5
   985                           fsr1l	equ	0xFE1
   986                           
   987                           	psect	cstackCOMRAM
   988  000001                     __pcstackCOMRAM:
   989                           	opt stack 0
   990  000001                     ??_temperature_interrupt:
   991  000001                     ??_frequency_interrupt:
   992  000001                     
   993                           ; 2 bytes @ 0x0
   994  000001                     	ds	3
   995  000004                     ??_high_ISR:
   996                           
   997                           ; 1 bytes @ 0x3
   998  000004                     	ds	14
   999  000012                     ?___wmul:
  1000                           	opt stack 0
  1001  000012                     ?___awmod:
  1002                           	opt stack 0
  1003  000012                     ?___lwmod:
  1004                           	opt stack 0
  1005  000012                     ?___ftpack:
  1006                           	opt stack 0
  1007  000012                     ?_frexp:
  1008                           	opt stack 0
  1009  000012                     ?___ftneg:
  1010                           	opt stack 0
  1011  000012                     UARTReceive@on_or_off:
  1012                           	opt stack 0
  1013  000012                     delay_ms@ms:
  1014                           	opt stack 0
  1015  000012                     ___wmul@multiplier:
  1016                           	opt stack 0
  1017  000012                     ___awmod@dividend:
  1018                           	opt stack 0
  1019  000012                     ___lwmod@dividend:
  1020                           	opt stack 0
  1021  000012                     ___ftpack@arg:
  1022                           	opt stack 0
  1023  000012                     ___ftneg@f1:
  1024                           	opt stack 0
  1025  000012                     frexp@value:
  1026                           	opt stack 0
  1027                           
  1028                           ; 3 bytes @ 0x11
  1029  000012                     	ds	2
  1030  000014                     ??_delay_ms:
  1031  000014                     ___wmul@multiplicand:
  1032                           	opt stack 0
  1033  000014                     ___awmod@divisor:
  1034                           	opt stack 0
  1035  000014                     ___lwmod@divisor:
  1036                           	opt stack 0
  1037                           
  1038                           ; 2 bytes @ 0x13
  1039  000014                     	ds	1
  1040  000015                     ___ftpack@exp:
  1041                           	opt stack 0
  1042  000015                     delay_ms@i:
  1043                           	opt stack 0
  1044  000015                     frexp@eptr:
  1045                           	opt stack 0
  1046                           
  1047                           ; 2 bytes @ 0x14
  1048  000015                     	ds	1
  1049  000016                     ___awmod@counter:
  1050                           	opt stack 0
  1051  000016                     ___ftpack@sign:
  1052                           	opt stack 0
  1053  000016                     ___lwmod@counter:
  1054                           	opt stack 0
  1055  000016                     ___wmul@product:
  1056                           	opt stack 0
  1057                           
  1058                           ; 2 bytes @ 0x15
  1059  000016                     	ds	1
  1060  000017                     ??___ftpack:
  1061  000017                     ??_frexp:
  1062  000017                     ?___lwdiv:
  1063                           	opt stack 0
  1064  000017                     ___awmod@sign:
  1065                           	opt stack 0
  1066  000017                     sendUARTMessage@newMessagePointer:
  1067                           	opt stack 0
  1068  000017                     ___lwdiv@dividend:
  1069                           	opt stack 0
  1070                           
  1071                           ; 2 bytes @ 0x16
  1072  000017                     	ds	1
  1073  000018                     ?___awdiv:
  1074                           	opt stack 0
  1075  000018                     ___awdiv@dividend:
  1076                           	opt stack 0
  1077                           
  1078                           ; 2 bytes @ 0x17
  1079  000018                     	ds	1
  1080  000019                     ___lwdiv@divisor:
  1081                           	opt stack 0
  1082                           
  1083                           ; 2 bytes @ 0x18
  1084  000019                     	ds	1
  1085  00001A                     ?___awtoft:
  1086                           	opt stack 0
  1087  00001A                     ?___lbtoft:
  1088                           	opt stack 0
  1089  00001A                     ?___lltoft:
  1090                           	opt stack 0
  1091  00001A                     ___awdiv@divisor:
  1092                           	opt stack 0
  1093  00001A                     ___awtoft@c:
  1094                           	opt stack 0
  1095  00001A                     ___lltoft@c:
  1096                           	opt stack 0
  1097                           
  1098                           ; 4 bytes @ 0x19
  1099  00001A                     	ds	1
  1100  00001B                     ___lwdiv@quotient:
  1101                           	opt stack 0
  1102                           
  1103                           ; 2 bytes @ 0x1A
  1104  00001B                     	ds	1
  1105  00001C                     ___awdiv@counter:
  1106                           	opt stack 0
  1107                           
  1108                           ; 1 bytes @ 0x1B
  1109  00001C                     	ds	1
  1110  00001D                     ___awdiv@sign:
  1111                           	opt stack 0
  1112  00001D                     ___awtoft@sign:
  1113                           	opt stack 0
  1114  00001D                     ___lbtoft@c:
  1115                           	opt stack 0
  1116  00001D                     ___lwdiv@counter:
  1117                           	opt stack 0
  1118                           
  1119                           ; 1 bytes @ 0x1C
  1120  00001D                     	ds	1
  1121  00001E                     ??___lltoft:
  1122  00001E                     ?___ftdiv:
  1123                           	opt stack 0
  1124  00001E                     ___awdiv@quotient:
  1125                           	opt stack 0
  1126  00001E                     ___ftdiv@f1:
  1127                           	opt stack 0
  1128                           
  1129                           ; 3 bytes @ 0x1D
  1130  00001E                     	ds	2
  1131  000020                     ??_fillInTemp:
  1132                           
  1133                           ; 1 bytes @ 0x1F
  1134  000020                     	ds	1
  1135  000021                     ___ftdiv@f2:
  1136                           	opt stack 0
  1137                           
  1138                           ; 3 bytes @ 0x20
  1139  000021                     	ds	1
  1140  000022                     ___lltoft@exp:
  1141                           	opt stack 0
  1142                           
  1143                           ; 1 bytes @ 0x21
  1144  000022                     	ds	2
  1145  000024                     ??___ftdiv:
  1146  000024                     fillInTemp@pipe_or_ambience:
  1147                           	opt stack 0
  1148                           
  1149                           ; 1 bytes @ 0x23
  1150  000024                     	ds	1
  1151  000025                     fillInTemp@i:
  1152                           	opt stack 0
  1153                           
  1154                           ; 2 bytes @ 0x24
  1155  000025                     	ds	2
  1156  000027                     ___ftdiv@cntr:
  1157                           	opt stack 0
  1158  000027                     fillInTemp@i_1153:
  1159                           	opt stack 0
  1160                           
  1161                           ; 2 bytes @ 0x26
  1162  000027                     	ds	1
  1163  000028                     ___ftdiv@f3:
  1164                           	opt stack 0
  1165                           
  1166                           ; 3 bytes @ 0x27
  1167  000028                     	ds	1
  1168  000029                     fillInTemp@i_1154:
  1169                           	opt stack 0
  1170                           
  1171                           ; 1 bytes @ 0x28
  1172  000029                     	ds	1
  1173  00002A                     fillInTemp@temp:
  1174                           	opt stack 0
  1175                           
  1176                           ; 2 bytes @ 0x29
  1177  00002A                     	ds	1
  1178  00002B                     ___ftdiv@exp:
  1179                           	opt stack 0
  1180                           
  1181                           ; 1 bytes @ 0x2A
  1182  00002B                     	ds	1
  1183  00002C                     ___ftdiv@sign:
  1184                           	opt stack 0
  1185                           
  1186                           ; 1 bytes @ 0x2B
  1187  00002C                     	ds	1
  1188  00002D                     ?___ftmul:
  1189                           	opt stack 0
  1190  00002D                     ___ftmul@f1:
  1191                           	opt stack 0
  1192                           
  1193                           ; 3 bytes @ 0x2C
  1194  00002D                     	ds	3
  1195  000030                     ___ftmul@f2:
  1196                           	opt stack 0
  1197                           
  1198                           ; 3 bytes @ 0x2F
  1199  000030                     	ds	3
  1200  000033                     ??___ftmul:
  1201                           
  1202                           ; 1 bytes @ 0x32
  1203  000033                     	ds	3
  1204  000036                     ___ftmul@exp:
  1205                           	opt stack 0
  1206                           
  1207                           ; 1 bytes @ 0x35
  1208  000036                     	ds	1
  1209  000037                     ___ftmul@f3_as_product:
  1210                           	opt stack 0
  1211                           
  1212                           ; 3 bytes @ 0x36
  1213  000037                     	ds	3
  1214  00003A                     ___ftmul@cntr:
  1215                           	opt stack 0
  1216                           
  1217                           ; 1 bytes @ 0x39
  1218  00003A                     	ds	1
  1219  00003B                     ___ftmul@sign:
  1220                           	opt stack 0
  1221                           
  1222                           ; 1 bytes @ 0x3A
  1223  00003B                     	ds	1
  1224  00003C                     ??_eval_poly:
  1225  00003C                     ??_calculateTemp:
  1226  00003C                     ___altoft@exp:
  1227                           	opt stack 0
  1228                           
  1229                           ; 1 bytes @ 0x3B
  1230  00003C                     	ds	1
  1231  00003D                     ___altoft@sign:
  1232                           	opt stack 0
  1233                           
  1234                           ; 1 bytes @ 0x3C
  1235  00003D                     	ds	1
  1236  00003E                     tblptru	equ	0xFF8
  1237                           tblptrh	equ	0xFF7
  1238                           tblptrl	equ	0xFF6
  1239                           tablat	equ	0xFF5
  1240                           postinc0	equ	0xFEE
  1241                           wreg	equ	0xFE8
  1242                           postdec1	equ	0xFE5
  1243                           fsr1l	equ	0xFE1
  1244                           
  1245                           ; 1 bytes @ 0x3D
  1246 ;;
  1247 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1248 ;;
  1249 ;; *************** function _main *****************
  1250 ;; Defined at:
  1251 ;;		line 26 in file "main.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;		None
  1254 ;; Auto vars:     Size  Location     Type
  1255 ;;		None
  1256 ;; Return value:  Size  Location     Type
  1257 ;;                  1    wreg      void 
  1258 ;; Registers used:
  1259 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1260 ;; Tracked objects:
  1261 ;;		On entry : 0/0
  1262 ;;		On exit  : 0/0
  1263 ;;		Unchanged: 0/0
  1264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1265 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1266 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1267 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1268 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1269 ;;Total ram usage:        2 bytes
  1270 ;; Hardware stack levels required when called:    9
  1271 ;; This function calls:
  1272 ;;		_UARTReceive
  1273 ;;		___wmul
  1274 ;;		_delay_ms
  1275 ;;		_digipot
  1276 ;;		_initADC
  1277 ;;		_initInterrupts
  1278 ;;		_initLoRa
  1279 ;;		_initSPI
  1280 ;;		_initUART1
  1281 ;;		_init_frequency
  1282 ;;		_makeTempMessage
  1283 ;;		_make_frequency_message
  1284 ;;		_sendUARTMessage
  1285 ;; This function is called by:
  1286 ;;		Startup code after reset
  1287 ;; This function uses a non-reentrant model
  1288 ;;
  1289                           
  1290                           	psect	text0
  1291  011164                     __ptext0:
  1292                           	opt stack 0
  1293  011164                     _main:
  1294                           	opt stack 22
  1295                           
  1296                           ;main.c: 28: OSCCONbits.IRCF0 = 1;
  1297                           
  1298                           ;incstack = 0
  1299  011164  88D3               	bsf	4051,4,c	;volatile
  1300                           
  1301                           ;main.c: 29: OSCCONbits.SCS0 = 1;
  1302  011166  80D3               	bsf	4051,0,c	;volatile
  1303                           
  1304                           ;main.c: 30: OSCCONbits.SCS1 = 1;
  1305  011168  82D3               	bsf	4051,1,c	;volatile
  1306                           
  1307                           ;main.c: 32: isCommandSent = 1;
  1308  01116A  0E01               	movlw	1
  1309  01116C  0100               	movlb	0	; () banked
  1310  01116E  6FA9               	movwf	_isCommandSent& (0+255),b
  1311                           
  1312                           ; BSR set to: 0
  1313                           ;main.c: 33: init_frequency();
  1314  011170  ECCC  F08D         	call	_init_frequency	;wreg free
  1315                           
  1316                           ;main.c: 34: initUART1();
  1317  011174  ECAE  F08E         	call	_initUART1	;wreg free
  1318                           
  1319                           ;main.c: 35: initADC();
  1320  011178  EC50  F08E         	call	_initADC	;wreg free
  1321                           
  1322                           ;main.c: 36: initInterrupts();
  1323  01117C  ECC4  F08E         	call	_initInterrupts	;wreg free
  1324                           
  1325                           ;main.c: 37: initSPI();
  1326  011180  ECBD  F085         	call	_initSPI	;wreg free
  1327  011184                     l3872:
  1328                           
  1329                           ;main.c: 39: inductive= 40*value*value;
  1330  011184  C0F0  F012         	movff	_value,___wmul@multiplier
  1331  011188  C0F1  F013         	movff	_value+1,___wmul@multiplier+1
  1332  01118C  C0F0  F014         	movff	_value,___wmul@multiplicand
  1333  011190  C0F1  F015         	movff	_value+1,___wmul@multiplicand+1
  1334  011194  EC67  F08E         	call	___wmul	;wreg free
  1335  011198  C012  F0A2         	movff	?___wmul,_main$2421
  1336  01119C  C013  F0A3         	movff	?___wmul+1,_main$2421+1
  1337                           
  1338                           ;main.c: 39: inductive= 40*value*value;
  1339  0111A0  C0A2  F012         	movff	_main$2421,___wmul@multiplier
  1340  0111A4  C0A3  F013         	movff	_main$2421+1,___wmul@multiplier+1
  1341  0111A8  0E00               	movlw	0
  1342  0111AA  6E15               	movwf	___wmul@multiplicand+1,c
  1343  0111AC  0E28               	movlw	40
  1344  0111AE  6E14               	movwf	___wmul@multiplicand,c
  1345  0111B0  EC67  F08E         	call	___wmul	;wreg free
  1346  0111B4  C012  F0F6         	movff	?___wmul,_inductive
  1347  0111B8  C013  F0F7         	movff	?___wmul+1,_inductive+1
  1348                           
  1349                           ;main.c: 40: UARTReceive(1);
  1350  0111BC  0E01               	movlw	1
  1351  0111BE  ECBC  F08E         	call	_UARTReceive
  1352                           
  1353                           ;main.c: 41: initLoRa();
  1354  0111C2  ECAB  F08C         	call	_initLoRa	;wreg free
  1355                           
  1356                           ;main.c: 42: UARTReceive(0);
  1357  0111C6  0E00               	movlw	0
  1358  0111C8  ECBC  F08E         	call	_UARTReceive
  1359                           
  1360                           ;main.c: 44: delay_ms(800);
  1361  0111CC  0E03               	movlw	3
  1362  0111CE  6E13               	movwf	delay_ms@ms+1,c
  1363  0111D0  0E20               	movlw	32
  1364  0111D2  6E12               	movwf	delay_ms@ms,c
  1365  0111D4  EC1F  F08E         	call	_delay_ms	;wreg free
  1366                           
  1367                           ;main.c: 45: make_frequency_message();
  1368  0111D8  ECD3  F08A         	call	_make_frequency_message	;wreg free
  1369                           
  1370                           ;main.c: 46: sendUARTMessage(frequency_message);
  1371  0111DC  0EAA               	movlw	low _frequency_message
  1372  0111DE  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  1373  0111E0  0E00               	movlw	high _frequency_message
  1374  0111E2  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  1375  0111E4  EC38  F08C         	call	_sendUARTMessage	;wreg free
  1376                           
  1377                           ;main.c: 47: delay_ms(800);
  1378  0111E8  0E03               	movlw	3
  1379  0111EA  6E13               	movwf	delay_ms@ms+1,c
  1380  0111EC  0E20               	movlw	32
  1381  0111EE  6E12               	movwf	delay_ms@ms,c
  1382  0111F0  EC1F  F08E         	call	_delay_ms	;wreg free
  1383                           
  1384                           ;main.c: 49: makeTempMessage(0);
  1385  0111F4  0E00               	movlw	0
  1386  0111F6  EC0A  F08D         	call	_makeTempMessage
  1387                           
  1388                           ;main.c: 50: sendUARTMessage(temp_display_message);
  1389  0111FA  0EC4               	movlw	low _temp_display_message
  1390  0111FC  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  1391  0111FE  0E00               	movlw	high _temp_display_message
  1392  011200  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  1393  011202  EC38  F08C         	call	_sendUARTMessage	;wreg free
  1394                           
  1395                           ;main.c: 51: delay_ms(800);
  1396  011206  0E03               	movlw	3
  1397  011208  6E13               	movwf	delay_ms@ms+1,c
  1398  01120A  0E20               	movlw	32
  1399  01120C  6E12               	movwf	delay_ms@ms,c
  1400  01120E  EC1F  F08E         	call	_delay_ms	;wreg free
  1401                           
  1402                           ;main.c: 53: makeTempMessage(1);
  1403  011212  0E01               	movlw	1
  1404  011214  EC0A  F08D         	call	_makeTempMessage
  1405                           
  1406                           ;main.c: 54: sendUARTMessage(temp_display_message);
  1407  011218  0EC4               	movlw	low _temp_display_message
  1408  01121A  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  1409  01121C  0E00               	movlw	high _temp_display_message
  1410  01121E  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  1411  011220  EC38  F08C         	call	_sendUARTMessage	;wreg free
  1412                           
  1413                           ;main.c: 55: delay_ms(800);
  1414  011224  0E03               	movlw	3
  1415  011226  6E13               	movwf	delay_ms@ms+1,c
  1416  011228  0E20               	movlw	32
  1417  01122A  6E12               	movwf	delay_ms@ms,c
  1418  01122C  EC1F  F08E         	call	_delay_ms	;wreg free
  1419                           
  1420                           ;main.c: 58: digipot();
  1421  011230  EC2F  F08A         	call	_digipot	;wreg free
  1422  011234  D7A7               	goto	l3872
  1423  011236                     __end_of_main:
  1424                           	opt stack 0
  1425                           tblptru	equ	0xFF8
  1426                           tblptrh	equ	0xFF7
  1427                           tblptrl	equ	0xFF6
  1428                           tablat	equ	0xFF5
  1429                           postinc0	equ	0xFEE
  1430                           wreg	equ	0xFE8
  1431                           postdec1	equ	0xFE5
  1432                           fsr1l	equ	0xFE1
  1433                           
  1434 ;; *************** function _make_frequency_message *****************
  1435 ;; Defined at:
  1436 ;;		line 81 in file "frequency.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2, status,0, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    3
  1457 ;; This function calls:
  1458 ;;		___lwdiv
  1459 ;;		___lwmod
  1460 ;; This function is called by:
  1461 ;;		_main
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text1
  1466  0115A6                     __ptext1:
  1467                           	opt stack 0
  1468  0115A6                     _make_frequency_message:
  1469                           	opt stack 27
  1470                           
  1471                           ;frequency.c: 82: frequency_message[19] = (value / 1000 + 48);
  1472                           
  1473                           ;incstack = 0
  1474  0115A6  C0F0  F017         	movff	_value,___lwdiv@dividend
  1475  0115AA  C0F1  F018         	movff	_value+1,___lwdiv@dividend+1
  1476  0115AE  0E03               	movlw	3
  1477  0115B0  6E1A               	movwf	___lwdiv@divisor+1,c
  1478  0115B2  0EE8               	movlw	232
  1479  0115B4  6E19               	movwf	___lwdiv@divisor,c
  1480  0115B6  EC35  F08D         	call	___lwdiv	;wreg free
  1481  0115BA  5017               	movf	?___lwdiv,w,c
  1482  0115BC  0F30               	addlw	48
  1483  0115BE  0100               	movlb	0	; () banked
  1484  0115C0  6FBD               	movwf	(_frequency_message+19)& (0+255),b
  1485                           
  1486                           ;frequency.c: 83: frequency_message[20] = (value % 1000 / 100 + 48);
  1487  0115C2  0E03               	movlw	3
  1488  0115C4  6E15               	movwf	___lwmod@divisor+1,c
  1489  0115C6  0EE8               	movlw	232
  1490  0115C8  6E14               	movwf	___lwmod@divisor,c
  1491  0115CA  C0F0  F012         	movff	_value,___lwmod@dividend
  1492  0115CE  C0F1  F013         	movff	_value+1,___lwmod@dividend+1
  1493  0115D2  ECAB  F08D         	call	___lwmod	;wreg free
  1494  0115D6  C012  F017         	movff	?___lwmod,___lwdiv@dividend
  1495  0115DA  C013  F018         	movff	?___lwmod+1,___lwdiv@dividend+1
  1496  0115DE  0E00               	movlw	0
  1497  0115E0  6E1A               	movwf	___lwdiv@divisor+1,c
  1498  0115E2  0E64               	movlw	100
  1499  0115E4  6E19               	movwf	___lwdiv@divisor,c
  1500  0115E6  EC35  F08D         	call	___lwdiv	;wreg free
  1501  0115EA  5017               	movf	?___lwdiv,w,c
  1502  0115EC  0F30               	addlw	48
  1503  0115EE  0100               	movlb	0	; () banked
  1504  0115F0  6FBE               	movwf	(_frequency_message+20)& (0+255),b
  1505                           
  1506                           ;frequency.c: 84: frequency_message[21] = (value % 100 / 10 + 48);
  1507  0115F2  0E00               	movlw	0
  1508  0115F4  6E15               	movwf	___lwmod@divisor+1,c
  1509  0115F6  0E64               	movlw	100
  1510  0115F8  6E14               	movwf	___lwmod@divisor,c
  1511  0115FA  C0F0  F012         	movff	_value,___lwmod@dividend
  1512  0115FE  C0F1  F013         	movff	_value+1,___lwmod@dividend+1
  1513  011602  ECAB  F08D         	call	___lwmod	;wreg free
  1514  011606  C012  F017         	movff	?___lwmod,___lwdiv@dividend
  1515  01160A  C013  F018         	movff	?___lwmod+1,___lwdiv@dividend+1
  1516  01160E  0E00               	movlw	0
  1517  011610  6E1A               	movwf	___lwdiv@divisor+1,c
  1518  011612  0E0A               	movlw	10
  1519  011614  6E19               	movwf	___lwdiv@divisor,c
  1520  011616  EC35  F08D         	call	___lwdiv	;wreg free
  1521  01161A  5017               	movf	?___lwdiv,w,c
  1522  01161C  0F30               	addlw	48
  1523  01161E  0100               	movlb	0	; () banked
  1524  011620  6FBF               	movwf	(_frequency_message+21)& (0+255),b
  1525                           
  1526                           ;frequency.c: 85: frequency_message[22] = (value % 10 + 48);
  1527  011622  C0F0  F012         	movff	_value,___lwmod@dividend
  1528  011626  C0F1  F013         	movff	_value+1,___lwmod@dividend+1
  1529  01162A  0E00               	movlw	0
  1530  01162C  6E15               	movwf	___lwmod@divisor+1,c
  1531  01162E  0E0A               	movlw	10
  1532  011630  6E14               	movwf	___lwmod@divisor,c
  1533  011632  ECAB  F08D         	call	___lwmod	;wreg free
  1534  011636  5012               	movf	?___lwmod,w,c
  1535  011638  0F30               	addlw	48
  1536  01163A  0100               	movlb	0	; () banked
  1537  01163C  6FC0               	movwf	(_frequency_message+22)& (0+255),b
  1538                           
  1539                           ; BSR set to: 0
  1540  01163E  0012               	return		;funcret
  1541  011640                     __end_of_make_frequency_message:
  1542                           	opt stack 0
  1543                           tblptru	equ	0xFF8
  1544                           tblptrh	equ	0xFF7
  1545                           tblptrl	equ	0xFF6
  1546                           tablat	equ	0xFF5
  1547                           postinc0	equ	0xFEE
  1548                           wreg	equ	0xFE8
  1549                           postdec1	equ	0xFE5
  1550                           fsr1l	equ	0xFE1
  1551                           
  1552 ;; *************** function ___lwmod *****************
  1553 ;; Defined at:
  1554 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwmod.c"
  1555 ;; Parameters:    Size  Location     Type
  1556 ;;  dividend        2   17[COMRAM] unsigned int 
  1557 ;;  divisor         2   19[COMRAM] unsigned int 
  1558 ;; Auto vars:     Size  Location     Type
  1559 ;;  counter         1   21[COMRAM] unsigned char 
  1560 ;; Return value:  Size  Location     Type
  1561 ;;                  2   17[COMRAM] unsigned int 
  1562 ;; Registers used:
  1563 ;;		wreg, status,2, status,0
  1564 ;; Tracked objects:
  1565 ;;		On entry : 0/0
  1566 ;;		On exit  : 0/0
  1567 ;;		Unchanged: 0/0
  1568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1569 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1570 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1572 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1573 ;;Total ram usage:        5 bytes
  1574 ;; Hardware stack levels used:    1
  1575 ;; Hardware stack levels required when called:    2
  1576 ;; This function calls:
  1577 ;;		Nothing
  1578 ;; This function is called by:
  1579 ;;		_make_frequency_message
  1580 ;; This function uses a non-reentrant model
  1581 ;;
  1582                           
  1583                           	psect	text2
  1584  011B56                     __ptext2:
  1585                           	opt stack 0
  1586  011B56                     ___lwmod:
  1587                           	opt stack 27
  1588                           
  1589                           ; BSR set to: 0
  1590                           ;incstack = 0
  1591  011B56  5014               	movf	___lwmod@divisor,w,c
  1592  011B58  1015               	iorwf	___lwmod@divisor+1,w,c
  1593  011B5A  B4D8               	btfsc	status,2,c
  1594  011B5C  D018               	goto	l856
  1595  011B5E  0E01               	movlw	1
  1596  011B60  6E16               	movwf	___lwmod@counter,c
  1597  011B62  D004               	goto	l2912
  1598  011B64                     l2910:
  1599  011B64  90D8               	bcf	status,0,c
  1600  011B66  3614               	rlcf	___lwmod@divisor,f,c
  1601  011B68  3615               	rlcf	___lwmod@divisor+1,f,c
  1602  011B6A  2A16               	incf	___lwmod@counter,f,c
  1603  011B6C                     l2912:
  1604  011B6C  AE15               	btfss	___lwmod@divisor+1,7,c
  1605  011B6E  D7FA               	goto	l2910
  1606  011B70                     l2914:
  1607  011B70  5014               	movf	___lwmod@divisor,w,c
  1608  011B72  5C12               	subwf	___lwmod@dividend,w,c
  1609  011B74  5015               	movf	___lwmod@divisor+1,w,c
  1610  011B76  5813               	subwfb	___lwmod@dividend+1,w,c
  1611  011B78  A0D8               	btfss	status,0,c
  1612  011B7A  D004               	goto	l2918
  1613  011B7C  5014               	movf	___lwmod@divisor,w,c
  1614  011B7E  5E12               	subwf	___lwmod@dividend,f,c
  1615  011B80  5015               	movf	___lwmod@divisor+1,w,c
  1616  011B82  5A13               	subwfb	___lwmod@dividend+1,f,c
  1617  011B84                     l2918:
  1618  011B84  90D8               	bcf	status,0,c
  1619  011B86  3215               	rrcf	___lwmod@divisor+1,f,c
  1620  011B88  3214               	rrcf	___lwmod@divisor,f,c
  1621  011B8A  2E16               	decfsz	___lwmod@counter,f,c
  1622  011B8C  D7F1               	goto	l2914
  1623  011B8E                     l856:
  1624  011B8E  C012  F012         	movff	___lwmod@dividend,?___lwmod
  1625  011B92  C013  F013         	movff	___lwmod@dividend+1,?___lwmod+1
  1626  011B96  0012               	return		;funcret
  1627  011B98                     __end_of___lwmod:
  1628                           	opt stack 0
  1629                           tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           postdec1	equ	0xFE5
  1636                           fsr1l	equ	0xFE1
  1637                           status	equ	0xFD8
  1638                           
  1639 ;; *************** function ___lwdiv *****************
  1640 ;; Defined at:
  1641 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lwdiv.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;  dividend        2   22[COMRAM] unsigned int 
  1644 ;;  divisor         2   24[COMRAM] unsigned int 
  1645 ;; Auto vars:     Size  Location     Type
  1646 ;;  quotient        2   26[COMRAM] unsigned int 
  1647 ;;  counter         1   28[COMRAM] unsigned char 
  1648 ;; Return value:  Size  Location     Type
  1649 ;;                  2   22[COMRAM] unsigned int 
  1650 ;; Registers used:
  1651 ;;		wreg, status,2, status,0
  1652 ;; Tracked objects:
  1653 ;;		On entry : 0/0
  1654 ;;		On exit  : 0/0
  1655 ;;		Unchanged: 0/0
  1656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1657 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1658 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1660 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1661 ;;Total ram usage:        7 bytes
  1662 ;; Hardware stack levels used:    1
  1663 ;; Hardware stack levels required when called:    2
  1664 ;; This function calls:
  1665 ;;		Nothing
  1666 ;; This function is called by:
  1667 ;;		_make_frequency_message
  1668 ;; This function uses a non-reentrant model
  1669 ;;
  1670                           
  1671                           	psect	text3
  1672  011A6A                     __ptext3:
  1673                           	opt stack 0
  1674  011A6A                     ___lwdiv:
  1675                           	opt stack 27
  1676                           
  1677                           ;incstack = 0
  1678  011A6A  0E00               	movlw	0
  1679  011A6C  6E1C               	movwf	___lwdiv@quotient+1,c
  1680  011A6E  0E00               	movlw	0
  1681  011A70  6E1B               	movwf	___lwdiv@quotient,c
  1682  011A72  5019               	movf	___lwdiv@divisor,w,c
  1683  011A74  101A               	iorwf	___lwdiv@divisor+1,w,c
  1684  011A76  B4D8               	btfsc	status,2,c
  1685  011A78  D01C               	goto	l846
  1686  011A7A  0E01               	movlw	1
  1687  011A7C  6E1D               	movwf	___lwdiv@counter,c
  1688  011A7E  D004               	goto	l2892
  1689  011A80                     l2890:
  1690  011A80  90D8               	bcf	status,0,c
  1691  011A82  3619               	rlcf	___lwdiv@divisor,f,c
  1692  011A84  361A               	rlcf	___lwdiv@divisor+1,f,c
  1693  011A86  2A1D               	incf	___lwdiv@counter,f,c
  1694  011A88                     l2892:
  1695  011A88  AE1A               	btfss	___lwdiv@divisor+1,7,c
  1696  011A8A  D7FA               	goto	l2890
  1697  011A8C                     l2894:
  1698  011A8C  90D8               	bcf	status,0,c
  1699  011A8E  361B               	rlcf	___lwdiv@quotient,f,c
  1700  011A90  361C               	rlcf	___lwdiv@quotient+1,f,c
  1701  011A92  5019               	movf	___lwdiv@divisor,w,c
  1702  011A94  5C17               	subwf	___lwdiv@dividend,w,c
  1703  011A96  501A               	movf	___lwdiv@divisor+1,w,c
  1704  011A98  5818               	subwfb	___lwdiv@dividend+1,w,c
  1705  011A9A  A0D8               	btfss	status,0,c
  1706  011A9C  D005               	goto	l2902
  1707  011A9E  5019               	movf	___lwdiv@divisor,w,c
  1708  011AA0  5E17               	subwf	___lwdiv@dividend,f,c
  1709  011AA2  501A               	movf	___lwdiv@divisor+1,w,c
  1710  011AA4  5A18               	subwfb	___lwdiv@dividend+1,f,c
  1711  011AA6  801B               	bsf	___lwdiv@quotient,0,c
  1712  011AA8                     l2902:
  1713  011AA8  90D8               	bcf	status,0,c
  1714  011AAA  321A               	rrcf	___lwdiv@divisor+1,f,c
  1715  011AAC  3219               	rrcf	___lwdiv@divisor,f,c
  1716  011AAE  2E1D               	decfsz	___lwdiv@counter,f,c
  1717  011AB0  D7ED               	goto	l2894
  1718  011AB2                     l846:
  1719  011AB2  C01B  F017         	movff	___lwdiv@quotient,?___lwdiv
  1720  011AB6  C01C  F018         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1721  011ABA  0012               	return		;funcret
  1722  011ABC                     __end_of___lwdiv:
  1723                           	opt stack 0
  1724                           tblptru	equ	0xFF8
  1725                           tblptrh	equ	0xFF7
  1726                           tblptrl	equ	0xFF6
  1727                           tablat	equ	0xFF5
  1728                           postinc0	equ	0xFEE
  1729                           wreg	equ	0xFE8
  1730                           postdec1	equ	0xFE5
  1731                           fsr1l	equ	0xFE1
  1732                           status	equ	0xFD8
  1733                           
  1734 ;; *************** function _makeTempMessage *****************
  1735 ;; Defined at:
  1736 ;;		line 100 in file "temperature.c"
  1737 ;; Parameters:    Size  Location     Type
  1738 ;;  pipe_or_ambi    1    wreg     unsigned char 
  1739 ;; Auto vars:     Size  Location     Type
  1740 ;;  pipe_or_ambi    1   24[BANK0 ] unsigned char 
  1741 ;; Return value:  Size  Location     Type
  1742 ;;                  1    wreg      void 
  1743 ;; Registers used:
  1744 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1745 ;; Tracked objects:
  1746 ;;		On entry : 0/0
  1747 ;;		On exit  : 0/0
  1748 ;;		Unchanged: 0/0
  1749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1750 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1751 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1752 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1753 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1754 ;;Total ram usage:        1 bytes
  1755 ;; Hardware stack levels used:    1
  1756 ;; Hardware stack levels required when called:    5
  1757 ;; This function calls:
  1758 ;;		_calculateTemp
  1759 ;;		_fillInTemp
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           
  1765                           	psect	text4
  1766  011A14                     __ptext4:
  1767                           	opt stack 0
  1768  011A14                     _makeTempMessage:
  1769                           	opt stack 25
  1770                           
  1771                           ;incstack = 0
  1772                           ;makeTempMessage@pipe_or_ambient stored from wreg
  1773  011A14  0100               	movlb	0	; () banked
  1774  011A16  6F78               	movwf	makeTempMessage@pipe_or_ambient& (0+255),b
  1775                           
  1776                           ;temperature.c: 102: if(pipe_or_ambient == 0){
  1777  011A18  0100               	movlb	0	; () banked
  1778  011A1A  5178               	movf	makeTempMessage@pipe_or_ambient& (0+255),w,b
  1779  011A1C  0100               	movlb	0	; () banked
  1780  011A1E  A4D8               	btfss	status,2,c
  1781  011A20  D012               	goto	l3836
  1782                           
  1783                           ; BSR set to: 0
  1784                           ;temperature.c: 103: temp_pipe = calculateTemp(plus_pipe, minus_pipe);
  1785  011A22  C04A  F06F         	movff	_plus_pipe,calculateTemp@plus
  1786  011A26  C04B  F070         	movff	_plus_pipe+1,calculateTemp@plus+1
  1787  011A2A  C046  F071         	movff	_minus_pipe,calculateTemp@minus
  1788  011A2E  C047  F072         	movff	_minus_pipe+1,calculateTemp@minus+1
  1789  011A32  EC7F  F089         	call	_calculateTemp	;wreg free
  1790  011A36  C06F  F0E6         	movff	?_calculateTemp,_temp_pipe
  1791  011A3A  C070  F0E7         	movff	?_calculateTemp+1,_temp_pipe+1
  1792                           
  1793                           ;temperature.c: 104: fillInTemp(0);
  1794  011A3E  0E00               	movlw	0
  1795  011A40  EC22  F083         	call	_fillInTemp
  1796                           
  1797                           ;temperature.c: 105: }
  1798  011A44  0012               	return	
  1799  011A46                     l3836:
  1800                           
  1801                           ;temperature.c: 107: else{
  1802                           ;temperature.c: 108: temp_ambient = calculateTemp(plus_ambient, minus_ambient);
  1803  011A46  C048  F06F         	movff	_plus_ambient,calculateTemp@plus
  1804  011A4A  C049  F070         	movff	_plus_ambient+1,calculateTemp@plus+1
  1805  011A4E  C0E2  F071         	movff	_minus_ambient,calculateTemp@minus
  1806  011A52  C0E3  F072         	movff	_minus_ambient+1,calculateTemp@minus+1
  1807  011A56  EC7F  F089         	call	_calculateTemp	;wreg free
  1808  011A5A  C06F  F0E4         	movff	?_calculateTemp,_temp_ambient
  1809  011A5E  C070  F0E5         	movff	?_calculateTemp+1,_temp_ambient+1
  1810                           
  1811                           ;temperature.c: 109: fillInTemp(1);
  1812  011A62  0E01               	movlw	1
  1813  011A64  EC22  F083         	call	_fillInTemp
  1814  011A68  0012               	return	
  1815  011A6A                     __end_of_makeTempMessage:
  1816                           	opt stack 0
  1817                           tblptru	equ	0xFF8
  1818                           tblptrh	equ	0xFF7
  1819                           tblptrl	equ	0xFF6
  1820                           tablat	equ	0xFF5
  1821                           postinc0	equ	0xFEE
  1822                           wreg	equ	0xFE8
  1823                           postdec1	equ	0xFE5
  1824                           fsr1l	equ	0xFE1
  1825                           status	equ	0xFD8
  1826                           
  1827 ;; *************** function _fillInTemp *****************
  1828 ;; Defined at:
  1829 ;;		line 50 in file "temperature.c"
  1830 ;; Parameters:    Size  Location     Type
  1831 ;;  pipe_or_ambi    1    wreg     unsigned char 
  1832 ;; Auto vars:     Size  Location     Type
  1833 ;;  pipe_or_ambi    1   35[COMRAM] unsigned char 
  1834 ;;  i               2   38[COMRAM] int 
  1835 ;;  i               2   36[COMRAM] int 
  1836 ;;  i               1   40[COMRAM] unsigned char 
  1837 ;;  temp            2   41[COMRAM] int 
  1838 ;; Return value:  Size  Location     Type
  1839 ;;                  1    wreg      void 
  1840 ;; Registers used:
  1841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1842 ;; Tracked objects:
  1843 ;;		On entry : 0/0
  1844 ;;		On exit  : 0/0
  1845 ;;		Unchanged: 0/0
  1846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  1847 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1848 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1849 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1850 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  1851 ;;Total ram usage:       12 bytes
  1852 ;; Hardware stack levels used:    1
  1853 ;; Hardware stack levels required when called:    3
  1854 ;; This function calls:
  1855 ;;		___awdiv
  1856 ;;		___awmod
  1857 ;; This function is called by:
  1858 ;;		_makeTempMessage
  1859 ;; This function uses a non-reentrant model
  1860 ;;
  1861                           
  1862                           	psect	text5
  1863  010644                     __ptext5:
  1864                           	opt stack 0
  1865  010644                     _fillInTemp:
  1866                           	opt stack 26
  1867                           
  1868                           ;incstack = 0
  1869                           ;fillInTemp@pipe_or_ambience stored from wreg
  1870  010644  6E24               	movwf	fillInTemp@pipe_or_ambience,c
  1871                           
  1872                           ;temperature.c: 51: signed int temp;
  1873                           ;temperature.c: 53: if(pipe_or_ambience == 0){
  1874  010646  5024               	movf	fillInTemp@pipe_or_ambience,w,c
  1875  010648  A4D8               	btfss	status,2,c
  1876  01064A  D02A               	goto	l3738
  1877                           
  1878                           ;temperature.c: 55: for(int i = 0; i<4; i++){
  1879  01064C  0E00               	movlw	0
  1880  01064E  6E26               	movwf	fillInTemp@i+1,c
  1881  010650  0E00               	movlw	0
  1882  010652  6E25               	movwf	fillInTemp@i,c
  1883  010654  BE26               	btfsc	fillInTemp@i+1,7,c
  1884  010656  D006               	goto	l3732
  1885  010658  5026               	movf	fillInTemp@i+1,w,c
  1886  01065A  E11D               	bnz	l220
  1887  01065C  0E04               	movlw	4
  1888  01065E  5C25               	subwf	fillInTemp@i,w,c
  1889  010660  B0D8               	btfsc	status,0,c
  1890  010662  D019               	goto	l220
  1891  010664                     l3732:
  1892                           
  1893                           ;temperature.c: 56: temp_display_message[i] = pipe_ascii[i];
  1894  010664  0EF1               	movlw	low _pipe_ascii
  1895  010666  2425               	addwf	fillInTemp@i,w,c
  1896  010668  6EF6               	movwf	tblptrl,c
  1897  01066A  0EFE               	movlw	high _pipe_ascii
  1898  01066C  2026               	addwfc	fillInTemp@i+1,w,c
  1899  01066E  6EF7               	movwf	tblptrh,c
  1900  010670                     	if	1	;There are 3 active tblptr bytes
  1901  010670  6AF8               	clrf	tblptru,c
  1902  010672  0E00               	movlw	low (__mediumconst shr (0+16))
  1903  010674  22F8               	addwfc	tblptru,f,c
  1904  010676                     	endif
  1905  010676  0EC4               	movlw	low _temp_display_message
  1906  010678  2425               	addwf	fillInTemp@i,w,c
  1907  01067A  6ED9               	movwf	fsr2l,c
  1908  01067C  0E00               	movlw	high _temp_display_message
  1909  01067E  2026               	addwfc	fillInTemp@i+1,w,c
  1910  010680  6EDA               	movwf	fsr2h,c
  1911  010682  0008               	tblrd		*
  1912  010684  CFF5 FFDF          	movff	tablat,indf2
  1913  010688  4A25               	infsnz	fillInTemp@i,f,c
  1914  01068A  2A26               	incf	fillInTemp@i+1,f,c
  1915  01068C  BE26               	btfsc	fillInTemp@i+1,7,c
  1916  01068E  D7EA               	goto	l3732
  1917  010690  5026               	movf	fillInTemp@i+1,w,c
  1918  010692  E101               	bnz	u3660
  1919  010694  D7E3               	goto	L1
  1920  010696                     u3660:
  1921  010696                     l220:
  1922                           
  1923                           ;temperature.c: 57: }
  1924                           ;temperature.c: 58: temp = temp_pipe;
  1925  010696  C0E6  F02A         	movff	_temp_pipe,fillInTemp@temp
  1926  01069A  C0E7  F02B         	movff	_temp_pipe+1,fillInTemp@temp+1
  1927                           
  1928                           ;temperature.c: 59: }
  1929  01069E  D029               	goto	l3750
  1930  0106A0                     l3738:
  1931                           
  1932                           ;temperature.c: 60: else{
  1933                           ;temperature.c: 62: for(int i = 0; i<4; i++){
  1934  0106A0  0E00               	movlw	0
  1935  0106A2  6E28               	movwf	fillInTemp@i_1153+1,c
  1936  0106A4  0E00               	movlw	0
  1937  0106A6  6E27               	movwf	fillInTemp@i_1153,c
  1938  0106A8  BE28               	btfsc	fillInTemp@i_1153+1,7,c
  1939  0106AA  D006               	goto	l3744
  1940  0106AC  5028               	movf	fillInTemp@i_1153+1,w,c
  1941  0106AE  E11D               	bnz	l223
  1942  0106B0  0E04               	movlw	4
  1943  0106B2  5C27               	subwf	fillInTemp@i_1153,w,c
  1944  0106B4  B0D8               	btfsc	status,0,c
  1945  0106B6  D019               	goto	l223
  1946  0106B8                     l3744:
  1947                           
  1948                           ;temperature.c: 63: temp_display_message[i] = ambient_ascii[i];
  1949  0106B8  0EEC               	movlw	low _ambient_ascii
  1950  0106BA  2427               	addwf	fillInTemp@i_1153,w,c
  1951  0106BC  6EF6               	movwf	tblptrl,c
  1952  0106BE  0EFE               	movlw	high _ambient_ascii
  1953  0106C0  2028               	addwfc	fillInTemp@i_1153+1,w,c
  1954  0106C2  6EF7               	movwf	tblptrh,c
  1955  0106C4                     	if	1	;There are 3 active tblptr bytes
  1956  0106C4  6AF8               	clrf	tblptru,c
  1957  0106C6  0E00               	movlw	low (__mediumconst shr (0+16))
  1958  0106C8  22F8               	addwfc	tblptru,f,c
  1959  0106CA                     	endif
  1960  0106CA  0EC4               	movlw	low _temp_display_message
  1961  0106CC  2427               	addwf	fillInTemp@i_1153,w,c
  1962  0106CE  6ED9               	movwf	fsr2l,c
  1963  0106D0  0E00               	movlw	high _temp_display_message
  1964  0106D2  2028               	addwfc	fillInTemp@i_1153+1,w,c
  1965  0106D4  6EDA               	movwf	fsr2h,c
  1966  0106D6  0008               	tblrd		*
  1967  0106D8  CFF5 FFDF          	movff	tablat,indf2
  1968  0106DC  4A27               	infsnz	fillInTemp@i_1153,f,c
  1969  0106DE  2A28               	incf	fillInTemp@i_1153+1,f,c
  1970  0106E0  BE28               	btfsc	fillInTemp@i_1153+1,7,c
  1971  0106E2  D7EA               	goto	l3744
  1972  0106E4  5028               	movf	fillInTemp@i_1153+1,w,c
  1973  0106E6  E101               	bnz	u3680
  1974  0106E8  D7E3               	goto	L2
  1975  0106EA                     u3680:
  1976  0106EA                     l223:
  1977                           
  1978                           ;temperature.c: 64: }
  1979                           ;temperature.c: 65: temp = temp_ambient;
  1980  0106EA  C0E4  F02A         	movff	_temp_ambient,fillInTemp@temp
  1981  0106EE  C0E5  F02B         	movff	_temp_ambient+1,fillInTemp@temp+1
  1982  0106F2                     l3750:
  1983                           
  1984                           ;temperature.c: 66: }
  1985                           ;temperature.c: 69: if(temp < 0){
  1986  0106F2  AE2B               	btfss	fillInTemp@temp+1,7,c
  1987  0106F4  D008               	goto	l3756
  1988                           
  1989                           ;temperature.c: 71: asciiTemp[0] = '-';
  1990  0106F6  0E2D               	movlw	45
  1991  0106F8  0100               	movlb	0	; () banked
  1992  0106FA  6FA4               	movwf	_asciiTemp& (0+255),b
  1993                           
  1994                           ; BSR set to: 0
  1995                           ;temperature.c: 73: temp = - temp;
  1996  0106FC  6C2A               	negf	fillInTemp@temp,c
  1997  0106FE  1E2B               	comf	fillInTemp@temp+1,f,c
  1998  010700  B0D8               	btfsc	status,0,c
  1999  010702  2A2B               	incf	fillInTemp@temp+1,f,c
  2000                           
  2001                           ;temperature.c: 74: }
  2002  010704  D003               	goto	l3758
  2003  010706                     l3756:
  2004                           
  2005                           ;temperature.c: 75: else{
  2006                           ;temperature.c: 76: asciiTemp[0] = ' ';
  2007  010706  0E20               	movlw	32
  2008  010708  0100               	movlb	0	; () banked
  2009  01070A  6FA4               	movwf	_asciiTemp& (0+255),b
  2010  01070C                     l3758:
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;temperature.c: 77: }
  2014                           ;temperature.c: 79: asciiTemp[1] =(char) (temp/100 + 48);
  2015  01070C  C02A  F018         	movff	fillInTemp@temp,___awdiv@dividend
  2016  010710  C02B  F019         	movff	fillInTemp@temp+1,___awdiv@dividend+1
  2017  010714  0E00               	movlw	0
  2018  010716  6E1B               	movwf	___awdiv@divisor+1,c
  2019  010718  0E64               	movlw	100
  2020  01071A  6E1A               	movwf	___awdiv@divisor,c
  2021  01071C  ECF6  F08B         	call	___awdiv	;wreg free
  2022  010720  5018               	movf	?___awdiv,w,c
  2023  010722  0F30               	addlw	48
  2024  010724  0100               	movlb	0	; () banked
  2025  010726  6FA5               	movwf	(_asciiTemp+1)& (0+255),b
  2026                           
  2027                           ; BSR set to: 0
  2028                           ;temperature.c: 80: asciiTemp[2] =(char) (temp % 100 / 10 + 48);
  2029  010728  0E00               	movlw	0
  2030  01072A  6E15               	movwf	___awmod@divisor+1,c
  2031  01072C  0E64               	movlw	100
  2032  01072E  6E14               	movwf	___awmod@divisor,c
  2033  010730  C02A  F012         	movff	fillInTemp@temp,___awmod@dividend
  2034  010734  C02B  F013         	movff	fillInTemp@temp+1,___awmod@dividend+1
  2035  010738  EC73  F08C         	call	___awmod	;wreg free
  2036  01073C  C012  F018         	movff	?___awmod,___awdiv@dividend
  2037  010740  C013  F019         	movff	?___awmod+1,___awdiv@dividend+1
  2038  010744  0E00               	movlw	0
  2039  010746  6E1B               	movwf	___awdiv@divisor+1,c
  2040  010748  0E0A               	movlw	10
  2041  01074A  6E1A               	movwf	___awdiv@divisor,c
  2042  01074C  ECF6  F08B         	call	___awdiv	;wreg free
  2043  010750  5018               	movf	?___awdiv,w,c
  2044  010752  0F30               	addlw	48
  2045  010754  0100               	movlb	0	; () banked
  2046  010756  6FA6               	movwf	(_asciiTemp+2)& (0+255),b
  2047                           
  2048                           ; BSR set to: 0
  2049                           ;temperature.c: 81: asciiTemp[3] = (char) (temp % 10 + 48);
  2050  010758  C02A  F012         	movff	fillInTemp@temp,___awmod@dividend
  2051  01075C  C02B  F013         	movff	fillInTemp@temp+1,___awmod@dividend+1
  2052  010760  0E00               	movlw	0
  2053  010762  6E15               	movwf	___awmod@divisor+1,c
  2054  010764  0E0A               	movlw	10
  2055  010766  6E14               	movwf	___awmod@divisor,c
  2056  010768  EC73  F08C         	call	___awmod	;wreg free
  2057  01076C  5012               	movf	?___awmod,w,c
  2058  01076E  0F30               	addlw	48
  2059  010770  0100               	movlb	0	; () banked
  2060  010772  6FA7               	movwf	(_asciiTemp+3)& (0+255),b
  2061                           
  2062                           ; BSR set to: 0
  2063                           ;temperature.c: 85: for(char i = 12; i<17; i++){
  2064  010774  0E0C               	movlw	12
  2065  010776  6E29               	movwf	fillInTemp@i_1154,c
  2066  010778                     l3766:
  2067                           
  2068                           ; BSR set to: 0
  2069  010778  0E10               	movlw	16
  2070  01077A  6429               	cpfsgt	fillInTemp@i_1154,c
  2071  01077C  D001               	goto	l3770
  2072  01077E  0012               	return	
  2073  010780                     l3770:
  2074                           
  2075                           ;temperature.c: 86: temp_display_message[i] = asciiTemp[i-12];
  2076  010780  0EF4               	movlw	244
  2077  010782  6E20               	movwf	??_fillInTemp& (0+255),c
  2078  010784  0EFF               	movlw	255
  2079  010786  6E21               	movwf	(??_fillInTemp+1)& (0+255),c
  2080  010788  5029               	movf	fillInTemp@i_1154,w,c
  2081  01078A  6E22               	movwf	(??_fillInTemp+2)& (0+255),c
  2082  01078C  6A23               	clrf	(??_fillInTemp+3)& (0+255),c
  2083  01078E  5020               	movf	??_fillInTemp,w,c
  2084  010790  2622               	addwf	??_fillInTemp+2,f,c
  2085  010792  5021               	movf	??_fillInTemp+1,w,c
  2086  010794  2223               	addwfc	??_fillInTemp+3,f,c
  2087  010796  0EA4               	movlw	low _asciiTemp
  2088  010798  2422               	addwf	??_fillInTemp+2,w,c
  2089  01079A  6ED9               	movwf	fsr2l,c
  2090  01079C  0E00               	movlw	high _asciiTemp
  2091  01079E  2023               	addwfc	??_fillInTemp+3,w,c
  2092  0107A0  6EDA               	movwf	fsr2h,c
  2093  0107A2  5029               	movf	fillInTemp@i_1154,w,c
  2094  0107A4  0D01               	mullw	1
  2095  0107A6  0EC4               	movlw	low _temp_display_message
  2096  0107A8  24F3               	addwf	prodl,w,c
  2097  0107AA  6EE1               	movwf	fsr1l,c
  2098  0107AC  0E00               	movlw	high _temp_display_message
  2099  0107AE  20F4               	addwfc	prodh,w,c
  2100  0107B0  6EE2               	movwf	fsr1h,c
  2101  0107B2  CFDF FFE7          	movff	indf2,indf1
  2102  0107B6  2A29               	incf	fillInTemp@i_1154,f,c
  2103  0107B8  D7DF               	goto	l3766
  2104  0107BA                     __end_of_fillInTemp:
  2105                           	opt stack 0
  2106                           tblptru	equ	0xFF8
  2107                           tblptrh	equ	0xFF7
  2108                           tblptrl	equ	0xFF6
  2109                           tablat	equ	0xFF5
  2110                           prodh	equ	0xFF4
  2111                           prodl	equ	0xFF3
  2112                           postinc0	equ	0xFEE
  2113                           wreg	equ	0xFE8
  2114                           indf1	equ	0xFE7
  2115                           postdec1	equ	0xFE5
  2116                           fsr1h	equ	0xFE2
  2117                           fsr1l	equ	0xFE1
  2118                           indf2	equ	0xFDF
  2119                           fsr2h	equ	0xFDA
  2120                           fsr2l	equ	0xFD9
  2121                           status	equ	0xFD8
  2122                           
  2123 ;; *************** function ___awmod *****************
  2124 ;; Defined at:
  2125 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awmod.c"
  2126 ;; Parameters:    Size  Location     Type
  2127 ;;  dividend        2   17[COMRAM] int 
  2128 ;;  divisor         2   19[COMRAM] int 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  sign            1   22[COMRAM] unsigned char 
  2131 ;;  counter         1   21[COMRAM] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  2   17[COMRAM] int 
  2134 ;; Registers used:
  2135 ;;		wreg, status,2, status,0
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2141 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2142 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2144 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2145 ;;Total ram usage:        6 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:    2
  2148 ;; This function calls:
  2149 ;;		Nothing
  2150 ;; This function is called by:
  2151 ;;		_fillInTemp
  2152 ;; This function uses a non-reentrant model
  2153 ;;
  2154                           
  2155                           	psect	text6
  2156  0118E6                     __ptext6:
  2157                           	opt stack 0
  2158  0118E6                     ___awmod:
  2159                           	opt stack 26
  2160                           
  2161                           ;incstack = 0
  2162  0118E6  0E00               	movlw	0
  2163  0118E8  6E17               	movwf	___awmod@sign,c
  2164  0118EA  AE13               	btfss	___awmod@dividend+1,7,c
  2165  0118EC  D006               	goto	l3692
  2166  0118EE  6C12               	negf	___awmod@dividend,c
  2167  0118F0  1E13               	comf	___awmod@dividend+1,f,c
  2168  0118F2  B0D8               	btfsc	status,0,c
  2169  0118F4  2A13               	incf	___awmod@dividend+1,f,c
  2170  0118F6  0E01               	movlw	1
  2171  0118F8  6E17               	movwf	___awmod@sign,c
  2172  0118FA                     l3692:
  2173  0118FA  AE15               	btfss	___awmod@divisor+1,7,c
  2174  0118FC  D004               	goto	l3696
  2175  0118FE  6C14               	negf	___awmod@divisor,c
  2176  011900  1E15               	comf	___awmod@divisor+1,f,c
  2177  011902  B0D8               	btfsc	status,0,c
  2178  011904  2A15               	incf	___awmod@divisor+1,f,c
  2179  011906                     l3696:
  2180  011906  5014               	movf	___awmod@divisor,w,c
  2181  011908  1015               	iorwf	___awmod@divisor+1,w,c
  2182  01190A  B4D8               	btfsc	status,2,c
  2183  01190C  D018               	goto	l3712
  2184  01190E  0E01               	movlw	1
  2185  011910  6E16               	movwf	___awmod@counter,c
  2186  011912  D004               	goto	l3702
  2187  011914                     l3700:
  2188  011914  90D8               	bcf	status,0,c
  2189  011916  3614               	rlcf	___awmod@divisor,f,c
  2190  011918  3615               	rlcf	___awmod@divisor+1,f,c
  2191  01191A  2A16               	incf	___awmod@counter,f,c
  2192  01191C                     l3702:
  2193  01191C  AE15               	btfss	___awmod@divisor+1,7,c
  2194  01191E  D7FA               	goto	l3700
  2195  011920                     l3704:
  2196  011920  5014               	movf	___awmod@divisor,w,c
  2197  011922  5C12               	subwf	___awmod@dividend,w,c
  2198  011924  5015               	movf	___awmod@divisor+1,w,c
  2199  011926  5813               	subwfb	___awmod@dividend+1,w,c
  2200  011928  A0D8               	btfss	status,0,c
  2201  01192A  D004               	goto	l3708
  2202  01192C  5014               	movf	___awmod@divisor,w,c
  2203  01192E  5E12               	subwf	___awmod@dividend,f,c
  2204  011930  5015               	movf	___awmod@divisor+1,w,c
  2205  011932  5A13               	subwfb	___awmod@dividend+1,f,c
  2206  011934                     l3708:
  2207  011934  90D8               	bcf	status,0,c
  2208  011936  3215               	rrcf	___awmod@divisor+1,f,c
  2209  011938  3214               	rrcf	___awmod@divisor,f,c
  2210  01193A  2E16               	decfsz	___awmod@counter,f,c
  2211  01193C  D7F1               	goto	l3704
  2212  01193E                     l3712:
  2213  01193E  5017               	movf	___awmod@sign,w,c
  2214  011940  B4D8               	btfsc	status,2,c
  2215  011942  D004               	goto	l3716
  2216  011944  6C12               	negf	___awmod@dividend,c
  2217  011946  1E13               	comf	___awmod@dividend+1,f,c
  2218  011948  B0D8               	btfsc	status,0,c
  2219  01194A  2A13               	incf	___awmod@dividend+1,f,c
  2220  01194C                     l3716:
  2221  01194C  C012  F012         	movff	___awmod@dividend,?___awmod
  2222  011950  C013  F013         	movff	___awmod@dividend+1,?___awmod+1
  2223  011954  0012               	return	
  2224  011956                     __end_of___awmod:
  2225                           	opt stack 0
  2226                           tblptru	equ	0xFF8
  2227                           tblptrh	equ	0xFF7
  2228                           tblptrl	equ	0xFF6
  2229                           tablat	equ	0xFF5
  2230                           prodh	equ	0xFF4
  2231                           prodl	equ	0xFF3
  2232                           postinc0	equ	0xFEE
  2233                           wreg	equ	0xFE8
  2234                           indf1	equ	0xFE7
  2235                           postdec1	equ	0xFE5
  2236                           fsr1h	equ	0xFE2
  2237                           fsr1l	equ	0xFE1
  2238                           indf2	equ	0xFDF
  2239                           fsr2h	equ	0xFDA
  2240                           fsr2l	equ	0xFD9
  2241                           status	equ	0xFD8
  2242                           
  2243 ;; *************** function ___awdiv *****************
  2244 ;; Defined at:
  2245 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awdiv.c"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;  dividend        2   23[COMRAM] int 
  2248 ;;  divisor         2   25[COMRAM] int 
  2249 ;; Auto vars:     Size  Location     Type
  2250 ;;  quotient        2   29[COMRAM] int 
  2251 ;;  sign            1   28[COMRAM] unsigned char 
  2252 ;;  counter         1   27[COMRAM] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  2   23[COMRAM] int 
  2255 ;; Registers used:
  2256 ;;		wreg, status,2, status,0
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2262 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2263 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2265 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2266 ;;Total ram usage:        8 bytes
  2267 ;; Hardware stack levels used:    1
  2268 ;; Hardware stack levels required when called:    2
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_fillInTemp
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           	psect	text7
  2277  0117EC                     __ptext7:
  2278                           	opt stack 0
  2279  0117EC                     ___awdiv:
  2280                           	opt stack 26
  2281                           
  2282                           ;incstack = 0
  2283  0117EC  0E00               	movlw	0
  2284  0117EE  6E1D               	movwf	___awdiv@sign,c
  2285  0117F0  AE1B               	btfss	___awdiv@divisor+1,7,c
  2286  0117F2  D006               	goto	l3648
  2287  0117F4  6C1A               	negf	___awdiv@divisor,c
  2288  0117F6  1E1B               	comf	___awdiv@divisor+1,f,c
  2289  0117F8  B0D8               	btfsc	status,0,c
  2290  0117FA  2A1B               	incf	___awdiv@divisor+1,f,c
  2291  0117FC  0E01               	movlw	1
  2292  0117FE  6E1D               	movwf	___awdiv@sign,c
  2293  011800                     l3648:
  2294  011800  AE19               	btfss	___awdiv@dividend+1,7,c
  2295  011802  D006               	goto	l3654
  2296  011804  6C18               	negf	___awdiv@dividend,c
  2297  011806  1E19               	comf	___awdiv@dividend+1,f,c
  2298  011808  B0D8               	btfsc	status,0,c
  2299  01180A  2A19               	incf	___awdiv@dividend+1,f,c
  2300  01180C  0E01               	movlw	1
  2301  01180E  1A1D               	xorwf	___awdiv@sign,f,c
  2302  011810                     l3654:
  2303  011810  0E00               	movlw	0
  2304  011812  6E1F               	movwf	___awdiv@quotient+1,c
  2305  011814  0E00               	movlw	0
  2306  011816  6E1E               	movwf	___awdiv@quotient,c
  2307  011818  501A               	movf	___awdiv@divisor,w,c
  2308  01181A  101B               	iorwf	___awdiv@divisor+1,w,c
  2309  01181C  B4D8               	btfsc	status,2,c
  2310  01181E  D01C               	goto	l3676
  2311  011820  0E01               	movlw	1
  2312  011822  6E1C               	movwf	___awdiv@counter,c
  2313  011824  D004               	goto	l3662
  2314  011826                     l3660:
  2315  011826  90D8               	bcf	status,0,c
  2316  011828  361A               	rlcf	___awdiv@divisor,f,c
  2317  01182A  361B               	rlcf	___awdiv@divisor+1,f,c
  2318  01182C  2A1C               	incf	___awdiv@counter,f,c
  2319  01182E                     l3662:
  2320  01182E  AE1B               	btfss	___awdiv@divisor+1,7,c
  2321  011830  D7FA               	goto	l3660
  2322  011832                     l3664:
  2323  011832  90D8               	bcf	status,0,c
  2324  011834  361E               	rlcf	___awdiv@quotient,f,c
  2325  011836  361F               	rlcf	___awdiv@quotient+1,f,c
  2326  011838  501A               	movf	___awdiv@divisor,w,c
  2327  01183A  5C18               	subwf	___awdiv@dividend,w,c
  2328  01183C  501B               	movf	___awdiv@divisor+1,w,c
  2329  01183E  5819               	subwfb	___awdiv@dividend+1,w,c
  2330  011840  A0D8               	btfss	status,0,c
  2331  011842  D005               	goto	l3672
  2332  011844  501A               	movf	___awdiv@divisor,w,c
  2333  011846  5E18               	subwf	___awdiv@dividend,f,c
  2334  011848  501B               	movf	___awdiv@divisor+1,w,c
  2335  01184A  5A19               	subwfb	___awdiv@dividend+1,f,c
  2336  01184C  801E               	bsf	___awdiv@quotient,0,c
  2337  01184E                     l3672:
  2338  01184E  90D8               	bcf	status,0,c
  2339  011850  321B               	rrcf	___awdiv@divisor+1,f,c
  2340  011852  321A               	rrcf	___awdiv@divisor,f,c
  2341  011854  2E1C               	decfsz	___awdiv@counter,f,c
  2342  011856  D7ED               	goto	l3664
  2343  011858                     l3676:
  2344  011858  501D               	movf	___awdiv@sign,w,c
  2345  01185A  B4D8               	btfsc	status,2,c
  2346  01185C  D004               	goto	l3680
  2347  01185E  6C1E               	negf	___awdiv@quotient,c
  2348  011860  1E1F               	comf	___awdiv@quotient+1,f,c
  2349  011862  B0D8               	btfsc	status,0,c
  2350  011864  2A1F               	incf	___awdiv@quotient+1,f,c
  2351  011866                     l3680:
  2352  011866  C01E  F018         	movff	___awdiv@quotient,?___awdiv
  2353  01186A  C01F  F019         	movff	___awdiv@quotient+1,?___awdiv+1
  2354  01186E  0012               	return	
  2355  011870                     __end_of___awdiv:
  2356                           	opt stack 0
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           prodh	equ	0xFF4
  2362                           prodl	equ	0xFF3
  2363                           postinc0	equ	0xFEE
  2364                           wreg	equ	0xFE8
  2365                           indf1	equ	0xFE7
  2366                           postdec1	equ	0xFE5
  2367                           fsr1h	equ	0xFE2
  2368                           fsr1l	equ	0xFE1
  2369                           indf2	equ	0xFDF
  2370                           fsr2h	equ	0xFDA
  2371                           fsr2l	equ	0xFD9
  2372                           status	equ	0xFD8
  2373                           
  2374 ;; *************** function _calculateTemp *****************
  2375 ;; Defined at:
  2376 ;;		line 90 in file "temperature.c"
  2377 ;; Parameters:    Size  Location     Type
  2378 ;;  plus            2   15[BANK0 ] int 
  2379 ;;  minus           2   17[BANK0 ] int 
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;  temp            2   22[BANK0 ] int 
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  2   15[BANK0 ] int 
  2384 ;; Registers used:
  2385 ;;		wreg, status,2, status,0, cstack
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2391 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2392 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2393 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2394 ;;      Totals:         2       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2395 ;;Total ram usage:       11 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    4
  2398 ;; This function calls:
  2399 ;;		___awtoft
  2400 ;;		___ftdiv
  2401 ;;		___ftmul
  2402 ;;		___fttol
  2403 ;; This function is called by:
  2404 ;;		_makeTempMessage
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           
  2408                           	psect	text8
  2409  0112FE                     __ptext8:
  2410                           	opt stack 0
  2411  0112FE                     _calculateTemp:
  2412                           	opt stack 25
  2413                           
  2414                           ;temperature.c: 91: signed int temp;
  2415                           ;temperature.c: 93: temp = plus - minus;
  2416                           
  2417                           ;incstack = 0
  2418  0112FE  C071  F03C         	movff	calculateTemp@minus,??_calculateTemp
  2419  011302  C072  F03D         	movff	calculateTemp@minus+1,??_calculateTemp+1
  2420  011306  1E3C               	comf	??_calculateTemp,f,c
  2421  011308  1E3D               	comf	??_calculateTemp+1,f,c
  2422  01130A  4A3C               	infsnz	??_calculateTemp,f,c
  2423  01130C  2A3D               	incf	??_calculateTemp+1,f,c
  2424  01130E  0100               	movlb	0	; () banked
  2425  011310  516F               	movf	calculateTemp@plus& (0+255),w,b
  2426  011312  243C               	addwf	??_calculateTemp,w,c
  2427  011314  0100               	movlb	0	; () banked
  2428  011316  6F76               	movwf	calculateTemp@temp& (0+255),b
  2429  011318  0100               	movlb	0	; () banked
  2430  01131A  5170               	movf	(calculateTemp@plus+1)& (0+255),w,b
  2431  01131C  203D               	addwfc	??_calculateTemp+1,w,c
  2432  01131E  0100               	movlb	0	; () banked
  2433  011320  6F77               	movwf	(calculateTemp@temp+1)& (0+255),b
  2434                           
  2435                           ; BSR set to: 0
  2436                           ;temperature.c: 95: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  2437  011322  0EE0               	movlw	224
  2438  011324  6E30               	movwf	___ftmul@f2,c
  2439  011326  0E2B               	movlw	43
  2440  011328  6E31               	movwf	___ftmul@f2+1,c
  2441  01132A  0E45               	movlw	69
  2442  01132C  6E32               	movwf	___ftmul@f2+2,c
  2443  01132E  0E00               	movlw	0
  2444  011330  6E21               	movwf	___ftdiv@f2,c
  2445  011332  0E80               	movlw	128
  2446  011334  6E22               	movwf	___ftdiv@f2+1,c
  2447  011336  0E44               	movlw	68
  2448  011338  6E23               	movwf	___ftdiv@f2+2,c
  2449  01133A  C076  F01A         	movff	calculateTemp@temp,___awtoft@c
  2450  01133E  C077  F01B         	movff	calculateTemp@temp+1,___awtoft@c+1
  2451  011342  ECE9  F08D         	call	___awtoft	;wreg free
  2452  011346  C01A  F01E         	movff	?___awtoft,___ftdiv@f1
  2453  01134A  C01B  F01F         	movff	?___awtoft+1,___ftdiv@f1+1
  2454  01134E  C01C  F020         	movff	?___awtoft+2,___ftdiv@f1+2
  2455  011352  ECCF  F087         	call	___ftdiv	;wreg free
  2456  011356  C01E  F02D         	movff	?___ftdiv,___ftmul@f1
  2457  01135A  C01F  F02E         	movff	?___ftdiv+1,___ftmul@f1+1
  2458  01135E  C020  F02F         	movff	?___ftdiv+2,___ftmul@f1+2
  2459  011362  EC55  F087         	call	___ftmul	;wreg free
  2460  011366  C02D  F073         	movff	?___ftmul,_calculateTemp$2422
  2461  01136A  C02E  F074         	movff	?___ftmul+1,_calculateTemp$2422+1
  2462  01136E  C02F  F075         	movff	?___ftmul+2,_calculateTemp$2422+2
  2463                           
  2464                           ;temperature.c: 95: temp = (int)((double)(temp) / 1024 * 2750 / 10);
  2465  011372  0E00               	movlw	0
  2466  011374  6E21               	movwf	___ftdiv@f2,c
  2467  011376  0E20               	movlw	32
  2468  011378  6E22               	movwf	___ftdiv@f2+1,c
  2469  01137A  0E41               	movlw	65
  2470  01137C  6E23               	movwf	___ftdiv@f2+2,c
  2471  01137E  C073  F01E         	movff	_calculateTemp$2422,___ftdiv@f1
  2472  011382  C074  F01F         	movff	_calculateTemp$2422+1,___ftdiv@f1+1
  2473  011386  C075  F020         	movff	_calculateTemp$2422+2,___ftdiv@f1+2
  2474  01138A  ECCF  F087         	call	___ftdiv	;wreg free
  2475  01138E  C01E  F060         	movff	?___ftdiv,___fttol@f1
  2476  011392  C01F  F061         	movff	?___ftdiv+1,___fttol@f1+1
  2477  011396  C020  F062         	movff	?___ftdiv+2,___fttol@f1+2
  2478  01139A  ECDD  F083         	call	___fttol	;wreg free
  2479  01139E  C060  F076         	movff	?___fttol,calculateTemp@temp
  2480  0113A2  C061  F077         	movff	?___fttol+1,calculateTemp@temp+1
  2481                           
  2482                           ;temperature.c: 97: return temp;
  2483  0113A6  C076  F06F         	movff	calculateTemp@temp,?_calculateTemp
  2484  0113AA  C077  F070         	movff	calculateTemp@temp+1,?_calculateTemp+1
  2485  0113AE  0012               	return	
  2486  0113B0                     __end_of_calculateTemp:
  2487                           	opt stack 0
  2488                           tblptru	equ	0xFF8
  2489                           tblptrh	equ	0xFF7
  2490                           tblptrl	equ	0xFF6
  2491                           tablat	equ	0xFF5
  2492                           prodh	equ	0xFF4
  2493                           prodl	equ	0xFF3
  2494                           postinc0	equ	0xFEE
  2495                           wreg	equ	0xFE8
  2496                           indf1	equ	0xFE7
  2497                           postdec1	equ	0xFE5
  2498                           fsr1h	equ	0xFE2
  2499                           fsr1l	equ	0xFE1
  2500                           indf2	equ	0xFDF
  2501                           fsr2h	equ	0xFDA
  2502                           fsr2l	equ	0xFD9
  2503                           status	equ	0xFD8
  2504                           
  2505 ;; *************** function _init_frequency *****************
  2506 ;; Defined at:
  2507 ;;		line 91 in file "frequency.c"
  2508 ;; Parameters:    Size  Location     Type
  2509 ;;		None
  2510 ;; Auto vars:     Size  Location     Type
  2511 ;;		None
  2512 ;; Return value:  Size  Location     Type
  2513 ;;                  1    wreg      void 
  2514 ;; Registers used:
  2515 ;;		wreg, status,2
  2516 ;; Tracked objects:
  2517 ;;		On entry : 0/0
  2518 ;;		On exit  : 0/0
  2519 ;;		Unchanged: 0/0
  2520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2521 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2524 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2525 ;;Total ram usage:        0 bytes
  2526 ;; Hardware stack levels used:    1
  2527 ;; Hardware stack levels required when called:    2
  2528 ;; This function calls:
  2529 ;;		Nothing
  2530 ;; This function is called by:
  2531 ;;		_main
  2532 ;; This function uses a non-reentrant model
  2533 ;;
  2534                           
  2535                           	psect	text9
  2536  011B98                     __ptext9:
  2537                           	opt stack 0
  2538  011B98                     _init_frequency:
  2539                           	opt stack 28
  2540                           
  2541                           ;frequency.c: 93: TRISCbits.TRISC1 = 1;
  2542                           
  2543                           ;incstack = 0
  2544  011B98  8294               	bsf	3988,1,c	;volatile
  2545                           
  2546                           ;frequency.c: 95: CCPTMRS2bits.C8TSEL1=0;
  2547  011B9A  010F               	movlb	15	; () banked
  2548  011B9C  9350               	bcf	80,1,b	;volatile
  2549                           
  2550                           ;frequency.c: 96: CCPTMRS2bits.C8TSEL0=0;
  2551  011B9E  010F               	movlb	15	; () banked
  2552  011BA0  9150               	bcf	80,0,b	;volatile
  2553                           
  2554                           ;frequency.c: 98: PIE4bits.CCP8IE =1;
  2555  011BA2  8A8E               	bsf	3982,5,c	;volatile
  2556                           
  2557                           ;frequency.c: 99: PIR4bits.CCP8IF=0;
  2558  011BA4  9A8F               	bcf	3983,5,c	;volatile
  2559                           
  2560                           ; BSR set to: 15
  2561                           ;frequency.c: 105: CCP8CON=0x07;
  2562  011BA6  0E07               	movlw	7
  2563  011BA8  010F               	movlb	15	; () banked
  2564  011BAA  6F06               	movwf	6,b	;volatile
  2565                           
  2566                           ; BSR set to: 15
  2567                           ;frequency.c: 108: INTCONbits.GIE = 1;
  2568  011BAC  8EF2               	bsf	intcon,7,c	;volatile
  2569                           
  2570                           ; BSR set to: 15
  2571                           ;frequency.c: 110: T1CONbits.RD16=1;
  2572  011BAE  82CD               	bsf	4045,1,c	;volatile
  2573                           
  2574                           ; BSR set to: 15
  2575                           ;frequency.c: 111: T1CONbits.TMR1ON=1;
  2576  011BB0  80CD               	bsf	4045,0,c	;volatile
  2577                           
  2578                           ; BSR set to: 15
  2579                           ;frequency.c: 112: T1CONbits.TMR1CS0=1;
  2580  011BB2  8CCD               	bsf	4045,6,c	;volatile
  2581                           
  2582                           ; BSR set to: 15
  2583                           ;frequency.c: 113: T1CONbits.TMR1CS1=0;
  2584  011BB4  9ECD               	bcf	4045,7,c	;volatile
  2585                           
  2586                           ; BSR set to: 15
  2587                           ;frequency.c: 114: T1CONbits.T1CKPS1=0;
  2588  011BB6  9ACD               	bcf	4045,5,c	;volatile
  2589                           
  2590                           ; BSR set to: 15
  2591                           ;frequency.c: 115: T1CONbits.T1CKPS0=0;
  2592  011BB8  98CD               	bcf	4045,4,c	;volatile
  2593                           
  2594                           ; BSR set to: 15
  2595                           ;frequency.c: 116: T1CONbits.T1OSCEN=0;
  2596  011BBA  96CD               	bcf	4045,3,c	;volatile
  2597                           
  2598                           ;frequency.c: 117: TMR1L=0X00;
  2599  011BBC  0E00               	movlw	0
  2600  011BBE  6ECE               	movwf	4046,c	;volatile
  2601                           
  2602                           ;frequency.c: 118: TMR1H=0X00;
  2603  011BC0  0E00               	movlw	0
  2604  011BC2  6ECF               	movwf	4047,c	;volatile
  2605                           
  2606                           ;frequency.c: 119: CCPR8H=0x00;
  2607  011BC4  0E00               	movlw	0
  2608  011BC6  010F               	movlb	15	; () banked
  2609  011BC8  6F08               	movwf	8,b	;volatile
  2610                           
  2611                           ;frequency.c: 120: CCPR8L=0x00;
  2612  011BCA  0E00               	movlw	0
  2613  011BCC  010F               	movlb	15	; () banked
  2614  011BCE  6F07               	movwf	7,b	;volatile
  2615                           
  2616                           ; BSR set to: 15
  2617  011BD0  0012               	return		;funcret
  2618  011BD2                     __end_of_init_frequency:
  2619                           	opt stack 0
  2620                           tblptru	equ	0xFF8
  2621                           tblptrh	equ	0xFF7
  2622                           tblptrl	equ	0xFF6
  2623                           tablat	equ	0xFF5
  2624                           prodh	equ	0xFF4
  2625                           prodl	equ	0xFF3
  2626                           intcon	equ	0xFF2
  2627                           postinc0	equ	0xFEE
  2628                           wreg	equ	0xFE8
  2629                           indf1	equ	0xFE7
  2630                           postdec1	equ	0xFE5
  2631                           fsr1h	equ	0xFE2
  2632                           fsr1l	equ	0xFE1
  2633                           indf2	equ	0xFDF
  2634                           fsr2h	equ	0xFDA
  2635                           fsr2l	equ	0xFD9
  2636                           status	equ	0xFD8
  2637                           
  2638 ;; *************** function _initUART1 *****************
  2639 ;; Defined at:
  2640 ;;		line 21 in file "uart.c"
  2641 ;; Parameters:    Size  Location     Type
  2642 ;;		None
  2643 ;; Auto vars:     Size  Location     Type
  2644 ;;		None
  2645 ;; Return value:  Size  Location     Type
  2646 ;;                  1    wreg      void 
  2647 ;; Registers used:
  2648 ;;		wreg, status,2
  2649 ;; Tracked objects:
  2650 ;;		On entry : 0/0
  2651 ;;		On exit  : 0/0
  2652 ;;		Unchanged: 0/0
  2653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2654 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2655 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2656 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2657 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2658 ;;Total ram usage:        0 bytes
  2659 ;; Hardware stack levels used:    1
  2660 ;; Hardware stack levels required when called:    2
  2661 ;; This function calls:
  2662 ;;		Nothing
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text10
  2669  011D5C                     __ptext10:
  2670                           	opt stack 0
  2671  011D5C                     _initUART1:
  2672                           	opt stack 28
  2673                           
  2674                           ;uart.c: 24: TRISCbits.TRISC7 = 1;
  2675                           
  2676                           ; BSR set to: 15
  2677                           ;incstack = 0
  2678  011D5C  8E94               	bsf	3988,7,c	;volatile
  2679                           
  2680                           ;uart.c: 25: TRISCbits.TRISC6 = 0;
  2681  011D5E  9C94               	bcf	3988,6,c	;volatile
  2682                           
  2683                           ;uart.c: 27: TXSTA1bits.BRGH = 1;
  2684  011D60  84AD               	bsf	4013,2,c	;volatile
  2685                           
  2686                           ;uart.c: 28: BAUDCON1bits.BRG16 = 1;
  2687  011D62  867E               	bsf	3966,3,c	;volatile
  2688                           
  2689                           ;uart.c: 36: SPBRGH1 = 0;
  2690  011D64  0E00               	movlw	0
  2691  011D66  6E7F               	movwf	3967,c	;volatile
  2692                           
  2693                           ;uart.c: 37: SPBRG1 = 34;
  2694  011D68  0E22               	movlw	34
  2695  011D6A  6EB0               	movwf	4016,c	;volatile
  2696                           
  2697                           ;uart.c: 41: TXSTA1bits.SYNC = 0;
  2698  011D6C  98AD               	bcf	4013,4,c	;volatile
  2699                           
  2700                           ;uart.c: 42: RCSTA1bits.SPEN = 1;
  2701  011D6E  8EAC               	bsf	4012,7,c	;volatile
  2702                           
  2703                           ;uart.c: 46: PIE1bits.TXIE = 0;
  2704  011D70  989D               	bcf	3997,4,c	;volatile
  2705                           
  2706                           ;uart.c: 47: PIE1bits.RC1IE = 1;
  2707  011D72  8A9D               	bsf	3997,5,c	;volatile
  2708                           
  2709                           ;uart.c: 52: RCSTA1bits.CREN = 1;
  2710  011D74  88AC               	bsf	4012,4,c	;volatile
  2711  011D76  0012               	return		;funcret
  2712  011D78                     __end_of_initUART1:
  2713                           	opt stack 0
  2714                           tblptru	equ	0xFF8
  2715                           tblptrh	equ	0xFF7
  2716                           tblptrl	equ	0xFF6
  2717                           tablat	equ	0xFF5
  2718                           prodh	equ	0xFF4
  2719                           prodl	equ	0xFF3
  2720                           intcon	equ	0xFF2
  2721                           postinc0	equ	0xFEE
  2722                           wreg	equ	0xFE8
  2723                           indf1	equ	0xFE7
  2724                           postdec1	equ	0xFE5
  2725                           fsr1h	equ	0xFE2
  2726                           fsr1l	equ	0xFE1
  2727                           indf2	equ	0xFDF
  2728                           fsr2h	equ	0xFDA
  2729                           fsr2l	equ	0xFD9
  2730                           status	equ	0xFD8
  2731                           
  2732 ;; *************** function _initSPI *****************
  2733 ;; Defined at:
  2734 ;;		line 20 in file "digipot_spi.c"
  2735 ;; Parameters:    Size  Location     Type
  2736 ;;		None
  2737 ;; Auto vars:     Size  Location     Type
  2738 ;;		None
  2739 ;; Return value:  Size  Location     Type
  2740 ;;                  2   14[None  ] int 
  2741 ;; Registers used:
  2742 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2743 ;; Tracked objects:
  2744 ;;		On entry : 0/0
  2745 ;;		On exit  : 0/0
  2746 ;;		Unchanged: 0/0
  2747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2749 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2751 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2752 ;;Total ram usage:        9 bytes
  2753 ;; Hardware stack levels used:    1
  2754 ;; Hardware stack levels required when called:    7
  2755 ;; This function calls:
  2756 ;;		___awtoft
  2757 ;;		___ftadd
  2758 ;;		___ftdiv
  2759 ;;		___ftmul
  2760 ;;		___lbtoft
  2761 ;;		_pow
  2762 ;;		_remappings
  2763 ;; This function is called by:
  2764 ;;		_main
  2765 ;; This function uses a non-reentrant model
  2766 ;;
  2767                           
  2768                           	psect	text11
  2769  010B7A                     __ptext11:
  2770                           	opt stack 0
  2771  010B7A                     _initSPI:
  2772                           	opt stack 23
  2773                           
  2774                           ;digipot_spi.c: 21: SSP2STAT = 0b00000000;
  2775                           
  2776                           ;incstack = 0
  2777  010B7A  0E00               	movlw	0
  2778  010B7C  6E73               	movwf	3955,c	;volatile
  2779                           
  2780                           ;digipot_spi.c: 22: SSP2CON1 = 0b00110010;
  2781  010B7E  0E32               	movlw	50
  2782  010B80  6E72               	movwf	3954,c	;volatile
  2783                           
  2784                           ;digipot_spi.c: 23: TRISB = 0x01;
  2785  010B82  0E01               	movlw	1
  2786  010B84  6E93               	movwf	3987,c	;volatile
  2787                           
  2788                           ;digipot_spi.c: 24: TRISC = 0x00;
  2789  010B86  0E00               	movlw	0
  2790  010B88  6E94               	movwf	3988,c	;volatile
  2791                           
  2792                           ;digipot_spi.c: 25: TRISA = 0x01;
  2793  010B8A  0E01               	movlw	1
  2794  010B8C  6E92               	movwf	3986,c	;volatile
  2795                           
  2796                           ;digipot_spi.c: 26: PORTBbits.RB2=1;
  2797  010B8E  8481               	bsf	3969,2,c	;volatile
  2798                           
  2799                           ;digipot_spi.c: 27: ADCON1 = 0x0F;
  2800  010B90  0E0F               	movlw	15
  2801  010B92  6EC1               	movwf	4033,c	;volatile
  2802                           
  2803                           ;digipot_spi.c: 28: remappings();
  2804  010B94  EC9E  F08E         	call	_remappings	;wreg free
  2805                           
  2806                           ;digipot_spi.c: 29: nominalfrequency = 1.44/((1000+2*step*390.63)*0.000288 * pow(0.9384,
      +                           step));
  2807  010B98  0100               	movlb	0	; () banked
  2808  010B9A  51F2               	movf	_step& (0+255),w,b
  2809  010B9C  EC8C  F08E         	call	___lbtoft
  2810  010BA0  C01A  F08B         	movff	?___lbtoft,pow@y
  2811  010BA4  C01B  F08C         	movff	?___lbtoft+1,pow@y+1
  2812  010BA8  C01C  F08D         	movff	?___lbtoft+2,pow@y+2
  2813  010BAC  0E3B               	movlw	59
  2814  010BAE  0100               	movlb	0	; () banked
  2815  010BB0  6F88               	movwf	pow@x& (0+255),b
  2816  010BB2  0E70               	movlw	112
  2817  010BB4  0100               	movlb	0	; () banked
  2818  010BB6  6F89               	movwf	(pow@x+1)& (0+255),b
  2819  010BB8  0E3F               	movlw	63
  2820  010BBA  0100               	movlb	0	; () banked
  2821  010BBC  6F8A               	movwf	(pow@x+2)& (0+255),b
  2822  010BBE  EC4B  F082         	call	_pow	;wreg free
  2823  010BC2  C088  F099         	movff	?_pow,_initSPI$2423
  2824  010BC6  C089  F09A         	movff	?_pow+1,_initSPI$2423+1
  2825  010BCA  C08A  F09B         	movff	?_pow+2,_initSPI$2423+2
  2826                           
  2827                           ;digipot_spi.c: 29: nominalfrequency = 1.44/((1000+2*step*390.63)*0.000288 * pow(0.9384,
      +                           step));
  2828  010BCE  0E00               	movlw	0
  2829  010BD0  0100               	movlb	0	; () banked
  2830  010BD2  6F63               	movwf	___ftadd@f2& (0+255),b
  2831  010BD4  0E7A               	movlw	122
  2832  010BD6  0100               	movlb	0	; () banked
  2833  010BD8  6F64               	movwf	(___ftadd@f2+1)& (0+255),b
  2834  010BDA  0E44               	movlw	68
  2835  010BDC  0100               	movlb	0	; () banked
  2836  010BDE  6F65               	movwf	(___ftadd@f2+2)& (0+255),b
  2837  010BE0  0E51               	movlw	81
  2838  010BE2  6E30               	movwf	___ftmul@f2,c
  2839  010BE4  0EC3               	movlw	195
  2840  010BE6  6E31               	movwf	___ftmul@f2+1,c
  2841  010BE8  0E43               	movlw	67
  2842  010BEA  6E32               	movwf	___ftmul@f2+2,c
  2843  010BEC  0100               	movlb	0	; () banked
  2844  010BEE  51F2               	movf	_step& (0+255),w,b
  2845  010BF0  0D02               	mullw	2
  2846  010BF2  CFF3 F01A          	movff	prodl,___awtoft@c
  2847  010BF6  CFF4 F01B          	movff	prodh,___awtoft@c+1
  2848  010BFA  ECE9  F08D         	call	___awtoft	;wreg free
  2849  010BFE  C01A  F02D         	movff	?___awtoft,___ftmul@f1
  2850  010C02  C01B  F02E         	movff	?___awtoft+1,___ftmul@f1+1
  2851  010C06  C01C  F02F         	movff	?___awtoft+2,___ftmul@f1+2
  2852  010C0A  EC55  F087         	call	___ftmul	;wreg free
  2853  010C0E  C02D  F060         	movff	?___ftmul,___ftadd@f1
  2854  010C12  C02E  F061         	movff	?___ftmul+1,___ftadd@f1+1
  2855  010C16  C02F  F062         	movff	?___ftmul+2,___ftadd@f1+2
  2856  010C1A  EC00  F080         	call	___ftadd	;wreg free
  2857  010C1E  C060  F09C         	movff	?___ftadd,_initSPI$2424
  2858  010C22  C061  F09D         	movff	?___ftadd+1,_initSPI$2424+1
  2859  010C26  C062  F09E         	movff	?___ftadd+2,_initSPI$2424+2
  2860                           
  2861                           ;digipot_spi.c: 29: nominalfrequency = 1.44/((1000+2*step*390.63)*0.000288 * pow(0.9384,
      +                           step));
  2862  010C2A  C099  F030         	movff	_initSPI$2423,___ftmul@f2
  2863  010C2E  C09A  F031         	movff	_initSPI$2423+1,___ftmul@f2+1
  2864  010C32  C09B  F032         	movff	_initSPI$2423+2,___ftmul@f2+2
  2865  010C36  C09C  F02D         	movff	_initSPI$2424,___ftmul@f1
  2866  010C3A  C09D  F02E         	movff	_initSPI$2424+1,___ftmul@f1+1
  2867  010C3E  C09E  F02F         	movff	_initSPI$2424+2,___ftmul@f1+2
  2868  010C42  EC55  F087         	call	___ftmul	;wreg free
  2869  010C46  C02D  F09F         	movff	?___ftmul,_initSPI$2425
  2870  010C4A  C02E  F0A0         	movff	?___ftmul+1,_initSPI$2425+1
  2871  010C4E  C02F  F0A1         	movff	?___ftmul+2,_initSPI$2425+2
  2872                           
  2873                           ;digipot_spi.c: 29: nominalfrequency = 1.44/((1000+2*step*390.63)*0.000288 * pow(0.9384,
      +                           step));
  2874  010C52  0E52               	movlw	82
  2875  010C54  6E1E               	movwf	___ftdiv@f1,c
  2876  010C56  0EB8               	movlw	184
  2877  010C58  6E1F               	movwf	___ftdiv@f1+1,c
  2878  010C5A  0E3F               	movlw	63
  2879  010C5C  6E20               	movwf	___ftdiv@f1+2,c
  2880  010C5E  0EFF               	movlw	255
  2881  010C60  6E30               	movwf	___ftmul@f2,c
  2882  010C62  0E96               	movlw	150
  2883  010C64  6E31               	movwf	___ftmul@f2+1,c
  2884  010C66  0E39               	movlw	57
  2885  010C68  6E32               	movwf	___ftmul@f2+2,c
  2886  010C6A  C09F  F02D         	movff	_initSPI$2425,___ftmul@f1
  2887  010C6E  C0A0  F02E         	movff	_initSPI$2425+1,___ftmul@f1+1
  2888  010C72  C0A1  F02F         	movff	_initSPI$2425+2,___ftmul@f1+2
  2889  010C76  EC55  F087         	call	___ftmul	;wreg free
  2890  010C7A  C02D  F021         	movff	?___ftmul,___ftdiv@f2
  2891  010C7E  C02E  F022         	movff	?___ftmul+1,___ftdiv@f2+1
  2892  010C82  C02F  F023         	movff	?___ftmul+2,___ftdiv@f2+2
  2893  010C86  ECCF  F087         	call	___ftdiv	;wreg free
  2894  010C8A  C01E  F0F3         	movff	?___ftdiv,_nominalfrequency
  2895  010C8E  C01F  F0F4         	movff	?___ftdiv+1,_nominalfrequency+1
  2896  010C92  C020  F0F5         	movff	?___ftdiv+2,_nominalfrequency+2
  2897  010C96  0012               	return		;funcret
  2898  010C98                     __end_of_initSPI:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           indf1	equ	0xFE7
  2910                           postdec1	equ	0xFE5
  2911                           fsr1h	equ	0xFE2
  2912                           fsr1l	equ	0xFE1
  2913                           indf2	equ	0xFDF
  2914                           fsr2h	equ	0xFDA
  2915                           fsr2l	equ	0xFD9
  2916                           status	equ	0xFD8
  2917                           
  2918 ;; *************** function _remappings *****************
  2919 ;; Defined at:
  2920 ;;		line 32 in file "digipot_spi.c"
  2921 ;; Parameters:    Size  Location     Type
  2922 ;;		None
  2923 ;; Auto vars:     Size  Location     Type
  2924 ;;		None
  2925 ;; Return value:  Size  Location     Type
  2926 ;;                  1    wreg      void 
  2927 ;; Registers used:
  2928 ;;		wreg, status,2
  2929 ;; Tracked objects:
  2930 ;;		On entry : 0/0
  2931 ;;		On exit  : 0/0
  2932 ;;		Unchanged: 0/0
  2933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  2934 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2935 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2936 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2937 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  2938 ;;Total ram usage:        0 bytes
  2939 ;; Hardware stack levels used:    1
  2940 ;; Hardware stack levels required when called:    2
  2941 ;; This function calls:
  2942 ;;		Nothing
  2943 ;; This function is called by:
  2944 ;;		_initSPI
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text12
  2949  011D3C                     __ptext12:
  2950                           	opt stack 0
  2951  011D3C                     _remappings:
  2952                           	opt stack 27
  2953                           
  2954                           ;digipot_spi.c: 33: EECON2 = 0x55;
  2955                           
  2956                           ;incstack = 0
  2957  011D3C  0E55               	movlw	85
  2958  011D3E  6EA7               	movwf	4007,c	;volatile
  2959                           
  2960                           ;digipot_spi.c: 34: EECON2 = 0xaa;
  2961  011D40  0EAA               	movlw	170
  2962  011D42  6EA7               	movwf	4007,c	;volatile
  2963                           
  2964                           ;digipot_spi.c: 35: IOLOCK = 0;
  2965  011D44  010E               	movlb	14	; () banked
  2966  011D46  91BF               	bcf	191,0,b	;volatile
  2967                           
  2968                           ;digipot_spi.c: 36: RPINR21 = 0x08;
  2969  011D48  0E08               	movlw	8
  2970  011D4A  010E               	movlb	14	; () banked
  2971  011D4C  6FFC               	movwf	252,b	;volatile
  2972                           
  2973                           ;digipot_spi.c: 37: RPOR7 = 0x0b;
  2974  011D4E  0E0B               	movlw	11
  2975  011D50  010E               	movlb	14	; () banked
  2976  011D52  6FC7               	movwf	199,b	;volatile
  2977                           
  2978                           ;digipot_spi.c: 38: RPOR9 = 0x0a;
  2979  011D54  0E0A               	movlw	10
  2980  011D56  010E               	movlb	14	; () banked
  2981  011D58  6FC9               	movwf	201,b	;volatile
  2982                           
  2983                           ; BSR set to: 14
  2984  011D5A  0012               	return		;funcret
  2985  011D5C                     __end_of_remappings:
  2986                           	opt stack 0
  2987                           tblptru	equ	0xFF8
  2988                           tblptrh	equ	0xFF7
  2989                           tblptrl	equ	0xFF6
  2990                           tablat	equ	0xFF5
  2991                           prodh	equ	0xFF4
  2992                           prodl	equ	0xFF3
  2993                           intcon	equ	0xFF2
  2994                           postinc0	equ	0xFEE
  2995                           wreg	equ	0xFE8
  2996                           indf1	equ	0xFE7
  2997                           postdec1	equ	0xFE5
  2998                           fsr1h	equ	0xFE2
  2999                           fsr1l	equ	0xFE1
  3000                           indf2	equ	0xFDF
  3001                           fsr2h	equ	0xFDA
  3002                           fsr2l	equ	0xFD9
  3003                           status	equ	0xFD8
  3004                           
  3005 ;; *************** function _initLoRa *****************
  3006 ;; Defined at:
  3007 ;;		line 28 in file "lora.c"
  3008 ;; Parameters:    Size  Location     Type
  3009 ;;		None
  3010 ;; Auto vars:     Size  Location     Type
  3011 ;;		None
  3012 ;; Return value:  Size  Location     Type
  3013 ;;                  1    wreg      void 
  3014 ;; Registers used:
  3015 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3016 ;; Tracked objects:
  3017 ;;		On entry : 0/0
  3018 ;;		On exit  : 0/0
  3019 ;;		Unchanged: 0/0
  3020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3025 ;;Total ram usage:        0 bytes
  3026 ;; Hardware stack levels used:    1
  3027 ;; Hardware stack levels required when called:    4
  3028 ;; This function calls:
  3029 ;;		_delay_ms
  3030 ;;		_sendUARTMessage
  3031 ;; This function is called by:
  3032 ;;		_main
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036                           	psect	text13
  3037  011956                     __ptext13:
  3038                           	opt stack 0
  3039  011956                     _initLoRa:
  3040                           	opt stack 26
  3041                           
  3042                           ;lora.c: 30: sendUARTMessage(set_dev_eui);
  3043                           
  3044                           ; BSR set to: 14
  3045                           ;incstack = 0
  3046  011956  0E4D               	movlw	low _set_dev_eui
  3047  011958  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  3048  01195A  0EFF               	movlw	high _set_dev_eui
  3049  01195C  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  3050  01195E  EC38  F08C         	call	_sendUARTMessage	;wreg free
  3051                           
  3052                           ;lora.c: 31: delay_ms(800);
  3053  011962  0E03               	movlw	3
  3054  011964  6E13               	movwf	delay_ms@ms+1,c
  3055  011966  0E20               	movlw	32
  3056  011968  6E12               	movwf	delay_ms@ms,c
  3057  01196A  EC1F  F08E         	call	_delay_ms	;wreg free
  3058                           
  3059                           ;lora.c: 33: sendUARTMessage(set_app_eui);
  3060  01196E  0E2B               	movlw	low _set_app_eui
  3061  011970  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  3062  011972  0EFF               	movlw	high _set_app_eui
  3063  011974  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  3064  011976  EC38  F08C         	call	_sendUARTMessage	;wreg free
  3065                           
  3066                           ;lora.c: 34: delay_ms(800);
  3067  01197A  0E03               	movlw	3
  3068  01197C  6E13               	movwf	delay_ms@ms+1,c
  3069  01197E  0E20               	movlw	32
  3070  011980  6E12               	movwf	delay_ms@ms,c
  3071  011982  EC1F  F08E         	call	_delay_ms	;wreg free
  3072                           
  3073                           ;lora.c: 36: sendUARTMessage(set_app_key);
  3074  011986  0EF9               	movlw	low _set_app_key
  3075  011988  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  3076  01198A  0EFE               	movlw	high _set_app_key
  3077  01198C  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  3078  01198E  EC38  F08C         	call	_sendUARTMessage	;wreg free
  3079                           
  3080                           ;lora.c: 37: delay_ms(3000);
  3081  011992  0E0B               	movlw	11
  3082  011994  6E13               	movwf	delay_ms@ms+1,c
  3083  011996  0EB8               	movlw	184
  3084  011998  6E12               	movwf	delay_ms@ms,c
  3085  01199A  EC1F  F08E         	call	_delay_ms	;wreg free
  3086                           
  3087                           ;lora.c: 39: sendUARTMessage(join_network);
  3088  01199E  0EA8               	movlw	low _join_network
  3089  0119A0  6E17               	movwf	sendUARTMessage@newMessagePointer,c
  3090  0119A2  0EFF               	movlw	high _join_network
  3091  0119A4  6E18               	movwf	sendUARTMessage@newMessagePointer+1,c
  3092  0119A6  EC38  F08C         	call	_sendUARTMessage	;wreg free
  3093                           
  3094                           ;lora.c: 40: delay_ms(3000);
  3095  0119AA  0E0B               	movlw	11
  3096  0119AC  6E13               	movwf	delay_ms@ms+1,c
  3097  0119AE  0EB8               	movlw	184
  3098  0119B0  6E12               	movwf	delay_ms@ms,c
  3099  0119B2  EC1F  F08E         	call	_delay_ms	;wreg free
  3100  0119B6  0012               	return		;funcret
  3101  0119B8                     __end_of_initLoRa:
  3102                           	opt stack 0
  3103                           tblptru	equ	0xFF8
  3104                           tblptrh	equ	0xFF7
  3105                           tblptrl	equ	0xFF6
  3106                           tablat	equ	0xFF5
  3107                           prodh	equ	0xFF4
  3108                           prodl	equ	0xFF3
  3109                           intcon	equ	0xFF2
  3110                           postinc0	equ	0xFEE
  3111                           wreg	equ	0xFE8
  3112                           indf1	equ	0xFE7
  3113                           postdec1	equ	0xFE5
  3114                           fsr1h	equ	0xFE2
  3115                           fsr1l	equ	0xFE1
  3116                           indf2	equ	0xFDF
  3117                           fsr2h	equ	0xFDA
  3118                           fsr2l	equ	0xFD9
  3119                           status	equ	0xFD8
  3120                           
  3121 ;; *************** function _sendUARTMessage *****************
  3122 ;; Defined at:
  3123 ;;		line 62 in file "uart.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  newMessagePo    2   22[COMRAM] PTR unsigned char 
  3126 ;;		 -> sendData@message(200), join_network(16), set_app_key(50), set_app_eui(34), 
  3127 ;;		 -> set_dev_eui(34), temp_display_message(20), frequency_message(26), 
  3128 ;; Auto vars:     Size  Location     Type
  3129 ;;		None
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3139 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3140 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3141 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3142 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3143 ;;Total ram usage:        2 bytes
  3144 ;; Hardware stack levels used:    1
  3145 ;; Hardware stack levels required when called:    3
  3146 ;; This function calls:
  3147 ;;		_delay_ms
  3148 ;; This function is called by:
  3149 ;;		_main
  3150 ;;		_initLoRa
  3151 ;;		_sendData
  3152 ;; This function uses a non-reentrant model
  3153 ;;
  3154                           
  3155                           	psect	text14
  3156  011870                     __ptext14:
  3157                           	opt stack 0
  3158  011870                     _sendUARTMessage:
  3159                           	opt stack 27
  3160                           
  3161                           ;uart.c: 65: currentMessagePointer = newMessagePointer;
  3162                           
  3163                           ;incstack = 0
  3164  011870  C017  F03E         	movff	sendUARTMessage@newMessagePointer,_currentMessagePointer
  3165  011874  C018  F03F         	movff	sendUARTMessage@newMessagePointer+1,_currentMessagePointer+1
  3166                           
  3167                           ;uart.c: 70: last_received_message_index = uart_receive_buffer_index;
  3168  011878  C04C  F040         	movff	_uart_receive_buffer_index,_last_received_message_index
  3169  01187C  C04D  F041         	movff	_uart_receive_buffer_index+1,_last_received_message_index+1
  3170                           
  3171                           ;uart.c: 71: TXSTA1bits.TXEN = 1;
  3172  011880  8AAD               	bsf	4013,5,c	;volatile
  3173                           
  3174                           ;uart.c: 73: while(*currentMessagePointer != '\0'){
  3175  011882  D01C               	goto	l2784
  3176  011884                     l146:
  3177                           
  3178                           ;uart.c: 74: if(PIR1bits.TXIF == 1){
  3179  011884  A89E               	btfss	3998,4,c	;volatile
  3180  011886  D01A               	goto	l2784
  3181                           
  3182                           ;uart.c: 76: TXREG1 = *currentMessagePointer;
  3183  011888  C03E  FFF6         	movff	_currentMessagePointer,tblptrl
  3184  01188C  C03F  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3185  011890  0E00               	movlw	low (__mediumconst shr (0+16))
  3186  011892  6EF8               	movwf	tblptru,c
  3187  011894  0E0E               	movlw	(high __ramtop+-1)
  3188  011896  64F7               	cpfsgt	tblptrh,c
  3189  011898  D003               	bra	u2377
  3190  01189A  0008               	tblrd		*
  3191  01189C  50F5               	movf	tablat,w,c
  3192  01189E  D005               	bra	u2370
  3193  0118A0                     u2377:
  3194  0118A0  CFF6 FFE9          	movff	tblptrl,fsr0l
  3195  0118A4  CFF7 FFEA          	movff	tblptrh,fsr0h
  3196  0118A8  50EF               	movf	indf0,w,c
  3197  0118AA                     u2370:
  3198  0118AA  6EAE               	movwf	4014,c	;volatile
  3199                           
  3200                           ;uart.c: 78: currentMessagePointer += 1;
  3201  0118AC  4A3E               	infsnz	_currentMessagePointer,f,c
  3202  0118AE  2A3F               	incf	_currentMessagePointer+1,f,c
  3203                           
  3204                           ;uart.c: 79: delay_ms(1);
  3205  0118B0  0E00               	movlw	0
  3206  0118B2  6E13               	movwf	delay_ms@ms+1,c
  3207  0118B4  0E01               	movlw	1
  3208  0118B6  6E12               	movwf	delay_ms@ms,c
  3209  0118B8  EC1F  F08E         	call	_delay_ms	;wreg free
  3210  0118BC                     l2784:
  3211  0118BC  C03E  FFF6         	movff	_currentMessagePointer,tblptrl
  3212  0118C0  C03F  FFF7         	movff	_currentMessagePointer+1,tblptrh
  3213  0118C4  0E00               	movlw	low (__mediumconst shr (0+16))
  3214  0118C6  6EF8               	movwf	tblptru,c
  3215  0118C8  0E0E               	movlw	(high __ramtop+-1)
  3216  0118CA  64F7               	cpfsgt	tblptrh,c
  3217  0118CC  D003               	bra	u2387
  3218  0118CE  0008               	tblrd		*
  3219  0118D0  50F5               	movf	tablat,w,c
  3220  0118D2  D005               	bra	u2380
  3221  0118D4                     u2387:
  3222  0118D4  CFF6 FFE9          	movff	tblptrl,fsr0l
  3223  0118D8  CFF7 FFEA          	movff	tblptrh,fsr0h
  3224  0118DC  50EF               	movf	indf0,w,c
  3225  0118DE                     u2380:
  3226  0118DE  0900               	iorlw	0
  3227  0118E0  B4D8               	btfsc	status,2,c
  3228  0118E2  0012               	return	
  3229  0118E4  D7CF               	goto	l146
  3230  0118E6                     __end_of_sendUARTMessage:
  3231                           	opt stack 0
  3232                           tblptru	equ	0xFF8
  3233                           tblptrh	equ	0xFF7
  3234                           tblptrl	equ	0xFF6
  3235                           tablat	equ	0xFF5
  3236                           prodh	equ	0xFF4
  3237                           prodl	equ	0xFF3
  3238                           intcon	equ	0xFF2
  3239                           indf0	equ	0xFEF
  3240                           postinc0	equ	0xFEE
  3241                           fsr0h	equ	0xFEA
  3242                           fsr0l	equ	0xFE9
  3243                           wreg	equ	0xFE8
  3244                           indf1	equ	0xFE7
  3245                           postdec1	equ	0xFE5
  3246                           fsr1h	equ	0xFE2
  3247                           fsr1l	equ	0xFE1
  3248                           indf2	equ	0xFDF
  3249                           fsr2h	equ	0xFDA
  3250                           fsr2l	equ	0xFD9
  3251                           status	equ	0xFD8
  3252                           
  3253 ;; *************** function _delay_ms *****************
  3254 ;; Defined at:
  3255 ;;		line 11 in file "delay.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  ms              2   17[COMRAM] int 
  3258 ;; Auto vars:     Size  Location     Type
  3259 ;;  i               2   20[COMRAM] int 
  3260 ;; Return value:  Size  Location     Type
  3261 ;;                  1    wreg      void 
  3262 ;; Registers used:
  3263 ;;		wreg, status,2, status,0
  3264 ;; Tracked objects:
  3265 ;;		On entry : 0/0
  3266 ;;		On exit  : 0/0
  3267 ;;		Unchanged: 0/0
  3268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3269 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3270 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3271 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3272 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3273 ;;Total ram usage:        5 bytes
  3274 ;; Hardware stack levels used:    1
  3275 ;; Hardware stack levels required when called:    2
  3276 ;; This function calls:
  3277 ;;		Nothing
  3278 ;; This function is called by:
  3279 ;;		_main
  3280 ;;		_sendUARTMessage
  3281 ;;		_initLoRa
  3282 ;;		_sendData
  3283 ;; This function uses a non-reentrant model
  3284 ;;
  3285                           
  3286                           	psect	text15
  3287  011C3E                     __ptext15:
  3288                           	opt stack 0
  3289  011C3E                     _delay_ms:
  3290                           	opt stack 27
  3291                           
  3292                           ;delay.c: 12: for(int i = 0; i<ms; i++){
  3293                           
  3294                           ;incstack = 0
  3295  011C3E  0E00               	movlw	0
  3296  011C40  6E16               	movwf	delay_ms@i+1,c
  3297  011C42  0E00               	movlw	0
  3298  011C44  6E15               	movwf	delay_ms@i,c
  3299  011C46  D009               	goto	l287
  3300  011C48                     l2644:
  3301                           
  3302                           ;delay.c: 13: _delay((unsigned long)((1)*(8000000/4000.0)));
  3303  011C48  0E03               	movlw	3
  3304  011C4A  6E14               	movwf	??_delay_ms& (0+255),c
  3305  011C4C  0E98               	movlw	152
  3306  011C4E                     u3817:
  3307  011C4E  2EE8               	decfsz	wreg,f,c
  3308  011C50  D7FE               	goto	u3817
  3309  011C52  2E14               	decfsz	??_delay_ms& (0+255),f,c
  3310  011C54  D7FC               	goto	u3817
  3311  011C56  4A15               	infsnz	delay_ms@i,f,c
  3312  011C58  2A16               	incf	delay_ms@i+1,f,c
  3313  011C5A                     l287:
  3314  011C5A  5012               	movf	delay_ms@ms,w,c
  3315  011C5C  5C15               	subwf	delay_ms@i,w,c
  3316  011C5E  5016               	movf	delay_ms@i+1,w,c
  3317  011C60  0A80               	xorlw	128
  3318  011C62  6E14               	movwf	??_delay_ms& (0+255),c
  3319  011C64  5013               	movf	delay_ms@ms+1,w,c
  3320  011C66  0A80               	xorlw	128
  3321  011C68  5814               	subwfb	??_delay_ms& (0+255),w,c
  3322  011C6A  B0D8               	btfsc	status,0,c
  3323  011C6C  0012               	return	
  3324  011C6E  D7EC               	goto	l2644
  3325  011C70                     __end_of_delay_ms:
  3326                           	opt stack 0
  3327                           tblptru	equ	0xFF8
  3328                           tblptrh	equ	0xFF7
  3329                           tblptrl	equ	0xFF6
  3330                           tablat	equ	0xFF5
  3331                           prodh	equ	0xFF4
  3332                           prodl	equ	0xFF3
  3333                           intcon	equ	0xFF2
  3334                           indf0	equ	0xFEF
  3335                           postinc0	equ	0xFEE
  3336                           fsr0h	equ	0xFEA
  3337                           fsr0l	equ	0xFE9
  3338                           wreg	equ	0xFE8
  3339                           indf1	equ	0xFE7
  3340                           postdec1	equ	0xFE5
  3341                           fsr1h	equ	0xFE2
  3342                           fsr1l	equ	0xFE1
  3343                           indf2	equ	0xFDF
  3344                           fsr2h	equ	0xFDA
  3345                           fsr2l	equ	0xFD9
  3346                           status	equ	0xFD8
  3347                           
  3348 ;; *************** function _initInterrupts *****************
  3349 ;; Defined at:
  3350 ;;		line 21 in file "main.c"
  3351 ;; Parameters:    Size  Location     Type
  3352 ;;		None
  3353 ;; Auto vars:     Size  Location     Type
  3354 ;;		None
  3355 ;; Return value:  Size  Location     Type
  3356 ;;                  1    wreg      void 
  3357 ;; Registers used:
  3358 ;;		wreg, status,2
  3359 ;; Tracked objects:
  3360 ;;		On entry : 0/0
  3361 ;;		On exit  : 0/0
  3362 ;;		Unchanged: 0/0
  3363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3365 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3367 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3368 ;;Total ram usage:        0 bytes
  3369 ;; Hardware stack levels used:    1
  3370 ;; Hardware stack levels required when called:    2
  3371 ;; This function calls:
  3372 ;;		Nothing
  3373 ;; This function is called by:
  3374 ;;		_main
  3375 ;; This function uses a non-reentrant model
  3376 ;;
  3377                           
  3378                           	psect	text16
  3379  011D88                     __ptext16:
  3380                           	opt stack 0
  3381  011D88                     _initInterrupts:
  3382                           	opt stack 28
  3383                           
  3384                           ;main.c: 22: INTCON = 0b11000000;
  3385                           
  3386                           ;incstack = 0
  3387  011D88  0EC0               	movlw	192
  3388  011D8A  6EF2               	movwf	intcon,c	;volatile
  3389                           
  3390                           ;main.c: 23: RCONbits.IPEN = 0;
  3391  011D8C  9ED0               	bcf	4048,7,c	;volatile
  3392  011D8E  0012               	return		;funcret
  3393  011D90                     __end_of_initInterrupts:
  3394                           	opt stack 0
  3395                           tblptru	equ	0xFF8
  3396                           tblptrh	equ	0xFF7
  3397                           tblptrl	equ	0xFF6
  3398                           tablat	equ	0xFF5
  3399                           prodh	equ	0xFF4
  3400                           prodl	equ	0xFF3
  3401                           intcon	equ	0xFF2
  3402                           indf0	equ	0xFEF
  3403                           postinc0	equ	0xFEE
  3404                           fsr0h	equ	0xFEA
  3405                           fsr0l	equ	0xFE9
  3406                           wreg	equ	0xFE8
  3407                           indf1	equ	0xFE7
  3408                           postdec1	equ	0xFE5
  3409                           fsr1h	equ	0xFE2
  3410                           fsr1l	equ	0xFE1
  3411                           indf2	equ	0xFDF
  3412                           fsr2h	equ	0xFDA
  3413                           fsr2l	equ	0xFD9
  3414                           status	equ	0xFD8
  3415                           
  3416 ;; *************** function _initADC *****************
  3417 ;; Defined at:
  3418 ;;		line 24 in file "temperature.c"
  3419 ;; Parameters:    Size  Location     Type
  3420 ;;		None
  3421 ;; Auto vars:     Size  Location     Type
  3422 ;;		None
  3423 ;; Return value:  Size  Location     Type
  3424 ;;                  1    wreg      void 
  3425 ;; Registers used:
  3426 ;;		wreg, status,2
  3427 ;; Tracked objects:
  3428 ;;		On entry : 0/0
  3429 ;;		On exit  : 0/0
  3430 ;;		Unchanged: 0/0
  3431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3432 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3433 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3434 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3435 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3436 ;;Total ram usage:        0 bytes
  3437 ;; Hardware stack levels used:    1
  3438 ;; Hardware stack levels required when called:    2
  3439 ;; This function calls:
  3440 ;;		Nothing
  3441 ;; This function is called by:
  3442 ;;		_main
  3443 ;; This function uses a non-reentrant model
  3444 ;;
  3445                           
  3446                           	psect	text17
  3447  011CA0                     __ptext17:
  3448                           	opt stack 0
  3449  011CA0                     _initADC:
  3450                           	opt stack 28
  3451                           
  3452                           ;temperature.c: 25: TRISAbits.TRISA0 = 1;
  3453                           
  3454                           ;incstack = 0
  3455  011CA0  8092               	bsf	3986,0,c	;volatile
  3456                           
  3457                           ;temperature.c: 26: TRISAbits.TRISA1 = 1;
  3458  011CA2  8292               	bsf	3986,1,c	;volatile
  3459                           
  3460                           ;temperature.c: 27: PORTAbits.RA0 = 0;
  3461  011CA4  9080               	bcf	3968,0,c	;volatile
  3462                           
  3463                           ;temperature.c: 28: PORTAbits.RA1 = 0;
  3464  011CA6  9280               	bcf	3968,1,c	;volatile
  3465                           
  3466                           ;temperature.c: 30: PORTBbits.RB0 = 0;
  3467  011CA8  9081               	bcf	3969,0,c	;volatile
  3468                           
  3469                           ;temperature.c: 31: TRISBbits.TRISB0 = 1;
  3470  011CAA  8093               	bsf	3987,0,c	;volatile
  3471                           
  3472                           ;temperature.c: 32: PORTBbits.RB1 = 0;
  3473  011CAC  9281               	bcf	3969,1,c	;volatile
  3474                           
  3475                           ;temperature.c: 33: TRISBbits.TRISB1 = 1;
  3476  011CAE  8293               	bsf	3987,1,c	;volatile
  3477                           
  3478                           ;temperature.c: 36: ANCON0 = 0xFC;
  3479  011CB0  0EFC               	movlw	252
  3480  011CB2  010F               	movlb	15	; () banked
  3481  011CB4  6F48               	movwf	72,b	;volatile
  3482                           
  3483                           ;temperature.c: 37: ANCON1 = 0x1C;
  3484  011CB6  0E1C               	movlw	28
  3485  011CB8  010F               	movlb	15	; () banked
  3486  011CBA  6F49               	movwf	73,b	;volatile
  3487                           
  3488                           ;temperature.c: 38: ADCON0 = 0x00;
  3489  011CBC  0E00               	movlw	0
  3490  011CBE  6EC2               	movwf	4034,c	;volatile
  3491                           
  3492                           ;temperature.c: 39: ADCON1 = 0b10111110;
  3493  011CC0  0EBE               	movlw	190
  3494  011CC2  6EC1               	movwf	4033,c	;volatile
  3495                           
  3496                           ; BSR set to: 15
  3497                           ;temperature.c: 40: ADCON0bits.ADON = 0x01;
  3498  011CC4  80C2               	bsf	4034,0,c	;volatile
  3499                           
  3500                           ; BSR set to: 15
  3501                           ;temperature.c: 42: PIR1bits.ADIF = 0;
  3502  011CC6  9C9E               	bcf	3998,6,c	;volatile
  3503                           
  3504                           ; BSR set to: 15
  3505                           ;temperature.c: 43: PIE1bits.ADIE = 0;
  3506  011CC8  9C9D               	bcf	3997,6,c	;volatile
  3507                           
  3508                           ; BSR set to: 15
  3509                           ;temperature.c: 46: ADCON0bits.GO_DONE = 1;
  3510  011CCA  82C2               	bsf	4034,1,c	;volatile
  3511                           
  3512                           ; BSR set to: 15
  3513  011CCC  0012               	return		;funcret
  3514  011CCE                     __end_of_initADC:
  3515                           	opt stack 0
  3516                           tblptru	equ	0xFF8
  3517                           tblptrh	equ	0xFF7
  3518                           tblptrl	equ	0xFF6
  3519                           tablat	equ	0xFF5
  3520                           prodh	equ	0xFF4
  3521                           prodl	equ	0xFF3
  3522                           intcon	equ	0xFF2
  3523                           indf0	equ	0xFEF
  3524                           postinc0	equ	0xFEE
  3525                           fsr0h	equ	0xFEA
  3526                           fsr0l	equ	0xFE9
  3527                           wreg	equ	0xFE8
  3528                           indf1	equ	0xFE7
  3529                           postdec1	equ	0xFE5
  3530                           fsr1h	equ	0xFE2
  3531                           fsr1l	equ	0xFE1
  3532                           indf2	equ	0xFDF
  3533                           fsr2h	equ	0xFDA
  3534                           fsr2l	equ	0xFD9
  3535                           status	equ	0xFD8
  3536                           
  3537 ;; *************** function _digipot *****************
  3538 ;; Defined at:
  3539 ;;		line 45 in file "digipot_spi.c"
  3540 ;; Parameters:    Size  Location     Type
  3541 ;;		None
  3542 ;; Auto vars:     Size  Location     Type
  3543 ;;		None
  3544 ;; Return value:  Size  Location     Type
  3545 ;;                  2   32[None  ] int 
  3546 ;; Registers used:
  3547 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3548 ;; Tracked objects:
  3549 ;;		On entry : 0/0
  3550 ;;		On exit  : 0/0
  3551 ;;		Unchanged: 0/0
  3552 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3553 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3554 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3555 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3556 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3557 ;;Total ram usage:        0 bytes
  3558 ;; Hardware stack levels used:    1
  3559 ;; Hardware stack levels required when called:    8
  3560 ;; This function calls:
  3561 ;;		___ftge
  3562 ;;		___ftmul
  3563 ;;		_adjustDigipot
  3564 ;;		_checkFrequency
  3565 ;;		_unselect
  3566 ;; This function is called by:
  3567 ;;		_main
  3568 ;; This function uses a non-reentrant model
  3569 ;;
  3570                           
  3571                           	psect	text18
  3572  01145E                     __ptext18:
  3573                           	opt stack 0
  3574  01145E                     _digipot:
  3575                           	opt stack 22
  3576                           
  3577                           ;digipot_spi.c: 46: checkFrequency();
  3578                           
  3579                           ; BSR set to: 15
  3580                           ;incstack = 0
  3581  01145E  ECCA  F08E         	call	_checkFrequency	;wreg free
  3582                           
  3583                           ;digipot_spi.c: 47: if (frequency > 1.033*nominalfrequency ){
  3584  011462  0E39               	movlw	57
  3585  011464  6E30               	movwf	___ftmul@f2,c
  3586  011466  0E84               	movlw	132
  3587  011468  6E31               	movwf	___ftmul@f2+1,c
  3588  01146A  0E3F               	movlw	63
  3589  01146C  6E32               	movwf	___ftmul@f2+2,c
  3590  01146E  C0F3  F02D         	movff	_nominalfrequency,___ftmul@f1
  3591  011472  C0F4  F02E         	movff	_nominalfrequency+1,___ftmul@f1+1
  3592  011476  C0F5  F02F         	movff	_nominalfrequency+2,___ftmul@f1+2
  3593  01147A  EC55  F087         	call	___ftmul	;wreg free
  3594  01147E  C02D  F060         	movff	?___ftmul,___ftge@ff1
  3595  011482  C02E  F061         	movff	?___ftmul+1,___ftge@ff1+1
  3596  011486  C02F  F062         	movff	?___ftmul+2,___ftge@ff1+2
  3597  01148A  C0D8  F063         	movff	_frequency,___ftge@ff2
  3598  01148E  C0D9  F064         	movff	_frequency+1,___ftge@ff2+1
  3599  011492  C0DA  F065         	movff	_frequency+2,___ftge@ff2+2
  3600  011496  EC1B  F089         	call	___ftge	;wreg free
  3601  01149A  0100               	movlb	0	; () banked
  3602  01149C  B0D8               	btfsc	status,0,c
  3603  01149E  D005               	goto	l3848
  3604                           
  3605                           ; BSR set to: 0
  3606                           ;digipot_spi.c: 48: bigorsmall = 0x01;
  3607  0114A0  0E01               	movlw	1
  3608  0114A2  0100               	movlb	0	; () banked
  3609  0114A4  6FEE               	movwf	_bigorsmall& (0+255),b
  3610                           
  3611                           ; BSR set to: 0
  3612                           ;digipot_spi.c: 49: adjustDigipot();
  3613  0114A6  EC1F  F085         	call	_adjustDigipot	;wreg free
  3614  0114AA                     l3848:
  3615                           
  3616                           ;digipot_spi.c: 50: }
  3617                           ;digipot_spi.c: 51: if (frequency< 0.9692*nominalfrequency&&step>0){
  3618  0114AA  C0D8  F060         	movff	_frequency,___ftge@ff1
  3619  0114AE  C0D9  F061         	movff	_frequency+1,___ftge@ff1+1
  3620  0114B2  C0DA  F062         	movff	_frequency+2,___ftge@ff1+2
  3621  0114B6  0E1D               	movlw	29
  3622  0114B8  6E30               	movwf	___ftmul@f2,c
  3623  0114BA  0E78               	movlw	120
  3624  0114BC  6E31               	movwf	___ftmul@f2+1,c
  3625  0114BE  0E3F               	movlw	63
  3626  0114C0  6E32               	movwf	___ftmul@f2+2,c
  3627  0114C2  C0F3  F02D         	movff	_nominalfrequency,___ftmul@f1
  3628  0114C6  C0F4  F02E         	movff	_nominalfrequency+1,___ftmul@f1+1
  3629  0114CA  C0F5  F02F         	movff	_nominalfrequency+2,___ftmul@f1+2
  3630  0114CE  EC55  F087         	call	___ftmul	;wreg free
  3631  0114D2  C02D  F063         	movff	?___ftmul,___ftge@ff2
  3632  0114D6  C02E  F064         	movff	?___ftmul+1,___ftge@ff2+1
  3633  0114DA  C02F  F065         	movff	?___ftmul+2,___ftge@ff2+2
  3634  0114DE  EC1B  F089         	call	___ftge	;wreg free
  3635  0114E2  0100               	movlb	0	; () banked
  3636  0114E4  B0D8               	btfsc	status,0,c
  3637  0114E6  D00A               	goto	l400
  3638                           
  3639                           ; BSR set to: 0
  3640  0114E8  0100               	movlb	0	; () banked
  3641  0114EA  51F2               	movf	_step& (0+255),w,b
  3642  0114EC  B4D8               	btfsc	status,2,c
  3643  0114EE  D006               	goto	l400
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;digipot_spi.c: 52: bigorsmall =0x02;
  3647  0114F0  0E02               	movlw	2
  3648  0114F2  0100               	movlb	0	; () banked
  3649  0114F4  6FEE               	movwf	_bigorsmall& (0+255),b
  3650                           
  3651                           ; BSR set to: 0
  3652                           ;digipot_spi.c: 53: adjustDigipot();
  3653  0114F6  EC1F  F085         	call	_adjustDigipot	;wreg free
  3654                           
  3655                           ;digipot_spi.c: 54: }
  3656  0114FA  0012               	return	
  3657  0114FC                     l400:
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;digipot_spi.c: 55: else{
  3661                           ;digipot_spi.c: 56: if(PORTBbits.RB3==0){
  3662  0114FC  B681               	btfsc	3969,3,c	;volatile
  3663  0114FE  0012               	return	
  3664                           
  3665                           ; BSR set to: 0
  3666                           ;digipot_spi.c: 57: unselect();
  3667  011500  ECC8  F08E         	call	_unselect	;wreg free
  3668  011504  0012               	return	
  3669  011506                     __end_of_digipot:
  3670                           	opt stack 0
  3671                           tblptru	equ	0xFF8
  3672                           tblptrh	equ	0xFF7
  3673                           tblptrl	equ	0xFF6
  3674                           tablat	equ	0xFF5
  3675                           prodh	equ	0xFF4
  3676                           prodl	equ	0xFF3
  3677                           intcon	equ	0xFF2
  3678                           indf0	equ	0xFEF
  3679                           postinc0	equ	0xFEE
  3680                           fsr0h	equ	0xFEA
  3681                           fsr0l	equ	0xFE9
  3682                           wreg	equ	0xFE8
  3683                           indf1	equ	0xFE7
  3684                           postdec1	equ	0xFE5
  3685                           fsr1h	equ	0xFE2
  3686                           fsr1l	equ	0xFE1
  3687                           indf2	equ	0xFDF
  3688                           fsr2h	equ	0xFDA
  3689                           fsr2l	equ	0xFD9
  3690                           status	equ	0xFD8
  3691                           
  3692 ;; *************** function _unselect *****************
  3693 ;; Defined at:
  3694 ;;		line 82 in file "digipot_spi.c"
  3695 ;; Parameters:    Size  Location     Type
  3696 ;;		None
  3697 ;; Auto vars:     Size  Location     Type
  3698 ;;		None
  3699 ;; Return value:  Size  Location     Type
  3700 ;;                  1    wreg      void 
  3701 ;; Registers used:
  3702 ;;		None
  3703 ;; Tracked objects:
  3704 ;;		On entry : 0/0
  3705 ;;		On exit  : 0/0
  3706 ;;		Unchanged: 0/0
  3707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3708 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3709 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3710 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3711 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3712 ;;Total ram usage:        0 bytes
  3713 ;; Hardware stack levels used:    1
  3714 ;; Hardware stack levels required when called:    2
  3715 ;; This function calls:
  3716 ;;		Nothing
  3717 ;; This function is called by:
  3718 ;;		_digipot
  3719 ;; This function uses a non-reentrant model
  3720 ;;
  3721                           
  3722                           	psect	text19
  3723  011D90                     __ptext19:
  3724                           	opt stack 0
  3725  011D90                     _unselect:
  3726                           	opt stack 27
  3727                           
  3728                           ;digipot_spi.c: 83: PORTBbits.RB3=1;
  3729                           
  3730                           ;incstack = 0
  3731  011D90  8681               	bsf	3969,3,c	;volatile
  3732  011D92  0012               	return		;funcret
  3733  011D94                     __end_of_unselect:
  3734                           	opt stack 0
  3735                           tblptru	equ	0xFF8
  3736                           tblptrh	equ	0xFF7
  3737                           tblptrl	equ	0xFF6
  3738                           tablat	equ	0xFF5
  3739                           prodh	equ	0xFF4
  3740                           prodl	equ	0xFF3
  3741                           intcon	equ	0xFF2
  3742                           indf0	equ	0xFEF
  3743                           postinc0	equ	0xFEE
  3744                           fsr0h	equ	0xFEA
  3745                           fsr0l	equ	0xFE9
  3746                           wreg	equ	0xFE8
  3747                           indf1	equ	0xFE7
  3748                           postdec1	equ	0xFE5
  3749                           fsr1h	equ	0xFE2
  3750                           fsr1l	equ	0xFE1
  3751                           indf2	equ	0xFDF
  3752                           fsr2h	equ	0xFDA
  3753                           fsr2l	equ	0xFD9
  3754                           status	equ	0xFD8
  3755                           
  3756 ;; *************** function _checkFrequency *****************
  3757 ;; Defined at:
  3758 ;;		line 41 in file "digipot_spi.c"
  3759 ;; Parameters:    Size  Location     Type
  3760 ;;		None
  3761 ;; Auto vars:     Size  Location     Type
  3762 ;;		None
  3763 ;; Return value:  Size  Location     Type
  3764 ;;                  1    wreg      void 
  3765 ;; Registers used:
  3766 ;;		None
  3767 ;; Tracked objects:
  3768 ;;		On entry : 0/0
  3769 ;;		On exit  : 0/0
  3770 ;;		Unchanged: 0/0
  3771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3772 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3775 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3776 ;;Total ram usage:        0 bytes
  3777 ;; Hardware stack levels used:    1
  3778 ;; Hardware stack levels required when called:    2
  3779 ;; This function calls:
  3780 ;;		Nothing
  3781 ;; This function is called by:
  3782 ;;		_digipot
  3783 ;; This function uses a non-reentrant model
  3784 ;;
  3785                           
  3786                           	psect	text20
  3787  011D94                     __ptext20:
  3788                           	opt stack 0
  3789  011D94                     _checkFrequency:
  3790                           	opt stack 27
  3791                           
  3792                           ;incstack = 0
  3793  011D94  0012               	return		;funcret
  3794  011D96                     __end_of_checkFrequency:
  3795                           	opt stack 0
  3796                           tblptru	equ	0xFF8
  3797                           tblptrh	equ	0xFF7
  3798                           tblptrl	equ	0xFF6
  3799                           tablat	equ	0xFF5
  3800                           prodh	equ	0xFF4
  3801                           prodl	equ	0xFF3
  3802                           intcon	equ	0xFF2
  3803                           indf0	equ	0xFEF
  3804                           postinc0	equ	0xFEE
  3805                           fsr0h	equ	0xFEA
  3806                           fsr0l	equ	0xFE9
  3807                           wreg	equ	0xFE8
  3808                           indf1	equ	0xFE7
  3809                           postdec1	equ	0xFE5
  3810                           fsr1h	equ	0xFE2
  3811                           fsr1l	equ	0xFE1
  3812                           indf2	equ	0xFDF
  3813                           fsr2h	equ	0xFDA
  3814                           fsr2l	equ	0xFD9
  3815                           status	equ	0xFD8
  3816                           
  3817 ;; *************** function _adjustDigipot *****************
  3818 ;; Defined at:
  3819 ;;		line 62 in file "digipot_spi.c"
  3820 ;; Parameters:    Size  Location     Type
  3821 ;;		None
  3822 ;; Auto vars:     Size  Location     Type
  3823 ;;		None
  3824 ;; Return value:  Size  Location     Type
  3825 ;;                  1    wreg      void 
  3826 ;; Registers used:
  3827 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3828 ;; Tracked objects:
  3829 ;;		On entry : 0/0
  3830 ;;		On exit  : 0/0
  3831 ;;		Unchanged: 0/0
  3832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  3833 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3834 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3835 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3836 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  3837 ;;Total ram usage:        9 bytes
  3838 ;; Hardware stack levels used:    1
  3839 ;; Hardware stack levels required when called:    7
  3840 ;; This function calls:
  3841 ;;		___awtoft
  3842 ;;		___ftadd
  3843 ;;		___ftdiv
  3844 ;;		___ftmul
  3845 ;;		___lbtoft
  3846 ;;		_pow
  3847 ;; This function is called by:
  3848 ;;		_digipot
  3849 ;; This function uses a non-reentrant model
  3850 ;;
  3851                           
  3852                           	psect	text21
  3853  010A3E                     __ptext21:
  3854                           	opt stack 0
  3855  010A3E                     _adjustDigipot:
  3856                           	opt stack 22
  3857                           
  3858                           ;digipot_spi.c: 64: PORTBbits.RB3=0;
  3859                           
  3860                           ;incstack = 0
  3861  010A3E  9681               	bcf	3969,3,c	;volatile
  3862                           
  3863                           ;digipot_spi.c: 65: if(state==0x00){
  3864  010A40  0100               	movlb	0	; () banked
  3865  010A42  51EF               	movf	_state& (0+255),w,b
  3866  010A44  0100               	movlb	0	; () banked
  3867  010A46  A4D8               	btfss	status,2,c
  3868  010A48  D004               	goto	l3794
  3869                           
  3870                           ; BSR set to: 0
  3871                           ;digipot_spi.c: 66: SSPBUF = 0x00;
  3872  010A4A  0E00               	movlw	0
  3873  010A4C  6EC9               	movwf	4041,c	;volatile
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;digipot_spi.c: 67: state++;
  3877  010A4E  0100               	movlb	0	; () banked
  3878  010A50  2BEF               	incf	_state& (0+255),f,b
  3879  010A52                     l3794:
  3880                           
  3881                           ; BSR set to: 0
  3882                           ;digipot_spi.c: 68: }
  3883                           ;digipot_spi.c: 69: if(SSP2STATbits.BF==1){
  3884  010A52  A073               	btfss	3955,0,c	;volatile
  3885  010A54  0012               	return	
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;digipot_spi.c: 70: if(bigorsmall==0x01){
  3889  010A56  0100               	movlb	0	; () banked
  3890  010A58  05EE               	decf	_bigorsmall& (0+255),w,b
  3891  010A5A  A4D8               	btfss	status,2,c
  3892  010A5C  D002               	goto	l3800
  3893                           
  3894                           ; BSR set to: 0
  3895                           ;digipot_spi.c: 71: step++;
  3896  010A5E  0100               	movlb	0	; () banked
  3897  010A60  2BF2               	incf	_step& (0+255),f,b
  3898  010A62                     l3800:
  3899                           
  3900                           ; BSR set to: 0
  3901                           ;digipot_spi.c: 72: }
  3902                           ;digipot_spi.c: 73: if(bigorsmall==0x02){
  3903  010A62  0E02               	movlw	2
  3904  010A64  0100               	movlb	0	; () banked
  3905  010A66  19EE               	xorwf	_bigorsmall& (0+255),w,b
  3906  010A68  A4D8               	btfss	status,2,c
  3907  010A6A  D002               	goto	l3804
  3908                           
  3909                           ; BSR set to: 0
  3910                           ;digipot_spi.c: 74: step--;
  3911  010A6C  0100               	movlb	0	; () banked
  3912  010A6E  07F2               	decf	_step& (0+255),f,b
  3913  010A70                     l3804:
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;digipot_spi.c: 75: }
  3917                           ;digipot_spi.c: 76: SSPBUF = step;
  3918  010A70  C0F2  FFC9         	movff	_step,4041	;volatile
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;digipot_spi.c: 77: state=0x00;
  3922  010A74  0E00               	movlw	0
  3923  010A76  0100               	movlb	0	; () banked
  3924  010A78  6FEF               	movwf	_state& (0+255),b
  3925                           
  3926                           ; BSR set to: 0
  3927                           ;digipot_spi.c: 78: nominalfrequency = 1.44/((1000+2*step*390.63)*0.000288 * pow(0.9384,
      +                           step));
  3928  010A7A  0100               	movlb	0	; () banked
  3929  010A7C  51F2               	movf	_step& (0+255),w,b
  3930  010A7E  EC8C  F08E         	call	___lbtoft
  3931  010A82  C01A  F08B         	movff	?___lbtoft,pow@y
  3932  010A86  C01B  F08C         	movff	?___lbtoft+1,pow@y+1
  3933  010A8A  C01C  F08D         	movff	?___lbtoft+2,pow@y+2
  3934  010A8E  0E3B               	movlw	59
  3935  010A90  0100               	movlb	0	; () banked
  3936  010A92  6F88               	movwf	pow@x& (0+255),b
  3937  010A94  0E70               	movlw	112
  3938  010A96  0100               	movlb	0	; () banked
  3939  010A98  6F89               	movwf	(pow@x+1)& (0+255),b
  3940  010A9A  0E3F               	movlw	63
  3941  010A9C  0100               	movlb	0	; () banked
  3942  010A9E  6F8A               	movwf	(pow@x+2)& (0+255),b
  3943  010AA0  EC4B  F082         	call	_pow	;wreg free
  3944  010AA4  C088  F099         	movff	?_pow,_adjustDigipot$2426
  3945  010AA8  C089  F09A         	movff	?_pow+1,_adjustDigipot$2426+1
  3946  010AAC  C08A  F09B         	movff	?_pow+2,_adjustDigipot$2426+2
  3947                           
  3948                           ;digipot_spi.c: 78: nominalfrequency = 1.44/((1000+2*step*390.63)*0.000288 * pow(0.9384,
      +                           step));
  3949  010AB0  0E00               	movlw	0
  3950  010AB2  0100               	movlb	0	; () banked
  3951  010AB4  6F63               	movwf	___ftadd@f2& (0+255),b
  3952  010AB6  0E7A               	movlw	122
  3953  010AB8  0100               	movlb	0	; () banked
  3954  010ABA  6F64               	movwf	(___ftadd@f2+1)& (0+255),b
  3955  010ABC  0E44               	movlw	68
  3956  010ABE  0100               	movlb	0	; () banked
  3957  010AC0  6F65               	movwf	(___ftadd@f2+2)& (0+255),b
  3958  010AC2  0E51               	movlw	81
  3959  010AC4  6E30               	movwf	___ftmul@f2,c
  3960  010AC6  0EC3               	movlw	195
  3961  010AC8  6E31               	movwf	___ftmul@f2+1,c
  3962  010ACA  0E43               	movlw	67
  3963  010ACC  6E32               	movwf	___ftmul@f2+2,c
  3964  010ACE  0100               	movlb	0	; () banked
  3965  010AD0  51F2               	movf	_step& (0+255),w,b
  3966  010AD2  0D02               	mullw	2
  3967  010AD4  CFF3 F01A          	movff	prodl,___awtoft@c
  3968  010AD8  CFF4 F01B          	movff	prodh,___awtoft@c+1
  3969  010ADC  ECE9  F08D         	call	___awtoft	;wreg free
  3970  010AE0  C01A  F02D         	movff	?___awtoft,___ftmul@f1
  3971  010AE4  C01B  F02E         	movff	?___awtoft+1,___ftmul@f1+1
  3972  010AE8  C01C  F02F         	movff	?___awtoft+2,___ftmul@f1+2
  3973  010AEC  EC55  F087         	call	___ftmul	;wreg free
  3974  010AF0  C02D  F060         	movff	?___ftmul,___ftadd@f1
  3975  010AF4  C02E  F061         	movff	?___ftmul+1,___ftadd@f1+1
  3976  010AF8  C02F  F062         	movff	?___ftmul+2,___ftadd@f1+2
  3977  010AFC  EC00  F080         	call	___ftadd	;wreg free
  3978  010B00  C060  F09C         	movff	?___ftadd,_adjustDigipot$2427
  3979  010B04  C061  F09D         	movff	?___ftadd+1,_adjustDigipot$2427+1
  3980  010B08  C062  F09E         	movff	?___ftadd+2,_adjustDigipot$2427+2
  3981                           
  3982                           ;digipot_spi.c: 78: nominalfrequency = 1.44/((1000+2*step*390.63)*0.000288 * pow(0.9384,
      +                           step));
  3983  010B0C  C099  F030         	movff	_adjustDigipot$2426,___ftmul@f2
  3984  010B10  C09A  F031         	movff	_adjustDigipot$2426+1,___ftmul@f2+1
  3985  010B14  C09B  F032         	movff	_adjustDigipot$2426+2,___ftmul@f2+2
  3986  010B18  C09C  F02D         	movff	_adjustDigipot$2427,___ftmul@f1
  3987  010B1C  C09D  F02E         	movff	_adjustDigipot$2427+1,___ftmul@f1+1
  3988  010B20  C09E  F02F         	movff	_adjustDigipot$2427+2,___ftmul@f1+2
  3989  010B24  EC55  F087         	call	___ftmul	;wreg free
  3990  010B28  C02D  F09F         	movff	?___ftmul,_adjustDigipot$2428
  3991  010B2C  C02E  F0A0         	movff	?___ftmul+1,_adjustDigipot$2428+1
  3992  010B30  C02F  F0A1         	movff	?___ftmul+2,_adjustDigipot$2428+2
  3993                           
  3994                           ;digipot_spi.c: 78: nominalfrequency = 1.44/((1000+2*step*390.63)*0.000288 * pow(0.9384,
      +                           step));
  3995  010B34  0E52               	movlw	82
  3996  010B36  6E1E               	movwf	___ftdiv@f1,c
  3997  010B38  0EB8               	movlw	184
  3998  010B3A  6E1F               	movwf	___ftdiv@f1+1,c
  3999  010B3C  0E3F               	movlw	63
  4000  010B3E  6E20               	movwf	___ftdiv@f1+2,c
  4001  010B40  0EFF               	movlw	255
  4002  010B42  6E30               	movwf	___ftmul@f2,c
  4003  010B44  0E96               	movlw	150
  4004  010B46  6E31               	movwf	___ftmul@f2+1,c
  4005  010B48  0E39               	movlw	57
  4006  010B4A  6E32               	movwf	___ftmul@f2+2,c
  4007  010B4C  C09F  F02D         	movff	_adjustDigipot$2428,___ftmul@f1
  4008  010B50  C0A0  F02E         	movff	_adjustDigipot$2428+1,___ftmul@f1+1
  4009  010B54  C0A1  F02F         	movff	_adjustDigipot$2428+2,___ftmul@f1+2
  4010  010B58  EC55  F087         	call	___ftmul	;wreg free
  4011  010B5C  C02D  F021         	movff	?___ftmul,___ftdiv@f2
  4012  010B60  C02E  F022         	movff	?___ftmul+1,___ftdiv@f2+1
  4013  010B64  C02F  F023         	movff	?___ftmul+2,___ftdiv@f2+2
  4014  010B68  ECCF  F087         	call	___ftdiv	;wreg free
  4015  010B6C  C01E  F0F3         	movff	?___ftdiv,_nominalfrequency
  4016  010B70  C01F  F0F4         	movff	?___ftdiv+1,_nominalfrequency+1
  4017  010B74  C020  F0F5         	movff	?___ftdiv+2,_nominalfrequency+2
  4018  010B78  0012               	return	
  4019  010B7A                     __end_of_adjustDigipot:
  4020                           	opt stack 0
  4021                           tblptru	equ	0xFF8
  4022                           tblptrh	equ	0xFF7
  4023                           tblptrl	equ	0xFF6
  4024                           tablat	equ	0xFF5
  4025                           prodh	equ	0xFF4
  4026                           prodl	equ	0xFF3
  4027                           intcon	equ	0xFF2
  4028                           indf0	equ	0xFEF
  4029                           postinc0	equ	0xFEE
  4030                           fsr0h	equ	0xFEA
  4031                           fsr0l	equ	0xFE9
  4032                           wreg	equ	0xFE8
  4033                           indf1	equ	0xFE7
  4034                           postdec1	equ	0xFE5
  4035                           fsr1h	equ	0xFE2
  4036                           fsr1l	equ	0xFE1
  4037                           indf2	equ	0xFDF
  4038                           fsr2h	equ	0xFDA
  4039                           fsr2l	equ	0xFD9
  4040                           status	equ	0xFD8
  4041                           
  4042 ;; *************** function _pow *****************
  4043 ;; Defined at:
  4044 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\pow.c"
  4045 ;; Parameters:    Size  Location     Type
  4046 ;;  x               3   40[BANK0 ] void 
  4047 ;;  y               3   43[BANK0 ] void 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  yi              4   53[BANK0 ] unsigned long 
  4050 ;;  sign            1   52[BANK0 ] unsigned char 
  4051 ;; Return value:  Size  Location     Type
  4052 ;;                  3   40[BANK0 ] unsigned char 
  4053 ;; Registers used:
  4054 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4055 ;; Tracked objects:
  4056 ;;		On entry : 0/0
  4057 ;;		On exit  : 0/0
  4058 ;;		Unchanged: 0/0
  4059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4060 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4061 ;;      Locals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4063 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4064 ;;Total ram usage:       17 bytes
  4065 ;; Hardware stack levels used:    1
  4066 ;; Hardware stack levels required when called:    6
  4067 ;; This function calls:
  4068 ;;		___ftge
  4069 ;;		___ftmul
  4070 ;;		___ftneg
  4071 ;;		___fttol
  4072 ;;		___lltoft
  4073 ;;		_exp
  4074 ;;		_log
  4075 ;; This function is called by:
  4076 ;;		_initSPI
  4077 ;;		_adjustDigipot
  4078 ;; This function uses a non-reentrant model
  4079 ;;
  4080                           
  4081                           	psect	text22
  4082  010496                     __ptext22:
  4083                           	opt stack 0
  4084  010496                     _pow:
  4085                           	opt stack 23
  4086                           
  4087                           ;incstack = 0
  4088  010496  0E00               	movlw	0
  4089  010498  0100               	movlb	0	; () banked
  4090  01049A  6F94               	movwf	pow@sign& (0+255),b
  4091                           
  4092                           ; BSR set to: 0
  4093  01049C  0100               	movlb	0	; () banked
  4094  01049E  5188               	movf	pow@x& (0+255),w,b
  4095  0104A0  0100               	movlb	0	; () banked
  4096  0104A2  1189               	iorwf	(pow@x+1)& (0+255),w,b
  4097  0104A4  0100               	movlb	0	; () banked
  4098  0104A6  118A               	iorwf	(pow@x+2)& (0+255),w,b
  4099  0104A8  A4D8               	btfss	status,2,c
  4100  0104AA  D023               	goto	l3610
  4101                           
  4102                           ; BSR set to: 0
  4103  0104AC  0E00               	movlw	0
  4104  0104AE  0100               	movlb	0	; () banked
  4105  0104B0  6F60               	movwf	___ftge@ff1& (0+255),b
  4106  0104B2  0E00               	movlw	0
  4107  0104B4  0100               	movlb	0	; () banked
  4108  0104B6  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  4109  0104B8  0E00               	movlw	0
  4110  0104BA  0100               	movlb	0	; () banked
  4111  0104BC  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  4112  0104BE  C08B  F063         	movff	pow@y,___ftge@ff2
  4113  0104C2  C08C  F064         	movff	pow@y+1,___ftge@ff2+1
  4114  0104C6  C08D  F065         	movff	pow@y+2,___ftge@ff2+2
  4115  0104CA  EC1B  F089         	call	___ftge	;wreg free
  4116  0104CE  0100               	movlb	0	; () banked
  4117  0104D0  A0D8               	btfss	status,0,c
  4118  0104D2  D005               	goto	l878
  4119                           
  4120                           ; BSR set to: 0
  4121  0104D4  0E00               	movlw	0
  4122  0104D6  0100               	movlb	0	; () banked
  4123  0104D8  6FE1               	movwf	(_errno+1)& (0+255),b
  4124  0104DA  0E21               	movlw	33
  4125  0104DC  6FE0               	movwf	_errno& (0+255),b
  4126  0104DE                     l878:
  4127                           
  4128                           ; BSR set to: 0
  4129  0104DE  0E00               	movlw	0
  4130  0104E0  0100               	movlb	0	; () banked
  4131  0104E2  6F88               	movwf	?_pow& (0+255),b
  4132  0104E4  0E00               	movlw	0
  4133  0104E6  0100               	movlb	0	; () banked
  4134  0104E8  6F89               	movwf	(?_pow+1)& (0+255),b
  4135  0104EA  0E00               	movlw	0
  4136  0104EC  0100               	movlb	0	; () banked
  4137  0104EE  6F8A               	movwf	(?_pow+2)& (0+255),b
  4138                           
  4139                           ; BSR set to: 0
  4140  0104F0  0012               	return	
  4141  0104F2                     l3610:
  4142                           
  4143                           ; BSR set to: 0
  4144  0104F2  0100               	movlb	0	; () banked
  4145  0104F4  518B               	movf	pow@y& (0+255),w,b
  4146  0104F6  0100               	movlb	0	; () banked
  4147  0104F8  118C               	iorwf	(pow@y+1)& (0+255),w,b
  4148  0104FA  0100               	movlb	0	; () banked
  4149  0104FC  118D               	iorwf	(pow@y+2)& (0+255),w,b
  4150  0104FE  A4D8               	btfss	status,2,c
  4151  010500  D00A               	goto	l3616
  4152                           
  4153                           ; BSR set to: 0
  4154  010502  0E00               	movlw	0
  4155  010504  0100               	movlb	0	; () banked
  4156  010506  6F88               	movwf	?_pow& (0+255),b
  4157  010508  0E80               	movlw	128
  4158  01050A  0100               	movlb	0	; () banked
  4159  01050C  6F89               	movwf	(?_pow+1)& (0+255),b
  4160  01050E  0E3F               	movlw	63
  4161  010510  0100               	movlb	0	; () banked
  4162  010512  6F8A               	movwf	(?_pow+2)& (0+255),b
  4163                           
  4164                           ; BSR set to: 0
  4165  010514  0012               	return	
  4166  010516                     l3616:
  4167                           
  4168                           ; BSR set to: 0
  4169  010516  0100               	movlb	0	; () banked
  4170  010518  AF8A               	btfss	(pow@x+2)& (0+255),7,b
  4171  01051A  D049               	goto	l3628
  4172                           
  4173                           ; BSR set to: 0
  4174  01051C  C08B  F060         	movff	pow@y,___fttol@f1
  4175  010520  C08C  F061         	movff	pow@y+1,___fttol@f1+1
  4176  010524  C08D  F062         	movff	pow@y+2,___fttol@f1+2
  4177  010528  ECDD  F083         	call	___fttol	;wreg free
  4178  01052C  C060  F095         	movff	?___fttol,pow@yi
  4179  010530  C061  F096         	movff	?___fttol+1,pow@yi+1
  4180  010534  C062  F097         	movff	?___fttol+2,pow@yi+2
  4181  010538  C063  F098         	movff	?___fttol+3,pow@yi+3
  4182  01053C  C095  F01A         	movff	pow@yi,___lltoft@c
  4183  010540  C096  F01B         	movff	pow@yi+1,___lltoft@c+1
  4184  010544  C097  F01C         	movff	pow@yi+2,___lltoft@c+2
  4185  010548  C098  F01D         	movff	pow@yi+3,___lltoft@c+3
  4186  01054C  ECDC  F08C         	call	___lltoft	;wreg free
  4187  010550  0100               	movlb	0	; () banked
  4188  010552  518B               	movf	pow@y& (0+255),w,b
  4189  010554  181A               	xorwf	?___lltoft,w,c
  4190  010556  E109               	bnz	u3500
  4191  010558  0100               	movlb	0	; () banked
  4192  01055A  518C               	movf	(pow@y+1)& (0+255),w,b
  4193  01055C  181B               	xorwf	?___lltoft+1,w,c
  4194  01055E  E105               	bnz	u3500
  4195  010560  0100               	movlb	0	; () banked
  4196  010562  518D               	movf	(pow@y+2)& (0+255),w,b
  4197  010564  181C               	xorwf	?___lltoft+2,w,c
  4198  010566  B4D8               	btfsc	status,2,c
  4199  010568  D00F               	goto	l3624
  4200  01056A                     u3500:
  4201                           
  4202                           ; BSR set to: 0
  4203  01056A  0E00               	movlw	0
  4204  01056C  0100               	movlb	0	; () banked
  4205  01056E  6FE1               	movwf	(_errno+1)& (0+255),b
  4206  010570  0E21               	movlw	33
  4207  010572  6FE0               	movwf	_errno& (0+255),b
  4208  010574  0E00               	movlw	0
  4209  010576  0100               	movlb	0	; () banked
  4210  010578  6F88               	movwf	?_pow& (0+255),b
  4211  01057A  0E00               	movlw	0
  4212  01057C  0100               	movlb	0	; () banked
  4213  01057E  6F89               	movwf	(?_pow+1)& (0+255),b
  4214  010580  0E00               	movlw	0
  4215  010582  0100               	movlb	0	; () banked
  4216  010584  6F8A               	movwf	(?_pow+2)& (0+255),b
  4217                           
  4218                           ; BSR set to: 0
  4219  010586  0012               	return	
  4220  010588                     l3624:
  4221                           
  4222                           ; BSR set to: 0
  4223  010588  0100               	movlb	0	; () banked
  4224  01058A  5195               	movf	pow@yi& (0+255),w,b
  4225  01058C  0B01               	andlw	1
  4226  01058E  0100               	movlb	0	; () banked
  4227  010590  6F94               	movwf	pow@sign& (0+255),b
  4228                           
  4229                           ; BSR set to: 0
  4230  010592  C088  F012         	movff	pow@x,___ftneg@f1
  4231  010596  C089  F013         	movff	pow@x+1,___ftneg@f1+1
  4232  01059A  C08A  F014         	movff	pow@x+2,___ftneg@f1+2
  4233  01059E  EC7A  F08E         	call	___ftneg	;wreg free
  4234  0105A2  C012  F088         	movff	?___ftneg,pow@x
  4235  0105A6  C013  F089         	movff	?___ftneg+1,pow@x+1
  4236  0105AA  C014  F08A         	movff	?___ftneg+2,pow@x+2
  4237  0105AE                     l3628:
  4238  0105AE  C088  F076         	movff	pow@x,log@x
  4239  0105B2  C089  F077         	movff	pow@x+1,log@x+1
  4240  0105B6  C08A  F078         	movff	pow@x+2,log@x+2
  4241  0105BA  EC7F  F084         	call	_log	;wreg free
  4242  0105BE  C076  F08E         	movff	?_log,_pow$2429
  4243  0105C2  C077  F08F         	movff	?_log+1,_pow$2429+1
  4244  0105C6  C078  F090         	movff	?_log+2,_pow$2429+2
  4245  0105CA  C08E  F02D         	movff	_pow$2429,___ftmul@f1
  4246  0105CE  C08F  F02E         	movff	_pow$2429+1,___ftmul@f1+1
  4247  0105D2  C090  F02F         	movff	_pow$2429+2,___ftmul@f1+2
  4248  0105D6  C08B  F030         	movff	pow@y,___ftmul@f2
  4249  0105DA  C08C  F031         	movff	pow@y+1,___ftmul@f2+1
  4250  0105DE  C08D  F032         	movff	pow@y+2,___ftmul@f2+2
  4251  0105E2  EC55  F087         	call	___ftmul	;wreg free
  4252  0105E6  C02D  F091         	movff	?___ftmul,_pow$2430
  4253  0105EA  C02E  F092         	movff	?___ftmul+1,_pow$2430+1
  4254  0105EE  C02F  F093         	movff	?___ftmul+2,_pow$2430+2
  4255  0105F2  C091  F07F         	movff	_pow$2430,exp@x
  4256  0105F6  C092  F080         	movff	_pow$2430+1,exp@x+1
  4257  0105FA  C093  F081         	movff	_pow$2430+2,exp@x+2
  4258  0105FE  EC34  F081         	call	_exp	;wreg free
  4259  010602  C07F  F088         	movff	?_exp,pow@x
  4260  010606  C080  F089         	movff	?_exp+1,pow@x+1
  4261  01060A  C081  F08A         	movff	?_exp+2,pow@x+2
  4262  01060E  0100               	movlb	0	; () banked
  4263  010610  5194               	movf	pow@sign& (0+255),w,b
  4264  010612  0100               	movlb	0	; () banked
  4265  010614  B4D8               	btfsc	status,2,c
  4266  010616  D00F               	goto	l883
  4267                           
  4268                           ; BSR set to: 0
  4269  010618  C088  F012         	movff	pow@x,___ftneg@f1
  4270  01061C  C089  F013         	movff	pow@x+1,___ftneg@f1+1
  4271  010620  C08A  F014         	movff	pow@x+2,___ftneg@f1+2
  4272  010624  EC7A  F08E         	call	___ftneg	;wreg free
  4273  010628  C012  F088         	movff	?___ftneg,?_pow
  4274  01062C  C013  F089         	movff	?___ftneg+1,?_pow+1
  4275  010630  C014  F08A         	movff	?___ftneg+2,?_pow+2
  4276  010634  0012               	return	
  4277  010636                     l883:
  4278                           
  4279                           ; BSR set to: 0
  4280  010636  C088  F088         	movff	pow@x,?_pow
  4281  01063A  C089  F089         	movff	pow@x+1,?_pow+1
  4282  01063E  C08A  F08A         	movff	pow@x+2,?_pow+2
  4283  010642  0012               	return		;funcret
  4284  010644                     __end_of_pow:
  4285                           	opt stack 0
  4286                           tblptru	equ	0xFF8
  4287                           tblptrh	equ	0xFF7
  4288                           tblptrl	equ	0xFF6
  4289                           tablat	equ	0xFF5
  4290                           prodh	equ	0xFF4
  4291                           prodl	equ	0xFF3
  4292                           intcon	equ	0xFF2
  4293                           indf0	equ	0xFEF
  4294                           postinc0	equ	0xFEE
  4295                           fsr0h	equ	0xFEA
  4296                           fsr0l	equ	0xFE9
  4297                           wreg	equ	0xFE8
  4298                           indf1	equ	0xFE7
  4299                           postdec1	equ	0xFE5
  4300                           fsr1h	equ	0xFE2
  4301                           fsr1l	equ	0xFE1
  4302                           indf2	equ	0xFDF
  4303                           fsr2h	equ	0xFDA
  4304                           fsr2l	equ	0xFD9
  4305                           status	equ	0xFD8
  4306                           
  4307 ;; *************** function _log *****************
  4308 ;; Defined at:
  4309 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\log.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;  x               3   22[BANK0 ] unsigned char 
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;  exponent        2   25[BANK0 ] int 
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  3   22[BANK0 ] int 
  4316 ;; Registers used:
  4317 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4323 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4324 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4325 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4326 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4327 ;;Total ram usage:        5 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    5
  4330 ;; This function calls:
  4331 ;;		___awtoft
  4332 ;;		___ftadd
  4333 ;;		___ftmul
  4334 ;;		_eval_poly
  4335 ;;		_frexp
  4336 ;; This function is called by:
  4337 ;;		_pow
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text23
  4342  0108FE                     __ptext23:
  4343                           	opt stack 0
  4344  0108FE                     _log:
  4345                           	opt stack 23
  4346                           
  4347                           ;incstack = 0
  4348  0108FE  0100               	movlb	0	; () banked
  4349  010900  AF78               	btfss	(log@x+2)& (0+255),7,b
  4350  010902  D00F               	goto	l3540
  4351                           
  4352                           ; BSR set to: 0
  4353  010904  0E00               	movlw	0
  4354  010906  0100               	movlb	0	; () banked
  4355  010908  6FE1               	movwf	(_errno+1)& (0+255),b
  4356  01090A  0E21               	movlw	33
  4357  01090C  6FE0               	movwf	_errno& (0+255),b
  4358  01090E  0E00               	movlw	0
  4359  010910  0100               	movlb	0	; () banked
  4360  010912  6F76               	movwf	?_log& (0+255),b
  4361  010914  0E00               	movlw	0
  4362  010916  0100               	movlb	0	; () banked
  4363  010918  6F77               	movwf	(?_log+1)& (0+255),b
  4364  01091A  0E00               	movlw	0
  4365  01091C  0100               	movlb	0	; () banked
  4366  01091E  6F78               	movwf	(?_log+2)& (0+255),b
  4367                           
  4368                           ; BSR set to: 0
  4369  010920  0012               	return	
  4370  010922                     l3540:
  4371                           
  4372                           ; BSR set to: 0
  4373  010922  0100               	movlb	0	; () banked
  4374  010924  5176               	movf	log@x& (0+255),w,b
  4375  010926  0100               	movlb	0	; () banked
  4376  010928  1177               	iorwf	(log@x+1)& (0+255),w,b
  4377  01092A  0100               	movlb	0	; () banked
  4378  01092C  1178               	iorwf	(log@x+2)& (0+255),w,b
  4379  01092E  A4D8               	btfss	status,2,c
  4380  010930  D00F               	goto	l3546
  4381                           
  4382                           ; BSR set to: 0
  4383  010932  0E00               	movlw	0
  4384  010934  0100               	movlb	0	; () banked
  4385  010936  6FE1               	movwf	(_errno+1)& (0+255),b
  4386  010938  0E22               	movlw	34
  4387  01093A  6FE0               	movwf	_errno& (0+255),b
  4388  01093C  0E00               	movlw	0
  4389  01093E  0100               	movlb	0	; () banked
  4390  010940  6F76               	movwf	?_log& (0+255),b
  4391  010942  0E00               	movlw	0
  4392  010944  0100               	movlb	0	; () banked
  4393  010946  6F77               	movwf	(?_log+1)& (0+255),b
  4394  010948  0E00               	movlw	0
  4395  01094A  0100               	movlb	0	; () banked
  4396  01094C  6F78               	movwf	(?_log+2)& (0+255),b
  4397                           
  4398                           ; BSR set to: 0
  4399  01094E  0012               	return	
  4400  010950                     l3546:
  4401                           
  4402                           ; BSR set to: 0
  4403  010950  0E00               	movlw	0
  4404  010952  6E30               	movwf	___ftmul@f2,c
  4405  010954  0E00               	movlw	0
  4406  010956  6E31               	movwf	___ftmul@f2+1,c
  4407  010958  0E40               	movlw	64
  4408  01095A  6E32               	movwf	___ftmul@f2+2,c
  4409  01095C  0E79               	movlw	low log@exponent
  4410  01095E  6E15               	movwf	frexp@eptr,c
  4411  010960  0E00               	movlw	high log@exponent
  4412  010962  6E16               	movwf	frexp@eptr+1,c
  4413  010964  C076  F012         	movff	log@x,frexp@value
  4414  010968  C077  F013         	movff	log@x+1,frexp@value+1
  4415  01096C  C078  F014         	movff	log@x+2,frexp@value+2
  4416  010970  EC6B  F08B         	call	_frexp	;wreg free
  4417  010974  C012  F02D         	movff	?_frexp,___ftmul@f1
  4418  010978  C013  F02E         	movff	?_frexp+1,___ftmul@f1+1
  4419  01097C  C014  F02F         	movff	?_frexp+2,___ftmul@f1+2
  4420  010980  EC55  F087         	call	___ftmul	;wreg free
  4421  010984  C02D  F060         	movff	?___ftmul,___ftadd@f1
  4422  010988  C02E  F061         	movff	?___ftmul+1,___ftadd@f1+1
  4423  01098C  C02F  F062         	movff	?___ftmul+2,___ftadd@f1+2
  4424  010990  0E00               	movlw	0
  4425  010992  0100               	movlb	0	; () banked
  4426  010994  6F63               	movwf	___ftadd@f2& (0+255),b
  4427  010996  0E80               	movlw	128
  4428  010998  0100               	movlb	0	; () banked
  4429  01099A  6F64               	movwf	(___ftadd@f2+1)& (0+255),b
  4430  01099C  0EBF               	movlw	191
  4431  01099E  0100               	movlb	0	; () banked
  4432  0109A0  6F65               	movwf	(___ftadd@f2+2)& (0+255),b
  4433  0109A2  EC00  F080         	call	___ftadd	;wreg free
  4434  0109A6  C060  F076         	movff	?___ftadd,log@x
  4435  0109AA  C061  F077         	movff	?___ftadd+1,log@x+1
  4436  0109AE  C062  F078         	movff	?___ftadd+2,log@x+2
  4437  0109B2  0100               	movlb	0	; () banked
  4438  0109B4  0779               	decf	log@exponent& (0+255),f,b
  4439  0109B6  A0D8               	btfss	status,0,c
  4440  0109B8  077A               	decf	(log@exponent+1)& (0+255),f,b
  4441                           
  4442                           ; BSR set to: 0
  4443  0109BA  C076  F06C         	movff	log@x,eval_poly@x
  4444  0109BE  C077  F06D         	movff	log@x+1,eval_poly@x+1
  4445  0109C2  C078  F06E         	movff	log@x+2,eval_poly@x+2
  4446  0109C6  0E8D               	movlw	low log@coeff
  4447  0109C8  0100               	movlb	0	; () banked
  4448  0109CA  6F6F               	movwf	eval_poly@d& (0+255),b
  4449  0109CC  0EFF               	movlw	high log@coeff
  4450  0109CE  0100               	movlb	0	; () banked
  4451  0109D0  6F70               	movwf	(eval_poly@d+1)& (0+255),b
  4452  0109D2  0E00               	movlw	0
  4453  0109D4  0100               	movlb	0	; () banked
  4454  0109D6  6F72               	movwf	(eval_poly@n+1)& (0+255),b
  4455  0109D8  0E08               	movlw	8
  4456  0109DA  6F71               	movwf	eval_poly@n& (0+255),b
  4457  0109DC  EC42  F088         	call	_eval_poly	;wreg free
  4458  0109E0  C06C  F076         	movff	?_eval_poly,log@x
  4459  0109E4  C06D  F077         	movff	?_eval_poly+1,log@x+1
  4460  0109E8  C06E  F078         	movff	?_eval_poly+2,log@x+2
  4461  0109EC  0E72               	movlw	114
  4462  0109EE  6E30               	movwf	___ftmul@f2,c
  4463  0109F0  0E31               	movlw	49
  4464  0109F2  6E31               	movwf	___ftmul@f2+1,c
  4465  0109F4  0E3F               	movlw	63
  4466  0109F6  6E32               	movwf	___ftmul@f2+2,c
  4467  0109F8  C079  F01A         	movff	log@exponent,___awtoft@c
  4468  0109FC  C07A  F01B         	movff	log@exponent+1,___awtoft@c+1
  4469  010A00  ECE9  F08D         	call	___awtoft	;wreg free
  4470  010A04  C01A  F02D         	movff	?___awtoft,___ftmul@f1
  4471  010A08  C01B  F02E         	movff	?___awtoft+1,___ftmul@f1+1
  4472  010A0C  C01C  F02F         	movff	?___awtoft+2,___ftmul@f1+2
  4473  010A10  EC55  F087         	call	___ftmul	;wreg free
  4474  010A14  C02D  F060         	movff	?___ftmul,___ftadd@f1
  4475  010A18  C02E  F061         	movff	?___ftmul+1,___ftadd@f1+1
  4476  010A1C  C02F  F062         	movff	?___ftmul+2,___ftadd@f1+2
  4477  010A20  C076  F063         	movff	log@x,___ftadd@f2
  4478  010A24  C077  F064         	movff	log@x+1,___ftadd@f2+1
  4479  010A28  C078  F065         	movff	log@x+2,___ftadd@f2+2
  4480  010A2C  EC00  F080         	call	___ftadd	;wreg free
  4481  010A30  C060  F076         	movff	?___ftadd,?_log
  4482  010A34  C061  F077         	movff	?___ftadd+1,?_log+1
  4483  010A38  C062  F078         	movff	?___ftadd+2,?_log+2
  4484  010A3C  0012               	return	
  4485  010A3E                     __end_of_log:
  4486                           	opt stack 0
  4487                           tblptru	equ	0xFF8
  4488                           tblptrh	equ	0xFF7
  4489                           tblptrl	equ	0xFF6
  4490                           tablat	equ	0xFF5
  4491                           prodh	equ	0xFF4
  4492                           prodl	equ	0xFF3
  4493                           intcon	equ	0xFF2
  4494                           indf0	equ	0xFEF
  4495                           postinc0	equ	0xFEE
  4496                           fsr0h	equ	0xFEA
  4497                           fsr0l	equ	0xFE9
  4498                           wreg	equ	0xFE8
  4499                           indf1	equ	0xFE7
  4500                           postdec1	equ	0xFE5
  4501                           fsr1h	equ	0xFE2
  4502                           fsr1l	equ	0xFE1
  4503                           indf2	equ	0xFDF
  4504                           fsr2h	equ	0xFDA
  4505                           fsr2l	equ	0xFD9
  4506                           status	equ	0xFD8
  4507                           
  4508 ;; *************** function _exp *****************
  4509 ;; Defined at:
  4510 ;;		line 12 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\exp.c"
  4511 ;; Parameters:    Size  Location     Type
  4512 ;;  x               3   31[BANK0 ] int 
  4513 ;; Auto vars:     Size  Location     Type
  4514 ;;  exponent        2   37[BANK0 ] int 
  4515 ;;  sign            1   39[BANK0 ] unsigned char 
  4516 ;; Return value:  Size  Location     Type
  4517 ;;                  3   31[BANK0 ] unsigned char 
  4518 ;; Registers used:
  4519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4520 ;; Tracked objects:
  4521 ;;		On entry : 0/0
  4522 ;;		On exit  : 0/0
  4523 ;;		Unchanged: 0/0
  4524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4525 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4526 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4527 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4528 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4529 ;;Total ram usage:        9 bytes
  4530 ;; Hardware stack levels used:    1
  4531 ;; Hardware stack levels required when called:    5
  4532 ;; This function calls:
  4533 ;;		___awtoft
  4534 ;;		___ftdiv
  4535 ;;		___ftge
  4536 ;;		___ftmul
  4537 ;;		___ftneg
  4538 ;;		___ftsub
  4539 ;;		___fttol
  4540 ;;		_eval_poly
  4541 ;;		_floor
  4542 ;;		_ldexp
  4543 ;; This function is called by:
  4544 ;;		_pow
  4545 ;; This function uses a non-reentrant model
  4546 ;;
  4547                           
  4548                           	psect	text24
  4549  010268                     __ptext24:
  4550                           	opt stack 0
  4551  010268                     _exp:
  4552                           	opt stack 23
  4553                           
  4554                           ;incstack = 0
  4555  010268  0100               	movlb	0	; () banked
  4556  01026A  517F               	movf	exp@x& (0+255),w,b
  4557  01026C  0100               	movlb	0	; () banked
  4558  01026E  1180               	iorwf	(exp@x+1)& (0+255),w,b
  4559  010270  0100               	movlb	0	; () banked
  4560  010272  1181               	iorwf	(exp@x+2)& (0+255),w,b
  4561  010274  A4D8               	btfss	status,2,c
  4562  010276  D00A               	goto	l3562
  4563                           
  4564                           ; BSR set to: 0
  4565  010278  0E00               	movlw	0
  4566  01027A  0100               	movlb	0	; () banked
  4567  01027C  6F7F               	movwf	?_exp& (0+255),b
  4568  01027E  0E80               	movlw	128
  4569  010280  0100               	movlb	0	; () banked
  4570  010282  6F80               	movwf	(?_exp+1)& (0+255),b
  4571  010284  0E3F               	movlw	63
  4572  010286  0100               	movlb	0	; () banked
  4573  010288  6F81               	movwf	(?_exp+2)& (0+255),b
  4574                           
  4575                           ; BSR set to: 0
  4576  01028A  0012               	return	
  4577  01028C                     l3562:
  4578                           
  4579                           ; BSR set to: 0
  4580  01028C  0E72               	movlw	114
  4581  01028E  0100               	movlb	0	; () banked
  4582  010290  6F60               	movwf	___ftge@ff1& (0+255),b
  4583  010292  0E31               	movlw	49
  4584  010294  0100               	movlb	0	; () banked
  4585  010296  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  4586  010298  0E44               	movlw	68
  4587  01029A  0100               	movlb	0	; () banked
  4588  01029C  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  4589  01029E  C07F  F063         	movff	exp@x,___ftge@ff2
  4590  0102A2  C080  F064         	movff	exp@x+1,___ftge@ff2+1
  4591  0102A6  C081  F065         	movff	exp@x+2,___ftge@ff2+2
  4592  0102AA  EC1B  F089         	call	___ftge	;wreg free
  4593  0102AE  0100               	movlb	0	; () banked
  4594  0102B0  B0D8               	btfsc	status,0,c
  4595  0102B2  D00F               	goto	l3568
  4596                           
  4597                           ; BSR set to: 0
  4598  0102B4  0E00               	movlw	0
  4599  0102B6  0100               	movlb	0	; () banked
  4600  0102B8  6FE1               	movwf	(_errno+1)& (0+255),b
  4601  0102BA  0E22               	movlw	34
  4602  0102BC  6FE0               	movwf	_errno& (0+255),b
  4603  0102BE  0EFF               	movlw	255
  4604  0102C0  0100               	movlb	0	; () banked
  4605  0102C2  6F7F               	movwf	?_exp& (0+255),b
  4606  0102C4  0E7F               	movlw	127
  4607  0102C6  0100               	movlb	0	; () banked
  4608  0102C8  6F80               	movwf	(?_exp+1)& (0+255),b
  4609  0102CA  0E7F               	movlw	127
  4610  0102CC  0100               	movlb	0	; () banked
  4611  0102CE  6F81               	movwf	(?_exp+2)& (0+255),b
  4612                           
  4613                           ; BSR set to: 0
  4614  0102D0  0012               	return	
  4615  0102D2                     l3568:
  4616                           
  4617                           ; BSR set to: 0
  4618  0102D2  C07F  F060         	movff	exp@x,___ftge@ff1
  4619  0102D6  C080  F061         	movff	exp@x+1,___ftge@ff1+1
  4620  0102DA  C081  F062         	movff	exp@x+2,___ftge@ff1+2
  4621  0102DE  0E49               	movlw	73
  4622  0102E0  0100               	movlb	0	; () banked
  4623  0102E2  6F63               	movwf	___ftge@ff2& (0+255),b
  4624  0102E4  0E3A               	movlw	58
  4625  0102E6  0100               	movlb	0	; () banked
  4626  0102E8  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  4627  0102EA  0EC4               	movlw	196
  4628  0102EC  0100               	movlb	0	; () banked
  4629  0102EE  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  4630  0102F0  EC1B  F089         	call	___ftge	;wreg free
  4631  0102F4  0100               	movlb	0	; () banked
  4632  0102F6  B0D8               	btfsc	status,0,c
  4633  0102F8  D00F               	goto	l3574
  4634                           
  4635                           ; BSR set to: 0
  4636  0102FA  0E00               	movlw	0
  4637  0102FC  0100               	movlb	0	; () banked
  4638  0102FE  6FE1               	movwf	(_errno+1)& (0+255),b
  4639  010300  0E22               	movlw	34
  4640  010302  6FE0               	movwf	_errno& (0+255),b
  4641  010304  0E00               	movlw	0
  4642  010306  0100               	movlb	0	; () banked
  4643  010308  6F7F               	movwf	?_exp& (0+255),b
  4644  01030A  0E00               	movlw	0
  4645  01030C  0100               	movlb	0	; () banked
  4646  01030E  6F80               	movwf	(?_exp+1)& (0+255),b
  4647  010310  0E00               	movlw	0
  4648  010312  0100               	movlb	0	; () banked
  4649  010314  6F81               	movwf	(?_exp+2)& (0+255),b
  4650                           
  4651                           ; BSR set to: 0
  4652  010316  0012               	return	
  4653  010318                     l3574:
  4654                           
  4655                           ; BSR set to: 0
  4656  010318  0100               	movlb	0	; () banked
  4657  01031A  AF81               	btfss	(exp@x+2)& (0+255),7,b
  4658  01031C  D002               	goto	u3410
  4659  01031E  0E01               	movlw	1
  4660  010320  D001               	goto	u3420
  4661  010322                     u3410:
  4662  010322  0E00               	movlw	0
  4663  010324                     u3420:
  4664  010324  0100               	movlb	0	; () banked
  4665  010326  6F87               	movwf	exp@sign& (0+255),b
  4666                           
  4667                           ; BSR set to: 0
  4668  010328  0100               	movlb	0	; () banked
  4669  01032A  5187               	movf	exp@sign& (0+255),w,b
  4670  01032C  0100               	movlb	0	; () banked
  4671  01032E  B4D8               	btfsc	status,2,c
  4672  010330  D00E               	goto	l1041
  4673                           
  4674                           ; BSR set to: 0
  4675  010332  C07F  F012         	movff	exp@x,___ftneg@f1
  4676  010336  C080  F013         	movff	exp@x+1,___ftneg@f1+1
  4677  01033A  C081  F014         	movff	exp@x+2,___ftneg@f1+2
  4678  01033E  EC7A  F08E         	call	___ftneg	;wreg free
  4679  010342  C012  F07F         	movff	?___ftneg,exp@x
  4680  010346  C013  F080         	movff	?___ftneg+1,exp@x+1
  4681  01034A  C014  F081         	movff	?___ftneg+2,exp@x+2
  4682  01034E                     l1041:
  4683  01034E  C07F  F02D         	movff	exp@x,___ftmul@f1
  4684  010352  C080  F02E         	movff	exp@x+1,___ftmul@f1+1
  4685  010356  C081  F02F         	movff	exp@x+2,___ftmul@f1+2
  4686  01035A  0EAA               	movlw	170
  4687  01035C  6E30               	movwf	___ftmul@f2,c
  4688  01035E  0EB8               	movlw	184
  4689  010360  6E31               	movwf	___ftmul@f2+1,c
  4690  010362  0E3F               	movlw	63
  4691  010364  6E32               	movwf	___ftmul@f2+2,c
  4692  010366  EC55  F087         	call	___ftmul	;wreg free
  4693  01036A  C02D  F07F         	movff	?___ftmul,exp@x
  4694  01036E  C02E  F080         	movff	?___ftmul+1,exp@x+1
  4695  010372  C02F  F081         	movff	?___ftmul+2,exp@x+2
  4696  010376  C07F  F077         	movff	exp@x,floor@x
  4697  01037A  C080  F078         	movff	exp@x+1,floor@x+1
  4698  01037E  C081  F079         	movff	exp@x+2,floor@x+2
  4699  010382  ECD8  F086         	call	_floor	;wreg free
  4700  010386  C077  F082         	movff	?_floor,_exp$2431
  4701  01038A  C078  F083         	movff	?_floor+1,_exp$2431+1
  4702  01038E  C079  F084         	movff	?_floor+2,_exp$2431+2
  4703  010392  C082  F060         	movff	_exp$2431,___fttol@f1
  4704  010396  C083  F061         	movff	_exp$2431+1,___fttol@f1+1
  4705  01039A  C084  F062         	movff	_exp$2431+2,___fttol@f1+2
  4706  01039E  ECDD  F083         	call	___fttol	;wreg free
  4707  0103A2  C060  F085         	movff	?___fttol,exp@exponent
  4708  0103A6  C061  F086         	movff	?___fttol+1,exp@exponent+1
  4709  0103AA  C07F  F06C         	movff	exp@x,___ftsub@f1
  4710  0103AE  C080  F06D         	movff	exp@x+1,___ftsub@f1+1
  4711  0103B2  C081  F06E         	movff	exp@x+2,___ftsub@f1+2
  4712  0103B6  C085  F01A         	movff	exp@exponent,___awtoft@c
  4713  0103BA  C086  F01B         	movff	exp@exponent+1,___awtoft@c+1
  4714  0103BE  ECE9  F08D         	call	___awtoft	;wreg free
  4715  0103C2  C01A  F06F         	movff	?___awtoft,___ftsub@f2
  4716  0103C6  C01B  F070         	movff	?___awtoft+1,___ftsub@f2+1
  4717  0103CA  C01C  F071         	movff	?___awtoft+2,___ftsub@f2+2
  4718  0103CE  EC85  F08D         	call	___ftsub	;wreg free
  4719  0103D2  C06C  F07F         	movff	?___ftsub,exp@x
  4720  0103D6  C06D  F080         	movff	?___ftsub+1,exp@x+1
  4721  0103DA  C06E  F081         	movff	?___ftsub+2,exp@x+2
  4722  0103DE  C07F  F06C         	movff	exp@x,eval_poly@x
  4723  0103E2  C080  F06D         	movff	exp@x+1,eval_poly@x+1
  4724  0103E6  C081  F06E         	movff	exp@x+2,eval_poly@x+2
  4725  0103EA  0E6F               	movlw	low exp@coeff
  4726  0103EC  0100               	movlb	0	; () banked
  4727  0103EE  6F6F               	movwf	eval_poly@d& (0+255),b
  4728  0103F0  0EFF               	movlw	high exp@coeff
  4729  0103F2  0100               	movlb	0	; () banked
  4730  0103F4  6F70               	movwf	(eval_poly@d+1)& (0+255),b
  4731  0103F6  0E00               	movlw	0
  4732  0103F8  0100               	movlb	0	; () banked
  4733  0103FA  6F72               	movwf	(eval_poly@n+1)& (0+255),b
  4734  0103FC  0E09               	movlw	9
  4735  0103FE  6F71               	movwf	eval_poly@n& (0+255),b
  4736  010400  EC42  F088         	call	_eval_poly	;wreg free
  4737  010404  C06C  F076         	movff	?_eval_poly,ldexp@value
  4738  010408  C06D  F077         	movff	?_eval_poly+1,ldexp@value+1
  4739  01040C  C06E  F078         	movff	?_eval_poly+2,ldexp@value+2
  4740  010410  C085  F079         	movff	exp@exponent,ldexp@newexp
  4741  010414  C086  F07A         	movff	exp@exponent+1,ldexp@newexp+1
  4742  010418  EC4C  F086         	call	_ldexp	;wreg free
  4743  01041C  C076  F07F         	movff	?_ldexp,exp@x
  4744  010420  C077  F080         	movff	?_ldexp+1,exp@x+1
  4745  010424  C078  F081         	movff	?_ldexp+2,exp@x+2
  4746  010428  0100               	movlb	0	; () banked
  4747  01042A  5187               	movf	exp@sign& (0+255),w,b
  4748  01042C  0100               	movlb	0	; () banked
  4749  01042E  B4D8               	btfsc	status,2,c
  4750  010430  D02B               	goto	l1042
  4751                           
  4752                           ; BSR set to: 0
  4753  010432  0100               	movlb	0	; () banked
  4754  010434  297F               	incf	exp@x& (0+255),w,b
  4755  010436  E113               	bnz	l3596
  4756  010438  0E7F               	movlw	127
  4757  01043A  0100               	movlb	0	; () banked
  4758  01043C  1980               	xorwf	(exp@x+1)& (0+255),w,b
  4759  01043E  E10F               	bnz	l3596
  4760  010440  0E7F               	movlw	127
  4761  010442  0100               	movlb	0	; () banked
  4762  010444  1981               	xorwf	(exp@x+2)& (0+255),w,b
  4763  010446  A4D8               	btfss	status,2,c
  4764  010448  D00A               	goto	l3596
  4765                           
  4766                           ; BSR set to: 0
  4767  01044A  0E00               	movlw	0
  4768  01044C  0100               	movlb	0	; () banked
  4769  01044E  6F7F               	movwf	?_exp& (0+255),b
  4770  010450  0E00               	movlw	0
  4771  010452  0100               	movlb	0	; () banked
  4772  010454  6F80               	movwf	(?_exp+1)& (0+255),b
  4773  010456  0E00               	movlw	0
  4774  010458  0100               	movlb	0	; () banked
  4775  01045A  6F81               	movwf	(?_exp+2)& (0+255),b
  4776                           
  4777                           ; BSR set to: 0
  4778  01045C  0012               	return	
  4779  01045E                     l3596:
  4780                           
  4781                           ; BSR set to: 0
  4782  01045E  0E00               	movlw	0
  4783  010460  6E1E               	movwf	___ftdiv@f1,c
  4784  010462  0E80               	movlw	128
  4785  010464  6E1F               	movwf	___ftdiv@f1+1,c
  4786  010466  0E3F               	movlw	63
  4787  010468  6E20               	movwf	___ftdiv@f1+2,c
  4788  01046A  C07F  F021         	movff	exp@x,___ftdiv@f2
  4789  01046E  C080  F022         	movff	exp@x+1,___ftdiv@f2+1
  4790  010472  C081  F023         	movff	exp@x+2,___ftdiv@f2+2
  4791  010476  ECCF  F087         	call	___ftdiv	;wreg free
  4792  01047A  C01E  F07F         	movff	?___ftdiv,?_exp
  4793  01047E  C01F  F080         	movff	?___ftdiv+1,?_exp+1
  4794  010482  C020  F081         	movff	?___ftdiv+2,?_exp+2
  4795  010486  0012               	return	
  4796  010488                     l1042:
  4797                           
  4798                           ; BSR set to: 0
  4799  010488  C07F  F07F         	movff	exp@x,?_exp
  4800  01048C  C080  F080         	movff	exp@x+1,?_exp+1
  4801  010490  C081  F081         	movff	exp@x+2,?_exp+2
  4802  010494  0012               	return		;funcret
  4803  010496                     __end_of_exp:
  4804                           	opt stack 0
  4805                           tblptru	equ	0xFF8
  4806                           tblptrh	equ	0xFF7
  4807                           tblptrl	equ	0xFF6
  4808                           tablat	equ	0xFF5
  4809                           prodh	equ	0xFF4
  4810                           prodl	equ	0xFF3
  4811                           intcon	equ	0xFF2
  4812                           indf0	equ	0xFEF
  4813                           postinc0	equ	0xFEE
  4814                           fsr0h	equ	0xFEA
  4815                           fsr0l	equ	0xFE9
  4816                           wreg	equ	0xFE8
  4817                           indf1	equ	0xFE7
  4818                           postdec1	equ	0xFE5
  4819                           fsr1h	equ	0xFE2
  4820                           fsr1l	equ	0xFE1
  4821                           indf2	equ	0xFDF
  4822                           fsr2h	equ	0xFDA
  4823                           fsr2l	equ	0xFD9
  4824                           status	equ	0xFD8
  4825                           
  4826 ;; *************** function _ldexp *****************
  4827 ;; Defined at:
  4828 ;;		line 277 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\frexp.c"
  4829 ;; Parameters:    Size  Location     Type
  4830 ;;  value           3   22[BANK0 ] unsigned char 
  4831 ;;  newexp          2   25[BANK0 ] int 
  4832 ;; Auto vars:     Size  Location     Type
  4833 ;;		None
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  3   22[BANK0 ] int 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  4843 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4844 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4845 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4846 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  4847 ;;Total ram usage:        7 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; Hardware stack levels required when called:    2
  4850 ;; This function calls:
  4851 ;;		Nothing
  4852 ;; This function is called by:
  4853 ;;		_exp
  4854 ;; This function uses a non-reentrant model
  4855 ;;
  4856                           
  4857                           	psect	text25
  4858  010C98                     __ptext25:
  4859                           	opt stack 0
  4860  010C98                     _ldexp:
  4861                           	opt stack 25
  4862                           
  4863                           ;incstack = 0
  4864  010C98  0100               	movlb	0	; () banked
  4865  010C9A  5176               	movf	ldexp@value& (0+255),w,b
  4866  010C9C  0100               	movlb	0	; () banked
  4867  010C9E  1177               	iorwf	(ldexp@value+1)& (0+255),w,b
  4868  010CA0  0100               	movlb	0	; () banked
  4869  010CA2  1178               	iorwf	(ldexp@value+2)& (0+255),w,b
  4870  010CA4  A4D8               	btfss	status,2,c
  4871  010CA6  D00A               	goto	l2536
  4872                           
  4873                           ; BSR set to: 0
  4874  010CA8  0E00               	movlw	0
  4875  010CAA  0100               	movlb	0	; () banked
  4876  010CAC  6F76               	movwf	?_ldexp& (0+255),b
  4877  010CAE  0E00               	movlw	0
  4878  010CB0  0100               	movlb	0	; () banked
  4879  010CB2  6F77               	movwf	(?_ldexp+1)& (0+255),b
  4880  010CB4  0E00               	movlw	0
  4881  010CB6  0100               	movlb	0	; () banked
  4882  010CB8  6F78               	movwf	(?_ldexp+2)& (0+255),b
  4883                           
  4884                           ; BSR set to: 0
  4885  010CBA  0012               	return	
  4886  010CBC                     l2536:
  4887                           
  4888                           ; BSR set to: 0
  4889  010CBC  0100               	movlb	0	; () banked
  4890  010CBE  5178               	movf	(ldexp@value+2)& (0+255),w,b
  4891  010CC0  0B7F               	andlw	127
  4892  010CC2  0100               	movlb	0	; () banked
  4893  010CC4  6F7B               	movwf	??_ldexp& (0+255),b
  4894  010CC6  6B7C               	clrf	(??_ldexp+1)& (0+255),b
  4895  010CC8  90D8               	bcf	status,0,c
  4896  010CCA  0100               	movlb	0	; () banked
  4897  010CCC  377B               	rlcf	??_ldexp& (0+255),f,b
  4898  010CCE  377C               	rlcf	(??_ldexp+1)& (0+255),f,b
  4899  010CD0  0100               	movlb	0	; () banked
  4900  010CD2  517B               	movf	??_ldexp& (0+255),w,b
  4901  010CD4  0100               	movlb	0	; () banked
  4902  010CD6  2779               	addwf	ldexp@newexp& (0+255),f,b
  4903  010CD8  0100               	movlb	0	; () banked
  4904  010CDA  517C               	movf	(??_ldexp+1)& (0+255),w,b
  4905  010CDC  0100               	movlb	0	; () banked
  4906  010CDE  237A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  4907  010CE0  0100               	movlb	0	; () banked
  4908  010CE2  AF77               	btfss	(ldexp@value+1)& (0+255),7,b
  4909  010CE4  D004               	goto	u2020
  4910  010CE6  0100               	movlb	0	; () banked
  4911  010CE8  6B7B               	clrf	??_ldexp& (0+255),b
  4912  010CEA  2B7B               	incf	??_ldexp& (0+255),f,b
  4913  010CEC  D002               	goto	u2028
  4914  010CEE                     u2020:
  4915  010CEE  0100               	movlb	0	; () banked
  4916  010CF0  6B7B               	clrf	??_ldexp& (0+255),b
  4917  010CF2                     u2028:
  4918  010CF2  0100               	movlb	0	; () banked
  4919  010CF4  517B               	movf	??_ldexp& (0+255),w,b
  4920  010CF6  0100               	movlb	0	; () banked
  4921  010CF8  2779               	addwf	ldexp@newexp& (0+255),f,b
  4922  010CFA  0E00               	movlw	0
  4923  010CFC  237A               	addwfc	(ldexp@newexp+1)& (0+255),f,b
  4924  010CFE  0100               	movlb	0	; () banked
  4925  010D00  AF7A               	btfss	(ldexp@newexp+1)& (0+255),7,b
  4926  010D02  D00F               	goto	l2544
  4927                           
  4928                           ; BSR set to: 0
  4929  010D04  0E00               	movlw	0
  4930  010D06  0100               	movlb	0	; () banked
  4931  010D08  6FE1               	movwf	(_errno+1)& (0+255),b
  4932  010D0A  0E22               	movlw	34
  4933  010D0C  6FE0               	movwf	_errno& (0+255),b
  4934  010D0E  0E00               	movlw	0
  4935  010D10  0100               	movlb	0	; () banked
  4936  010D12  6F76               	movwf	?_ldexp& (0+255),b
  4937  010D14  0E00               	movlw	0
  4938  010D16  0100               	movlb	0	; () banked
  4939  010D18  6F77               	movwf	(?_ldexp+1)& (0+255),b
  4940  010D1A  0E00               	movlw	0
  4941  010D1C                     L3:
  4942  010D1C  0100               	movlb	0	; () banked
  4943  010D1E  6F78               	movwf	(?_ldexp+2)& (0+255),b
  4944                           
  4945                           ; BSR set to: 0
  4946  010D20  0012               	return	
  4947  010D22                     l2544:
  4948                           
  4949                           ; BSR set to: 0
  4950  010D22  0100               	movlb	0	; () banked
  4951  010D24  BF7A               	btfsc	(ldexp@newexp+1)& (0+255),7,b
  4952  010D26  D01C               	goto	l2560
  4953  010D28  0100               	movlb	0	; () banked
  4954  010D2A  057A               	decf	(ldexp@newexp+1)& (0+255),w,b
  4955  010D2C  A0D8               	btfss	status,0,c
  4956  010D2E  D018               	goto	l2560
  4957                           
  4958                           ; BSR set to: 0
  4959  010D30  0E00               	movlw	0
  4960  010D32  0100               	movlb	0	; () banked
  4961  010D34  6FE1               	movwf	(_errno+1)& (0+255),b
  4962  010D36  0E22               	movlw	34
  4963  010D38  6FE0               	movwf	_errno& (0+255),b
  4964                           
  4965                           ; BSR set to: 0
  4966  010D3A  0100               	movlb	0	; () banked
  4967  010D3C  AF78               	btfss	(ldexp@value+2)& (0+255),7,b
  4968  010D3E  D008               	goto	l2556
  4969                           
  4970                           ; BSR set to: 0
  4971  010D40  0EFF               	movlw	255
  4972  010D42  0100               	movlb	0	; () banked
  4973  010D44  6F76               	movwf	?_ldexp& (0+255),b
  4974  010D46  0E7F               	movlw	127
  4975  010D48  0100               	movlb	0	; () banked
  4976  010D4A  6F77               	movwf	(?_ldexp+1)& (0+255),b
  4977  010D4C  0EFF               	movlw	255
  4978  010D4E  D7E6               	goto	L3
  4979  010D50                     l2556:
  4980                           
  4981                           ; BSR set to: 0
  4982  010D50  0EFF               	movlw	255
  4983  010D52  0100               	movlb	0	; () banked
  4984  010D54  6F76               	movwf	?_ldexp& (0+255),b
  4985  010D56  0E7F               	movlw	127
  4986  010D58  0100               	movlb	0	; () banked
  4987  010D5A  6F77               	movwf	(?_ldexp+1)& (0+255),b
  4988  010D5C  0E7F               	movlw	127
  4989  010D5E  D7DE               	goto	L3
  4990  010D60                     l2560:
  4991                           
  4992                           ; BSR set to: 0
  4993  010D60  0100               	movlb	0	; () banked
  4994  010D62  357A               	rlcf	(ldexp@newexp+1)& (0+255),w,b
  4995  010D64  317A               	rrcf	(ldexp@newexp+1)& (0+255),w,b
  4996  010D66  0100               	movlb	0	; () banked
  4997  010D68  6F7C               	movwf	(??_ldexp+1)& (0+255),b
  4998  010D6A  0100               	movlb	0	; () banked
  4999  010D6C  3179               	rrcf	ldexp@newexp& (0+255),w,b
  5000  010D6E  0100               	movlb	0	; () banked
  5001  010D70  6F7B               	movwf	??_ldexp& (0+255),b
  5002  010D72  0100               	movlb	0	; () banked
  5003  010D74  5178               	movf	(ldexp@value+2)& (0+255),w,b
  5004  010D76  0100               	movlb	0	; () banked
  5005  010D78  197B               	xorwf	??_ldexp& (0+255),w,b
  5006  010D7A  0B80               	andlw	-128
  5007  010D7C  197B               	xorwf	??_ldexp& (0+255),w,b
  5008  010D7E  0100               	movlb	0	; () banked
  5009  010D80  6F78               	movwf	(ldexp@value+2)& (0+255),b
  5010  010D82  C079  F07B         	movff	ldexp@newexp,??_ldexp
  5011  010D86  0E01               	movlw	1
  5012  010D88  0100               	movlb	0	; () banked
  5013  010D8A  177B               	andwf	??_ldexp& (0+255),f,b
  5014  010D8C  0100               	movlb	0	; () banked
  5015  010D8E  337B               	rrcf	??_ldexp& (0+255),f,b
  5016  010D90  337B               	rrcf	??_ldexp& (0+255),f,b
  5017  010D92  0100               	movlb	0	; () banked
  5018  010D94  5177               	movf	(ldexp@value+1)& (0+255),w,b
  5019  010D96  0100               	movlb	0	; () banked
  5020  010D98  197B               	xorwf	??_ldexp& (0+255),w,b
  5021  010D9A  0B7F               	andlw	-129
  5022  010D9C  197B               	xorwf	??_ldexp& (0+255),w,b
  5023  010D9E  0100               	movlb	0	; () banked
  5024  010DA0  6F77               	movwf	(ldexp@value+1)& (0+255),b
  5025                           
  5026                           ; BSR set to: 0
  5027                           
  5028                           ; BSR set to: 0
  5029                           
  5030                           ; BSR set to: 0
  5031  010DA2  C076  F076         	movff	ldexp@value,?_ldexp
  5032  010DA6  C077  F077         	movff	ldexp@value+1,?_ldexp+1
  5033  010DAA  C078  F078         	movff	ldexp@value+2,?_ldexp+2
  5034  010DAE  0012               	return	
  5035  010DB0                     __end_of_ldexp:
  5036                           	opt stack 0
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           prodh	equ	0xFF4
  5042                           prodl	equ	0xFF3
  5043                           intcon	equ	0xFF2
  5044                           indf0	equ	0xFEF
  5045                           postinc0	equ	0xFEE
  5046                           fsr0h	equ	0xFEA
  5047                           fsr0l	equ	0xFE9
  5048                           wreg	equ	0xFE8
  5049                           indf1	equ	0xFE7
  5050                           postdec1	equ	0xFE5
  5051                           fsr1h	equ	0xFE2
  5052                           fsr1l	equ	0xFE1
  5053                           indf2	equ	0xFDF
  5054                           fsr2h	equ	0xFDA
  5055                           fsr2l	equ	0xFD9
  5056                           status	equ	0xFD8
  5057                           
  5058 ;; *************** function _floor *****************
  5059 ;; Defined at:
  5060 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\floor.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;  x               3   23[BANK0 ] int 
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;  i               3   26[BANK0 ] int 
  5065 ;;  expon           2   29[BANK0 ] int 
  5066 ;; Return value:  Size  Location     Type
  5067 ;;                  3   23[BANK0 ] int 
  5068 ;; Registers used:
  5069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  5070 ;; Tracked objects:
  5071 ;;		On entry : 0/0
  5072 ;;		On exit  : 0/0
  5073 ;;		Unchanged: 0/0
  5074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5075 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5076 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5078 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5079 ;;Total ram usage:        8 bytes
  5080 ;; Hardware stack levels used:    1
  5081 ;; Hardware stack levels required when called:    4
  5082 ;; This function calls:
  5083 ;;		___altoft
  5084 ;;		___ftadd
  5085 ;;		___ftge
  5086 ;;		___fttol
  5087 ;;		_frexp
  5088 ;; This function is called by:
  5089 ;;		_exp
  5090 ;; This function uses a non-reentrant model
  5091 ;;
  5092                           
  5093                           	psect	text26
  5094  010DB0                     __ptext26:
  5095                           	opt stack 0
  5096  010DB0                     _floor:
  5097                           	opt stack 23
  5098                           
  5099                           ; BSR set to: 0
  5100                           ;incstack = 0
  5101  010DB0  C077  F012         	movff	floor@x,frexp@value
  5102  010DB4  C078  F013         	movff	floor@x+1,frexp@value+1
  5103  010DB8  C079  F014         	movff	floor@x+2,frexp@value+2
  5104  010DBC  0E7D               	movlw	low floor@expon
  5105  010DBE  6E15               	movwf	frexp@eptr,c
  5106  010DC0  0E00               	movlw	high floor@expon
  5107  010DC2  6E16               	movwf	frexp@eptr+1,c
  5108  010DC4  EC6B  F08B         	call	_frexp	;wreg free
  5109  010DC8  0100               	movlb	0	; () banked
  5110  010DCA  AF7E               	btfss	(floor@expon+1)& (0+255),7,b
  5111  010DCC  D017               	goto	l3508
  5112                           
  5113                           ; BSR set to: 0
  5114  010DCE  0100               	movlb	0	; () banked
  5115  010DD0  AF79               	btfss	(floor@x+2)& (0+255),7,b
  5116  010DD2  D00A               	goto	l3504
  5117                           
  5118                           ; BSR set to: 0
  5119  010DD4  0E00               	movlw	0
  5120  010DD6  0100               	movlb	0	; () banked
  5121  010DD8  6F77               	movwf	?_floor& (0+255),b
  5122  010DDA  0E80               	movlw	128
  5123  010DDC  0100               	movlb	0	; () banked
  5124  010DDE  6F78               	movwf	(?_floor+1)& (0+255),b
  5125  010DE0  0EBF               	movlw	191
  5126  010DE2  0100               	movlb	0	; () banked
  5127  010DE4  6F79               	movwf	(?_floor+2)& (0+255),b
  5128                           
  5129                           ; BSR set to: 0
  5130  010DE6  0012               	return	
  5131  010DE8                     l3504:
  5132                           
  5133                           ; BSR set to: 0
  5134  010DE8  0E00               	movlw	0
  5135  010DEA  0100               	movlb	0	; () banked
  5136  010DEC  6F77               	movwf	?_floor& (0+255),b
  5137  010DEE  0E00               	movlw	0
  5138  010DF0  0100               	movlb	0	; () banked
  5139  010DF2  6F78               	movwf	(?_floor+1)& (0+255),b
  5140  010DF4  0E00               	movlw	0
  5141  010DF6  0100               	movlb	0	; () banked
  5142  010DF8  6F79               	movwf	(?_floor+2)& (0+255),b
  5143                           
  5144                           ; BSR set to: 0
  5145  010DFA  0012               	return	
  5146  010DFC                     l3508:
  5147                           
  5148                           ; BSR set to: 0
  5149  010DFC  0100               	movlb	0	; () banked
  5150  010DFE  517E               	movf	(floor@expon+1)& (0+255),w,b
  5151  010E00  E105               	bnz	u3320
  5152  010E02  0E15               	movlw	21
  5153  010E04  0100               	movlb	0	; () banked
  5154  010E06  5D7D               	subwf	floor@expon& (0+255),w,b
  5155  010E08  A0D8               	btfss	status,0,c
  5156  010E0A  D007               	goto	l3512
  5157  010E0C                     u3320:
  5158                           
  5159                           ; BSR set to: 0
  5160  010E0C  C077  F077         	movff	floor@x,?_floor
  5161  010E10  C078  F078         	movff	floor@x+1,?_floor+1
  5162  010E14  C079  F079         	movff	floor@x+2,?_floor+2
  5163  010E18  0012               	return	
  5164  010E1A                     l3512:
  5165                           
  5166                           ; BSR set to: 0
  5167  010E1A  C077  F060         	movff	floor@x,___fttol@f1
  5168  010E1E  C078  F061         	movff	floor@x+1,___fttol@f1+1
  5169  010E22  C079  F062         	movff	floor@x+2,___fttol@f1+2
  5170  010E26  ECDD  F083         	call	___fttol	;wreg free
  5171  010E2A  C060  F06F         	movff	?___fttol,___altoft@c
  5172  010E2E  C061  F070         	movff	?___fttol+1,___altoft@c+1
  5173  010E32  C062  F071         	movff	?___fttol+2,___altoft@c+2
  5174  010E36  C063  F072         	movff	?___fttol+3,___altoft@c+3
  5175  010E3A  EC20  F08B         	call	___altoft	;wreg free
  5176  010E3E  C06F  F07A         	movff	?___altoft,floor@i
  5177  010E42  C070  F07B         	movff	?___altoft+1,floor@i+1
  5178  010E46  C071  F07C         	movff	?___altoft+2,floor@i+2
  5179  010E4A  C077  F060         	movff	floor@x,___ftge@ff1
  5180  010E4E  C078  F061         	movff	floor@x+1,___ftge@ff1+1
  5181  010E52  C079  F062         	movff	floor@x+2,___ftge@ff1+2
  5182  010E56  C07A  F063         	movff	floor@i,___ftge@ff2
  5183  010E5A  C07B  F064         	movff	floor@i+1,___ftge@ff2+1
  5184  010E5E  C07C  F065         	movff	floor@i+2,___ftge@ff2+2
  5185  010E62  EC1B  F089         	call	___ftge	;wreg free
  5186  010E66  0100               	movlb	0	; () banked
  5187  010E68  B0D8               	btfsc	status,0,c
  5188  010E6A  D018               	goto	l1052
  5189                           
  5190                           ; BSR set to: 0
  5191  010E6C  C07A  F060         	movff	floor@i,___ftadd@f1
  5192  010E70  C07B  F061         	movff	floor@i+1,___ftadd@f1+1
  5193  010E74  C07C  F062         	movff	floor@i+2,___ftadd@f1+2
  5194  010E78  0E00               	movlw	0
  5195  010E7A  0100               	movlb	0	; () banked
  5196  010E7C  6F63               	movwf	___ftadd@f2& (0+255),b
  5197  010E7E  0E80               	movlw	128
  5198  010E80  0100               	movlb	0	; () banked
  5199  010E82  6F64               	movwf	(___ftadd@f2+1)& (0+255),b
  5200  010E84  0EBF               	movlw	191
  5201  010E86  0100               	movlb	0	; () banked
  5202  010E88  6F65               	movwf	(___ftadd@f2+2)& (0+255),b
  5203  010E8A  EC00  F080         	call	___ftadd	;wreg free
  5204  010E8E  C060  F077         	movff	?___ftadd,?_floor
  5205  010E92  C061  F078         	movff	?___ftadd+1,?_floor+1
  5206  010E96  C062  F079         	movff	?___ftadd+2,?_floor+2
  5207  010E9A  0012               	return	
  5208  010E9C                     l1052:
  5209                           
  5210                           ; BSR set to: 0
  5211  010E9C  C07A  F077         	movff	floor@i,?_floor
  5212  010EA0  C07B  F078         	movff	floor@i+1,?_floor+1
  5213  010EA4  C07C  F079         	movff	floor@i+2,?_floor+2
  5214  010EA8  0012               	return		;funcret
  5215  010EAA                     __end_of_floor:
  5216                           	opt stack 0
  5217                           tblptru	equ	0xFF8
  5218                           tblptrh	equ	0xFF7
  5219                           tblptrl	equ	0xFF6
  5220                           tablat	equ	0xFF5
  5221                           prodh	equ	0xFF4
  5222                           prodl	equ	0xFF3
  5223                           intcon	equ	0xFF2
  5224                           indf0	equ	0xFEF
  5225                           postinc0	equ	0xFEE
  5226                           fsr0h	equ	0xFEA
  5227                           fsr0l	equ	0xFE9
  5228                           wreg	equ	0xFE8
  5229                           indf1	equ	0xFE7
  5230                           postdec1	equ	0xFE5
  5231                           fsr1h	equ	0xFE2
  5232                           fsr1l	equ	0xFE1
  5233                           indf2	equ	0xFDF
  5234                           fsr2h	equ	0xFDA
  5235                           fsr2l	equ	0xFD9
  5236                           status	equ	0xFD8
  5237                           
  5238 ;; *************** function _frexp *****************
  5239 ;; Defined at:
  5240 ;;		line 254 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\frexp.c"
  5241 ;; Parameters:    Size  Location     Type
  5242 ;;  value           3   17[COMRAM] int 
  5243 ;;  eptr            2   20[COMRAM] PTR int 
  5244 ;;		 -> log@exponent(2), floor@expon(2), 
  5245 ;; Auto vars:     Size  Location     Type
  5246 ;;		None
  5247 ;; Return value:  Size  Location     Type
  5248 ;;                  3   17[COMRAM] PTR int 
  5249 ;; Registers used:
  5250 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5251 ;; Tracked objects:
  5252 ;;		On entry : 0/0
  5253 ;;		On exit  : 0/0
  5254 ;;		Unchanged: 0/0
  5255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5256 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5258 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5259 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5260 ;;Total ram usage:        7 bytes
  5261 ;; Hardware stack levels used:    1
  5262 ;; Hardware stack levels required when called:    2
  5263 ;; This function calls:
  5264 ;;		Nothing
  5265 ;; This function is called by:
  5266 ;;		_floor
  5267 ;;		_log
  5268 ;; This function uses a non-reentrant model
  5269 ;;
  5270                           
  5271                           	psect	text27
  5272  0116D6                     __ptext27:
  5273                           	opt stack 0
  5274  0116D6                     _frexp:
  5275                           	opt stack 25
  5276                           
  5277                           ;incstack = 0
  5278  0116D6  5012               	movf	frexp@value,w,c
  5279  0116D8  1013               	iorwf	frexp@value+1,w,c
  5280  0116DA  1014               	iorwf	frexp@value+2,w,c
  5281  0116DC  A4D8               	btfss	status,2,c
  5282  0116DE  D00F               	goto	l2418
  5283  0116E0  C015  FFD9         	movff	frexp@eptr,fsr2l
  5284  0116E4  C016  FFDA         	movff	frexp@eptr+1,fsr2h
  5285  0116E8  0E00               	movlw	0
  5286  0116EA  6EDE               	movwf	postinc2,c
  5287  0116EC  0E00               	movlw	0
  5288  0116EE  6EDD               	movwf	postdec2,c
  5289  0116F0  0E00               	movlw	0
  5290  0116F2  6E12               	movwf	?_frexp,c
  5291  0116F4  0E00               	movlw	0
  5292  0116F6  6E13               	movwf	?_frexp+1,c
  5293  0116F8  0E00               	movlw	0
  5294  0116FA  6E14               	movwf	?_frexp+2,c
  5295  0116FC  0012               	return	
  5296  0116FE                     l2418:
  5297  0116FE  5014               	movf	frexp@value+2,w,c
  5298  011700  0B7F               	andlw	127
  5299  011702  6E17               	movwf	??_frexp& (0+255),c
  5300  011704  6A18               	clrf	(??_frexp+1)& (0+255),c
  5301  011706  90D8               	bcf	status,0,c
  5302  011708  3617               	rlcf	??_frexp,f,c
  5303  01170A  3618               	rlcf	??_frexp+1,f,c
  5304  01170C  C015  FFD9         	movff	frexp@eptr,fsr2l
  5305  011710  C016  FFDA         	movff	frexp@eptr+1,fsr2h
  5306  011714  C017  FFDE         	movff	??_frexp,postinc2
  5307  011718  C018  FFDD         	movff	??_frexp+1,postdec2
  5308  01171C  AE13               	btfss	frexp@value+1,7,c
  5309  01171E  D003               	goto	u1870
  5310  011720  6A17               	clrf	??_frexp& (0+255),c
  5311  011722  2A17               	incf	??_frexp& (0+255),f,c
  5312  011724  D001               	goto	u1878
  5313  011726                     u1870:
  5314  011726  6A17               	clrf	??_frexp& (0+255),c
  5315  011728                     u1878:
  5316  011728  5017               	movf	??_frexp,w,c
  5317  01172A  C015  FFD9         	movff	frexp@eptr,fsr2l
  5318  01172E  C016  FFDA         	movff	frexp@eptr+1,fsr2h
  5319  011732  12DE               	iorwf	postinc2,f,c
  5320  011734  0E00               	movlw	0
  5321  011736  12DD               	iorwf	postdec2,f,c
  5322  011738  C015  FFD9         	movff	frexp@eptr,fsr2l
  5323  01173C  C016  FFDA         	movff	frexp@eptr+1,fsr2h
  5324  011740  0E82               	movlw	130
  5325  011742  26DE               	addwf	postinc2,f,c
  5326  011744  0EFF               	movlw	255
  5327  011746  22DD               	addwfc	postdec2,f,c
  5328  011748  8014               	bsf	frexp@value+2,0,c
  5329  01174A  8214               	bsf	frexp@value+2,1,c
  5330  01174C  8414               	bsf	frexp@value+2,2,c
  5331  01174E  8614               	bsf	frexp@value+2,3,c
  5332  011750  8814               	bsf	frexp@value+2,4,c
  5333  011752  8A14               	bsf	frexp@value+2,5,c
  5334  011754  9C14               	bcf	frexp@value+2,6,c
  5335  011756  9E13               	bcf	frexp@value+1,7,c
  5336  011758  C012  F012         	movff	frexp@value,?_frexp
  5337  01175C  C013  F013         	movff	frexp@value+1,?_frexp+1
  5338  011760  C014  F014         	movff	frexp@value+2,?_frexp+2
  5339  011764  0012               	return	
  5340  011766                     __end_of_frexp:
  5341                           	opt stack 0
  5342                           tblptru	equ	0xFF8
  5343                           tblptrh	equ	0xFF7
  5344                           tblptrl	equ	0xFF6
  5345                           tablat	equ	0xFF5
  5346                           prodh	equ	0xFF4
  5347                           prodl	equ	0xFF3
  5348                           intcon	equ	0xFF2
  5349                           indf0	equ	0xFEF
  5350                           postinc0	equ	0xFEE
  5351                           fsr0h	equ	0xFEA
  5352                           fsr0l	equ	0xFE9
  5353                           wreg	equ	0xFE8
  5354                           indf1	equ	0xFE7
  5355                           postdec1	equ	0xFE5
  5356                           fsr1h	equ	0xFE2
  5357                           fsr1l	equ	0xFE1
  5358                           indf2	equ	0xFDF
  5359                           postinc2	equ	0xFDE
  5360                           postdec2	equ	0xFDD
  5361                           fsr2h	equ	0xFDA
  5362                           fsr2l	equ	0xFD9
  5363                           status	equ	0xFD8
  5364                           
  5365 ;; *************** function ___fttol *****************
  5366 ;; Defined at:
  5367 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\fttol.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  f1              3    0[BANK0 ] float 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  lval            4   10[BANK0 ] unsigned long 
  5372 ;;  exp1            1   14[BANK0 ] unsigned char 
  5373 ;;  sign1           1    9[BANK0 ] unsigned char 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  4    0[BANK0 ] long 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5383 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5384 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5385 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5386 ;;      Totals:         0      15       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5387 ;;Total ram usage:       15 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    2
  5390 ;; This function calls:
  5391 ;;		Nothing
  5392 ;; This function is called by:
  5393 ;;		_calculateTemp
  5394 ;;		_pow
  5395 ;;		_exp
  5396 ;;		_floor
  5397 ;; This function uses a non-reentrant model
  5398 ;;
  5399                           
  5400                           	psect	text28
  5401  0107BA                     __ptext28:
  5402                           	opt stack 0
  5403  0107BA                     ___fttol:
  5404                           	opt stack 26
  5405                           
  5406                           ;incstack = 0
  5407  0107BA  C062  F064         	movff	___fttol@f1+2,??___fttol
  5408  0107BE  0100               	movlb	0	; () banked
  5409  0107C0  6B65               	clrf	(??___fttol+1)& (0+255),b
  5410  0107C2  6B66               	clrf	(??___fttol+2)& (0+255),b
  5411  0107C4  0100               	movlb	0	; () banked
  5412  0107C6  3561               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5413  0107C8  0100               	movlb	0	; () banked
  5414  0107CA  3764               	rlcf	??___fttol& (0+255),f,b
  5415  0107CC  E301               	bnc	u3151
  5416  0107CE  8165               	bsf	(??___fttol+1)& (0+255),0,b
  5417  0107D0                     u3151:
  5418  0107D0  0100               	movlb	0	; () banked
  5419  0107D2  5164               	movf	??___fttol& (0+255),w,b
  5420  0107D4  0100               	movlb	0	; () banked
  5421  0107D6  6F6E               	movwf	___fttol@exp1& (0+255),b
  5422  0107D8  0100               	movlb	0	; () banked
  5423  0107DA  516E               	movf	___fttol@exp1& (0+255),w,b
  5424  0107DC  A4D8               	btfss	status,2,c
  5425  0107DE  D00A               	goto	l3388
  5426                           
  5427                           ; BSR set to: 0
  5428  0107E0  0E00               	movlw	0
  5429  0107E2  0100               	movlb	0	; () banked
  5430  0107E4  6F60               	movwf	?___fttol& (0+255),b
  5431  0107E6  0E00               	movlw	0
  5432  0107E8  6F61               	movwf	(?___fttol+1)& (0+255),b
  5433  0107EA  0E00               	movlw	0
  5434  0107EC  6F62               	movwf	(?___fttol+2)& (0+255),b
  5435  0107EE  0E00               	movlw	0
  5436  0107F0  6F63               	movwf	(?___fttol+3)& (0+255),b
  5437                           
  5438                           ; BSR set to: 0
  5439  0107F2  0012               	return	
  5440  0107F4                     l3388:
  5441                           
  5442                           ; BSR set to: 0
  5443  0107F4  0E17               	movlw	23
  5444  0107F6  0100               	movlb	0	; () banked
  5445  0107F8  6F64               	movwf	??___fttol& (0+255),b
  5446  0107FA  C060  F065         	movff	___fttol@f1,??___fttol+1
  5447  0107FE  C061  F066         	movff	___fttol@f1+1,??___fttol+2
  5448  010802  C062  F067         	movff	___fttol@f1+2,??___fttol+3
  5449  010806  0100               	movlb	0	; () banked
  5450  010808  2964               	incf	??___fttol& (0+255),w,b
  5451  01080A  0100               	movlb	0	; () banked
  5452  01080C  6F68               	movwf	(??___fttol+4)& (0+255),b
  5453  01080E  D005               	goto	u3170
  5454  010810                     u3175:
  5455  010810  0100               	movlb	0	; () banked
  5456  010812  90D8               	bcf	status,0,c
  5457  010814  3367               	rrcf	(??___fttol+3)& (0+255),f,b
  5458  010816  3366               	rrcf	(??___fttol+2)& (0+255),f,b
  5459  010818  3365               	rrcf	(??___fttol+1)& (0+255),f,b
  5460  01081A                     u3170:
  5461  01081A  0100               	movlb	0	; () banked
  5462  01081C  2F68               	decfsz	(??___fttol+4)& (0+255),f,b
  5463  01081E  D7F8               	goto	u3175
  5464  010820  0100               	movlb	0	; () banked
  5465  010822  5165               	movf	(??___fttol+1)& (0+255),w,b
  5466  010824  0100               	movlb	0	; () banked
  5467  010826  6F69               	movwf	___fttol@sign1& (0+255),b
  5468                           
  5469                           ; BSR set to: 0
  5470  010828  0100               	movlb	0	; () banked
  5471  01082A  8F61               	bsf	(___fttol@f1+1)& (0+255),7,b
  5472                           
  5473                           ; BSR set to: 0
  5474  01082C  0EFF               	movlw	255
  5475  01082E  0100               	movlb	0	; () banked
  5476  010830  1760               	andwf	___fttol@f1& (0+255),f,b
  5477  010832  0EFF               	movlw	255
  5478  010834  0100               	movlb	0	; () banked
  5479  010836  1761               	andwf	(___fttol@f1+1)& (0+255),f,b
  5480  010838  0E00               	movlw	0
  5481  01083A  0100               	movlb	0	; () banked
  5482  01083C  1762               	andwf	(___fttol@f1+2)& (0+255),f,b
  5483                           
  5484                           ; BSR set to: 0
  5485  01083E  0100               	movlb	0	; () banked
  5486  010840  5160               	movf	___fttol@f1& (0+255),w,b
  5487  010842  0100               	movlb	0	; () banked
  5488  010844  6F6A               	movwf	___fttol@lval& (0+255),b
  5489  010846  0100               	movlb	0	; () banked
  5490  010848  5161               	movf	(___fttol@f1+1)& (0+255),w,b
  5491  01084A  0100               	movlb	0	; () banked
  5492  01084C  6F6B               	movwf	(___fttol@lval+1)& (0+255),b
  5493  01084E  0100               	movlb	0	; () banked
  5494  010850  5162               	movf	(___fttol@f1+2)& (0+255),w,b
  5495  010852  0100               	movlb	0	; () banked
  5496  010854  6F6C               	movwf	(___fttol@lval+2)& (0+255),b
  5497  010856  0100               	movlb	0	; () banked
  5498  010858  6B6D               	clrf	(___fttol@lval+3)& (0+255),b
  5499                           
  5500                           ; BSR set to: 0
  5501  01085A  0E8E               	movlw	142
  5502  01085C  0100               	movlb	0	; () banked
  5503  01085E  5F6E               	subwf	___fttol@exp1& (0+255),f,b
  5504                           
  5505                           ; BSR set to: 0
  5506  010860  0100               	movlb	0	; () banked
  5507  010862  AF6E               	btfss	___fttol@exp1& (0+255),7,b
  5508  010864  D01A               	goto	l3410
  5509                           
  5510                           ; BSR set to: 0
  5511  010866  0100               	movlb	0	; () banked
  5512  010868  516E               	movf	___fttol@exp1& (0+255),w,b
  5513  01086A  0A80               	xorlw	128
  5514  01086C  0F8F               	addlw	143
  5515  01086E  B0D8               	btfsc	status,0,c
  5516  010870  D00A               	goto	l3406
  5517                           
  5518                           ; BSR set to: 0
  5519  010872  0E00               	movlw	0
  5520  010874  0100               	movlb	0	; () banked
  5521  010876  6F60               	movwf	?___fttol& (0+255),b
  5522  010878  0E00               	movlw	0
  5523  01087A  6F61               	movwf	(?___fttol+1)& (0+255),b
  5524  01087C  0E00               	movlw	0
  5525  01087E  6F62               	movwf	(?___fttol+2)& (0+255),b
  5526  010880  0E00               	movlw	0
  5527  010882  6F63               	movwf	(?___fttol+3)& (0+255),b
  5528                           
  5529                           ; BSR set to: 0
  5530  010884  0012               	return	
  5531  010886                     l3406:
  5532                           
  5533                           ; BSR set to: 0
  5534  010886  0100               	movlb	0	; () banked
  5535  010888  90D8               	bcf	status,0,c
  5536  01088A  336D               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5537  01088C  336C               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5538  01088E  336B               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5539  010890  336A               	rrcf	___fttol@lval& (0+255),f,b
  5540                           
  5541                           ; BSR set to: 0
  5542  010892  0100               	movlb	0	; () banked
  5543  010894  3F6E               	incfsz	___fttol@exp1& (0+255),f,b
  5544  010896  D7F7               	goto	l3406
  5545                           
  5546                           ; BSR set to: 0
  5547  010898  D01B               	goto	l3420
  5548  01089A                     l3410:
  5549                           
  5550                           ; BSR set to: 0
  5551  01089A  0E17               	movlw	23
  5552  01089C  0100               	movlb	0	; () banked
  5553  01089E  656E               	cpfsgt	___fttol@exp1& (0+255),b
  5554  0108A0  D012               	goto	l3418
  5555                           
  5556                           ; BSR set to: 0
  5557  0108A2  0E00               	movlw	0
  5558  0108A4  0100               	movlb	0	; () banked
  5559  0108A6  6F60               	movwf	?___fttol& (0+255),b
  5560  0108A8  0E00               	movlw	0
  5561  0108AA  6F61               	movwf	(?___fttol+1)& (0+255),b
  5562  0108AC  0E00               	movlw	0
  5563  0108AE  6F62               	movwf	(?___fttol+2)& (0+255),b
  5564  0108B0  0E00               	movlw	0
  5565  0108B2  6F63               	movwf	(?___fttol+3)& (0+255),b
  5566                           
  5567                           ; BSR set to: 0
  5568  0108B4  0012               	return	
  5569  0108B6                     l3416:
  5570                           
  5571                           ; BSR set to: 0
  5572  0108B6  0100               	movlb	0	; () banked
  5573  0108B8  90D8               	bcf	status,0,c
  5574  0108BA  376A               	rlcf	___fttol@lval& (0+255),f,b
  5575  0108BC  376B               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5576  0108BE  376C               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5577  0108C0  376D               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5578  0108C2  0100               	movlb	0	; () banked
  5579  0108C4  076E               	decf	___fttol@exp1& (0+255),f,b
  5580  0108C6                     l3418:
  5581                           
  5582                           ; BSR set to: 0
  5583  0108C6  0100               	movlb	0	; () banked
  5584  0108C8  516E               	movf	___fttol@exp1& (0+255),w,b
  5585  0108CA  0100               	movlb	0	; () banked
  5586  0108CC  A4D8               	btfss	status,2,c
  5587  0108CE  D7F3               	goto	l3416
  5588  0108D0                     l3420:
  5589                           
  5590                           ; BSR set to: 0
  5591  0108D0  0100               	movlb	0	; () banked
  5592  0108D2  5169               	movf	___fttol@sign1& (0+255),w,b
  5593  0108D4  0100               	movlb	0	; () banked
  5594  0108D6  B4D8               	btfsc	status,2,c
  5595  0108D8  D009               	goto	l3424
  5596                           
  5597                           ; BSR set to: 0
  5598  0108DA  0100               	movlb	0	; () banked
  5599  0108DC  1F6D               	comf	(___fttol@lval+3)& (0+255),f,b
  5600  0108DE  1F6C               	comf	(___fttol@lval+2)& (0+255),f,b
  5601  0108E0  1F6B               	comf	(___fttol@lval+1)& (0+255),f,b
  5602  0108E2  6D6A               	negf	___fttol@lval& (0+255),b
  5603  0108E4  0E00               	movlw	0
  5604  0108E6  236B               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5605  0108E8  236C               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5606  0108EA  236D               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5607  0108EC                     l3424:
  5608                           
  5609                           ; BSR set to: 0
  5610  0108EC  C06A  F060         	movff	___fttol@lval,?___fttol
  5611  0108F0  C06B  F061         	movff	___fttol@lval+1,?___fttol+1
  5612  0108F4  C06C  F062         	movff	___fttol@lval+2,?___fttol+2
  5613  0108F8  C06D  F063         	movff	___fttol@lval+3,?___fttol+3
  5614  0108FC  0012               	return	
  5615  0108FE                     __end_of___fttol:
  5616                           	opt stack 0
  5617                           tblptru	equ	0xFF8
  5618                           tblptrh	equ	0xFF7
  5619                           tblptrl	equ	0xFF6
  5620                           tablat	equ	0xFF5
  5621                           prodh	equ	0xFF4
  5622                           prodl	equ	0xFF3
  5623                           intcon	equ	0xFF2
  5624                           indf0	equ	0xFEF
  5625                           postinc0	equ	0xFEE
  5626                           fsr0h	equ	0xFEA
  5627                           fsr0l	equ	0xFE9
  5628                           wreg	equ	0xFE8
  5629                           indf1	equ	0xFE7
  5630                           postdec1	equ	0xFE5
  5631                           fsr1h	equ	0xFE2
  5632                           fsr1l	equ	0xFE1
  5633                           indf2	equ	0xFDF
  5634                           postinc2	equ	0xFDE
  5635                           postdec2	equ	0xFDD
  5636                           fsr2h	equ	0xFDA
  5637                           fsr2l	equ	0xFD9
  5638                           status	equ	0xFD8
  5639                           
  5640 ;; *************** function ___ftge *****************
  5641 ;; Defined at:
  5642 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftge.c"
  5643 ;; Parameters:    Size  Location     Type
  5644 ;;  ff1             3    0[BANK0 ] float 
  5645 ;;  ff2             3    3[BANK0 ] float 
  5646 ;; Auto vars:     Size  Location     Type
  5647 ;;		None
  5648 ;; Return value:  Size  Location     Type
  5649 ;;		None               void
  5650 ;; Registers used:
  5651 ;;		wreg, status,2, status,0
  5652 ;; Tracked objects:
  5653 ;;		On entry : 0/0
  5654 ;;		On exit  : 0/0
  5655 ;;		Unchanged: 0/0
  5656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5657 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5659 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5660 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5661 ;;Total ram usage:        9 bytes
  5662 ;; Hardware stack levels used:    1
  5663 ;; Hardware stack levels required when called:    2
  5664 ;; This function calls:
  5665 ;;		Nothing
  5666 ;; This function is called by:
  5667 ;;		_digipot
  5668 ;;		_pow
  5669 ;;		_exp
  5670 ;;		_floor
  5671 ;; This function uses a non-reentrant model
  5672 ;;
  5673                           
  5674                           	psect	text29
  5675  011236                     __ptext29:
  5676                           	opt stack 0
  5677  011236                     ___ftge:
  5678                           	opt stack 24
  5679                           
  5680                           ; BSR set to: 0
  5681                           ;incstack = 0
  5682  011236  0100               	movlb	0	; () banked
  5683  011238  AF62               	btfss	(___ftge@ff1+2)& (0+255),7,b
  5684  01123A  D01D               	goto	l3368
  5685                           
  5686                           ; BSR set to: 0
  5687  01123C  C060  F066         	movff	___ftge@ff1,??___ftge
  5688  011240  C061  F067         	movff	___ftge@ff1+1,??___ftge+1
  5689  011244  C062  F068         	movff	___ftge@ff1+2,??___ftge+2
  5690  011248  0100               	movlb	0	; () banked
  5691  01124A  1F66               	comf	??___ftge& (0+255),f,b
  5692  01124C  1F67               	comf	(??___ftge+1)& (0+255),f,b
  5693  01124E  1F68               	comf	(??___ftge+2)& (0+255),f,b
  5694  011250  2B66               	incf	??___ftge& (0+255),f,b
  5695  011252  0E00               	movlw	0
  5696  011254  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  5697  011256  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  5698  011258  0E00               	movlw	0
  5699  01125A  0100               	movlb	0	; () banked
  5700  01125C  2566               	addwf	??___ftge& (0+255),w,b
  5701  01125E  0100               	movlb	0	; () banked
  5702  011260  6F60               	movwf	___ftge@ff1& (0+255),b
  5703  011262  0E00               	movlw	0
  5704  011264  0100               	movlb	0	; () banked
  5705  011266  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  5706  011268  0100               	movlb	0	; () banked
  5707  01126A  6F61               	movwf	(___ftge@ff1+1)& (0+255),b
  5708  01126C  0E80               	movlw	128
  5709  01126E  0100               	movlb	0	; () banked
  5710  011270  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  5711  011272  0100               	movlb	0	; () banked
  5712  011274  6F62               	movwf	(___ftge@ff1+2)& (0+255),b
  5713  011276                     l3368:
  5714                           
  5715                           ; BSR set to: 0
  5716  011276  0100               	movlb	0	; () banked
  5717  011278  AF65               	btfss	(___ftge@ff2+2)& (0+255),7,b
  5718  01127A  D01D               	goto	l3372
  5719                           
  5720                           ; BSR set to: 0
  5721  01127C  C063  F066         	movff	___ftge@ff2,??___ftge
  5722  011280  C064  F067         	movff	___ftge@ff2+1,??___ftge+1
  5723  011284  C065  F068         	movff	___ftge@ff2+2,??___ftge+2
  5724  011288  0100               	movlb	0	; () banked
  5725  01128A  1F66               	comf	??___ftge& (0+255),f,b
  5726  01128C  1F67               	comf	(??___ftge+1)& (0+255),f,b
  5727  01128E  1F68               	comf	(??___ftge+2)& (0+255),f,b
  5728  011290  2B66               	incf	??___ftge& (0+255),f,b
  5729  011292  0E00               	movlw	0
  5730  011294  2367               	addwfc	(??___ftge+1)& (0+255),f,b
  5731  011296  2368               	addwfc	(??___ftge+2)& (0+255),f,b
  5732  011298  0E00               	movlw	0
  5733  01129A  0100               	movlb	0	; () banked
  5734  01129C  2566               	addwf	??___ftge& (0+255),w,b
  5735  01129E  0100               	movlb	0	; () banked
  5736  0112A0  6F63               	movwf	___ftge@ff2& (0+255),b
  5737  0112A2  0E00               	movlw	0
  5738  0112A4  0100               	movlb	0	; () banked
  5739  0112A6  2167               	addwfc	(??___ftge+1)& (0+255),w,b
  5740  0112A8  0100               	movlb	0	; () banked
  5741  0112AA  6F64               	movwf	(___ftge@ff2+1)& (0+255),b
  5742  0112AC  0E80               	movlw	128
  5743  0112AE  0100               	movlb	0	; () banked
  5744  0112B0  2168               	addwfc	(??___ftge+2)& (0+255),w,b
  5745  0112B2  0100               	movlb	0	; () banked
  5746  0112B4  6F65               	movwf	(___ftge@ff2+2)& (0+255),b
  5747  0112B6                     l3372:
  5748                           
  5749                           ; BSR set to: 0
  5750  0112B6  0E00               	movlw	0
  5751  0112B8  0100               	movlb	0	; () banked
  5752  0112BA  1B60               	xorwf	___ftge@ff1& (0+255),f,b
  5753  0112BC  0E00               	movlw	0
  5754  0112BE  0100               	movlb	0	; () banked
  5755  0112C0  1B61               	xorwf	(___ftge@ff1+1)& (0+255),f,b
  5756  0112C2  0E80               	movlw	128
  5757  0112C4  0100               	movlb	0	; () banked
  5758  0112C6  1B62               	xorwf	(___ftge@ff1+2)& (0+255),f,b
  5759                           
  5760                           ; BSR set to: 0
  5761  0112C8  0E00               	movlw	0
  5762  0112CA  0100               	movlb	0	; () banked
  5763  0112CC  1B63               	xorwf	___ftge@ff2& (0+255),f,b
  5764  0112CE  0E00               	movlw	0
  5765  0112D0  0100               	movlb	0	; () banked
  5766  0112D2  1B64               	xorwf	(___ftge@ff2+1)& (0+255),f,b
  5767  0112D4  0E80               	movlw	128
  5768  0112D6  0100               	movlb	0	; () banked
  5769  0112D8  1B65               	xorwf	(___ftge@ff2+2)& (0+255),f,b
  5770  0112DA  0100               	movlb	0	; () banked
  5771  0112DC  5163               	movf	___ftge@ff2& (0+255),w,b
  5772  0112DE  0100               	movlb	0	; () banked
  5773  0112E0  5D60               	subwf	___ftge@ff1& (0+255),w,b
  5774  0112E2  0100               	movlb	0	; () banked
  5775  0112E4  5164               	movf	(___ftge@ff2+1)& (0+255),w,b
  5776  0112E6  0100               	movlb	0	; () banked
  5777  0112E8  5961               	subwfb	(___ftge@ff1+1)& (0+255),w,b
  5778  0112EA  0100               	movlb	0	; () banked
  5779  0112EC  5165               	movf	(___ftge@ff2+2)& (0+255),w,b
  5780  0112EE  0100               	movlb	0	; () banked
  5781  0112F0  5962               	subwfb	(___ftge@ff1+2)& (0+255),w,b
  5782  0112F2  B0D8               	btfsc	status,0,c
  5783  0112F4  D002               	goto	l3378
  5784                           
  5785                           ; BSR set to: 0
  5786  0112F6  90D8               	bcf	status,0,c
  5787  0112F8  0012               	return	
  5788  0112FA                     l3378:
  5789                           
  5790                           ; BSR set to: 0
  5791  0112FA  80D8               	bsf	status,0,c
  5792                           
  5793                           ; BSR set to: 0
  5794  0112FC  0012               	return	
  5795  0112FE                     __end_of___ftge:
  5796                           	opt stack 0
  5797                           tblptru	equ	0xFF8
  5798                           tblptrh	equ	0xFF7
  5799                           tblptrl	equ	0xFF6
  5800                           tablat	equ	0xFF5
  5801                           prodh	equ	0xFF4
  5802                           prodl	equ	0xFF3
  5803                           intcon	equ	0xFF2
  5804                           indf0	equ	0xFEF
  5805                           postinc0	equ	0xFEE
  5806                           fsr0h	equ	0xFEA
  5807                           fsr0l	equ	0xFE9
  5808                           wreg	equ	0xFE8
  5809                           indf1	equ	0xFE7
  5810                           postdec1	equ	0xFE5
  5811                           fsr1h	equ	0xFE2
  5812                           fsr1l	equ	0xFE1
  5813                           indf2	equ	0xFDF
  5814                           postinc2	equ	0xFDE
  5815                           postdec2	equ	0xFDD
  5816                           fsr2h	equ	0xFDA
  5817                           fsr2l	equ	0xFD9
  5818                           status	equ	0xFD8
  5819                           
  5820 ;; *************** function ___altoft *****************
  5821 ;; Defined at:
  5822 ;;		line 42 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\altoft.c"
  5823 ;; Parameters:    Size  Location     Type
  5824 ;;  c               4   15[BANK0 ] long 
  5825 ;; Auto vars:     Size  Location     Type
  5826 ;;  sign            1   60[COMRAM] unsigned char 
  5827 ;;  exp             1   59[COMRAM] unsigned char 
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  3   15[BANK0 ] float 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5837 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5838 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5839 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5840 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5841 ;;Total ram usage:       10 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    3
  5844 ;; This function calls:
  5845 ;;		___ftpack
  5846 ;; This function is called by:
  5847 ;;		_floor
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text30
  5852  011640                     __ptext30:
  5853                           	opt stack 0
  5854  011640                     ___altoft:
  5855                           	opt stack 23
  5856                           
  5857                           ; BSR set to: 0
  5858                           ;incstack = 0
  5859  011640  0E00               	movlw	0
  5860  011642  6E3D               	movwf	___altoft@sign,c
  5861  011644  0E8E               	movlw	142
  5862  011646  6E3C               	movwf	___altoft@exp,c
  5863  011648  0100               	movlb	0	; () banked
  5864  01164A  AF72               	btfss	(___altoft@c+3)& (0+255),7,b
  5865  01164C  D013               	goto	l3240
  5866                           
  5867                           ; BSR set to: 0
  5868  01164E  0100               	movlb	0	; () banked
  5869  011650  1F72               	comf	(___altoft@c+3)& (0+255),f,b
  5870  011652  1F71               	comf	(___altoft@c+2)& (0+255),f,b
  5871  011654  1F70               	comf	(___altoft@c+1)& (0+255),f,b
  5872  011656  6D6F               	negf	___altoft@c& (0+255),b
  5873  011658  0E00               	movlw	0
  5874  01165A  2370               	addwfc	(___altoft@c+1)& (0+255),f,b
  5875  01165C  2371               	addwfc	(___altoft@c+2)& (0+255),f,b
  5876  01165E  2372               	addwfc	(___altoft@c+3)& (0+255),f,b
  5877                           
  5878                           ; BSR set to: 0
  5879  011660  0E01               	movlw	1
  5880  011662  6E3D               	movwf	___altoft@sign,c
  5881                           
  5882                           ; BSR set to: 0
  5883  011664  D007               	goto	l3240
  5884  011666                     l3238:
  5885                           
  5886                           ; BSR set to: 0
  5887  011666  0100               	movlb	0	; () banked
  5888  011668  90D8               	bcf	status,0,c
  5889  01166A  3372               	rrcf	(___altoft@c+3)& (0+255),f,b
  5890  01166C  3371               	rrcf	(___altoft@c+2)& (0+255),f,b
  5891  01166E  3370               	rrcf	(___altoft@c+1)& (0+255),f,b
  5892  011670  336F               	rrcf	___altoft@c& (0+255),f,b
  5893  011672  2A3C               	incf	___altoft@exp,f,c
  5894  011674                     l3240:
  5895                           
  5896                           ; BSR set to: 0
  5897  011674  0E00               	movlw	0
  5898  011676  0100               	movlb	0	; () banked
  5899  011678  156F               	andwf	___altoft@c& (0+255),w,b
  5900  01167A  0100               	movlb	0	; () banked
  5901  01167C  6F73               	movwf	??___altoft& (0+255),b
  5902  01167E  0E00               	movlw	0
  5903  011680  0100               	movlb	0	; () banked
  5904  011682  1570               	andwf	(___altoft@c+1)& (0+255),w,b
  5905  011684  0100               	movlb	0	; () banked
  5906  011686  6F74               	movwf	(??___altoft+1)& (0+255),b
  5907  011688  0E00               	movlw	0
  5908  01168A  0100               	movlb	0	; () banked
  5909  01168C  1571               	andwf	(___altoft@c+2)& (0+255),w,b
  5910  01168E  0100               	movlb	0	; () banked
  5911  011690  6F75               	movwf	(??___altoft+2)& (0+255),b
  5912  011692  0EFF               	movlw	255
  5913  011694  0100               	movlb	0	; () banked
  5914  011696  1572               	andwf	(___altoft@c+3)& (0+255),w,b
  5915  011698  0100               	movlb	0	; () banked
  5916  01169A  6F76               	movwf	(??___altoft+3)& (0+255),b
  5917  01169C  0100               	movlb	0	; () banked
  5918  01169E  5173               	movf	??___altoft& (0+255),w,b
  5919  0116A0  0100               	movlb	0	; () banked
  5920  0116A2  1174               	iorwf	(??___altoft+1)& (0+255),w,b
  5921  0116A4  0100               	movlb	0	; () banked
  5922  0116A6  1175               	iorwf	(??___altoft+2)& (0+255),w,b
  5923  0116A8  0100               	movlb	0	; () banked
  5924  0116AA  1176               	iorwf	(??___altoft+3)& (0+255),w,b
  5925  0116AC  A4D8               	btfss	status,2,c
  5926  0116AE  D7DB               	goto	l3238
  5927                           
  5928                           ; BSR set to: 0
  5929                           
  5930                           ; BSR set to: 0
  5931  0116B0  C06F  F012         	movff	___altoft@c,___ftpack@arg
  5932  0116B4  C070  F013         	movff	___altoft@c+1,___ftpack@arg+1
  5933  0116B8  C071  F014         	movff	___altoft@c+2,___ftpack@arg+2
  5934  0116BC  C03C  F015         	movff	___altoft@exp,___ftpack@exp
  5935  0116C0  C03D  F016         	movff	___altoft@sign,___ftpack@sign
  5936  0116C4  ECD8  F089         	call	___ftpack	;wreg free
  5937  0116C8  C012  F06F         	movff	?___ftpack,?___altoft
  5938  0116CC  C013  F070         	movff	?___ftpack+1,?___altoft+1
  5939  0116D0  C014  F071         	movff	?___ftpack+2,?___altoft+2
  5940  0116D4  0012               	return	
  5941  0116D6                     __end_of___altoft:
  5942                           	opt stack 0
  5943                           tblptru	equ	0xFF8
  5944                           tblptrh	equ	0xFF7
  5945                           tblptrl	equ	0xFF6
  5946                           tablat	equ	0xFF5
  5947                           prodh	equ	0xFF4
  5948                           prodl	equ	0xFF3
  5949                           intcon	equ	0xFF2
  5950                           indf0	equ	0xFEF
  5951                           postinc0	equ	0xFEE
  5952                           fsr0h	equ	0xFEA
  5953                           fsr0l	equ	0xFE9
  5954                           wreg	equ	0xFE8
  5955                           indf1	equ	0xFE7
  5956                           postdec1	equ	0xFE5
  5957                           fsr1h	equ	0xFE2
  5958                           fsr1l	equ	0xFE1
  5959                           indf2	equ	0xFDF
  5960                           postinc2	equ	0xFDE
  5961                           postdec2	equ	0xFDD
  5962                           fsr2h	equ	0xFDA
  5963                           fsr2l	equ	0xFD9
  5964                           status	equ	0xFD8
  5965                           
  5966 ;; *************** function _eval_poly *****************
  5967 ;; Defined at:
  5968 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\evalpoly.c"
  5969 ;; Parameters:    Size  Location     Type
  5970 ;;  x               3   12[BANK0 ] float 
  5971 ;;  d               2   15[BANK0 ] PTR const 
  5972 ;;		 -> log@coeff(27), exp@coeff(30), 
  5973 ;;  n               2   17[BANK0 ] int 
  5974 ;; Auto vars:     Size  Location     Type
  5975 ;;  res             3   19[BANK0 ] int 
  5976 ;; Return value:  Size  Location     Type
  5977 ;;                  3   12[BANK0 ] int 
  5978 ;; Registers used:
  5979 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5980 ;; Tracked objects:
  5981 ;;		On entry : 0/0
  5982 ;;		On exit  : 0/0
  5983 ;;		Unchanged: 0/0
  5984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  5985 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5986 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5987 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5988 ;;      Totals:         2      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  5989 ;;Total ram usage:       12 bytes
  5990 ;; Hardware stack levels used:    1
  5991 ;; Hardware stack levels required when called:    4
  5992 ;; This function calls:
  5993 ;;		___ftadd
  5994 ;;		___ftmul
  5995 ;;		___wmul
  5996 ;; This function is called by:
  5997 ;;		_exp
  5998 ;;		_log
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text31
  6003  011084                     __ptext31:
  6004                           	opt stack 0
  6005  011084                     _eval_poly:
  6006                           	opt stack 23
  6007                           
  6008                           ;incstack = 0
  6009  011084  C071  F012         	movff	eval_poly@n,___wmul@multiplier
  6010  011088  C072  F013         	movff	eval_poly@n+1,___wmul@multiplier+1
  6011  01108C  0E00               	movlw	0
  6012  01108E  6E15               	movwf	___wmul@multiplicand+1,c
  6013  011090  0E03               	movlw	3
  6014  011092  6E14               	movwf	___wmul@multiplicand,c
  6015  011094  EC67  F08E         	call	___wmul	;wreg free
  6016  011098  C06F  F03C         	movff	eval_poly@d,??_eval_poly
  6017  01109C  C070  F03D         	movff	eval_poly@d+1,??_eval_poly+1
  6018  0110A0  5012               	movf	?___wmul,w,c
  6019  0110A2  263C               	addwf	??_eval_poly,f,c
  6020  0110A4  5013               	movf	?___wmul+1,w,c
  6021  0110A6  223D               	addwfc	??_eval_poly+1,f,c
  6022  0110A8  C03C  FFF6         	movff	??_eval_poly,tblptrl
  6023  0110AC  C03D  FFF7         	movff	??_eval_poly+1,tblptrh
  6024  0110B0                     	if	0	;tblptru may be non-zero
  6025  0110B0                     	endif
  6026  0110B0                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6027  0110B0  0E00               	movlw	low (__mediumconst shr (0+16))
  6028  0110B2  6EF8               	movwf	tblptru,c
  6029  0110B4                     	endif
  6030  0110B4  0009               	tblrd		*+
  6031  0110B6  CFF5 F073          	movff	tablat,eval_poly@res
  6032  0110BA  0009               	tblrd		*+
  6033  0110BC  CFF5 F074          	movff	tablat,eval_poly@res+1
  6034  0110C0  000A               	tblrd		*-
  6035  0110C2  CFF5 F075          	movff	tablat,eval_poly@res+2
  6036  0110C6  D041               	goto	l3522
  6037  0110C8                     l3520:
  6038  0110C8  C073  F030         	movff	eval_poly@res,___ftmul@f2
  6039  0110CC  C074  F031         	movff	eval_poly@res+1,___ftmul@f2+1
  6040  0110D0  C075  F032         	movff	eval_poly@res+2,___ftmul@f2+2
  6041  0110D4  C06C  F02D         	movff	eval_poly@x,___ftmul@f1
  6042  0110D8  C06D  F02E         	movff	eval_poly@x+1,___ftmul@f1+1
  6043  0110DC  C06E  F02F         	movff	eval_poly@x+2,___ftmul@f1+2
  6044  0110E0  EC55  F087         	call	___ftmul	;wreg free
  6045  0110E4  C02D  F060         	movff	?___ftmul,___ftadd@f1
  6046  0110E8  C02E  F061         	movff	?___ftmul+1,___ftadd@f1+1
  6047  0110EC  C02F  F062         	movff	?___ftmul+2,___ftadd@f1+2
  6048  0110F0  0E00               	movlw	0
  6049  0110F2  6E15               	movwf	___wmul@multiplicand+1,c
  6050  0110F4  0E03               	movlw	3
  6051  0110F6  6E14               	movwf	___wmul@multiplicand,c
  6052  0110F8  0100               	movlb	0	; () banked
  6053  0110FA  0771               	decf	eval_poly@n& (0+255),f,b
  6054  0110FC  A0D8               	btfss	status,0,c
  6055  0110FE  0772               	decf	(eval_poly@n+1)& (0+255),f,b
  6056  011100  C071  F012         	movff	eval_poly@n,___wmul@multiplier
  6057  011104  C072  F013         	movff	eval_poly@n+1,___wmul@multiplier+1
  6058  011108  EC67  F08E         	call	___wmul	;wreg free
  6059  01110C  C06F  F03C         	movff	eval_poly@d,??_eval_poly
  6060  011110  C070  F03D         	movff	eval_poly@d+1,??_eval_poly+1
  6061  011114  5012               	movf	?___wmul,w,c
  6062  011116  263C               	addwf	??_eval_poly,f,c
  6063  011118  5013               	movf	?___wmul+1,w,c
  6064  01111A  223D               	addwfc	??_eval_poly+1,f,c
  6065  01111C  C03C  FFF6         	movff	??_eval_poly,tblptrl
  6066  011120  C03D  FFF7         	movff	??_eval_poly+1,tblptrh
  6067  011124                     	if	0	;tblptru may be non-zero
  6068  011124                     	endif
  6069  011124                     	if	1	;Program memory is > 0xFFFF, there are 3 active tblptr bytes
  6070  011124  0E00               	movlw	low (__mediumconst shr (0+16))
  6071  011126  6EF8               	movwf	tblptru,c
  6072  011128                     	endif
  6073  011128  0009               	tblrd		*+
  6074  01112A  CFF5 F063          	movff	tablat,___ftadd@f2
  6075  01112E  0009               	tblrd		*+
  6076  011130  CFF5 F064          	movff	tablat,___ftadd@f2+1
  6077  011134  000A               	tblrd		*-
  6078  011136  CFF5 F065          	movff	tablat,___ftadd@f2+2
  6079  01113A  EC00  F080         	call	___ftadd	;wreg free
  6080  01113E  C060  F073         	movff	?___ftadd,eval_poly@res
  6081  011142  C061  F074         	movff	?___ftadd+1,eval_poly@res+1
  6082  011146  C062  F075         	movff	?___ftadd+2,eval_poly@res+2
  6083  01114A                     l3522:
  6084  01114A  0100               	movlb	0	; () banked
  6085  01114C  5171               	movf	eval_poly@n& (0+255),w,b
  6086  01114E  0100               	movlb	0	; () banked
  6087  011150  1172               	iorwf	(eval_poly@n+1)& (0+255),w,b
  6088  011152  A4D8               	btfss	status,2,c
  6089  011154  D7B9               	goto	l3520
  6090                           
  6091                           ; BSR set to: 0
  6092  011156  C073  F06C         	movff	eval_poly@res,?_eval_poly
  6093  01115A  C074  F06D         	movff	eval_poly@res+1,?_eval_poly+1
  6094  01115E  C075  F06E         	movff	eval_poly@res+2,?_eval_poly+2
  6095                           
  6096                           ; BSR set to: 0
  6097  011162  0012               	return		;funcret
  6098  011164                     __end_of_eval_poly:
  6099                           	opt stack 0
  6100                           tblptru	equ	0xFF8
  6101                           tblptrh	equ	0xFF7
  6102                           tblptrl	equ	0xFF6
  6103                           tablat	equ	0xFF5
  6104                           prodh	equ	0xFF4
  6105                           prodl	equ	0xFF3
  6106                           intcon	equ	0xFF2
  6107                           indf0	equ	0xFEF
  6108                           postinc0	equ	0xFEE
  6109                           fsr0h	equ	0xFEA
  6110                           fsr0l	equ	0xFE9
  6111                           wreg	equ	0xFE8
  6112                           indf1	equ	0xFE7
  6113                           postdec1	equ	0xFE5
  6114                           fsr1h	equ	0xFE2
  6115                           fsr1l	equ	0xFE1
  6116                           indf2	equ	0xFDF
  6117                           postinc2	equ	0xFDE
  6118                           postdec2	equ	0xFDD
  6119                           fsr2h	equ	0xFDA
  6120                           fsr2l	equ	0xFD9
  6121                           status	equ	0xFD8
  6122                           
  6123 ;; *************** function ___wmul *****************
  6124 ;; Defined at:
  6125 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\Umul16.c"
  6126 ;; Parameters:    Size  Location     Type
  6127 ;;  multiplier      2   17[COMRAM] unsigned int 
  6128 ;;  multiplicand    2   19[COMRAM] unsigned int 
  6129 ;; Auto vars:     Size  Location     Type
  6130 ;;  product         2   21[COMRAM] unsigned int 
  6131 ;; Return value:  Size  Location     Type
  6132 ;;                  2   17[COMRAM] unsigned int 
  6133 ;; Registers used:
  6134 ;;		wreg, status,2, status,0, prodl, prodh
  6135 ;; Tracked objects:
  6136 ;;		On entry : 0/0
  6137 ;;		On exit  : 0/0
  6138 ;;		Unchanged: 0/0
  6139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6141 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6143 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6144 ;;Total ram usage:        6 bytes
  6145 ;; Hardware stack levels used:    1
  6146 ;; Hardware stack levels required when called:    2
  6147 ;; This function calls:
  6148 ;;		Nothing
  6149 ;; This function is called by:
  6150 ;;		_main
  6151 ;;		_eval_poly
  6152 ;; This function uses a non-reentrant model
  6153 ;;
  6154                           
  6155                           	psect	text32
  6156  011CCE                     __ptext32:
  6157                           	opt stack 0
  6158  011CCE                     ___wmul:
  6159                           	opt stack 24
  6160                           
  6161                           ; BSR set to: 0
  6162                           ;incstack = 0
  6163  011CCE  5012               	movf	___wmul@multiplier,w,c
  6164  011CD0  0214               	mulwf	___wmul@multiplicand,c
  6165  011CD2  CFF3 F016          	movff	prodl,___wmul@product
  6166  011CD6  CFF4 F017          	movff	prodh,___wmul@product+1
  6167  011CDA  5012               	movf	___wmul@multiplier,w,c
  6168  011CDC  0215               	mulwf	___wmul@multiplicand+1,c
  6169  011CDE  50F3               	movf	prodl,w,c
  6170  011CE0  2617               	addwf	___wmul@product+1,f,c
  6171  011CE2  5013               	movf	___wmul@multiplier+1,w,c
  6172  011CE4  0214               	mulwf	___wmul@multiplicand,c
  6173  011CE6  50F3               	movf	prodl,w,c
  6174  011CE8  2617               	addwf	___wmul@product+1,f,c
  6175  011CEA  C016  F012         	movff	___wmul@product,?___wmul
  6176  011CEE  C017  F013         	movff	___wmul@product+1,?___wmul+1
  6177  011CF2  0012               	return	
  6178  011CF4                     __end_of___wmul:
  6179                           	opt stack 0
  6180                           tblptru	equ	0xFF8
  6181                           tblptrh	equ	0xFF7
  6182                           tblptrl	equ	0xFF6
  6183                           tablat	equ	0xFF5
  6184                           prodh	equ	0xFF4
  6185                           prodl	equ	0xFF3
  6186                           intcon	equ	0xFF2
  6187                           indf0	equ	0xFEF
  6188                           postinc0	equ	0xFEE
  6189                           fsr0h	equ	0xFEA
  6190                           fsr0l	equ	0xFE9
  6191                           wreg	equ	0xFE8
  6192                           indf1	equ	0xFE7
  6193                           postdec1	equ	0xFE5
  6194                           fsr1h	equ	0xFE2
  6195                           fsr1l	equ	0xFE1
  6196                           indf2	equ	0xFDF
  6197                           postinc2	equ	0xFDE
  6198                           postdec2	equ	0xFDD
  6199                           fsr2h	equ	0xFDA
  6200                           fsr2l	equ	0xFD9
  6201                           status	equ	0xFD8
  6202                           
  6203 ;; *************** function ___ftmul *****************
  6204 ;; Defined at:
  6205 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftmul.c"
  6206 ;; Parameters:    Size  Location     Type
  6207 ;;  f1              3   44[COMRAM] float 
  6208 ;;  f2              3   47[COMRAM] float 
  6209 ;; Auto vars:     Size  Location     Type
  6210 ;;  f3_as_produc    3   54[COMRAM] unsigned um
  6211 ;;  sign            1   58[COMRAM] unsigned char 
  6212 ;;  cntr            1   57[COMRAM] unsigned char 
  6213 ;;  exp             1   53[COMRAM] unsigned char 
  6214 ;; Return value:  Size  Location     Type
  6215 ;;                  3   44[COMRAM] float 
  6216 ;; Registers used:
  6217 ;;		wreg, status,2, status,0, cstack
  6218 ;; Tracked objects:
  6219 ;;		On entry : 0/0
  6220 ;;		On exit  : 0/0
  6221 ;;		Unchanged: 0/0
  6222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6223 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6224 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6225 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6226 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6227 ;;Total ram usage:       15 bytes
  6228 ;; Hardware stack levels used:    1
  6229 ;; Hardware stack levels required when called:    3
  6230 ;; This function calls:
  6231 ;;		___ftpack
  6232 ;; This function is called by:
  6233 ;;		_calculateTemp
  6234 ;;		_initSPI
  6235 ;;		_digipot
  6236 ;;		_adjustDigipot
  6237 ;;		_pow
  6238 ;;		_exp
  6239 ;;		_log
  6240 ;;		_eval_poly
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text33
  6245  010EAA                     __ptext33:
  6246                           	opt stack 0
  6247  010EAA                     ___ftmul:
  6248                           	opt stack 25
  6249                           
  6250                           ;incstack = 0
  6251  010EAA  C02F  F033         	movff	___ftmul@f1+2,??___ftmul
  6252  010EAE  6A34               	clrf	(??___ftmul+1)& (0+255),c
  6253  010EB0  6A35               	clrf	(??___ftmul+2)& (0+255),c
  6254  010EB2  342E               	rlcf	___ftmul@f1+1,w,c
  6255  010EB4  3633               	rlcf	??___ftmul& (0+255),f,c
  6256  010EB6  E301               	bnc	u3061
  6257  010EB8  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  6258  010EBA                     u3061:
  6259  010EBA  5033               	movf	??___ftmul,w,c
  6260  010EBC  6E36               	movwf	___ftmul@exp,c
  6261  010EBE  5036               	movf	___ftmul@exp,w,c
  6262  010EC0  A4D8               	btfss	status,2,c
  6263  010EC2  D007               	goto	l3322
  6264  010EC4  0E00               	movlw	0
  6265  010EC6  6E2D               	movwf	?___ftmul,c
  6266  010EC8  0E00               	movlw	0
  6267  010ECA  6E2E               	movwf	?___ftmul+1,c
  6268  010ECC  0E00               	movlw	0
  6269  010ECE  6E2F               	movwf	?___ftmul+2,c
  6270  010ED0  0012               	return	
  6271  010ED2                     l3322:
  6272  010ED2  C032  F033         	movff	___ftmul@f2+2,??___ftmul
  6273  010ED6  6A34               	clrf	(??___ftmul+1)& (0+255),c
  6274  010ED8  6A35               	clrf	(??___ftmul+2)& (0+255),c
  6275  010EDA  3431               	rlcf	___ftmul@f2+1,w,c
  6276  010EDC  3633               	rlcf	??___ftmul& (0+255),f,c
  6277  010EDE  E301               	bnc	u3081
  6278  010EE0  8034               	bsf	(??___ftmul+1)& (0+255),0,c
  6279  010EE2                     u3081:
  6280  010EE2  5033               	movf	??___ftmul,w,c
  6281  010EE4  6E3B               	movwf	___ftmul@sign,c
  6282  010EE6  503B               	movf	___ftmul@sign,w,c
  6283  010EE8  A4D8               	btfss	status,2,c
  6284  010EEA  D007               	goto	l3328
  6285  010EEC  0E00               	movlw	0
  6286  010EEE  6E2D               	movwf	?___ftmul,c
  6287  010EF0  0E00               	movlw	0
  6288  010EF2  6E2E               	movwf	?___ftmul+1,c
  6289  010EF4  0E00               	movlw	0
  6290  010EF6  6E2F               	movwf	?___ftmul+2,c
  6291  010EF8  0012               	return	
  6292  010EFA                     l3328:
  6293  010EFA  503B               	movf	___ftmul@sign,w,c
  6294  010EFC  0F7B               	addlw	123
  6295  010EFE  2636               	addwf	___ftmul@exp,f,c
  6296  010F00  C02F  F03B         	movff	___ftmul@f1+2,___ftmul@sign
  6297  010F04  5032               	movf	___ftmul@f2+2,w,c
  6298  010F06  1A3B               	xorwf	___ftmul@sign,f,c
  6299  010F08  0E80               	movlw	128
  6300  010F0A  163B               	andwf	___ftmul@sign,f,c
  6301  010F0C  8E2E               	bsf	___ftmul@f1+1,7,c
  6302  010F0E  8E31               	bsf	___ftmul@f2+1,7,c
  6303  010F10  0EFF               	movlw	255
  6304  010F12  1630               	andwf	___ftmul@f2,f,c
  6305  010F14  0EFF               	movlw	255
  6306  010F16  1631               	andwf	___ftmul@f2+1,f,c
  6307  010F18  0E00               	movlw	0
  6308  010F1A  1632               	andwf	___ftmul@f2+2,f,c
  6309  010F1C  0E00               	movlw	0
  6310  010F1E  6E37               	movwf	___ftmul@f3_as_product,c
  6311  010F20  0E00               	movlw	0
  6312  010F22  6E38               	movwf	___ftmul@f3_as_product+1,c
  6313  010F24  0E00               	movlw	0
  6314  010F26  6E39               	movwf	___ftmul@f3_as_product+2,c
  6315  010F28  0E07               	movlw	7
  6316  010F2A  6E3A               	movwf	___ftmul@cntr,c
  6317  010F2C                     l3342:
  6318  010F2C  A02D               	btfss	___ftmul@f1,0,c
  6319  010F2E  D006               	goto	l3346
  6320  010F30  5030               	movf	___ftmul@f2,w,c
  6321  010F32  2637               	addwf	___ftmul@f3_as_product,f,c
  6322  010F34  5031               	movf	___ftmul@f2+1,w,c
  6323  010F36  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  6324  010F38  5032               	movf	___ftmul@f2+2,w,c
  6325  010F3A  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  6326  010F3C                     l3346:
  6327  010F3C  90D8               	bcf	status,0,c
  6328  010F3E  322F               	rrcf	___ftmul@f1+2,f,c
  6329  010F40  322E               	rrcf	___ftmul@f1+1,f,c
  6330  010F42  322D               	rrcf	___ftmul@f1,f,c
  6331  010F44  90D8               	bcf	status,0,c
  6332  010F46  3630               	rlcf	___ftmul@f2,f,c
  6333  010F48  3631               	rlcf	___ftmul@f2+1,f,c
  6334  010F4A  3632               	rlcf	___ftmul@f2+2,f,c
  6335  010F4C  2E3A               	decfsz	___ftmul@cntr,f,c
  6336  010F4E  D7EE               	goto	l3342
  6337  010F50  0E09               	movlw	9
  6338  010F52  6E3A               	movwf	___ftmul@cntr,c
  6339  010F54                     l3352:
  6340  010F54  A02D               	btfss	___ftmul@f1,0,c
  6341  010F56  D006               	goto	l3356
  6342  010F58  5030               	movf	___ftmul@f2,w,c
  6343  010F5A  2637               	addwf	___ftmul@f3_as_product,f,c
  6344  010F5C  5031               	movf	___ftmul@f2+1,w,c
  6345  010F5E  2238               	addwfc	___ftmul@f3_as_product+1,f,c
  6346  010F60  5032               	movf	___ftmul@f2+2,w,c
  6347  010F62  2239               	addwfc	___ftmul@f3_as_product+2,f,c
  6348  010F64                     l3356:
  6349  010F64  90D8               	bcf	status,0,c
  6350  010F66  322F               	rrcf	___ftmul@f1+2,f,c
  6351  010F68  322E               	rrcf	___ftmul@f1+1,f,c
  6352  010F6A  322D               	rrcf	___ftmul@f1,f,c
  6353  010F6C  90D8               	bcf	status,0,c
  6354  010F6E  3239               	rrcf	___ftmul@f3_as_product+2,f,c
  6355  010F70  3238               	rrcf	___ftmul@f3_as_product+1,f,c
  6356  010F72  3237               	rrcf	___ftmul@f3_as_product,f,c
  6357  010F74  2E3A               	decfsz	___ftmul@cntr,f,c
  6358  010F76  D7EE               	goto	l3352
  6359  010F78  C037  F012         	movff	___ftmul@f3_as_product,___ftpack@arg
  6360  010F7C  C038  F013         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  6361  010F80  C039  F014         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  6362  010F84  C036  F015         	movff	___ftmul@exp,___ftpack@exp
  6363  010F88  C03B  F016         	movff	___ftmul@sign,___ftpack@sign
  6364  010F8C  ECD8  F089         	call	___ftpack	;wreg free
  6365  010F90  C012  F02D         	movff	?___ftpack,?___ftmul
  6366  010F94  C013  F02E         	movff	?___ftpack+1,?___ftmul+1
  6367  010F98  C014  F02F         	movff	?___ftpack+2,?___ftmul+2
  6368  010F9C  0012               	return	
  6369  010F9E                     __end_of___ftmul:
  6370                           	opt stack 0
  6371                           tblptru	equ	0xFF8
  6372                           tblptrh	equ	0xFF7
  6373                           tblptrl	equ	0xFF6
  6374                           tablat	equ	0xFF5
  6375                           prodh	equ	0xFF4
  6376                           prodl	equ	0xFF3
  6377                           intcon	equ	0xFF2
  6378                           indf0	equ	0xFEF
  6379                           postinc0	equ	0xFEE
  6380                           fsr0h	equ	0xFEA
  6381                           fsr0l	equ	0xFE9
  6382                           wreg	equ	0xFE8
  6383                           indf1	equ	0xFE7
  6384                           postdec1	equ	0xFE5
  6385                           fsr1h	equ	0xFE2
  6386                           fsr1l	equ	0xFE1
  6387                           indf2	equ	0xFDF
  6388                           postinc2	equ	0xFDE
  6389                           postdec2	equ	0xFDD
  6390                           fsr2h	equ	0xFDA
  6391                           fsr2l	equ	0xFD9
  6392                           status	equ	0xFD8
  6393                           
  6394 ;; *************** function ___ftsub *****************
  6395 ;; Defined at:
  6396 ;;		line 20 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftsub.c"
  6397 ;; Parameters:    Size  Location     Type
  6398 ;;  f1              3   12[BANK0 ] float 
  6399 ;;  f2              3   15[BANK0 ] float 
  6400 ;; Auto vars:     Size  Location     Type
  6401 ;;		None
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  3   12[BANK0 ] float 
  6404 ;; Registers used:
  6405 ;;		wreg, status,2, status,0, cstack
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6411 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6412 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6414 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6415 ;;Total ram usage:        6 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; Hardware stack levels required when called:    4
  6418 ;; This function calls:
  6419 ;;		___ftadd
  6420 ;; This function is called by:
  6421 ;;		_exp
  6422 ;; This function uses a non-reentrant model
  6423 ;;
  6424                           
  6425                           	psect	text34
  6426  011B0A                     __ptext34:
  6427                           	opt stack 0
  6428  011B0A                     ___ftsub:
  6429                           	opt stack 23
  6430                           
  6431                           ;incstack = 0
  6432  011B0A  0100               	movlb	0	; () banked
  6433  011B0C  516F               	movf	___ftsub@f2& (0+255),w,b
  6434  011B0E  0100               	movlb	0	; () banked
  6435  011B10  1170               	iorwf	(___ftsub@f2+1)& (0+255),w,b
  6436  011B12  0100               	movlb	0	; () banked
  6437  011B14  1171               	iorwf	(___ftsub@f2+2)& (0+255),w,b
  6438  011B16  B4D8               	btfsc	status,2,c
  6439  011B18  D009               	goto	l3478
  6440                           
  6441                           ; BSR set to: 0
  6442  011B1A  0E00               	movlw	0
  6443  011B1C  0100               	movlb	0	; () banked
  6444  011B1E  1B6F               	xorwf	___ftsub@f2& (0+255),f,b
  6445  011B20  0E00               	movlw	0
  6446  011B22  0100               	movlb	0	; () banked
  6447  011B24  1B70               	xorwf	(___ftsub@f2+1)& (0+255),f,b
  6448  011B26  0E80               	movlw	128
  6449  011B28  0100               	movlb	0	; () banked
  6450  011B2A  1B71               	xorwf	(___ftsub@f2+2)& (0+255),f,b
  6451  011B2C                     l3478:
  6452                           
  6453                           ; BSR set to: 0
  6454  011B2C  C06C  F060         	movff	___ftsub@f1,___ftadd@f1
  6455  011B30  C06D  F061         	movff	___ftsub@f1+1,___ftadd@f1+1
  6456  011B34  C06E  F062         	movff	___ftsub@f1+2,___ftadd@f1+2
  6457  011B38  C06F  F063         	movff	___ftsub@f2,___ftadd@f2
  6458  011B3C  C070  F064         	movff	___ftsub@f2+1,___ftadd@f2+1
  6459  011B40  C071  F065         	movff	___ftsub@f2+2,___ftadd@f2+2
  6460  011B44  EC00  F080         	call	___ftadd	;wreg free
  6461  011B48  C060  F06C         	movff	?___ftadd,?___ftsub
  6462  011B4C  C061  F06D         	movff	?___ftadd+1,?___ftsub+1
  6463  011B50  C062  F06E         	movff	?___ftadd+2,?___ftsub+2
  6464  011B54  0012               	return	
  6465  011B56                     __end_of___ftsub:
  6466                           	opt stack 0
  6467                           tblptru	equ	0xFF8
  6468                           tblptrh	equ	0xFF7
  6469                           tblptrl	equ	0xFF6
  6470                           tablat	equ	0xFF5
  6471                           prodh	equ	0xFF4
  6472                           prodl	equ	0xFF3
  6473                           intcon	equ	0xFF2
  6474                           indf0	equ	0xFEF
  6475                           postinc0	equ	0xFEE
  6476                           fsr0h	equ	0xFEA
  6477                           fsr0l	equ	0xFE9
  6478                           wreg	equ	0xFE8
  6479                           indf1	equ	0xFE7
  6480                           postdec1	equ	0xFE5
  6481                           fsr1h	equ	0xFE2
  6482                           fsr1l	equ	0xFE1
  6483                           indf2	equ	0xFDF
  6484                           postinc2	equ	0xFDE
  6485                           postdec2	equ	0xFDD
  6486                           fsr2h	equ	0xFDA
  6487                           fsr2l	equ	0xFD9
  6488                           status	equ	0xFD8
  6489                           
  6490 ;; *************** function ___ftadd *****************
  6491 ;; Defined at:
  6492 ;;		line 86 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftadd.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;  f1              3    0[BANK0 ] float 
  6495 ;;  f2              3    3[BANK0 ] float 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;  exp1            1   11[BANK0 ] unsigned char 
  6498 ;;  exp2            1   10[BANK0 ] unsigned char 
  6499 ;;  sign            1    9[BANK0 ] unsigned char 
  6500 ;; Return value:  Size  Location     Type
  6501 ;;                  3    0[BANK0 ] float 
  6502 ;; Registers used:
  6503 ;;		wreg, status,2, status,0, cstack
  6504 ;; Tracked objects:
  6505 ;;		On entry : 0/0
  6506 ;;		On exit  : 0/0
  6507 ;;		Unchanged: 0/0
  6508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6509 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6510 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6511 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6512 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6513 ;;Total ram usage:       12 bytes
  6514 ;; Hardware stack levels used:    1
  6515 ;; Hardware stack levels required when called:    3
  6516 ;; This function calls:
  6517 ;;		___ftpack
  6518 ;; This function is called by:
  6519 ;;		_initSPI
  6520 ;;		_adjustDigipot
  6521 ;;		___ftsub
  6522 ;;		_floor
  6523 ;;		_log
  6524 ;;		_eval_poly
  6525 ;; This function uses a non-reentrant model
  6526 ;;
  6527                           
  6528                           	psect	text35
  6529  010000                     __ptext35:
  6530                           	opt stack 0
  6531  010000                     ___ftadd:
  6532                           	opt stack 23
  6533                           
  6534                           ;incstack = 0
  6535  010000  C062  F066         	movff	___ftadd@f1+2,??___ftadd
  6536  010004  0100               	movlb	0	; () banked
  6537  010006  6B67               	clrf	(??___ftadd+1)& (0+255),b
  6538  010008  6B68               	clrf	(??___ftadd+2)& (0+255),b
  6539  01000A  0100               	movlb	0	; () banked
  6540  01000C  3561               	rlcf	(___ftadd@f1+1)& (0+255),w,b
  6541  01000E  0100               	movlb	0	; () banked
  6542  010010  3766               	rlcf	??___ftadd& (0+255),f,b
  6543  010012  E301               	bnc	u2851
  6544  010014  8167               	bsf	(??___ftadd+1)& (0+255),0,b
  6545  010016                     u2851:
  6546  010016  0100               	movlb	0	; () banked
  6547  010018  5166               	movf	??___ftadd& (0+255),w,b
  6548  01001A  0100               	movlb	0	; () banked
  6549  01001C  6F6B               	movwf	___ftadd@exp1& (0+255),b
  6550  01001E  C065  F066         	movff	___ftadd@f2+2,??___ftadd
  6551  010022  0100               	movlb	0	; () banked
  6552  010024  6B67               	clrf	(??___ftadd+1)& (0+255),b
  6553  010026  6B68               	clrf	(??___ftadd+2)& (0+255),b
  6554  010028  0100               	movlb	0	; () banked
  6555  01002A  3564               	rlcf	(___ftadd@f2+1)& (0+255),w,b
  6556  01002C  0100               	movlb	0	; () banked
  6557  01002E  3766               	rlcf	??___ftadd& (0+255),f,b
  6558  010030  E301               	bnc	u2861
  6559  010032  8167               	bsf	(??___ftadd+1)& (0+255),0,b
  6560  010034                     u2861:
  6561  010034  0100               	movlb	0	; () banked
  6562  010036  5166               	movf	??___ftadd& (0+255),w,b
  6563  010038  0100               	movlb	0	; () banked
  6564  01003A  6F6A               	movwf	___ftadd@exp2& (0+255),b
  6565                           
  6566                           ; BSR set to: 0
  6567  01003C  0100               	movlb	0	; () banked
  6568  01003E  516B               	movf	___ftadd@exp1& (0+255),w,b
  6569  010040  0100               	movlb	0	; () banked
  6570  010042  B4D8               	btfsc	status,2,c
  6571  010044  D011               	goto	l691
  6572                           
  6573                           ; BSR set to: 0
  6574  010046  0100               	movlb	0	; () banked
  6575  010048  516A               	movf	___ftadd@exp2& (0+255),w,b
  6576  01004A  0100               	movlb	0	; () banked
  6577  01004C  5D6B               	subwf	___ftadd@exp1& (0+255),w,b
  6578  01004E  B0D8               	btfsc	status,0,c
  6579  010050  D012               	goto	l3254
  6580                           
  6581                           ; BSR set to: 0
  6582  010052  0100               	movlb	0	; () banked
  6583  010054  516B               	movf	___ftadd@exp1& (0+255),w,b
  6584  010056  0800               	sublw	0
  6585  010058  0100               	movlb	0	; () banked
  6586  01005A  256A               	addwf	___ftadd@exp2& (0+255),w,b
  6587  01005C  0100               	movlb	0	; () banked
  6588  01005E  6F66               	movwf	??___ftadd& (0+255),b
  6589  010060  0E18               	movlw	24
  6590  010062  0100               	movlb	0	; () banked
  6591  010064  6566               	cpfsgt	??___ftadd& (0+255),b
  6592  010066  D007               	goto	l3254
  6593  010068                     l691:
  6594                           
  6595                           ; BSR set to: 0
  6596  010068  C063  F060         	movff	___ftadd@f2,?___ftadd
  6597  01006C  C064  F061         	movff	___ftadd@f2+1,?___ftadd+1
  6598  010070  C065  F062         	movff	___ftadd@f2+2,?___ftadd+2
  6599  010074  0012               	return	
  6600  010076                     l3254:
  6601                           
  6602                           ; BSR set to: 0
  6603  010076  0100               	movlb	0	; () banked
  6604  010078  516A               	movf	___ftadd@exp2& (0+255),w,b
  6605  01007A  0100               	movlb	0	; () banked
  6606  01007C  B4D8               	btfsc	status,2,c
  6607  01007E  D011               	goto	l695
  6608                           
  6609                           ; BSR set to: 0
  6610  010080  0100               	movlb	0	; () banked
  6611  010082  516B               	movf	___ftadd@exp1& (0+255),w,b
  6612  010084  0100               	movlb	0	; () banked
  6613  010086  5D6A               	subwf	___ftadd@exp2& (0+255),w,b
  6614  010088  B0D8               	btfsc	status,0,c
  6615  01008A  D012               	goto	l3260
  6616                           
  6617                           ; BSR set to: 0
  6618  01008C  0100               	movlb	0	; () banked
  6619  01008E  516A               	movf	___ftadd@exp2& (0+255),w,b
  6620  010090  0800               	sublw	0
  6621  010092  0100               	movlb	0	; () banked
  6622  010094  256B               	addwf	___ftadd@exp1& (0+255),w,b
  6623  010096  0100               	movlb	0	; () banked
  6624  010098  6F66               	movwf	??___ftadd& (0+255),b
  6625  01009A  0E18               	movlw	24
  6626  01009C  0100               	movlb	0	; () banked
  6627  01009E  6566               	cpfsgt	??___ftadd& (0+255),b
  6628  0100A0  D007               	goto	l3260
  6629  0100A2                     l695:
  6630                           
  6631                           ; BSR set to: 0
  6632  0100A2  C060  F060         	movff	___ftadd@f1,?___ftadd
  6633  0100A6  C061  F061         	movff	___ftadd@f1+1,?___ftadd+1
  6634  0100AA  C062  F062         	movff	___ftadd@f1+2,?___ftadd+2
  6635  0100AE  0012               	return	
  6636  0100B0                     l3260:
  6637                           
  6638                           ; BSR set to: 0
  6639  0100B0  0E06               	movlw	6
  6640  0100B2  0100               	movlb	0	; () banked
  6641  0100B4  6F69               	movwf	___ftadd@sign& (0+255),b
  6642                           
  6643                           ; BSR set to: 0
  6644  0100B6  0100               	movlb	0	; () banked
  6645  0100B8  AF62               	btfss	(___ftadd@f1+2)& (0+255),7,b
  6646  0100BA  D002               	goto	l3266
  6647                           
  6648                           ; BSR set to: 0
  6649  0100BC  0100               	movlb	0	; () banked
  6650  0100BE  8F69               	bsf	___ftadd@sign& (0+255),7,b
  6651  0100C0                     l3266:
  6652                           
  6653                           ; BSR set to: 0
  6654  0100C0  0100               	movlb	0	; () banked
  6655  0100C2  AF65               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6656  0100C4  D002               	goto	l697
  6657                           
  6658                           ; BSR set to: 0
  6659  0100C6  0100               	movlb	0	; () banked
  6660  0100C8  8D69               	bsf	___ftadd@sign& (0+255),6,b
  6661  0100CA                     l697:
  6662                           
  6663                           ; BSR set to: 0
  6664  0100CA  0100               	movlb	0	; () banked
  6665  0100CC  8F61               	bsf	(___ftadd@f1+1)& (0+255),7,b
  6666                           
  6667                           ; BSR set to: 0
  6668  0100CE  0EFF               	movlw	255
  6669  0100D0  0100               	movlb	0	; () banked
  6670  0100D2  1760               	andwf	___ftadd@f1& (0+255),f,b
  6671  0100D4  0EFF               	movlw	255
  6672  0100D6  0100               	movlb	0	; () banked
  6673  0100D8  1761               	andwf	(___ftadd@f1+1)& (0+255),f,b
  6674  0100DA  0E00               	movlw	0
  6675  0100DC  0100               	movlb	0	; () banked
  6676  0100DE  1762               	andwf	(___ftadd@f1+2)& (0+255),f,b
  6677  0100E0  0100               	movlb	0	; () banked
  6678  0100E2  8F64               	bsf	(___ftadd@f2+1)& (0+255),7,b
  6679                           
  6680                           ; BSR set to: 0
  6681  0100E4  0EFF               	movlw	255
  6682  0100E6  0100               	movlb	0	; () banked
  6683  0100E8  1763               	andwf	___ftadd@f2& (0+255),f,b
  6684  0100EA  0EFF               	movlw	255
  6685  0100EC  0100               	movlb	0	; () banked
  6686  0100EE  1764               	andwf	(___ftadd@f2+1)& (0+255),f,b
  6687  0100F0  0E00               	movlw	0
  6688  0100F2  0100               	movlb	0	; () banked
  6689  0100F4  1765               	andwf	(___ftadd@f2+2)& (0+255),f,b
  6690                           
  6691                           ; BSR set to: 0
  6692  0100F6  0100               	movlb	0	; () banked
  6693  0100F8  516A               	movf	___ftadd@exp2& (0+255),w,b
  6694  0100FA  0100               	movlb	0	; () banked
  6695  0100FC  5D6B               	subwf	___ftadd@exp1& (0+255),w,b
  6696  0100FE  B0D8               	btfsc	status,0,c
  6697  010100  D025               	goto	l3286
  6698  010102                     l3276:
  6699                           
  6700                           ; BSR set to: 0
  6701  010102  0100               	movlb	0	; () banked
  6702  010104  90D8               	bcf	status,0,c
  6703  010106  3763               	rlcf	___ftadd@f2& (0+255),f,b
  6704  010108  3764               	rlcf	(___ftadd@f2+1)& (0+255),f,b
  6705  01010A  3765               	rlcf	(___ftadd@f2+2)& (0+255),f,b
  6706  01010C  0100               	movlb	0	; () banked
  6707  01010E  076A               	decf	___ftadd@exp2& (0+255),f,b
  6708                           
  6709                           ; BSR set to: 0
  6710  010110  0100               	movlb	0	; () banked
  6711  010112  516B               	movf	___ftadd@exp1& (0+255),w,b
  6712  010114  0100               	movlb	0	; () banked
  6713  010116  196A               	xorwf	___ftadd@exp2& (0+255),w,b
  6714  010118  B4D8               	btfsc	status,2,c
  6715  01011A  D011               	goto	l3284
  6716                           
  6717                           ; BSR set to: 0
  6718  01011C  0100               	movlb	0	; () banked
  6719  01011E  0769               	decf	___ftadd@sign& (0+255),f,b
  6720  010120  C069  F066         	movff	___ftadd@sign,??___ftadd
  6721  010124  0E07               	movlw	7
  6722  010126  0100               	movlb	0	; () banked
  6723  010128  1766               	andwf	??___ftadd& (0+255),f,b
  6724  01012A  B4D8               	btfsc	status,2,c
  6725  01012C  D008               	goto	l3284
  6726  01012E  D7E9               	goto	l3276
  6727  010130                     l3282:
  6728                           
  6729                           ; BSR set to: 0
  6730  010130  0100               	movlb	0	; () banked
  6731  010132  90D8               	bcf	status,0,c
  6732  010134  3362               	rrcf	(___ftadd@f1+2)& (0+255),f,b
  6733  010136  3361               	rrcf	(___ftadd@f1+1)& (0+255),f,b
  6734  010138  3360               	rrcf	___ftadd@f1& (0+255),f,b
  6735  01013A  0100               	movlb	0	; () banked
  6736  01013C  2B6B               	incf	___ftadd@exp1& (0+255),f,b
  6737  01013E                     l3284:
  6738                           
  6739                           ; BSR set to: 0
  6740  01013E  0100               	movlb	0	; () banked
  6741  010140  516A               	movf	___ftadd@exp2& (0+255),w,b
  6742  010142  0100               	movlb	0	; () banked
  6743  010144  196B               	xorwf	___ftadd@exp1& (0+255),w,b
  6744  010146  B4D8               	btfsc	status,2,c
  6745  010148  D02B               	goto	l706
  6746  01014A  D7F2               	goto	l3282
  6747  01014C                     l3286:
  6748                           
  6749                           ; BSR set to: 0
  6750  01014C  0100               	movlb	0	; () banked
  6751  01014E  516B               	movf	___ftadd@exp1& (0+255),w,b
  6752  010150  0100               	movlb	0	; () banked
  6753  010152  5D6A               	subwf	___ftadd@exp2& (0+255),w,b
  6754  010154  B0D8               	btfsc	status,0,c
  6755  010156  D024               	goto	l706
  6756  010158                     l3288:
  6757                           
  6758                           ; BSR set to: 0
  6759  010158  0100               	movlb	0	; () banked
  6760  01015A  90D8               	bcf	status,0,c
  6761  01015C  3760               	rlcf	___ftadd@f1& (0+255),f,b
  6762  01015E  3761               	rlcf	(___ftadd@f1+1)& (0+255),f,b
  6763  010160  3762               	rlcf	(___ftadd@f1+2)& (0+255),f,b
  6764  010162  0100               	movlb	0	; () banked
  6765  010164  076B               	decf	___ftadd@exp1& (0+255),f,b
  6766                           
  6767                           ; BSR set to: 0
  6768  010166  0100               	movlb	0	; () banked
  6769  010168  516B               	movf	___ftadd@exp1& (0+255),w,b
  6770  01016A  0100               	movlb	0	; () banked
  6771  01016C  196A               	xorwf	___ftadd@exp2& (0+255),w,b
  6772  01016E  B4D8               	btfsc	status,2,c
  6773  010170  D011               	goto	l3296
  6774                           
  6775                           ; BSR set to: 0
  6776  010172  0100               	movlb	0	; () banked
  6777  010174  0769               	decf	___ftadd@sign& (0+255),f,b
  6778  010176  C069  F066         	movff	___ftadd@sign,??___ftadd
  6779  01017A  0E07               	movlw	7
  6780  01017C  0100               	movlb	0	; () banked
  6781  01017E  1766               	andwf	??___ftadd& (0+255),f,b
  6782  010180  B4D8               	btfsc	status,2,c
  6783  010182  D008               	goto	l3296
  6784  010184  D7E9               	goto	l3288
  6785  010186                     l3294:
  6786                           
  6787                           ; BSR set to: 0
  6788  010186  0100               	movlb	0	; () banked
  6789  010188  90D8               	bcf	status,0,c
  6790  01018A  3365               	rrcf	(___ftadd@f2+2)& (0+255),f,b
  6791  01018C  3364               	rrcf	(___ftadd@f2+1)& (0+255),f,b
  6792  01018E  3363               	rrcf	___ftadd@f2& (0+255),f,b
  6793  010190  0100               	movlb	0	; () banked
  6794  010192  2B6A               	incf	___ftadd@exp2& (0+255),f,b
  6795  010194                     l3296:
  6796                           
  6797                           ; BSR set to: 0
  6798  010194  0100               	movlb	0	; () banked
  6799  010196  516A               	movf	___ftadd@exp2& (0+255),w,b
  6800  010198  0100               	movlb	0	; () banked
  6801  01019A  196B               	xorwf	___ftadd@exp1& (0+255),w,b
  6802  01019C  A4D8               	btfss	status,2,c
  6803  01019E  D7F3               	goto	l3294
  6804  0101A0                     l706:
  6805                           
  6806                           ; BSR set to: 0
  6807  0101A0  0100               	movlb	0	; () banked
  6808  0101A2  AF69               	btfss	___ftadd@sign& (0+255),7,b
  6809  0101A4  D012               	goto	l715
  6810                           
  6811                           ; BSR set to: 0
  6812  0101A6  0EFF               	movlw	255
  6813  0101A8  0100               	movlb	0	; () banked
  6814  0101AA  1B60               	xorwf	___ftadd@f1& (0+255),f,b
  6815  0101AC  0EFF               	movlw	255
  6816  0101AE  0100               	movlb	0	; () banked
  6817  0101B0  1B61               	xorwf	(___ftadd@f1+1)& (0+255),f,b
  6818  0101B2  0EFF               	movlw	255
  6819  0101B4  0100               	movlb	0	; () banked
  6820  0101B6  1B62               	xorwf	(___ftadd@f1+2)& (0+255),f,b
  6821  0101B8  0E01               	movlw	1
  6822  0101BA  0100               	movlb	0	; () banked
  6823  0101BC  2760               	addwf	___ftadd@f1& (0+255),f,b
  6824  0101BE  0E00               	movlw	0
  6825  0101C0  0100               	movlb	0	; () banked
  6826  0101C2  2361               	addwfc	(___ftadd@f1+1)& (0+255),f,b
  6827  0101C4  0E00               	movlw	0
  6828  0101C6  0100               	movlb	0	; () banked
  6829  0101C8  2362               	addwfc	(___ftadd@f1+2)& (0+255),f,b
  6830  0101CA                     l715:
  6831                           
  6832                           ; BSR set to: 0
  6833  0101CA  0100               	movlb	0	; () banked
  6834  0101CC  AD69               	btfss	___ftadd@sign& (0+255),6,b
  6835  0101CE  D012               	goto	l3302
  6836                           
  6837                           ; BSR set to: 0
  6838  0101D0  0EFF               	movlw	255
  6839  0101D2  0100               	movlb	0	; () banked
  6840  0101D4  1B63               	xorwf	___ftadd@f2& (0+255),f,b
  6841  0101D6  0EFF               	movlw	255
  6842  0101D8  0100               	movlb	0	; () banked
  6843  0101DA  1B64               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6844  0101DC  0EFF               	movlw	255
  6845  0101DE  0100               	movlb	0	; () banked
  6846  0101E0  1B65               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6847  0101E2  0E01               	movlw	1
  6848  0101E4  0100               	movlb	0	; () banked
  6849  0101E6  2763               	addwf	___ftadd@f2& (0+255),f,b
  6850  0101E8  0E00               	movlw	0
  6851  0101EA  0100               	movlb	0	; () banked
  6852  0101EC  2364               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6853  0101EE  0E00               	movlw	0
  6854  0101F0  0100               	movlb	0	; () banked
  6855  0101F2  2365               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6856  0101F4                     l3302:
  6857                           
  6858                           ; BSR set to: 0
  6859  0101F4  0E00               	movlw	0
  6860  0101F6  0100               	movlb	0	; () banked
  6861  0101F8  6F69               	movwf	___ftadd@sign& (0+255),b
  6862                           
  6863                           ; BSR set to: 0
  6864  0101FA  0100               	movlb	0	; () banked
  6865  0101FC  5160               	movf	___ftadd@f1& (0+255),w,b
  6866  0101FE  0100               	movlb	0	; () banked
  6867  010200  2763               	addwf	___ftadd@f2& (0+255),f,b
  6868  010202  0100               	movlb	0	; () banked
  6869  010204  5161               	movf	(___ftadd@f1+1)& (0+255),w,b
  6870  010206  0100               	movlb	0	; () banked
  6871  010208  2364               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6872  01020A  0100               	movlb	0	; () banked
  6873  01020C  5162               	movf	(___ftadd@f1+2)& (0+255),w,b
  6874  01020E  0100               	movlb	0	; () banked
  6875  010210  2365               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6876                           
  6877                           ; BSR set to: 0
  6878  010212  0100               	movlb	0	; () banked
  6879  010214  AF65               	btfss	(___ftadd@f2+2)& (0+255),7,b
  6880  010216  D015               	goto	l3312
  6881                           
  6882                           ; BSR set to: 0
  6883  010218  0EFF               	movlw	255
  6884  01021A  0100               	movlb	0	; () banked
  6885  01021C  1B63               	xorwf	___ftadd@f2& (0+255),f,b
  6886  01021E  0EFF               	movlw	255
  6887  010220  0100               	movlb	0	; () banked
  6888  010222  1B64               	xorwf	(___ftadd@f2+1)& (0+255),f,b
  6889  010224  0EFF               	movlw	255
  6890  010226  0100               	movlb	0	; () banked
  6891  010228  1B65               	xorwf	(___ftadd@f2+2)& (0+255),f,b
  6892  01022A  0E01               	movlw	1
  6893  01022C  0100               	movlb	0	; () banked
  6894  01022E  2763               	addwf	___ftadd@f2& (0+255),f,b
  6895  010230  0E00               	movlw	0
  6896  010232  0100               	movlb	0	; () banked
  6897  010234  2364               	addwfc	(___ftadd@f2+1)& (0+255),f,b
  6898  010236  0E00               	movlw	0
  6899  010238  0100               	movlb	0	; () banked
  6900  01023A  2365               	addwfc	(___ftadd@f2+2)& (0+255),f,b
  6901                           
  6902                           ; BSR set to: 0
  6903  01023C  0E01               	movlw	1
  6904  01023E  0100               	movlb	0	; () banked
  6905  010240  6F69               	movwf	___ftadd@sign& (0+255),b
  6906  010242                     l3312:
  6907                           
  6908                           ; BSR set to: 0
  6909  010242  C063  F012         	movff	___ftadd@f2,___ftpack@arg
  6910  010246  C064  F013         	movff	___ftadd@f2+1,___ftpack@arg+1
  6911  01024A  C065  F014         	movff	___ftadd@f2+2,___ftpack@arg+2
  6912  01024E  C06B  F015         	movff	___ftadd@exp1,___ftpack@exp
  6913  010252  C069  F016         	movff	___ftadd@sign,___ftpack@sign
  6914  010256  ECD8  F089         	call	___ftpack	;wreg free
  6915  01025A  C012  F060         	movff	?___ftpack,?___ftadd
  6916  01025E  C013  F061         	movff	?___ftpack+1,?___ftadd+1
  6917  010262  C014  F062         	movff	?___ftpack+2,?___ftadd+2
  6918  010266  0012               	return	
  6919  010268                     __end_of___ftadd:
  6920                           	opt stack 0
  6921                           tblptru	equ	0xFF8
  6922                           tblptrh	equ	0xFF7
  6923                           tblptrl	equ	0xFF6
  6924                           tablat	equ	0xFF5
  6925                           prodh	equ	0xFF4
  6926                           prodl	equ	0xFF3
  6927                           intcon	equ	0xFF2
  6928                           indf0	equ	0xFEF
  6929                           postinc0	equ	0xFEE
  6930                           fsr0h	equ	0xFEA
  6931                           fsr0l	equ	0xFE9
  6932                           wreg	equ	0xFE8
  6933                           indf1	equ	0xFE7
  6934                           postdec1	equ	0xFE5
  6935                           fsr1h	equ	0xFE2
  6936                           fsr1l	equ	0xFE1
  6937                           indf2	equ	0xFDF
  6938                           postinc2	equ	0xFDE
  6939                           postdec2	equ	0xFDD
  6940                           fsr2h	equ	0xFDA
  6941                           fsr2l	equ	0xFD9
  6942                           status	equ	0xFD8
  6943                           
  6944 ;; *************** function ___ftneg *****************
  6945 ;; Defined at:
  6946 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftneg.c"
  6947 ;; Parameters:    Size  Location     Type
  6948 ;;  f1              3   17[COMRAM] float 
  6949 ;; Auto vars:     Size  Location     Type
  6950 ;;		None
  6951 ;; Return value:  Size  Location     Type
  6952 ;;                  3   17[COMRAM] float 
  6953 ;; Registers used:
  6954 ;;		wreg, status,2, status,0
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  6960 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6961 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6962 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6963 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  6964 ;;Total ram usage:        3 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; Hardware stack levels required when called:    2
  6967 ;; This function calls:
  6968 ;;		Nothing
  6969 ;; This function is called by:
  6970 ;;		_pow
  6971 ;;		_exp
  6972 ;; This function uses a non-reentrant model
  6973 ;;
  6974                           
  6975                           	psect	text36
  6976  011CF4                     __ptext36:
  6977                           	opt stack 0
  6978  011CF4                     ___ftneg:
  6979                           	opt stack 25
  6980                           
  6981                           ;incstack = 0
  6982  011CF4  5012               	movf	___ftneg@f1,w,c
  6983  011CF6  1013               	iorwf	___ftneg@f1+1,w,c
  6984  011CF8  1014               	iorwf	___ftneg@f1+2,w,c
  6985  011CFA  B4D8               	btfsc	status,2,c
  6986  011CFC  D006               	goto	l748
  6987  011CFE  0E00               	movlw	0
  6988  011D00  1A12               	xorwf	___ftneg@f1,f,c
  6989  011D02  0E00               	movlw	0
  6990  011D04  1A13               	xorwf	___ftneg@f1+1,f,c
  6991  011D06  0E80               	movlw	128
  6992  011D08  1A14               	xorwf	___ftneg@f1+2,f,c
  6993  011D0A                     l748:
  6994  011D0A  C012  F012         	movff	___ftneg@f1,?___ftneg
  6995  011D0E  C013  F013         	movff	___ftneg@f1+1,?___ftneg+1
  6996  011D12  C014  F014         	movff	___ftneg@f1+2,?___ftneg+2
  6997  011D16  0012               	return		;funcret
  6998  011D18                     __end_of___ftneg:
  6999                           	opt stack 0
  7000                           tblptru	equ	0xFF8
  7001                           tblptrh	equ	0xFF7
  7002                           tblptrl	equ	0xFF6
  7003                           tablat	equ	0xFF5
  7004                           prodh	equ	0xFF4
  7005                           prodl	equ	0xFF3
  7006                           intcon	equ	0xFF2
  7007                           indf0	equ	0xFEF
  7008                           postinc0	equ	0xFEE
  7009                           fsr0h	equ	0xFEA
  7010                           fsr0l	equ	0xFE9
  7011                           wreg	equ	0xFE8
  7012                           indf1	equ	0xFE7
  7013                           postdec1	equ	0xFE5
  7014                           fsr1h	equ	0xFE2
  7015                           fsr1l	equ	0xFE1
  7016                           indf2	equ	0xFDF
  7017                           postinc2	equ	0xFDE
  7018                           postdec2	equ	0xFDD
  7019                           fsr2h	equ	0xFDA
  7020                           fsr2l	equ	0xFD9
  7021                           status	equ	0xFD8
  7022                           
  7023 ;; *************** function ___ftdiv *****************
  7024 ;; Defined at:
  7025 ;;		line 54 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\ftdiv.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  f1              3   29[COMRAM] float 
  7028 ;;  f2              3   32[COMRAM] float 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;  f3              3   39[COMRAM] float 
  7031 ;;  sign            1   43[COMRAM] unsigned char 
  7032 ;;  exp             1   42[COMRAM] unsigned char 
  7033 ;;  cntr            1   38[COMRAM] unsigned char 
  7034 ;; Return value:  Size  Location     Type
  7035 ;;                  3   29[COMRAM] float 
  7036 ;; Registers used:
  7037 ;;		wreg, status,2, status,0, cstack
  7038 ;; Tracked objects:
  7039 ;;		On entry : 0/0
  7040 ;;		On exit  : 0/0
  7041 ;;		Unchanged: 0/0
  7042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7043 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7044 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7045 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7046 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7047 ;;Total ram usage:       15 bytes
  7048 ;; Hardware stack levels used:    1
  7049 ;; Hardware stack levels required when called:    3
  7050 ;; This function calls:
  7051 ;;		___ftpack
  7052 ;; This function is called by:
  7053 ;;		_calculateTemp
  7054 ;;		_initSPI
  7055 ;;		_adjustDigipot
  7056 ;;		_exp
  7057 ;; This function uses a non-reentrant model
  7058 ;;
  7059                           
  7060                           	psect	text37
  7061  010F9E                     __ptext37:
  7062                           	opt stack 0
  7063  010F9E                     ___ftdiv:
  7064                           	opt stack 25
  7065                           
  7066                           ;incstack = 0
  7067  010F9E  C020  F024         	movff	___ftdiv@f1+2,??___ftdiv
  7068  010FA2  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  7069  010FA4  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  7070  010FA6  341F               	rlcf	___ftdiv@f1+1,w,c
  7071  010FA8  3624               	rlcf	??___ftdiv& (0+255),f,c
  7072  010FAA  E301               	bnc	u3231
  7073  010FAC  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  7074  010FAE                     u3231:
  7075  010FAE  5024               	movf	??___ftdiv,w,c
  7076  010FB0  6E2B               	movwf	___ftdiv@exp,c
  7077  010FB2  502B               	movf	___ftdiv@exp,w,c
  7078  010FB4  A4D8               	btfss	status,2,c
  7079  010FB6  D007               	goto	l3434
  7080  010FB8  0E00               	movlw	0
  7081  010FBA  6E1E               	movwf	?___ftdiv,c
  7082  010FBC  0E00               	movlw	0
  7083  010FBE  6E1F               	movwf	?___ftdiv+1,c
  7084  010FC0  0E00               	movlw	0
  7085  010FC2  6E20               	movwf	?___ftdiv+2,c
  7086  010FC4  0012               	return	
  7087  010FC6                     l3434:
  7088  010FC6  C023  F024         	movff	___ftdiv@f2+2,??___ftdiv
  7089  010FCA  6A25               	clrf	(??___ftdiv+1)& (0+255),c
  7090  010FCC  6A26               	clrf	(??___ftdiv+2)& (0+255),c
  7091  010FCE  3422               	rlcf	___ftdiv@f2+1,w,c
  7092  010FD0  3624               	rlcf	??___ftdiv& (0+255),f,c
  7093  010FD2  E301               	bnc	u3251
  7094  010FD4  8025               	bsf	(??___ftdiv+1)& (0+255),0,c
  7095  010FD6                     u3251:
  7096  010FD6  5024               	movf	??___ftdiv,w,c
  7097  010FD8  6E2C               	movwf	___ftdiv@sign,c
  7098  010FDA  502C               	movf	___ftdiv@sign,w,c
  7099  010FDC  A4D8               	btfss	status,2,c
  7100  010FDE  D007               	goto	l3440
  7101  010FE0  0E00               	movlw	0
  7102  010FE2  6E1E               	movwf	?___ftdiv,c
  7103  010FE4  0E00               	movlw	0
  7104  010FE6  6E1F               	movwf	?___ftdiv+1,c
  7105  010FE8  0E00               	movlw	0
  7106  010FEA  6E20               	movwf	?___ftdiv+2,c
  7107  010FEC  0012               	return	
  7108  010FEE                     l3440:
  7109  010FEE  0E00               	movlw	0
  7110  010FF0  6E28               	movwf	___ftdiv@f3,c
  7111  010FF2  0E00               	movlw	0
  7112  010FF4  6E29               	movwf	___ftdiv@f3+1,c
  7113  010FF6  0E00               	movlw	0
  7114  010FF8  6E2A               	movwf	___ftdiv@f3+2,c
  7115  010FFA  502C               	movf	___ftdiv@sign,w,c
  7116  010FFC  0F89               	addlw	137
  7117  010FFE  5E2B               	subwf	___ftdiv@exp,f,c
  7118  011000  C020  F02C         	movff	___ftdiv@f1+2,___ftdiv@sign
  7119  011004  5023               	movf	___ftdiv@f2+2,w,c
  7120  011006  1A2C               	xorwf	___ftdiv@sign,f,c
  7121  011008  0E80               	movlw	128
  7122  01100A  162C               	andwf	___ftdiv@sign,f,c
  7123  01100C  8E1F               	bsf	___ftdiv@f1+1,7,c
  7124  01100E  0EFF               	movlw	255
  7125  011010  161E               	andwf	___ftdiv@f1,f,c
  7126  011012  0EFF               	movlw	255
  7127  011014  161F               	andwf	___ftdiv@f1+1,f,c
  7128  011016  0E00               	movlw	0
  7129  011018  1620               	andwf	___ftdiv@f1+2,f,c
  7130  01101A  8E22               	bsf	___ftdiv@f2+1,7,c
  7131  01101C  0EFF               	movlw	255
  7132  01101E  1621               	andwf	___ftdiv@f2,f,c
  7133  011020  0EFF               	movlw	255
  7134  011022  1622               	andwf	___ftdiv@f2+1,f,c
  7135  011024  0E00               	movlw	0
  7136  011026  1623               	andwf	___ftdiv@f2+2,f,c
  7137  011028  0E18               	movlw	24
  7138  01102A  6E27               	movwf	___ftdiv@cntr,c
  7139  01102C                     l3460:
  7140  01102C  90D8               	bcf	status,0,c
  7141  01102E  3628               	rlcf	___ftdiv@f3,f,c
  7142  011030  3629               	rlcf	___ftdiv@f3+1,f,c
  7143  011032  362A               	rlcf	___ftdiv@f3+2,f,c
  7144  011034  5021               	movf	___ftdiv@f2,w,c
  7145  011036  5C1E               	subwf	___ftdiv@f1,w,c
  7146  011038  5022               	movf	___ftdiv@f2+1,w,c
  7147  01103A  581F               	subwfb	___ftdiv@f1+1,w,c
  7148  01103C  5023               	movf	___ftdiv@f2+2,w,c
  7149  01103E  5820               	subwfb	___ftdiv@f1+2,w,c
  7150  011040  A0D8               	btfss	status,0,c
  7151  011042  D007               	goto	l726
  7152  011044  5021               	movf	___ftdiv@f2,w,c
  7153  011046  5E1E               	subwf	___ftdiv@f1,f,c
  7154  011048  5022               	movf	___ftdiv@f2+1,w,c
  7155  01104A  5A1F               	subwfb	___ftdiv@f1+1,f,c
  7156  01104C  5023               	movf	___ftdiv@f2+2,w,c
  7157  01104E  5A20               	subwfb	___ftdiv@f1+2,f,c
  7158  011050  8028               	bsf	___ftdiv@f3,0,c
  7159  011052                     l726:
  7160  011052  90D8               	bcf	status,0,c
  7161  011054  361E               	rlcf	___ftdiv@f1,f,c
  7162  011056  361F               	rlcf	___ftdiv@f1+1,f,c
  7163  011058  3620               	rlcf	___ftdiv@f1+2,f,c
  7164  01105A  2E27               	decfsz	___ftdiv@cntr,f,c
  7165  01105C  D7E7               	goto	l3460
  7166  01105E  C028  F012         	movff	___ftdiv@f3,___ftpack@arg
  7167  011062  C029  F013         	movff	___ftdiv@f3+1,___ftpack@arg+1
  7168  011066  C02A  F014         	movff	___ftdiv@f3+2,___ftpack@arg+2
  7169  01106A  C02B  F015         	movff	___ftdiv@exp,___ftpack@exp
  7170  01106E  C02C  F016         	movff	___ftdiv@sign,___ftpack@sign
  7171  011072  ECD8  F089         	call	___ftpack	;wreg free
  7172  011076  C012  F01E         	movff	?___ftpack,?___ftdiv
  7173  01107A  C013  F01F         	movff	?___ftpack+1,?___ftdiv+1
  7174  01107E  C014  F020         	movff	?___ftpack+2,?___ftdiv+2
  7175  011082  0012               	return	
  7176  011084                     __end_of___ftdiv:
  7177                           	opt stack 0
  7178                           tblptru	equ	0xFF8
  7179                           tblptrh	equ	0xFF7
  7180                           tblptrl	equ	0xFF6
  7181                           tablat	equ	0xFF5
  7182                           prodh	equ	0xFF4
  7183                           prodl	equ	0xFF3
  7184                           intcon	equ	0xFF2
  7185                           indf0	equ	0xFEF
  7186                           postinc0	equ	0xFEE
  7187                           fsr0h	equ	0xFEA
  7188                           fsr0l	equ	0xFE9
  7189                           wreg	equ	0xFE8
  7190                           indf1	equ	0xFE7
  7191                           postdec1	equ	0xFE5
  7192                           fsr1h	equ	0xFE2
  7193                           fsr1l	equ	0xFE1
  7194                           indf2	equ	0xFDF
  7195                           postinc2	equ	0xFDE
  7196                           postdec2	equ	0xFDD
  7197                           fsr2h	equ	0xFDA
  7198                           fsr2l	equ	0xFD9
  7199                           status	equ	0xFD8
  7200                           
  7201 ;; *************** function ___awtoft *****************
  7202 ;; Defined at:
  7203 ;;		line 32 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\awtoft.c"
  7204 ;; Parameters:    Size  Location     Type
  7205 ;;  c               2   25[COMRAM] int 
  7206 ;; Auto vars:     Size  Location     Type
  7207 ;;  sign            1   28[COMRAM] unsigned char 
  7208 ;; Return value:  Size  Location     Type
  7209 ;;                  3   25[COMRAM] float 
  7210 ;; Registers used:
  7211 ;;		wreg, status,2, status,0, cstack
  7212 ;; Tracked objects:
  7213 ;;		On entry : 0/0
  7214 ;;		On exit  : 0/0
  7215 ;;		Unchanged: 0/0
  7216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7217 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7218 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7220 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7221 ;;Total ram usage:        4 bytes
  7222 ;; Hardware stack levels used:    1
  7223 ;; Hardware stack levels required when called:    3
  7224 ;; This function calls:
  7225 ;;		___ftpack
  7226 ;; This function is called by:
  7227 ;;		_calculateTemp
  7228 ;;		_initSPI
  7229 ;;		_adjustDigipot
  7230 ;;		_exp
  7231 ;;		_log
  7232 ;; This function uses a non-reentrant model
  7233 ;;
  7234                           
  7235                           	psect	text38
  7236  011BD2                     __ptext38:
  7237                           	opt stack 0
  7238  011BD2                     ___awtoft:
  7239                           	opt stack 25
  7240                           
  7241                           ;incstack = 0
  7242  011BD2  0E00               	movlw	0
  7243  011BD4  6E1D               	movwf	___awtoft@sign,c
  7244  011BD6  AE1B               	btfss	___awtoft@c+1,7,c
  7245  011BD8  D006               	goto	l3490
  7246  011BDA  6C1A               	negf	___awtoft@c,c
  7247  011BDC  1E1B               	comf	___awtoft@c+1,f,c
  7248  011BDE  B0D8               	btfsc	status,0,c
  7249  011BE0  2A1B               	incf	___awtoft@c+1,f,c
  7250  011BE2  0E01               	movlw	1
  7251  011BE4  6E1D               	movwf	___awtoft@sign,c
  7252  011BE6                     l3490:
  7253  011BE6  C01A  F012         	movff	___awtoft@c,___ftpack@arg
  7254  011BEA  C01B  F013         	movff	___awtoft@c+1,___ftpack@arg+1
  7255  011BEE  6A14               	clrf	___ftpack@arg+2,c
  7256  011BF0  0E8E               	movlw	142
  7257  011BF2  6E15               	movwf	___ftpack@exp,c
  7258  011BF4  C01D  F016         	movff	___awtoft@sign,___ftpack@sign
  7259  011BF8  ECD8  F089         	call	___ftpack	;wreg free
  7260  011BFC  C012  F01A         	movff	?___ftpack,?___awtoft
  7261  011C00  C013  F01B         	movff	?___ftpack+1,?___awtoft+1
  7262  011C04  C014  F01C         	movff	?___ftpack+2,?___awtoft+2
  7263  011C08  0012               	return	
  7264  011C0A                     __end_of___awtoft:
  7265                           	opt stack 0
  7266                           tblptru	equ	0xFF8
  7267                           tblptrh	equ	0xFF7
  7268                           tblptrl	equ	0xFF6
  7269                           tablat	equ	0xFF5
  7270                           prodh	equ	0xFF4
  7271                           prodl	equ	0xFF3
  7272                           intcon	equ	0xFF2
  7273                           indf0	equ	0xFEF
  7274                           postinc0	equ	0xFEE
  7275                           fsr0h	equ	0xFEA
  7276                           fsr0l	equ	0xFE9
  7277                           wreg	equ	0xFE8
  7278                           indf1	equ	0xFE7
  7279                           postdec1	equ	0xFE5
  7280                           fsr1h	equ	0xFE2
  7281                           fsr1l	equ	0xFE1
  7282                           indf2	equ	0xFDF
  7283                           postinc2	equ	0xFDE
  7284                           postdec2	equ	0xFDD
  7285                           fsr2h	equ	0xFDA
  7286                           fsr2l	equ	0xFD9
  7287                           status	equ	0xFD8
  7288                           
  7289 ;; *************** function ___lltoft *****************
  7290 ;; Defined at:
  7291 ;;		line 35 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lltoft.c"
  7292 ;; Parameters:    Size  Location     Type
  7293 ;;  c               4   25[COMRAM] unsigned long 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  exp             1   33[COMRAM] unsigned char 
  7296 ;; Return value:  Size  Location     Type
  7297 ;;                  3   25[COMRAM] float 
  7298 ;; Registers used:
  7299 ;;		wreg, status,2, status,0, cstack
  7300 ;; Tracked objects:
  7301 ;;		On entry : 0/0
  7302 ;;		On exit  : 0/0
  7303 ;;		Unchanged: 0/0
  7304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7305 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7307 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7308 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7309 ;;Total ram usage:        9 bytes
  7310 ;; Hardware stack levels used:    1
  7311 ;; Hardware stack levels required when called:    3
  7312 ;; This function calls:
  7313 ;;		___ftpack
  7314 ;; This function is called by:
  7315 ;;		_pow
  7316 ;; This function uses a non-reentrant model
  7317 ;;
  7318                           
  7319                           	psect	text39
  7320  0119B8                     __ptext39:
  7321                           	opt stack 0
  7322  0119B8                     ___lltoft:
  7323                           	opt stack 25
  7324                           
  7325                           ;incstack = 0
  7326  0119B8  0E8E               	movlw	142
  7327  0119BA  6E22               	movwf	___lltoft@exp,c
  7328  0119BC  D006               	goto	l3528
  7329  0119BE                     l3526:
  7330  0119BE  90D8               	bcf	status,0,c
  7331  0119C0  321D               	rrcf	___lltoft@c+3,f,c
  7332  0119C2  321C               	rrcf	___lltoft@c+2,f,c
  7333  0119C4  321B               	rrcf	___lltoft@c+1,f,c
  7334  0119C6  321A               	rrcf	___lltoft@c,f,c
  7335  0119C8  2A22               	incf	___lltoft@exp,f,c
  7336  0119CA                     l3528:
  7337  0119CA  0E00               	movlw	0
  7338  0119CC  141A               	andwf	___lltoft@c,w,c
  7339  0119CE  6E1E               	movwf	??___lltoft& (0+255),c
  7340  0119D0  0E00               	movlw	0
  7341  0119D2  141B               	andwf	___lltoft@c+1,w,c
  7342  0119D4  6E1F               	movwf	(??___lltoft+1)& (0+255),c
  7343  0119D6  0E00               	movlw	0
  7344  0119D8  141C               	andwf	___lltoft@c+2,w,c
  7345  0119DA  6E20               	movwf	(??___lltoft+2)& (0+255),c
  7346  0119DC  0EFF               	movlw	255
  7347  0119DE  141D               	andwf	___lltoft@c+3,w,c
  7348  0119E0  6E21               	movwf	(??___lltoft+3)& (0+255),c
  7349  0119E2  501E               	movf	??___lltoft,w,c
  7350  0119E4  101F               	iorwf	??___lltoft+1,w,c
  7351  0119E6  1020               	iorwf	??___lltoft+2,w,c
  7352  0119E8  1021               	iorwf	??___lltoft+3,w,c
  7353  0119EA  A4D8               	btfss	status,2,c
  7354  0119EC  D7E8               	goto	l3526
  7355  0119EE  C01A  F012         	movff	___lltoft@c,___ftpack@arg
  7356  0119F2  C01B  F013         	movff	___lltoft@c+1,___ftpack@arg+1
  7357  0119F6  C01C  F014         	movff	___lltoft@c+2,___ftpack@arg+2
  7358  0119FA  C022  F015         	movff	___lltoft@exp,___ftpack@exp
  7359  0119FE  0E00               	movlw	0
  7360  011A00  6E16               	movwf	___ftpack@sign,c
  7361  011A02  ECD8  F089         	call	___ftpack	;wreg free
  7362  011A06  C012  F01A         	movff	?___ftpack,?___lltoft
  7363  011A0A  C013  F01B         	movff	?___ftpack+1,?___lltoft+1
  7364  011A0E  C014  F01C         	movff	?___ftpack+2,?___lltoft+2
  7365  011A12  0012               	return	
  7366  011A14                     __end_of___lltoft:
  7367                           	opt stack 0
  7368                           tblptru	equ	0xFF8
  7369                           tblptrh	equ	0xFF7
  7370                           tblptrl	equ	0xFF6
  7371                           tablat	equ	0xFF5
  7372                           prodh	equ	0xFF4
  7373                           prodl	equ	0xFF3
  7374                           intcon	equ	0xFF2
  7375                           indf0	equ	0xFEF
  7376                           postinc0	equ	0xFEE
  7377                           fsr0h	equ	0xFEA
  7378                           fsr0l	equ	0xFE9
  7379                           wreg	equ	0xFE8
  7380                           indf1	equ	0xFE7
  7381                           postdec1	equ	0xFE5
  7382                           fsr1h	equ	0xFE2
  7383                           fsr1l	equ	0xFE1
  7384                           indf2	equ	0xFDF
  7385                           postinc2	equ	0xFDE
  7386                           postdec2	equ	0xFDD
  7387                           fsr2h	equ	0xFDA
  7388                           fsr2l	equ	0xFD9
  7389                           status	equ	0xFD8
  7390                           
  7391 ;; *************** function ___lbtoft *****************
  7392 ;; Defined at:
  7393 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\lbtoft.c"
  7394 ;; Parameters:    Size  Location     Type
  7395 ;;  c               1    wreg     unsigned char 
  7396 ;; Auto vars:     Size  Location     Type
  7397 ;;  c               1   28[COMRAM] unsigned char 
  7398 ;; Return value:  Size  Location     Type
  7399 ;;                  3   25[COMRAM] float 
  7400 ;; Registers used:
  7401 ;;		wreg, status,2, status,0, cstack
  7402 ;; Tracked objects:
  7403 ;;		On entry : 0/0
  7404 ;;		On exit  : 0/0
  7405 ;;		Unchanged: 0/0
  7406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7407 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7408 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7410 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7411 ;;Total ram usage:        4 bytes
  7412 ;; Hardware stack levels used:    1
  7413 ;; Hardware stack levels required when called:    3
  7414 ;; This function calls:
  7415 ;;		___ftpack
  7416 ;; This function is called by:
  7417 ;;		_initSPI
  7418 ;;		_adjustDigipot
  7419 ;; This function uses a non-reentrant model
  7420 ;;
  7421                           
  7422                           	psect	text40
  7423  011D18                     __ptext40:
  7424                           	opt stack 0
  7425  011D18                     ___lbtoft:
  7426                           	opt stack 26
  7427                           
  7428                           ;incstack = 0
  7429                           ;___lbtoft@c stored from wreg
  7430  011D18  6E1D               	movwf	___lbtoft@c,c
  7431  011D1A  501D               	movf	___lbtoft@c,w,c
  7432  011D1C  6E12               	movwf	___ftpack@arg,c
  7433  011D1E  6A13               	clrf	___ftpack@arg+1,c
  7434  011D20  6A14               	clrf	___ftpack@arg+2,c
  7435  011D22  0E8E               	movlw	142
  7436  011D24  6E15               	movwf	___ftpack@exp,c
  7437  011D26  0E00               	movlw	0
  7438  011D28  6E16               	movwf	___ftpack@sign,c
  7439  011D2A  ECD8  F089         	call	___ftpack	;wreg free
  7440  011D2E  C012  F01A         	movff	?___ftpack,?___lbtoft
  7441  011D32  C013  F01B         	movff	?___ftpack+1,?___lbtoft+1
  7442  011D36  C014  F01C         	movff	?___ftpack+2,?___lbtoft+2
  7443  011D3A  0012               	return	
  7444  011D3C                     __end_of___lbtoft:
  7445                           	opt stack 0
  7446                           tblptru	equ	0xFF8
  7447                           tblptrh	equ	0xFF7
  7448                           tblptrl	equ	0xFF6
  7449                           tablat	equ	0xFF5
  7450                           prodh	equ	0xFF4
  7451                           prodl	equ	0xFF3
  7452                           intcon	equ	0xFF2
  7453                           indf0	equ	0xFEF
  7454                           postinc0	equ	0xFEE
  7455                           fsr0h	equ	0xFEA
  7456                           fsr0l	equ	0xFE9
  7457                           wreg	equ	0xFE8
  7458                           indf1	equ	0xFE7
  7459                           postdec1	equ	0xFE5
  7460                           fsr1h	equ	0xFE2
  7461                           fsr1l	equ	0xFE1
  7462                           indf2	equ	0xFDF
  7463                           postinc2	equ	0xFDE
  7464                           postdec2	equ	0xFDD
  7465                           fsr2h	equ	0xFDA
  7466                           fsr2l	equ	0xFD9
  7467                           status	equ	0xFD8
  7468                           
  7469 ;; *************** function ___ftpack *****************
  7470 ;; Defined at:
  7471 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.36\sources\common\float.c"
  7472 ;; Parameters:    Size  Location     Type
  7473 ;;  arg             3   17[COMRAM] unsigned um
  7474 ;;  exp             1   20[COMRAM] unsigned char 
  7475 ;;  sign            1   21[COMRAM] unsigned char 
  7476 ;; Auto vars:     Size  Location     Type
  7477 ;;		None
  7478 ;; Return value:  Size  Location     Type
  7479 ;;                  3   17[COMRAM] float 
  7480 ;; Registers used:
  7481 ;;		wreg, status,2, status,0
  7482 ;; Tracked objects:
  7483 ;;		On entry : 0/0
  7484 ;;		On exit  : 0/0
  7485 ;;		Unchanged: 0/0
  7486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7487 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7488 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7489 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7490 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7491 ;;Total ram usage:        8 bytes
  7492 ;; Hardware stack levels used:    1
  7493 ;; Hardware stack levels required when called:    2
  7494 ;; This function calls:
  7495 ;;		Nothing
  7496 ;; This function is called by:
  7497 ;;		___altoft
  7498 ;;		___awtoft
  7499 ;;		___ftadd
  7500 ;;		___ftdiv
  7501 ;;		___ftmul
  7502 ;;		___lbtoft
  7503 ;;		___lltoft
  7504 ;; This function uses a non-reentrant model
  7505 ;;
  7506                           
  7507                           	psect	text41
  7508  0113B0                     __ptext41:
  7509                           	opt stack 0
  7510  0113B0                     ___ftpack:
  7511                           	opt stack 25
  7512                           
  7513                           ;incstack = 0
  7514  0113B0  5015               	movf	___ftpack@exp,w,c
  7515  0113B2  B4D8               	btfsc	status,2,c
  7516  0113B4  D005               	goto	l3192
  7517  0113B6  5012               	movf	___ftpack@arg,w,c
  7518  0113B8  1013               	iorwf	___ftpack@arg+1,w,c
  7519  0113BA  1014               	iorwf	___ftpack@arg+2,w,c
  7520  0113BC  A4D8               	btfss	status,2,c
  7521  0113BE  D00C               	goto	l3198
  7522  0113C0                     l3192:
  7523  0113C0  0E00               	movlw	0
  7524  0113C2  6E12               	movwf	?___ftpack,c
  7525  0113C4  0E00               	movlw	0
  7526  0113C6  6E13               	movwf	?___ftpack+1,c
  7527  0113C8  0E00               	movlw	0
  7528  0113CA  6E14               	movwf	?___ftpack+2,c
  7529  0113CC  0012               	return	
  7530  0113CE                     l3196:
  7531  0113CE  2A15               	incf	___ftpack@exp,f,c
  7532  0113D0  90D8               	bcf	status,0,c
  7533  0113D2  3214               	rrcf	___ftpack@arg+2,f,c
  7534  0113D4  3213               	rrcf	___ftpack@arg+1,f,c
  7535  0113D6  3212               	rrcf	___ftpack@arg,f,c
  7536  0113D8                     l3198:
  7537  0113D8  0E00               	movlw	0
  7538  0113DA  1412               	andwf	___ftpack@arg,w,c
  7539  0113DC  6E17               	movwf	??___ftpack& (0+255),c
  7540  0113DE  0E00               	movlw	0
  7541  0113E0  1413               	andwf	___ftpack@arg+1,w,c
  7542  0113E2  6E18               	movwf	(??___ftpack+1)& (0+255),c
  7543  0113E4  0EFE               	movlw	254
  7544  0113E6  1414               	andwf	___ftpack@arg+2,w,c
  7545  0113E8  6E19               	movwf	(??___ftpack+2)& (0+255),c
  7546  0113EA  5017               	movf	??___ftpack,w,c
  7547  0113EC  1018               	iorwf	??___ftpack+1,w,c
  7548  0113EE  1019               	iorwf	??___ftpack+2,w,c
  7549  0113F0  B4D8               	btfsc	status,2,c
  7550  0113F2  D00C               	goto	l3204
  7551  0113F4  D7EC               	goto	l3196
  7552  0113F6                     l3200:
  7553  0113F6  2A15               	incf	___ftpack@exp,f,c
  7554  0113F8  0E01               	movlw	1
  7555  0113FA  2612               	addwf	___ftpack@arg,f,c
  7556  0113FC  0E00               	movlw	0
  7557  0113FE  2213               	addwfc	___ftpack@arg+1,f,c
  7558  011400  0E00               	movlw	0
  7559  011402  2214               	addwfc	___ftpack@arg+2,f,c
  7560  011404  90D8               	bcf	status,0,c
  7561  011406  3214               	rrcf	___ftpack@arg+2,f,c
  7562  011408  3213               	rrcf	___ftpack@arg+1,f,c
  7563  01140A  3212               	rrcf	___ftpack@arg,f,c
  7564  01140C                     l3204:
  7565  01140C  0E00               	movlw	0
  7566  01140E  1412               	andwf	___ftpack@arg,w,c
  7567  011410  6E17               	movwf	??___ftpack& (0+255),c
  7568  011412  0E00               	movlw	0
  7569  011414  1413               	andwf	___ftpack@arg+1,w,c
  7570  011416  6E18               	movwf	(??___ftpack+1)& (0+255),c
  7571  011418  0EFF               	movlw	255
  7572  01141A  1414               	andwf	___ftpack@arg+2,w,c
  7573  01141C  6E19               	movwf	(??___ftpack+2)& (0+255),c
  7574  01141E  5017               	movf	??___ftpack,w,c
  7575  011420  1018               	iorwf	??___ftpack+1,w,c
  7576  011422  1019               	iorwf	??___ftpack+2,w,c
  7577  011424  B4D8               	btfsc	status,2,c
  7578  011426  D006               	goto	l3208
  7579  011428  D7E6               	goto	l3200
  7580  01142A                     l3206:
  7581  01142A  0615               	decf	___ftpack@exp,f,c
  7582  01142C  90D8               	bcf	status,0,c
  7583  01142E  3612               	rlcf	___ftpack@arg,f,c
  7584  011430  3613               	rlcf	___ftpack@arg+1,f,c
  7585  011432  3614               	rlcf	___ftpack@arg+2,f,c
  7586  011434                     l3208:
  7587  011434  BE13               	btfsc	___ftpack@arg+1,7,c
  7588  011436  D003               	goto	l668
  7589  011438  0E02               	movlw	2
  7590  01143A  6015               	cpfslt	___ftpack@exp,c
  7591  01143C  D7F6               	goto	l3206
  7592  01143E                     l668:
  7593  01143E  A015               	btfss	___ftpack@exp,0,c
  7594  011440  9E13               	bcf	___ftpack@arg+1,7,c
  7595  011442  90D8               	bcf	status,0,c
  7596  011444  3215               	rrcf	___ftpack@exp,f,c
  7597  011446  5015               	movf	___ftpack@exp,w,c
  7598  011448  1214               	iorwf	___ftpack@arg+2,f,c
  7599  01144A  5016               	movf	___ftpack@sign,w,c
  7600  01144C  A4D8               	btfss	status,2,c
  7601  01144E  8E14               	bsf	___ftpack@arg+2,7,c
  7602  011450  C012  F012         	movff	___ftpack@arg,?___ftpack
  7603  011454  C013  F013         	movff	___ftpack@arg+1,?___ftpack+1
  7604  011458  C014  F014         	movff	___ftpack@arg+2,?___ftpack+2
  7605  01145C  0012               	return	
  7606  01145E                     __end_of___ftpack:
  7607                           	opt stack 0
  7608                           tblptru	equ	0xFF8
  7609                           tblptrh	equ	0xFF7
  7610                           tblptrl	equ	0xFF6
  7611                           tablat	equ	0xFF5
  7612                           prodh	equ	0xFF4
  7613                           prodl	equ	0xFF3
  7614                           intcon	equ	0xFF2
  7615                           indf0	equ	0xFEF
  7616                           postinc0	equ	0xFEE
  7617                           fsr0h	equ	0xFEA
  7618                           fsr0l	equ	0xFE9
  7619                           wreg	equ	0xFE8
  7620                           indf1	equ	0xFE7
  7621                           postdec1	equ	0xFE5
  7622                           fsr1h	equ	0xFE2
  7623                           fsr1l	equ	0xFE1
  7624                           indf2	equ	0xFDF
  7625                           postinc2	equ	0xFDE
  7626                           postdec2	equ	0xFDD
  7627                           fsr2h	equ	0xFDA
  7628                           fsr2l	equ	0xFD9
  7629                           status	equ	0xFD8
  7630                           
  7631 ;; *************** function _UARTReceive *****************
  7632 ;; Defined at:
  7633 ;;		line 54 in file "uart.c"
  7634 ;; Parameters:    Size  Location     Type
  7635 ;;  on_or_off       1    wreg     unsigned char 
  7636 ;; Auto vars:     Size  Location     Type
  7637 ;;  on_or_off       1   17[COMRAM] unsigned char 
  7638 ;; Return value:  Size  Location     Type
  7639 ;;                  1    wreg      void 
  7640 ;; Registers used:
  7641 ;;		wreg, status,2, status,0
  7642 ;; Tracked objects:
  7643 ;;		On entry : 0/0
  7644 ;;		On exit  : 0/0
  7645 ;;		Unchanged: 0/0
  7646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7651 ;;Total ram usage:        1 bytes
  7652 ;; Hardware stack levels used:    1
  7653 ;; Hardware stack levels required when called:    2
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_main
  7658 ;; This function uses a non-reentrant model
  7659 ;;
  7660                           
  7661                           	psect	text42
  7662  011D78                     __ptext42:
  7663                           	opt stack 0
  7664  011D78                     _UARTReceive:
  7665                           	opt stack 28
  7666                           
  7667                           ;incstack = 0
  7668                           ;UARTReceive@on_or_off stored from wreg
  7669  011D78  6E12               	movwf	UARTReceive@on_or_off,c
  7670                           
  7671                           ;uart.c: 55: if(on_or_off == 1){
  7672  011D7A  0412               	decf	UARTReceive@on_or_off,w,c
  7673  011D7C  A4D8               	btfss	status,2,c
  7674  011D7E  D002               	goto	l140
  7675                           
  7676                           ;uart.c: 56: RCSTA1bits.CREN = 1;
  7677  011D80  88AC               	bsf	4012,4,c	;volatile
  7678                           
  7679                           ;uart.c: 57: }
  7680  011D82  0012               	return	
  7681  011D84                     l140:
  7682                           
  7683                           ;uart.c: 58: else{
  7684                           ;uart.c: 59: RCSTA1bits.CREN = 0;
  7685  011D84  98AC               	bcf	4012,4,c	;volatile
  7686  011D86  0012               	return	
  7687  011D88                     __end_of_UARTReceive:
  7688                           	opt stack 0
  7689                           tblptru	equ	0xFF8
  7690                           tblptrh	equ	0xFF7
  7691                           tblptrl	equ	0xFF6
  7692                           tablat	equ	0xFF5
  7693                           prodh	equ	0xFF4
  7694                           prodl	equ	0xFF3
  7695                           intcon	equ	0xFF2
  7696                           indf0	equ	0xFEF
  7697                           postinc0	equ	0xFEE
  7698                           fsr0h	equ	0xFEA
  7699                           fsr0l	equ	0xFE9
  7700                           wreg	equ	0xFE8
  7701                           indf1	equ	0xFE7
  7702                           postdec1	equ	0xFE5
  7703                           fsr1h	equ	0xFE2
  7704                           fsr1l	equ	0xFE1
  7705                           indf2	equ	0xFDF
  7706                           postinc2	equ	0xFDE
  7707                           postdec2	equ	0xFDD
  7708                           fsr2h	equ	0xFDA
  7709                           fsr2l	equ	0xFD9
  7710                           status	equ	0xFD8
  7711                           
  7712 ;; *************** function _high_ISR *****************
  7713 ;; Defined at:
  7714 ;;		line 62 in file "main.c"
  7715 ;; Parameters:    Size  Location     Type
  7716 ;;		None
  7717 ;; Auto vars:     Size  Location     Type
  7718 ;;		None
  7719 ;; Return value:  Size  Location     Type
  7720 ;;                  1    wreg      void 
  7721 ;; Registers used:
  7722 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  7723 ;; Tracked objects:
  7724 ;;		On entry : 0/0
  7725 ;;		On exit  : 0/0
  7726 ;;		Unchanged: 0/0
  7727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7730 ;;      Temps:         14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7731 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7732 ;;Total ram usage:       14 bytes
  7733 ;; Hardware stack levels used:    1
  7734 ;; Hardware stack levels required when called:    1
  7735 ;; This function calls:
  7736 ;;		_frequency_interrupt
  7737 ;;		_temperature_interrupt
  7738 ;;		_uart_interrupt
  7739 ;; This function is called by:
  7740 ;;		Interrupt level 2
  7741 ;; This function uses a non-reentrant model
  7742 ;;
  7743                           
  7744                           	psect	intcode
  7745  000008                     __pintcode:
  7746                           	opt stack 0
  7747  000008                     _high_ISR:
  7748                           	opt stack 22
  7749                           
  7750                           ;incstack = 0
  7751  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  7752  00000A  CFFA F004          	movff	pclath,??_high_ISR
  7753  00000E  CFFB F005          	movff	pclatu,??_high_ISR+1
  7754  000012  CFE9 F006          	movff	fsr0l,??_high_ISR+2
  7755  000016  CFEA F007          	movff	fsr0h,??_high_ISR+3
  7756  00001A  CFE1 F008          	movff	fsr1l,??_high_ISR+4
  7757  00001E  CFE2 F009          	movff	fsr1h,??_high_ISR+5
  7758  000022  CFD9 F00A          	movff	fsr2l,??_high_ISR+6
  7759  000026  CFDA F00B          	movff	fsr2h,??_high_ISR+7
  7760  00002A  CFF3 F00C          	movff	prodl,??_high_ISR+8
  7761  00002E  CFF4 F00D          	movff	prodh,??_high_ISR+9
  7762  000032  CFF6 F00E          	movff	tblptrl,??_high_ISR+10
  7763  000036  CFF7 F00F          	movff	tblptrh,??_high_ISR+11
  7764  00003A  CFF8 F010          	movff	tblptru,??_high_ISR+12
  7765  00003E  CFF5 F011          	movff	tablat,??_high_ISR+13
  7766                           
  7767                           ;main.c: 63: temperature_interrupt();
  7768  000042  EC83  F08A         	call	_temperature_interrupt	;wreg free
  7769                           
  7770                           ;main.c: 64: uart_interrupt();
  7771  000046  EC38  F08E         	call	_uart_interrupt	;wreg free
  7772                           
  7773                           ;main.c: 65: frequency_interrupt();
  7774  00004A  ECB3  F08B         	call	_frequency_interrupt	;wreg free
  7775  00004E  C011  FFF5         	movff	??_high_ISR+13,tablat
  7776  000052  C010  FFF8         	movff	??_high_ISR+12,tblptru
  7777  000056  C00F  FFF7         	movff	??_high_ISR+11,tblptrh
  7778  00005A  C00E  FFF6         	movff	??_high_ISR+10,tblptrl
  7779  00005E  C00D  FFF4         	movff	??_high_ISR+9,prodh
  7780  000062  C00C  FFF3         	movff	??_high_ISR+8,prodl
  7781  000066  C00B  FFDA         	movff	??_high_ISR+7,fsr2h
  7782  00006A  C00A  FFD9         	movff	??_high_ISR+6,fsr2l
  7783  00006E  C009  FFE2         	movff	??_high_ISR+5,fsr1h
  7784  000072  C008  FFE1         	movff	??_high_ISR+4,fsr1l
  7785  000076  C007  FFEA         	movff	??_high_ISR+3,fsr0h
  7786  00007A  C006  FFE9         	movff	??_high_ISR+2,fsr0l
  7787  00007E  C005  FFFB         	movff	??_high_ISR+1,pclatu
  7788  000082  C004  FFFA         	movff	??_high_ISR,pclath
  7789  000086  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  7790  000088  0011               	retfie		f
  7791  00008A                     __end_of_high_ISR:
  7792                           	opt stack 0
  7793                           pclatu	equ	0xFFB
  7794                           pclath	equ	0xFFA
  7795                           tblptru	equ	0xFF8
  7796                           tblptrh	equ	0xFF7
  7797                           tblptrl	equ	0xFF6
  7798                           tablat	equ	0xFF5
  7799                           prodh	equ	0xFF4
  7800                           prodl	equ	0xFF3
  7801                           intcon	equ	0xFF2
  7802                           indf0	equ	0xFEF
  7803                           postinc0	equ	0xFEE
  7804                           fsr0h	equ	0xFEA
  7805                           fsr0l	equ	0xFE9
  7806                           wreg	equ	0xFE8
  7807                           indf1	equ	0xFE7
  7808                           postdec1	equ	0xFE5
  7809                           fsr1h	equ	0xFE2
  7810                           fsr1l	equ	0xFE1
  7811                           indf2	equ	0xFDF
  7812                           postinc2	equ	0xFDE
  7813                           postdec2	equ	0xFDD
  7814                           fsr2h	equ	0xFDA
  7815                           fsr2l	equ	0xFD9
  7816                           status	equ	0xFD8
  7817                           
  7818 ;; *************** function _uart_interrupt *****************
  7819 ;; Defined at:
  7820 ;;		line 103 in file "uart.c"
  7821 ;; Parameters:    Size  Location     Type
  7822 ;;		None
  7823 ;; Auto vars:     Size  Location     Type
  7824 ;;		None
  7825 ;; Return value:  Size  Location     Type
  7826 ;;                  1    wreg      void 
  7827 ;; Registers used:
  7828 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7829 ;; Tracked objects:
  7830 ;;		On entry : 0/0
  7831 ;;		On exit  : 0/0
  7832 ;;		Unchanged: 0/0
  7833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7838 ;;Total ram usage:        0 bytes
  7839 ;; Hardware stack levels used:    1
  7840 ;; This function calls:
  7841 ;;		Nothing
  7842 ;; This function is called by:
  7843 ;;		_high_ISR
  7844 ;; This function uses a non-reentrant model
  7845 ;;
  7846                           
  7847                           	psect	text44
  7848  011C70                     __ptext44:
  7849                           	opt stack 0
  7850  011C70                     _uart_interrupt:
  7851                           	opt stack 22
  7852                           
  7853                           ;uart.c: 105: if(PIR1bits.RC1IF == 1){
  7854                           
  7855                           ;incstack = 0
  7856  011C70  AA9E               	btfss	3998,5,c	;volatile
  7857  011C72  0012               	return	
  7858                           
  7859                           ;uart.c: 106: PIR1bits.RC1IF = 0;
  7860  011C74  9A9E               	bcf	3998,5,c	;volatile
  7861                           
  7862                           ;uart.c: 108: uart_receive_buffer[uart_receive_buffer_index] = RCREG1;
  7863  011C76  0E00               	movlw	low _uart_receive_buffer
  7864  011C78  244C               	addwf	_uart_receive_buffer_index,w,c
  7865  011C7A  6ED9               	movwf	fsr2l,c
  7866  011C7C  0E01               	movlw	high _uart_receive_buffer
  7867  011C7E  204D               	addwfc	_uart_receive_buffer_index+1,w,c
  7868  011C80  6EDA               	movwf	fsr2h,c
  7869  011C82  CFAF FFDF          	movff	4015,indf2	;volatile
  7870                           
  7871                           ;uart.c: 109: uart_receive_buffer_index += 1;
  7872  011C86  4A4C               	infsnz	_uart_receive_buffer_index,f,c
  7873  011C88  2A4D               	incf	_uart_receive_buffer_index+1,f,c
  7874                           
  7875                           ;uart.c: 113: if(uart_receive_buffer_index > 100){
  7876  011C8A  504D               	movf	_uart_receive_buffer_index+1,w,c
  7877  011C8C  E104               	bnz	i2u266_40
  7878  011C8E  0E65               	movlw	101
  7879  011C90  5C4C               	subwf	_uart_receive_buffer_index,w,c
  7880  011C92  A0D8               	btfss	status,0,c
  7881  011C94  0012               	return	
  7882  011C96                     i2u266_40:
  7883                           
  7884                           ;uart.c: 114: uart_receive_buffer_index = 0;
  7885  011C96  0E00               	movlw	0
  7886  011C98  6E4D               	movwf	_uart_receive_buffer_index+1,c
  7887  011C9A  0E00               	movlw	0
  7888  011C9C  6E4C               	movwf	_uart_receive_buffer_index,c
  7889  011C9E  0012               	return	
  7890  011CA0                     __end_of_uart_interrupt:
  7891                           	opt stack 0
  7892                           pclatu	equ	0xFFB
  7893                           pclath	equ	0xFFA
  7894                           tblptru	equ	0xFF8
  7895                           tblptrh	equ	0xFF7
  7896                           tblptrl	equ	0xFF6
  7897                           tablat	equ	0xFF5
  7898                           prodh	equ	0xFF4
  7899                           prodl	equ	0xFF3
  7900                           intcon	equ	0xFF2
  7901                           indf0	equ	0xFEF
  7902                           postinc0	equ	0xFEE
  7903                           fsr0h	equ	0xFEA
  7904                           fsr0l	equ	0xFE9
  7905                           wreg	equ	0xFE8
  7906                           indf1	equ	0xFE7
  7907                           postdec1	equ	0xFE5
  7908                           fsr1h	equ	0xFE2
  7909                           fsr1l	equ	0xFE1
  7910                           indf2	equ	0xFDF
  7911                           postinc2	equ	0xFDE
  7912                           postdec2	equ	0xFDD
  7913                           fsr2h	equ	0xFDA
  7914                           fsr2l	equ	0xFD9
  7915                           status	equ	0xFD8
  7916                           
  7917 ;; *************** function _temperature_interrupt *****************
  7918 ;; Defined at:
  7919 ;;		line 113 in file "temperature.c"
  7920 ;; Parameters:    Size  Location     Type
  7921 ;;		None
  7922 ;; Auto vars:     Size  Location     Type
  7923 ;;		None
  7924 ;; Return value:  Size  Location     Type
  7925 ;;                  1    wreg      void 
  7926 ;; Registers used:
  7927 ;;		wreg, status,2, status,0
  7928 ;; Tracked objects:
  7929 ;;		On entry : 0/0
  7930 ;;		On exit  : 0/0
  7931 ;;		Unchanged: 0/0
  7932 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  7933 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7934 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7935 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7936 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  7937 ;;Total ram usage:        2 bytes
  7938 ;; Hardware stack levels used:    1
  7939 ;; This function calls:
  7940 ;;		Nothing
  7941 ;; This function is called by:
  7942 ;;		_high_ISR
  7943 ;; This function uses a non-reentrant model
  7944 ;;
  7945                           
  7946                           	psect	text45
  7947  011506                     __ptext45:
  7948                           	opt stack 0
  7949  011506                     _temperature_interrupt:
  7950                           	opt stack 22
  7951                           
  7952                           ;temperature.c: 115: if(PIR1bits.ADIF == 1)
  7953                           
  7954                           ;incstack = 0
  7955  011506  AC9E               	btfss	3998,6,c	;volatile
  7956  011508  0012               	return	
  7957                           
  7958                           ;temperature.c: 116: {
  7959                           ;temperature.c: 117: PIR1bits.ADIF = 0;
  7960  01150A  9C9E               	bcf	3998,6,c	;volatile
  7961                           
  7962                           ;temperature.c: 118: switch(currentChannel){
  7963  01150C  D035               	goto	i2l3046
  7964  01150E                     i2l241:
  7965                           
  7966                           ;temperature.c: 120: plus_pipe = ADRES;
  7967  01150E  CFC3 F04A          	movff	4035,_plus_pipe	;volatile
  7968  011512  CFC4 F04B          	movff	4036,_plus_pipe+1	;volatile
  7969                           
  7970                           ;temperature.c: 121: ADCON0bits.CHS = 0b1000;
  7971  011516  50C2               	movf	4034,w,c	;volatile
  7972  011518  0BC3               	andlw	-61
  7973  01151A  0920               	iorlw	32
  7974  01151C  6EC2               	movwf	4034,c	;volatile
  7975                           
  7976                           ;temperature.c: 122: currentChannel = 1;
  7977  01151E  0E00               	movlw	0
  7978  011520  0100               	movlb	0	; () banked
  7979  011522  6FDF               	movwf	(_currentChannel+1)& (0+255),b
  7980  011524  0E01               	movlw	1
  7981  011526  D026               	goto	L6
  7982  011528                     i2l243:
  7983                           
  7984                           ;temperature.c: 125: minus_pipe = ADRES;
  7985  011528  CFC3 F046          	movff	4035,_minus_pipe	;volatile
  7986  01152C  CFC4 F047          	movff	4036,_minus_pipe+1	;volatile
  7987                           
  7988                           ;temperature.c: 126: ADCON0bits.CHS = 0b0001;
  7989  011530  50C2               	movf	4034,w,c	;volatile
  7990  011532  0BC3               	andlw	-61
  7991  011534  0904               	iorlw	4
  7992  011536  6EC2               	movwf	4034,c	;volatile
  7993                           
  7994                           ;temperature.c: 127: currentChannel = 2;
  7995  011538  0E00               	movlw	0
  7996  01153A  0100               	movlb	0	; () banked
  7997  01153C  6FDF               	movwf	(_currentChannel+1)& (0+255),b
  7998  01153E  0E02               	movlw	2
  7999  011540  D019               	goto	L6
  8000  011542                     i2l244:
  8001                           
  8002                           ;temperature.c: 130: plus_ambient = ADRES;
  8003  011542  CFC3 F048          	movff	4035,_plus_ambient	;volatile
  8004  011546  CFC4 F049          	movff	4036,_plus_ambient+1	;volatile
  8005                           
  8006                           ;temperature.c: 131: ADCON0bits.CHS = 0b0000;
  8007  01154A  94C2               	bcf	4034,2,c	;volatile
  8008  01154C  96C2               	bcf	4034,3,c	;volatile
  8009  01154E  98C2               	bcf	4034,4,c	;volatile
  8010  011550  9AC2               	bcf	4034,5,c	;volatile
  8011                           
  8012                           ;temperature.c: 132: currentChannel = 3;
  8013  011552  0E00               	movlw	0
  8014  011554  0100               	movlb	0	; () banked
  8015  011556  6FDF               	movwf	(_currentChannel+1)& (0+255),b
  8016  011558  0E03               	movlw	3
  8017  01155A  D00C               	goto	L6
  8018  01155C                     i2l245:
  8019                           
  8020                           ;temperature.c: 135: minus_ambient = ADRES;
  8021  01155C  CFC3 F0E2          	movff	4035,_minus_ambient	;volatile
  8022  011560  CFC4 F0E3          	movff	4036,_minus_ambient+1	;volatile
  8023                           
  8024                           ;temperature.c: 136: ADCON0bits.CHS = 0b1001;
  8025  011564  50C2               	movf	4034,w,c	;volatile
  8026  011566  0BC3               	andlw	-61
  8027  011568  0924               	iorlw	36
  8028  01156A  6EC2               	movwf	4034,c	;volatile
  8029                           
  8030                           ;temperature.c: 137: currentChannel = 0;
  8031  01156C  0E00               	movlw	0
  8032  01156E  0100               	movlb	0	; () banked
  8033  011570  6FDF               	movwf	(_currentChannel+1)& (0+255),b
  8034  011572  0E00               	movlw	0
  8035  011574                     L6:
  8036  011574  6FDE               	movwf	_currentChannel& (0+255),b
  8037                           
  8038                           ; BSR set to: 0
  8039                           ;temperature.c: 139: }
  8040                           
  8041                           ;temperature.c: 138: break;
  8042  011576  D015               	goto	i2l242
  8043  011578                     i2l3046:
  8044  011578  C0DE  F001         	movff	_currentChannel,??_temperature_interrupt
  8045  01157C  C0DF  F002         	movff	_currentChannel+1,??_temperature_interrupt+1
  8046                           
  8047                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8048                           ; Switch size 1, requested type "space"
  8049                           ; Number of cases is 1, Range of values is 0 to 0
  8050                           ; switch strategies available:
  8051                           ; Name         Instructions Cycles
  8052                           ; simple_byte            4     3 (average)
  8053                           ;	Chosen strategy is simple_byte
  8054  011580  5002               	movf	??_temperature_interrupt+1,w,c
  8055  011582  0A00               	xorlw	0	; case 0
  8056  011584  A4D8               	btfss	status,2,c
  8057  011586  D00D               	goto	i2l242
  8058                           
  8059                           ; Switch size 1, requested type "space"
  8060                           ; Number of cases is 4, Range of values is 0 to 3
  8061                           ; switch strategies available:
  8062                           ; Name         Instructions Cycles
  8063                           ; simple_byte           13     7 (average)
  8064                           ;	Chosen strategy is simple_byte
  8065  011588  5001               	movf	??_temperature_interrupt,w,c
  8066  01158A  0A00               	xorlw	0	; case 0
  8067  01158C  B4D8               	btfsc	status,2,c
  8068  01158E  D7BF               	goto	i2l241
  8069  011590  0A01               	xorlw	1	; case 1
  8070  011592  B4D8               	btfsc	status,2,c
  8071  011594  D7C9               	goto	i2l243
  8072  011596  0A03               	xorlw	3	; case 2
  8073  011598  B4D8               	btfsc	status,2,c
  8074  01159A  D7D3               	goto	i2l244
  8075  01159C  0A01               	xorlw	1	; case 3
  8076  01159E  B4D8               	btfsc	status,2,c
  8077  0115A0  D7DD               	goto	i2l245
  8078  0115A2                     i2l242:
  8079                           
  8080                           ;temperature.c: 140: ADCON0bits.GO_DONE = 1;
  8081  0115A2  82C2               	bsf	4034,1,c	;volatile
  8082  0115A4  0012               	return	
  8083  0115A6                     __end_of_temperature_interrupt:
  8084                           	opt stack 0
  8085                           pclatu	equ	0xFFB
  8086                           pclath	equ	0xFFA
  8087                           tblptru	equ	0xFF8
  8088                           tblptrh	equ	0xFF7
  8089                           tblptrl	equ	0xFF6
  8090                           tablat	equ	0xFF5
  8091                           prodh	equ	0xFF4
  8092                           prodl	equ	0xFF3
  8093                           intcon	equ	0xFF2
  8094                           indf0	equ	0xFEF
  8095                           postinc0	equ	0xFEE
  8096                           fsr0h	equ	0xFEA
  8097                           fsr0l	equ	0xFE9
  8098                           wreg	equ	0xFE8
  8099                           indf1	equ	0xFE7
  8100                           postdec1	equ	0xFE5
  8101                           fsr1h	equ	0xFE2
  8102                           fsr1l	equ	0xFE1
  8103                           indf2	equ	0xFDF
  8104                           postinc2	equ	0xFDE
  8105                           postdec2	equ	0xFDD
  8106                           fsr2h	equ	0xFDA
  8107                           fsr2l	equ	0xFD9
  8108                           status	equ	0xFD8
  8109                           
  8110 ;; *************** function _frequency_interrupt *****************
  8111 ;; Defined at:
  8112 ;;		line 39 in file "frequency.c"
  8113 ;; Parameters:    Size  Location     Type
  8114 ;;		None
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;		None
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      void 
  8119 ;; Registers used:
  8120 ;;		wreg, status,2, status,0
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14
  8126 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8128 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0
  8130 ;;Total ram usage:        3 bytes
  8131 ;; Hardware stack levels used:    1
  8132 ;; This function calls:
  8133 ;;		Nothing
  8134 ;; This function is called by:
  8135 ;;		_high_ISR
  8136 ;; This function uses a non-reentrant model
  8137 ;;
  8138                           
  8139                           	psect	text46
  8140  011766                     __ptext46:
  8141                           	opt stack 0
  8142  011766                     _frequency_interrupt:
  8143                           	opt stack 22
  8144                           
  8145                           ;frequency.c: 41: if(PIR4bits.CCP8IF == 1)
  8146                           
  8147                           ;incstack = 0
  8148  011766  AA8F               	btfss	3983,5,c	;volatile
  8149  011768  0012               	return	
  8150                           
  8151                           ;frequency.c: 42: {
  8152                           ;frequency.c: 44: measurement1 = measurement2;
  8153  01176A  C044  F042         	movff	_measurement2,_measurement1
  8154  01176E  C045  F043         	movff	_measurement2+1,_measurement1+1
  8155                           
  8156                           ;frequency.c: 45: measurement2 = CCPR8L + 256*CCPR8H;
  8157  011772  010F               	movlb	15	; () banked
  8158  011774  5108               	movf	8,w,b	;volatile
  8159  011776  6E02               	movwf	(??_frequency_interrupt+1)& (0+255),c
  8160  011778  6A01               	clrf	??_frequency_interrupt& (0+255),c
  8161  01177A  010F               	movlb	15	; () banked
  8162  01177C  5107               	movf	7,w,b	;volatile
  8163  01177E  2401               	addwf	??_frequency_interrupt,w,c
  8164  011780  6E44               	movwf	_measurement2,c
  8165  011782  0E00               	movlw	0
  8166  011784  2002               	addwfc	??_frequency_interrupt+1,w,c
  8167  011786  6E45               	movwf	_measurement2+1,c
  8168                           
  8169                           ;frequency.c: 46: if((measurement2 - measurement1)/16 < 1600){
  8170  011788  C042  F001         	movff	_measurement1,??_frequency_interrupt
  8171  01178C  C043  F002         	movff	_measurement1+1,??_frequency_interrupt+1
  8172  011790  1E01               	comf	??_frequency_interrupt,f,c
  8173  011792  1E02               	comf	??_frequency_interrupt+1,f,c
  8174  011794  4A01               	infsnz	??_frequency_interrupt,f,c
  8175  011796  2A02               	incf	??_frequency_interrupt+1,f,c
  8176  011798  5044               	movf	_measurement2,w,c
  8177  01179A  2601               	addwf	??_frequency_interrupt,f,c
  8178  01179C  5045               	movf	_measurement2+1,w,c
  8179  01179E  2202               	addwfc	??_frequency_interrupt+1,f,c
  8180  0117A0  0E04               	movlw	4
  8181  0117A2  6E03               	movwf	(??_frequency_interrupt+2)& (0+255),c
  8182  0117A4                     i2u268_45:
  8183  0117A4  90D8               	bcf	status,0,c
  8184  0117A6  3202               	rrcf	??_frequency_interrupt+1,f,c
  8185  0117A8  3201               	rrcf	??_frequency_interrupt,f,c
  8186  0117AA  2E03               	decfsz	(??_frequency_interrupt+2)& (0+255),f,c
  8187  0117AC  D7FB               	goto	i2u268_45
  8188  0117AE  0E40               	movlw	64
  8189  0117B0  5C01               	subwf	??_frequency_interrupt,w,c
  8190  0117B2  0E06               	movlw	6
  8191  0117B4  5802               	subwfb	??_frequency_interrupt+1,w,c
  8192  0117B6  B0D8               	btfsc	status,0,c
  8193  0117B8  D017               	goto	i2l3072
  8194                           
  8195                           ; BSR set to: 15
  8196                           ;frequency.c: 47: value = (measurement2 - measurement1)/16;
  8197  0117BA  C042  F001         	movff	_measurement1,??_frequency_interrupt
  8198  0117BE  C043  F002         	movff	_measurement1+1,??_frequency_interrupt+1
  8199  0117C2  1E01               	comf	??_frequency_interrupt,f,c
  8200  0117C4  1E02               	comf	??_frequency_interrupt+1,f,c
  8201  0117C6  4A01               	infsnz	??_frequency_interrupt,f,c
  8202  0117C8  2A02               	incf	??_frequency_interrupt+1,f,c
  8203  0117CA  5044               	movf	_measurement2,w,c
  8204  0117CC  2601               	addwf	??_frequency_interrupt,f,c
  8205  0117CE  5045               	movf	_measurement2+1,w,c
  8206  0117D0  2202               	addwfc	??_frequency_interrupt+1,f,c
  8207  0117D2  0E04               	movlw	4
  8208  0117D4  6E03               	movwf	(??_frequency_interrupt+2)& (0+255),c
  8209  0117D6                     i2u270_45:
  8210  0117D6  90D8               	bcf	status,0,c
  8211  0117D8  3202               	rrcf	??_frequency_interrupt+1,f,c
  8212  0117DA  3201               	rrcf	??_frequency_interrupt,f,c
  8213  0117DC  2E03               	decfsz	(??_frequency_interrupt+2)& (0+255),f,c
  8214  0117DE  D7FB               	goto	i2u270_45
  8215  0117E0  C001  F0F0         	movff	??_frequency_interrupt,_value
  8216  0117E4  C002  F0F1         	movff	??_frequency_interrupt+1,_value+1
  8217  0117E8                     i2l3072:
  8218                           
  8219                           ; BSR set to: 15
  8220                           ;frequency.c: 48: }
  8221                           ;frequency.c: 53: PIR4bits.CCP8IF=0;
  8222  0117E8  9A8F               	bcf	3983,5,c	;volatile
  8223  0117EA  0012               	return	
  8224  0117EC                     __end_of_frequency_interrupt:
  8225                           	opt stack 0
  8226                           pclatu	equ	0xFFB
  8227                           pclath	equ	0xFFA
  8228                           tblptru	equ	0xFF8
  8229                           tblptrh	equ	0xFF7
  8230                           tblptrl	equ	0xFF6
  8231                           tablat	equ	0xFF5
  8232                           prodh	equ	0xFF4
  8233                           prodl	equ	0xFF3
  8234                           intcon	equ	0xFF2
  8235                           indf0	equ	0xFEF
  8236                           postinc0	equ	0xFEE
  8237                           fsr0h	equ	0xFEA
  8238                           fsr0l	equ	0xFE9
  8239                           wreg	equ	0xFE8
  8240                           indf1	equ	0xFE7
  8241                           postdec1	equ	0xFE5
  8242                           fsr1h	equ	0xFE2
  8243                           fsr1l	equ	0xFE1
  8244                           indf2	equ	0xFDF
  8245                           postinc2	equ	0xFDE
  8246                           postdec2	equ	0xFDD
  8247                           fsr2h	equ	0xFDA
  8248                           fsr2l	equ	0xFD9
  8249                           status	equ	0xFD8
  8250                           pclatu	equ	0xFFB
  8251                           pclath	equ	0xFFA
  8252                           tblptru	equ	0xFF8
  8253                           tblptrh	equ	0xFF7
  8254                           tblptrl	equ	0xFF6
  8255                           tablat	equ	0xFF5
  8256                           prodh	equ	0xFF4
  8257                           prodl	equ	0xFF3
  8258                           intcon	equ	0xFF2
  8259                           indf0	equ	0xFEF
  8260                           postinc0	equ	0xFEE
  8261                           fsr0h	equ	0xFEA
  8262                           fsr0l	equ	0xFE9
  8263                           wreg	equ	0xFE8
  8264                           indf1	equ	0xFE7
  8265                           postdec1	equ	0xFE5
  8266                           fsr1h	equ	0xFE2
  8267                           fsr1l	equ	0xFE1
  8268                           indf2	equ	0xFDF
  8269                           postinc2	equ	0xFDE
  8270                           postdec2	equ	0xFDD
  8271                           fsr2h	equ	0xFDA
  8272                           fsr2l	equ	0xFD9
  8273                           status	equ	0xFD8
  8274                           
  8275                           	psect	rparam
  8276  0000                     pclatu	equ	0xFFB
  8277                           pclath	equ	0xFFA
  8278                           tblptru	equ	0xFF8
  8279                           tblptrh	equ	0xFF7
  8280                           tblptrl	equ	0xFF6
  8281                           tablat	equ	0xFF5
  8282                           prodh	equ	0xFF4
  8283                           prodl	equ	0xFF3
  8284                           intcon	equ	0xFF2
  8285                           indf0	equ	0xFEF
  8286                           postinc0	equ	0xFEE
  8287                           fsr0h	equ	0xFEA
  8288                           fsr0l	equ	0xFE9
  8289                           wreg	equ	0xFE8
  8290                           indf1	equ	0xFE7
  8291                           postdec1	equ	0xFE5
  8292                           fsr1h	equ	0xFE2
  8293                           fsr1l	equ	0xFE1
  8294                           indf2	equ	0xFDF
  8295                           postinc2	equ	0xFDE
  8296                           postdec2	equ	0xFDD
  8297                           fsr2h	equ	0xFDA
  8298                           fsr2l	equ	0xFD9
  8299                           status	equ	0xFD8
  8300                           
  8301                           	psect	temp
  8302  00004E                     btemp:
  8303                           	opt stack 0
  8304  00004E                     	ds	1
  8305  0000                     int$flags	set	btemp
  8306                           pclatu	equ	0xFFB
  8307                           pclath	equ	0xFFA
  8308                           tblptru	equ	0xFF8
  8309                           tblptrh	equ	0xFF7
  8310                           tblptrl	equ	0xFF6
  8311                           tablat	equ	0xFF5
  8312                           prodh	equ	0xFF4
  8313                           prodl	equ	0xFF3
  8314                           intcon	equ	0xFF2
  8315                           indf0	equ	0xFEF
  8316                           postinc0	equ	0xFEE
  8317                           fsr0h	equ	0xFEA
  8318                           fsr0l	equ	0xFE9
  8319                           wreg	equ	0xFE8
  8320                           indf1	equ	0xFE7
  8321                           postdec1	equ	0xFE5
  8322                           fsr1h	equ	0xFE2
  8323                           fsr1l	equ	0xFE1
  8324                           indf2	equ	0xFDF
  8325                           postinc2	equ	0xFDE
  8326                           postdec2	equ	0xFDD
  8327                           fsr2h	equ	0xFDA
  8328                           fsr2l	equ	0xFD9
  8329                           status	equ	0xFD8


Data Sizes:
    Strings     71
    Constant    241
    Data        52
    BSS         173
    Persistent  5
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     61      77
    BANK0           160     68     152
    BANK1           256      0     130
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          176      0       0

Pointer List with Targets:

    eval_poly@d	PTR const  size(2) Largest target is 30
		 -> log@coeff(CODE[27]), exp@coeff(CODE[30]), 

    frexp@eptr	PTR int  size(2) Largest target is 2
		 -> log@exponent(BANK0[2]), floor@expon(BANK0[2]), 

    sendUARTMessage@newMessagePointer	PTR unsigned char  size(2) Largest target is 200
		 -> sendData@message(BANK1[200]), join_network(CODE[16]), set_app_key(CODE[50]), set_app_eui(CODE[34]), 
		 -> set_dev_eui(CODE[34]), temp_display_message(BANK0[20]), frequency_message(BANK0[26]), 

    currentMessagePointer	PTR unsigned char  size(2) Largest target is 200
		 -> NULL(NULL[0]), sendData@message(BANK1[200]), join_network(CODE[16]), set_app_key(CODE[50]), 
		 -> set_app_eui(CODE[34]), set_dev_eui(CODE[34]), temp_display_message(BANK0[20]), frequency_message(BANK0[26]), 


Critical Paths under _main in COMRAM

    _make_frequency_message->___lwdiv
    ___lwdiv->___lwmod
    _makeTempMessage->_calculateTemp
    _fillInTemp->___awdiv
    ___awdiv->___awmod
    _calculateTemp->___ftmul
    _initLoRa->_sendUARTMessage
    _sendUARTMessage->_delay_ms
    _log->_eval_poly
    _exp->_eval_poly
    _ldexp->_eval_poly
    _floor->___altoft
    ___fttol->___ftmul
    ___ftge->___ftmul
    _eval_poly->___ftmul
    ___ftmul->___ftdiv
    ___ftadd->___ftmul
    ___ftdiv->___awtoft
    ___ftdiv->___lbtoft
    ___awtoft->___ftpack
    ___lltoft->___ftpack
    ___lbtoft->___ftpack

Critical Paths under _high_ISR in COMRAM

    _high_ISR->_frequency_interrupt

Critical Paths under _main in BANK0

    _main->_initSPI
    _makeTempMessage->_calculateTemp
    _calculateTemp->___fttol
    _initSPI->_pow
    _digipot->_adjustDigipot
    _adjustDigipot->_pow
    _pow->_exp
    _log->_eval_poly
    _exp->_floor
    _ldexp->_eval_poly
    _floor->___altoft
    ___altoft->___fttol
    _eval_poly->___ftadd
    ___ftsub->___ftadd

Critical Paths under _high_ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _high_ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _high_ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _high_ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _high_ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _high_ISR in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _high_ISR in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _high_ISR in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _high_ISR in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _high_ISR in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _high_ISR in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _high_ISR in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _high_ISR in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _high_ISR in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _high_ISR in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  233138
                                             66 BANK0      2     2      0
                        _UARTReceive
                             ___wmul
                           _delay_ms
                            _digipot
                            _initADC
                     _initInterrupts
                           _initLoRa
                            _initSPI
                          _initUART1
                     _init_frequency
                    _makeTempMessage
             _make_frequency_message
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _make_frequency_message                               0     0      0    1191
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              5     1      4     543
                                             17 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              7     3      4     648
                                             22 COMRAM     7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (1) _makeTempMessage                                      1     1      0   15887
                                             24 BANK0      1     1      0
                      _calculateTemp
                         _fillInTemp
 ---------------------------------------------------------------------------------
 (2) _fillInTemp                                          12    12      0    2079
                                             31 COMRAM    12    12      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              6     2      4     741
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              8     4      4     753
                                             23 COMRAM     8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _calculateTemp                                       11     7      4   13777
                                             59 COMRAM     2     2      0
                                             15 BANK0      9     5      4
                           ___awtoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
 ---------------------------------------------------------------------------------
 (1) _init_frequency                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initUART1                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initSPI                                              9     9      0  102353
                                             57 BANK0      9     9      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lbtoft
                                _pow
                         _remappings
 ---------------------------------------------------------------------------------
 (2) _remappings                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initLoRa                                             0     0      0    1906
                           _delay_ms
                    _sendUARTMessage
 ---------------------------------------------------------------------------------
 (1) _sendUARTMessage                                      2     0      2    1220
                                             22 COMRAM     2     0      2
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     686
                                             17 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _initInterrupts                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initADC                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _digipot                                              0     0      0  108991
                             ___ftge
                            ___ftmul
                      _adjustDigipot
                     _checkFrequency
                           _unselect
 ---------------------------------------------------------------------------------
 (2) _unselect                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _checkFrequency                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _adjustDigipot                                        9     9      0  102353
                                             57 BANK0      9     9      0
                           ___awtoft
                            ___ftadd
                            ___ftdiv
                            ___ftmul
                           ___lbtoft
                                _pow
 ---------------------------------------------------------------------------------
 (2) _pow                                                 17    11      6   81889
                                             40 BANK0     17    11      6
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___fttol
                           ___lbtoft (ARG)
                           ___lltoft
                                _exp
                                _log
 ---------------------------------------------------------------------------------
 (3) _log                                                  5     2      3   26744
                                             22 BANK0      5     2      3
                           ___awtoft
                            ___ftadd
                            ___ftmul
                          _eval_poly
                              _frexp
 ---------------------------------------------------------------------------------
 (3) _exp                                                  9     6      3   43943
                                             31 BANK0      9     6      3
                           ___awtoft
                            ___ftdiv
                             ___ftge
                            ___ftmul
                            ___ftneg
                            ___ftsub
                            ___fttol
                          _eval_poly
                              _floor
                              _ldexp
                                _log (ARG)
 ---------------------------------------------------------------------------------
 (4) _ldexp                                                7     2      5     376
                                             22 BANK0      7     2      5
                          _eval_poly (ARG)
 ---------------------------------------------------------------------------------
 (4) _floor                                                8     5      3   10712
                                             23 BANK0      8     5      3
                           ___altoft
                            ___ftadd
                             ___ftge
                            ___fttol
                              _frexp
 ---------------------------------------------------------------------------------
 (4) _frexp                                                7     2      5     480
                                             17 COMRAM     7     2      5
 ---------------------------------------------------------------------------------
 (3) ___fttol                                             15    11      4     679
                                              0 BANK0     15    11      4
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftge                                               9     3      6    1122
                                              0 BANK0      9     3      6
                            ___ftmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___altoft                                            10     6      4    2925
                                             59 COMRAM     2     2      0
                                             15 BANK0      8     4      4
                           ___ftpack
                            ___fttol (ARG)
 ---------------------------------------------------------------------------------
 (4) _eval_poly                                           12     5      7   12141
                                             59 COMRAM     2     2      0
                                             12 BANK0     10     3      7
                            ___ftadd
                            ___ftmul
                             ___wmul
 ---------------------------------------------------------------------------------
 (5) ___wmul                                               6     2      4     848
                                             17 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___ftmul                                             15     9      6    5516
                                             44 COMRAM    15     9      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftsub                                              6     0      6    5425
                                             12 BANK0      6     0      6
                           ___awtoft (ARG)
                            ___ftadd
 ---------------------------------------------------------------------------------
 (5) ___ftadd                                             12     6      6    5061
                                              0 BANK0     12     6      6
                           ___awtoft (ARG)
                            ___ftdiv (ARG)
                            ___ftmul (ARG)
                           ___ftpack
                             ___wmul (ARG)
                              _frexp (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftneg                                              3     0      3     237
                                             17 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) ___ftdiv                                             15     9      6    3948
                                             29 COMRAM    15     9      6
                           ___awtoft (ARG)
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (3) ___awtoft                                             4     1      3    3162
                                             25 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___lltoft                                             9     5      4    2823
                                             25 COMRAM     9     5      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___lbtoft                                             4     1      3    2675
                                             25 COMRAM     4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___ftpack                                             8     3      5    2644
                                             17 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _UARTReceive                                          1     1      0      22
                                             17 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (8) _high_ISR                                            14    14      0       0
                                              3 COMRAM    14    14      0
                _frequency_interrupt
              _temperature_interrupt
                     _uart_interrupt
 ---------------------------------------------------------------------------------
 (9) _uart_interrupt                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _temperature_interrupt                                2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (9) _frequency_interrupt                                  3     3      0       0
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _UARTReceive
   ___wmul
   _delay_ms
   _digipot
     ___ftge
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     _adjustDigipot
       ___awtoft
         ___ftpack
       ___ftadd
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftpack (ARG)
         ___wmul (ARG)
         _frexp (ARG)
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___lbtoft
         ___ftpack
       _pow
         ___ftge
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
         ___lbtoft (ARG)
           ___ftpack
         ___lltoft (ARG)
           ___ftpack
         _exp (ARG)
           ___awtoft
             ___ftpack
           ___ftdiv
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftge
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftneg
           ___ftsub
             ___awtoft (ARG)
               ___ftpack
             ___ftadd (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _floor
             ___altoft
               ___ftpack
               ___fttol (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftge
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
             ___fttol
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
             _frexp
           _ldexp
             _eval_poly (ARG)
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
           _log (ARG)
             ___awtoft
               ___ftpack
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             _eval_poly
               ___ftadd
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftmul (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftdiv (ARG)
                     ___awtoft (ARG)
                       ___ftpack
                     ___ftpack (ARG)
                     ___lbtoft (ARG)
                       ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                   _frexp (ARG)
                 ___ftpack (ARG)
                 ___wmul (ARG)
                 _frexp (ARG)
               ___ftmul
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___wmul
             _frexp
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
     _checkFrequency
     _unselect
   _initADC
   _initInterrupts
   _initLoRa
     _delay_ms
     _sendUARTMessage
       _delay_ms
   _initSPI
     ___awtoft
       ___ftpack
     ___ftadd
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftpack (ARG)
       ___wmul (ARG)
       _frexp (ARG)
     ___ftdiv
       ___awtoft (ARG)
         ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
     ___ftmul
       ___awtoft (ARG)
         ___ftpack
       ___ftdiv (ARG)
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftpack (ARG)
       ___lbtoft (ARG)
         ___ftpack
       _frexp (ARG)
     ___lbtoft
       ___ftpack
     _pow
       ___ftge
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___ftneg
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
       ___lbtoft (ARG)
         ___ftpack
       ___lltoft (ARG)
         ___ftpack
       _exp (ARG)
         ___awtoft
           ___ftpack
         ___ftdiv
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftge
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         ___ftneg
         ___ftsub
           ___awtoft (ARG)
             ___ftpack
           ___ftadd (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
         ___fttol
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _floor
           ___altoft
             ___ftpack
             ___fttol (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftge
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
           ___fttol
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
           _frexp
         _ldexp
           _eval_poly (ARG)
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
         _log (ARG)
           ___awtoft
             ___ftpack
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           _eval_poly
             ___ftadd
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftmul (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftdiv (ARG)
                   ___awtoft (ARG)
                     ___ftpack
                   ___ftpack (ARG)
                   ___lbtoft (ARG)
                     ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
                 _frexp (ARG)
               ___ftpack (ARG)
               ___wmul (ARG)
               _frexp (ARG)
             ___ftmul
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___wmul
           _frexp
       _log (ARG)
         ___awtoft
           ___ftpack
         ___ftadd
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftmul (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___ftpack (ARG)
           ___wmul (ARG)
           _frexp (ARG)
         ___ftmul
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
         _eval_poly
           ___ftadd
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftmul (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftdiv (ARG)
                 ___awtoft (ARG)
                   ___ftpack
                 ___ftpack (ARG)
                 ___lbtoft (ARG)
                   ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
               _frexp (ARG)
             ___ftpack (ARG)
             ___wmul (ARG)
             _frexp (ARG)
           ___ftmul
             ___awtoft (ARG)
               ___ftpack
             ___ftdiv (ARG)
               ___awtoft (ARG)
                 ___ftpack
               ___ftpack (ARG)
               ___lbtoft (ARG)
                 ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
             _frexp (ARG)
           ___wmul
         _frexp
     _remappings
   _initUART1
   _init_frequency
   _makeTempMessage
     _calculateTemp
       ___awtoft
         ___ftpack
       ___ftdiv
         ___awtoft (ARG)
           ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
       ___ftmul
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftpack (ARG)
         ___lbtoft (ARG)
           ___ftpack
         _frexp (ARG)
       ___fttol
         ___awtoft (ARG)
           ___ftpack
         ___ftdiv (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
         ___ftmul (ARG)
           ___awtoft (ARG)
             ___ftpack
           ___ftdiv (ARG)
             ___awtoft (ARG)
               ___ftpack
             ___ftpack (ARG)
             ___lbtoft (ARG)
               ___ftpack
           ___ftpack (ARG)
           ___lbtoft (ARG)
             ___ftpack
           _frexp (ARG)
     _fillInTemp
       ___awdiv
         ___awmod (ARG)
       ___awmod
   _make_frequency_message
     ___lwdiv
       ___lwmod (ARG)
     ___lwmod
   _sendUARTMessage
     _delay_ms

 _high_ISR (ROOT)
   _frequency_interrupt
   _temperature_interrupt
   _uart_interrupt

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             EAF      0       0      35        0.0%
BITBANK13          100      0       0      31        0.0%
BANK13             100      0       0      32        0.0%
BITBANK12          100      0       0      29        0.0%
BANK12             100      0       0      30        0.0%
BITBANK11          100      0       0      27        0.0%
BANK11             100      0       0      28        0.0%
BITBANK10          100      0       0      25        0.0%
BANK10             100      0       0      26        0.0%
BITBANK9           100      0       0      23        0.0%
BANK9              100      0       0      24        0.0%
BITBANK8           100      0       0      21        0.0%
BANK8              100      0       0      22        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0      82       8       50.8%
BITBANK14           B0      0       0      33        0.0%
BANK14              B0      0       0      34        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     44      98       5       95.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     3D      4D       1       81.9%
BITSFR_2             0      0       0      40        0.0%
SFR_2                0      0       0      40        0.0%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     167       6        0.0%
DATA                 0      0     167       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.36 build -262312587 
Symbol Table                                                                                   Wed Apr 19 09:41:10 2017

                    ___altoft@exp 003C                     ___altoft@sign 003D  
                    ___awdiv@sign 001D               ___wmul@multiplicand 0014  
                    ___ftadd@exp1 006B                      ___ftadd@exp2 006A  
                    ___ftadd@sign 0069                               l140 1D84  
                             l220 0696                               l223 06EA  
                             l400 14FC                               l146 1884  
                             l287 1C5A                               l706 01A0  
                             l715 01CA                               l726 1052  
                             l691 0068                               l668 143E  
                             l748 1D0A                               l846 1AB2  
                             l695 00A2                               l856 1B8E  
                             l697 00CA                               l883 0636  
                             l878 04DE            ?_temperature_interrupt 0001  
                             _exp 0268                               _log 08FE  
                             _pow 0496                      ___awmod@sign 0017  
                             prod 000FF3                               wreg 000FE8  
                      _TXSTA1bits 000FAD             ??_frequency_interrupt 0001  
                    ___ftdiv@cntr 0027                      ___ftdiv@sign 002C  
                            l1041 034E                              l1042 0488  
                            l1052 0E9C                              l3200 13F6  
                            l3204 140C                              l3206 142A  
                            l3302 01F4                              l3208 1434  
                            l3312 0242                              l3240 1674  
                            l3322 0ED2                              l3410 089A  
                            l2418 16FE                              l3260 00B0  
                            l3420 08D0                              l3254 0076  
                            l3342 0F2C                              l3238 1666  
                            l3406 0886                              l3192 13C0  
                            l3440 0FEE                              l3352 0F54  
                            l3328 0EFA                              l3520 10C8  
                            l3424 08EC                              l3416 08B6  
                            l3512 0E1A                              l3504 0DE8  
                            l2560 0D60                              l2544 0D22  
                            l2536 0CBC                              l3434 0FC6  
                            l3282 0130                              l3266 00C0  
                            l3346 0F3C                              l3522 114A  
                            l3418 08C6                              l3610 04F2  
                            l3196 13CE                              l3460 102C  
                            l3284 013E                              l3276 0102  
                            l3356 0F64                              l3372 12B6  
                            l3508 0DFC                              l2556 0D50  
                            l3540 0922                              l2644 1C48  
                            l3700 1914                              l3198 13D8  
                            l3526 19BE                              l3294 0186  
                            l3286 014C                              l3702 191C  
                            l2902 1AA8                              l2910 1B64  
                            l3528 19CA                              l3296 0194  
                            l3288 0158                              l3368 1276  
                            l3624 0588                              l3616 0516  
                            l3800 0A62                              l3704 1920  
                            l3712 193E                              l2912 1B6C  
                            l3490 1BE6                              l3378 12FA  
                            l3562 028C                              l3546 0950  
                            l2914 1B70                              l3388 07F4  
                            l3628 05AE                              l3804 0A70  
                            l3660 1826                              l3716 194C  
                            l3708 1934                              l3732 0664  
                            l3478 1B2C                              l3574 0318  
                            l3662 182E                              l3654 1810  
                            l3750 06F2                              l2918 1B84  
                            l3568 02D2                              l2784 18BC  
                            l3680 1866                              l3672 184E  
                            l3664 1832                              l3648 1800  
                            l3744 06B8                              l3770 0780  
                            l3738 06A0                              l2890 1A80  
                            l3596 045E                              l3676 1858  
                            l3692 18FA                              l3756 0706  
                            l3836 1A46                              l2892 1A88  
                            l3766 0778                              l3758 070C  
                            l2894 1A8C                              l3848 14AA  
                            l3696 1906                              l3872 1184  
                            l3794 0A52                              ?_exp 007F  
                            ?_log 0076                              ?_pow 0088  
                            STR_1 FFE8                              STR_2 FFD3  
                            STR_3 FFFD                              STR_4 FFB8  
                            STR_5 FFF6                              STR_6 FFD7  
                            u2020 0CEE                              u2028 0CF2  
                            u3061 0EBA                              u3231 0FAE  
                            u3151 07D0                              u3320 0E0C  
                            u3081 0EE2                              u3170 081A  
                            u3410 0322                              u2370 18AA  
                            u3251 0FD6                              u3420 0324  
                            u3500 056A                              u2380 18DE  
                            u3175 0810                              u2377 18A0  
                            u2387 18D4                              u1870 1726  
                            u2851 0016                              u3660 0696  
                            u2861 0034                              u1878 1728  
                            u3680 06EA                              u3817 1C4E  
           __end_of_adjustDigipot 0B7A           ?_make_frequency_message 0001  
                            _main 1164                      ___ftpack@arg 0012  
                    ___ftpack@exp 0015                              fsr0h 000FEA  
                            fsr1h 000FE2                              indf0 000FEF  
                            fsr0l 000FE9                              fsr2h 000FDA  
                            indf1 000FE7                              fsr1l 000FE1  
                            indf2 000FDF                              fsr2l 000FD9  
                            _step 00F2                              btemp 004E  
                            exp@x 007F                              log@x 0076  
                            pclat 000FFA                              pow@x 0088  
                            pow@y 008B                              prodh 000FF4  
                            prodl 000FF3                              start 008A  
                fillInTemp@i_1153 0027                  fillInTemp@i_1154 0029  
                ??_uart_interrupt 0001                      ___ftmul@cntr 003A  
         __end_of_makeTempMessage 1A6A                   ?_checkFrequency 0001  
                    ___param_bank 000010                      ___ftmul@sign 003B  
                    ___fttol@exp1 006E                             ??_exp 003E  
                           ??_log 003E                      ___fttol@lval 006A  
                ?_sendUARTMessage 0017                             ??_pow 003E  
                    _BAUDCON1bits 000F7E                             ?_main 0001  
                 __end_of___awdiv 1870                             _ADRES 000FC3  
                 __end_of___ftadd 0268             __end_of_ambient_ascii FEF1  
                 __end_of___awmod 1956                   __end_of___ftdiv 1084  
                 __end_of___ftneg 1D18                   __end_of___ftmul 0F9E  
                 ___awdiv@divisor 001A                   __end_of___ftsub 1B56  
                 __end_of___fttol 08FE                   __end_of___lwdiv 1ABC  
                 __end_of___lwmod 1B98                             i2l241 150E  
                           i2l242 15A2                             i2l243 1528  
                           i2l244 1542                             i2l245 155C  
                 ___awdiv@counter 001C                             _TMR1H 000FCF  
                           _TMR1L 000FCE                             _RPOR7 000EC7  
                           _RPOR9 000EC9                             _TRISA 000F92  
                           _TRISB 000F93                             _TRISC 000F94  
                    ___lltoft@exp 0022                   __end_of_digipot 1506  
                 __end_of_initADC 1CCE                     ___awtoft@sign 001D  
                 __end_of_initSPI 0C98                             _floor 0DB0  
                           _ldexp 0C98                             _frexp 16D6  
                           _errno 00E0    __end_of_make_frequency_message 1640  
                   ___ftpack@sign 0016                             _value 00F0  
                           _timer 00E8          __end_of_send_data_part_1 FEF9  
                           _state 00EF                             tablat 000FF5  
                           pow@yi 0095                             status 000FD8  
                     exp@exponent 0085                       ldexp@newexp 0079  
                 __initialization 1ABC             __end_of_send_data_EOL FEF8  
                     log@exponent 0079                      __end_of_main 1236  
                          ??_main 003E                     ___fttol@sign1 0069  
                   __activetblptr 000003                 _last_uart_message 0164  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          ?_floor 0077                            ?_ldexp 0076  
                          ?_frexp 0012                  __end_of___altoft 16D6  
                          _CCPR8H 000F08                            _EECON2 000FA7  
                          _CCPR8L 000F07                            _ANCON0 000F48  
                          _ANCON1 000F49                  ___awdiv@dividend 0018  
                __end_of___awtoft 1C0A                  __end_of___ftpack 145E  
                __end_of___lbtoft 1D3C                  __end_of___lltoft 1A14  
                          i2l3046 1578                            i2l3072 17E8  
                          _IOLOCK 0075F8                    __CFG_WDTEN$OFF 000000  
                          _INTCON 000FF2                            _RCREG1 000FAF  
                          _SPBRG1 000FB0                            _SSPBUF 000FC9  
                          _TXREG1 000FAE                      ?_UARTReceive 0001  
                __end_of_delay_ms 1C70                    __CFG_XINST$OFF 000000  
                __end_of_high_ISR 008A              _temp_display_message 00C4  
                    _CCPTMRS2bits 000F50                  ?_makeTempMessage 0001  
                          ___ftge 1236                            ___wmul 1CCE  
                       ??___awdiv 001C                         ??___ftadd 0066  
                       ??___awmod 0016                         ??___ftdiv 0024  
                       ??___ftneg 0015                         ??___ftmul 0033  
                       ??___ftsub 003C                         ??___fttol 0064  
                       ??___lwdiv 001B                         ??___lwmod 0016  
                __end_of_initLoRa 19B8                            clear_0 1AC2  
                          clear_1 1ACE                            clear_2 1ADA  
                ___awdiv@quotient 001E                   ___awmod@divisor 0014  
                          _valueH 00EA                            _valueL 00EC  
                       ??_digipot 003E                   ___awmod@counter 0016  
                          floor@i 007A                            floor@x 0077  
                       ??_initADC 0012             ___ftmul@f3_as_product 0037  
           __end_of_set_data_rate FED6                         ??_initSPI 003E  
                    __mediumconst FEC6                            tblptrh 000FF7  
                          tblptrl 000FF6                            tblptru 000FF8  
                __end_of_unselect 1D94                  __end_ofexp@coeff FF8D  
                __end_oflog@coeff FFA8                        __accesstop 0060  
         __end_of__initialization 1B00                        ___altoft@c 006F  
                      ___ftadd@f1 0060                        ___ftadd@f2 0063  
                      ___ftge@ff1 0060                        ___ftge@ff2 0063  
                    eval_poly@res 0073                     ___rparam_used 000001  
                      ___ftdiv@f1 001E                        ___ftdiv@f2 0021  
                      ___ftdiv@f3 0028                        ___ftneg@f1 0012  
                      ___awtoft@c 001A                        ___lbtoft@c 001D  
                      ___ftmul@f1 002D                        ___ftmul@f2 0030  
                      ___ftsub@f1 006C                        ___ftsub@f2 006F  
                      ___fttol@f1 0060                    __pcstackCOMRAM 0001  
                    __pidataBANK0 1C0A                        ___lltoft@c 001A  
         __size_of_initInterrupts 0008                     __end_of_floor 0EAA  
                   __end_of_ldexp 0DB0                     __end_of_frexp 1766  
         ??_temperature_interrupt 0001                           ??_floor 003E  
                         ??_ldexp 007B                           ??_frexp 0017  
                      __pbssBANK0 00D8                        __pbssBANK1 0100  
              __size_of_initUART1 001C                __size_of_eval_poly 00E0  
                ??_checkFrequency 0012             __end_of_getVerCommand FEE4  
                      _bigorsmall 00EE                           ?___ftge 0060  
                         ?___wmul 0012                           _CCP8CON 000F06  
                       ?___altoft 006F                         ?___awtoft 001A  
                       ?___ftpack 0012                         ?___lbtoft 001A  
                      _fillInTemp 0644                         ?___lltoft 001A  
     __end_of_frequency_interrupt 17EC            __size_of_calculateTemp 00B2  
              __CFG_OSC$INTOSCPLL 000000                         ?_delay_ms 0012  
                         _SPBRGH1 000F7F                           _RPINR21 000EFC  
                       ?_high_ISR 0001                  __CFG_CFGPLLEN$ON 000000  
                       ?_initLoRa 0001              UARTReceive@on_or_off 0012  
               __end_of_delimiter FEF7                           __Hparam 0000  
                         __Lparam 0000              __size_of_UARTReceive 0010  
                 __size_of___ftge 00C8                           ___awdiv 17EC  
                         ___ftadd 0000                           ___awmod 18E6  
                         ___ftdiv 0F9E                           ___ftneg 1CF4  
                 __size_of___wmul 0026                           ___ftmul 0EAA  
                         ___ftsub 1B0A                           ___fttol 07BA  
                         ___lwdiv 1A6A                           ___lwmod 1B56  
                      ??___altoft 0073                         ?_unselect 0001  
                         __pcinit 1ABC                        ??___awtoft 001D  
                      ??___ftpack 0017                        ??___lbtoft 001D  
               __end_of_initUART1 1D78                 __end_of_eval_poly 1164  
                         __ramtop 0F00                           _digipot 145E  
                      ??___lltoft 001E                           __ptext0 1164  
                         __ptext1 15A6                           __ptext2 1B56  
                         __ptext3 1A6A                           __ptext4 1A14  
                         __ptext5 0644                           __ptext6 18E6  
                         __ptext7 17EC                           __ptext8 12FE  
                         __ptext9 1B98            __size_of_adjustDigipot 013C  
         __size_of_init_frequency 003A                           _initADC 1CA0  
               __end_of_hexpowers FEEC                         _T1CONbits 000FCD  
                         _initSPI 0B7A                      __size_of_exp 022E  
                    __size_of_log 0140                      __size_of_pow 01AE  
                ___awmod@dividend 0012                           _percent 00DB  
        __size_of_sendUARTMessage 0076                        ??_delay_ms 0014  
                      ??_high_ISR 0004                        delay_ms@ms 0012  
            end_of_initialization 1B00                           exp@sign 0087  
                      _minus_pipe 0046                        _pipe_ascii FEF1  
                      ??_initLoRa 0019                        _remappings 1D3C  
            __end_of_join_network FFB8                     _calculateTemp 12FE  
                         pow@sign 0094                           postdec1 000FE5  
                         postdec2 000FDD                    _initInterrupts 1D88  
                         postinc0 000FEE                           postinc2 000FDE  
                      ??_unselect 0012                       ?_fillInTemp 0001  
       _uart_receive_buffer_index 004C           __size_of_uart_interrupt 0030  
                       _PORTAbits 000F80                         _PORTBbits 000F81  
                __CFG_CPUDIV$OSC1 000000                         _TRISAbits 000F92  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                   _adjustDigipot 0A3E                    ?_calculateTemp 006F  
                     ___ftdiv@exp 002B            __end_of_initInterrupts 1D90  
                     ___ftmul@exp 0036                    __end_of___ftge 12FE  
                  __end_of___wmul 1CF4                      _initSPI$2423 0099  
                    _initSPI$2424 009C                      _initSPI$2425 009F  
  __size_of_temperature_interrupt 00A0     __end_of_temperature_interrupt 15A6  
                   _minus_ambient 00E2          __size_of_makeTempMessage 0056  
                      floor@expon 007D                _adjustDigipot$2426 0099  
              _adjustDigipot$2427 009C                _adjustDigipot$2428 009F  
                   _ambient_ascii FEEC          ??_make_frequency_message 001E  
             start_initialization 1ABC                        eval_poly@d 006F  
                      eval_poly@n 0071                        eval_poly@x 006C  
                      ldexp@value 0076                       __end_of_exp 0496  
                     __end_of_log 0A3E                       __end_of_pow 0644  
sendUARTMessage@newMessagePointer 0017                 ??_sendUARTMessage 0019  
                  ?_adjustDigipot 0001                        frexp@value 0012  
                     ?_remappings 0001               __size_of_fillInTemp 0176  
                  _currentChannel 00DE                   ?_initInterrupts 0001  
                        ??___ftge 0066                     _send_data_EOL FEF7  
                        ??___wmul 0016                       __pdataBANK0 00A4  
              _calculateTemp$2422 0073                  _nominalfrequency 00F3  
                    _measurement1 0042                      _measurement2 0044  
                  _init_frequency 1B98                 __size_of___altoft 0096  
               __size_of___awtoft 0038                 __size_of___ftpack 00AE  
               __size_of___lbtoft 0024                 __size_of___lltoft 005C  
                     __pbssCOMRAM 003E                     __pcstackBANK0 0060  
               __size_of_delay_ms 0032                   ??_calculateTemp 003C  
               __size_of_high_ISR 0082                         __pnvBANK0 00F3  
               __size_of_initLoRa 0062                         _main$2421 00A2  
                ___lwdiv@dividend 0017                         _delimiter FEF6  
                       __pintcode 0008                         _asciiTemp 00A4  
                   __pmediumconst FEC6                          ?___awdiv 0018  
                        ?___ftadd 0060                          ?___awmod 0012  
                        ?___ftdiv 001E                          ?___ftneg 0012  
                        ?___ftmul 002D                          ?___ftsub 006C  
                        ?___fttol 0060            __end_of_init_frequency 1BD2  
                        ?___lwdiv 0017                          ?___lwmod 0012  
                  _uart_interrupt 1C70                          ?_digipot 0001  
                    _join_network FFA8               __size_of_remappings 0020  
                        ?_initADC 0001                 __size_of_unselect 0004  
                        ?_initSPI 0001                     _set_data_rate FEC7  
                       _initUART1 1D5C                         _eval_poly 1084  
 __size_of_make_frequency_message 009A                         _frequency 00D8  
                       _hexpowers FEE4                         _inductive 00F6  
                ___lwdiv@quotient 001B      __size_of_frequency_interrupt 0086  
               ??_makeTempMessage 003E                    __size_of_floor 00FA  
                 ??_adjustDigipot 003E                    __size_of_ldexp 0118  
                  __size_of_frexp 0090                    ___wmul@product 0016  
                   ??_UARTReceive 0012                         delay_ms@i 0015  
                        _PIE1bits 000F9D                          _PIE4bits 000F8E  
           _currentMessagePointer 003E                          i2u270_45 17D6  
                        _PIR1bits 000F9E                          i2u266_40 1C96  
                        i2u268_45 17A4                          _PIR4bits 000F8F  
               _frequency_message 00AA                          _RCONbits 000FD0  
                       _temp_pipe 00E6                          _SSP2CON1 000F72  
          __end_of_uart_interrupt 1CA0                          _SSP2STAT 000F73  
                 ?_init_frequency 0001           __size_of_checkFrequency 0002  
                       _plus_pipe 004A                      ??_fillInTemp 0020  
                      _ADCON0bits 000FC2                 ___wmul@multiplier 0012  
                      ?_initUART1 0001                        ?_eval_poly 006C  
             _uart_receive_buffer 0100                    fillInTemp@temp 002A  
                       copy_data0 1AF4        fillInTemp@pipe_or_ambience 0024  
                       frexp@eptr 0015                __end_of_fillInTemp 07BA  
          _make_frequency_message 15A6                          __Hrparam 0000  
                        __Lrparam 0000                     _getVerCommand FED6  
             __end_of_UARTReceive 1D88                   ?_uart_interrupt 0001  
             __end_of_set_dev_eui FF6F               __end_of_set_app_eui FF4D  
             __end_of_set_app_key FF2B                  __size_of___awdiv 0084  
                __size_of___ftadd 0268                  __size_of___awmod 0070  
                __size_of___ftdiv 00E6                  __size_of___ftneg 0024  
                        ___altoft 1640                  __size_of___ftmul 00F4  
                __size_of___ftsub 004C                  __size_of___fttol 0144  
                __size_of___lwdiv 0052       _last_received_message_index 0040  
                __size_of___lwmod 0042                          ___awtoft 1BD2  
                        ___ftpack 13B0                          ___lbtoft 1D18  
                        ___lltoft 19B8                  __size_of_digipot 00A8  
                 _sendUARTMessage 1870                          _exp$2431 0082  
                __size_of_initADC 002E                  __size_of_initSPI 011E  
                        _delay_ms 1C3E                   ___lwdiv@divisor 0019  
                 ___lwdiv@counter 001D                          __ptext10 1D5C  
                        __ptext11 0B7A                          __ptext20 1D94  
                        __ptext12 1D3C                          __ptext21 0A3E  
                        __ptext13 1956                          __ptext30 1640  
                        __ptext22 0496                          __ptext14 1870  
                        __ptext31 1084                          __ptext23 08FE  
                        __ptext15 1C3E                          __ptext40 1D18  
                        __ptext32 1CCE                          __ptext24 0268  
                        __ptext16 1D88                          __ptext41 13B0  
                        __ptext33 0EAA                          __ptext25 0C98  
                        __ptext17 1CA0                          __ptext42 1D78  
                        __ptext34 1B0A                          __ptext26 0DB0  
                        __ptext18 145E                          __ptext35 0000  
                        __ptext27 16D6                          __ptext19 1D90  
                        __ptext44 1C70                          __ptext36 1CF4  
                        __ptext28 07BA                          __ptext45 1506  
                        __ptext37 0F9E                          __ptext29 1236  
                        __ptext46 1766                          __ptext38 1BD2  
                        __ptext39 19B8                          _high_ISR 0008  
                        _pow$2430 0091                          _pow$2429 008E  
                   _isCommandSent 00A9                      ??_remappings 0012  
                ??_initInterrupts 0012                          _initLoRa 1956  
                   __size_of_main 00D2                          int$flags 004E  
                _send_data_part_1 FEF8    makeTempMessage@pipe_or_ambient 0078  
                    _temp_ambient 00E4                          _unselect 1D90  
                    _SSP2STATbits 000F73                          exp@coeff FF6F  
                        log@coeff FF8D                __end_of_pipe_ascii FEF6  
              __end_of_remappings 1D5C                        _INTCONbits 000FF2  
                     ??_initUART1 0012                       ??_eval_poly 003C  
           _temperature_interrupt 1506                          intlevel2 0000  
              calculateTemp@minus 0071                  ___lwmod@dividend 0012  
                     _UARTReceive 1D78                        _RCSTA1bits 000FAC  
                     _set_dev_eui FF4D                       _set_app_eui FF2B  
                     _set_app_key FEF9                        _OSCCONbits 000FD3  
             _frequency_interrupt 1766                    _checkFrequency 1D94  
         __end_of_sendUARTMessage 18E6                      _plus_ambient 0048  
                 _makeTempMessage 1A14                 calculateTemp@temp 0076  
               calculateTemp@plus 006F                   ___lwmod@divisor 0014  
                 ___lwmod@counter 0016              ?_frequency_interrupt 0001  
                     fillInTemp@i 0025             __end_of_calculateTemp 13B0  
                ??_init_frequency 0012            __end_of_checkFrequency 1D96  
